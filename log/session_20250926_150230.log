2025-09-26 15:02:30,281 - INFO - Логирование настроено. Файл лога: log\session_20250926_150230.log
2025-09-26 15:02:30,283 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\children-voice.mp3
2025-09-26 15:02:30,283 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 2, 'overlap': 0.25, 'jobs': 4}
2025-09-26 15:02:30,283 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла: examples\children-voice.mp3
2025-09-26 15:02:30,284 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 15:02:32,303 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 15:02:32,304 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\children-voice.mp3
2025-09-26 15:02:32,842 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 15:02:32,857 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\children-voice.mp3
2025-09-26 15:02:39,004 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	RESUME(arg=0, lineno=1137)
           4	LOAD_FAST(arg=0, lineno=1140)
           6	LOAD_CONST(arg=1, lineno=1140)
           8	BINARY_SUBSCR(arg=None, lineno=1140)
          12	STORE_FAST(arg=3, lineno=1140)
          14	LOAD_FAST(arg=1, lineno=1141)
          16	UNARY_NEGATIVE(arg=None, lineno=1141)
          18	LOAD_FAST(arg=3, lineno=1141)
          20	SWAP(arg=2, lineno=1141)
          22	COPY(arg=2, lineno=1141)
          24	COMPARE_OP(arg=58, lineno=1141)
          28	POP_JUMP_IF_FALSE(arg=6, lineno=1141)
          32	LOAD_FAST(arg=1, lineno=1141)
          34	COMPARE_OP(arg=58, lineno=1141)
          38	POP_JUMP_IF_FALSE(arg=5, lineno=1141)
          42	JUMP_FORWARD(arg=2, lineno=1141)
>         44	POP_TOP(arg=None, lineno=1141)
          46	JUMP_FORWARD(arg=2, lineno=1141)
>         48	LOAD_CONST(arg=1, lineno=1142)
          50	STORE_FAST(arg=3, lineno=1142)
>         52	LOAD_FAST(arg=0, lineno=1144)
          54	LOAD_CONST(arg=2, lineno=1144)
          56	BINARY_SUBSCR(arg=None, lineno=1144)
          60	STORE_FAST(arg=4, lineno=1144)
          62	LOAD_FAST(arg=1, lineno=1145)
          64	UNARY_NEGATIVE(arg=None, lineno=1145)
          66	LOAD_FAST(arg=4, lineno=1145)
          68	SWAP(arg=2, lineno=1145)
          70	COPY(arg=2, lineno=1145)
          72	COMPARE_OP(arg=58, lineno=1145)
          76	POP_JUMP_IF_FALSE(arg=6, lineno=1145)
          80	LOAD_FAST(arg=1, lineno=1145)
          82	COMPARE_OP(arg=58, lineno=1145)
          86	POP_JUMP_IF_FALSE(arg=5, lineno=1145)
          90	JUMP_FORWARD(arg=2, lineno=1145)
>         92	POP_TOP(arg=None, lineno=1145)
          94	JUMP_FORWARD(arg=2, lineno=1145)
>         96	LOAD_CONST(arg=1, lineno=1146)
          98	STORE_FAST(arg=4, lineno=1146)
>        100	LOAD_FAST(arg=2, lineno=1148)
         102	TO_BOOL(arg=None, lineno=1148)
         110	POP_JUMP_IF_FALSE(arg=45, lineno=1148)
         114	LOAD_GLOBAL(arg=0, lineno=1149)
         124	LOAD_ATTR(arg=2, lineno=1149)
         144	PUSH_NULL(arg=None, lineno=1149)
         146	LOAD_FAST(arg=3, lineno=1149)
         148	CALL(arg=1, lineno=1149)
         156	LOAD_GLOBAL(arg=0, lineno=1149)
         166	LOAD_ATTR(arg=2, lineno=1149)
         186	PUSH_NULL(arg=None, lineno=1149)
         188	LOAD_FAST(arg=4, lineno=1149)
         190	CALL(arg=1, lineno=1149)
         198	COMPARE_OP(arg=103, lineno=1149)
         202	RETURN_VALUE(arg=None, lineno=1149)
>        204	LOAD_GLOBAL(arg=0, lineno=1151)
         214	LOAD_ATTR(arg=4, lineno=1151)
         234	PUSH_NULL(arg=None, lineno=1151)
         236	LOAD_FAST(arg=3, lineno=1151)
         238	CALL(arg=1, lineno=1151)
         246	LOAD_GLOBAL(arg=0, lineno=1151)
         256	LOAD_ATTR(arg=4, lineno=1151)
         276	PUSH_NULL(arg=None, lineno=1151)
         278	LOAD_FAST(arg=4, lineno=1151)
         280	CALL(arg=1, lineno=1151)
         288	COMPARE_OP(arg=103, lineno=1151)
         292	RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:02:39,005 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:02:39,006 - DEBUG - stack: []
2025-09-26 15:02:39,006 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:02:39,006 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-09-26 15:02:39,006 - DEBUG - stack []
2025-09-26 15:02:39,007 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1137)
2025-09-26 15:02:39,007 - DEBUG - stack []
2025-09-26 15:02:39,007 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1140)
2025-09-26 15:02:39,007 - DEBUG - stack []
2025-09-26 15:02:39,007 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1140)
2025-09-26 15:02:39,008 - DEBUG - stack ['$x4.0']
2025-09-26 15:02:39,008 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-09-26 15:02:39,008 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-09-26 15:02:39,008 - DEBUG - dispatch pc=12, inst=STORE_FAST(arg=3, lineno=1140)
2025-09-26 15:02:39,008 - DEBUG - stack ['$8binary_subscr.2']
2025-09-26 15:02:39,009 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:02:39,009 - DEBUG - stack []
2025-09-26 15:02:39,009 - DEBUG - dispatch pc=16, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-09-26 15:02:39,009 - DEBUG - stack ['$threshold14.3']
2025-09-26 15:02:39,009 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=1141)
2025-09-26 15:02:39,010 - DEBUG - stack ['$16unary_negative.4']
2025-09-26 15:02:39,010 - DEBUG - dispatch pc=20, inst=SWAP(arg=2, lineno=1141)
2025-09-26 15:02:39,010 - DEBUG - stack ['$16unary_negative.4', '$x018.5']
2025-09-26 15:02:39,010 - DEBUG - dispatch pc=22, inst=COPY(arg=2, lineno=1141)
2025-09-26 15:02:39,010 - DEBUG - stack ['$x018.5', '$16unary_negative.4']
2025-09-26 15:02:39,010 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:02:39,010 - DEBUG - stack ['$x018.5', '$16unary_negative.4', '$x018.5']
2025-09-26 15:02:39,011 - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1141)
2025-09-26 15:02:39,011 - DEBUG - stack ['$x018.5', '$24compare_op.6']
2025-09-26 15:02:39,011 - DEBUG - end state. edges=[Edge(pc=32, stack=('$x018.5',), blockstack=(), npush=0), Edge(pc=44, stack=('$x018.5',), blockstack=(), npush=0)]
2025-09-26 15:02:39,011 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=44 nstack_initial=1)])
2025-09-26 15:02:39,011 - DEBUG - stack: ['$phi32.0']
2025-09-26 15:02:39,011 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-09-26 15:02:39,011 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:02:39,012 - DEBUG - stack ['$phi32.0']
2025-09-26 15:02:39,012 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:02:39,012 - DEBUG - stack ['$phi32.0', '$threshold32.1']
2025-09-26 15:02:39,012 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1141)
2025-09-26 15:02:39,012 - DEBUG - stack ['$34compare_op.2']
2025-09-26 15:02:39,012 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:39,012 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=1), State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:02:39,012 - DEBUG - stack: ['$phi44.0']
2025-09-26 15:02:39,012 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=1)
2025-09-26 15:02:39,013 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=1141)
2025-09-26 15:02:39,013 - DEBUG - stack ['$phi44.0']
2025-09-26 15:02:39,013 - DEBUG - dispatch pc=46, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:02:39,013 - DEBUG - stack []
2025-09-26 15:02:39,013 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:39,013 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:02:39,013 - DEBUG - stack: []
2025-09-26 15:02:39,013 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-09-26 15:02:39,013 - DEBUG - dispatch pc=42, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:02:39,014 - DEBUG - stack []
2025-09-26 15:02:39,014 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:39,014 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2025-09-26 15:02:39,014 - DEBUG - stack: []
2025-09-26 15:02:39,014 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-09-26 15:02:39,014 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1144)
2025-09-26 15:02:39,014 - DEBUG - stack []
2025-09-26 15:02:39,014 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=1144)
2025-09-26 15:02:39,014 - DEBUG - stack ['$x52.0']
2025-09-26 15:02:39,014 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-09-26 15:02:39,015 - DEBUG - stack ['$x52.0', '$const54.1.2']
2025-09-26 15:02:39,015 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=4, lineno=1144)
2025-09-26 15:02:39,015 - DEBUG - stack ['$56binary_subscr.2']
2025-09-26 15:02:39,015 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:02:39,015 - DEBUG - stack []
2025-09-26 15:02:39,015 - DEBUG - dispatch pc=64, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-09-26 15:02:39,015 - DEBUG - stack ['$threshold62.3']
2025-09-26 15:02:39,015 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=4, lineno=1145)
2025-09-26 15:02:39,016 - DEBUG - stack ['$64unary_negative.4']
2025-09-26 15:02:39,016 - DEBUG - dispatch pc=68, inst=SWAP(arg=2, lineno=1145)
2025-09-26 15:02:39,016 - DEBUG - stack ['$64unary_negative.4', '$x166.5']
2025-09-26 15:02:39,016 - DEBUG - dispatch pc=70, inst=COPY(arg=2, lineno=1145)
2025-09-26 15:02:39,016 - DEBUG - stack ['$x166.5', '$64unary_negative.4']
2025-09-26 15:02:39,016 - DEBUG - dispatch pc=72, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:02:39,016 - DEBUG - stack ['$x166.5', '$64unary_negative.4', '$x166.5']
2025-09-26 15:02:39,016 - DEBUG - dispatch pc=76, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1145)
2025-09-26 15:02:39,016 - DEBUG - stack ['$x166.5', '$72compare_op.6']
2025-09-26 15:02:39,017 - DEBUG - end state. edges=[Edge(pc=80, stack=('$x166.5',), blockstack=(), npush=0), Edge(pc=92, stack=('$x166.5',), blockstack=(), npush=0)]
2025-09-26 15:02:39,017 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:02:39,017 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:02:39,017 - DEBUG - stack: []
2025-09-26 15:02:39,017 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-09-26 15:02:39,017 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1142)
2025-09-26 15:02:39,017 - DEBUG - stack []
2025-09-26 15:02:39,017 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=3, lineno=1142)
2025-09-26 15:02:39,017 - DEBUG - stack ['$const48.0.1']
2025-09-26 15:02:39,018 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:39,018 - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:02:39,018 - DEBUG - stack: ['$phi80.0']
2025-09-26 15:02:39,018 - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-09-26 15:02:39,018 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:02:39,018 - DEBUG - stack ['$phi80.0']
2025-09-26 15:02:39,018 - DEBUG - dispatch pc=82, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:02:39,018 - DEBUG - stack ['$phi80.0', '$threshold80.1']
2025-09-26 15:02:39,018 - DEBUG - dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1145)
2025-09-26 15:02:39,019 - DEBUG - stack ['$82compare_op.2']
2025-09-26 15:02:39,019 - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:39,019 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:02:39,019 - DEBUG - stack: ['$phi92.0']
2025-09-26 15:02:39,019 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=1)
2025-09-26 15:02:39,019 - DEBUG - dispatch pc=92, inst=POP_TOP(arg=None, lineno=1145)
2025-09-26 15:02:39,020 - DEBUG - stack ['$phi92.0']
2025-09-26 15:02:39,020 - DEBUG - dispatch pc=94, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:02:39,020 - DEBUG - stack []
2025-09-26 15:02:39,020 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:39,020 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:02:39,020 - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:02:39,020 - DEBUG - stack: []
2025-09-26 15:02:39,020 - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-09-26 15:02:39,021 - DEBUG - dispatch pc=90, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:02:39,021 - DEBUG - stack []
2025-09-26 15:02:39,021 - DEBUG - end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:39,021 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-09-26 15:02:39,021 - DEBUG - stack: []
2025-09-26 15:02:39,021 - DEBUG - state.pc_initial: State(pc_initial=100 nstack_initial=0)
2025-09-26 15:02:39,021 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=2, lineno=1148)
2025-09-26 15:02:39,021 - DEBUG - stack []
2025-09-26 15:02:39,021 - DEBUG - dispatch pc=102, inst=TO_BOOL(arg=None, lineno=1148)
2025-09-26 15:02:39,022 - DEBUG - stack ['$zero_pos100.0']
2025-09-26 15:02:39,022 - DEBUG - dispatch pc=110, inst=POP_JUMP_IF_FALSE(arg=45, lineno=1148)
2025-09-26 15:02:39,022 - DEBUG - stack ['$102to_bool.1']
2025-09-26 15:02:39,022 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=204, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:39,022 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:02:39,022 - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:02:39,022 - DEBUG - stack: []
2025-09-26 15:02:39,022 - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2025-09-26 15:02:39,023 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=1, lineno=1146)
2025-09-26 15:02:39,023 - DEBUG - stack []
2025-09-26 15:02:39,023 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=4, lineno=1146)
2025-09-26 15:02:39,023 - DEBUG - stack ['$const96.0.1']
2025-09-26 15:02:39,023 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:39,023 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:02:39,023 - DEBUG - stack: []
2025-09-26 15:02:39,023 - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2025-09-26 15:02:39,024 - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:02:39,024 - DEBUG - stack []
2025-09-26 15:02:39,024 - DEBUG - dispatch pc=124, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:02:39,024 - DEBUG - stack ['$114load_global.0']
2025-09-26 15:02:39,024 - DEBUG - dispatch pc=144, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:02:39,024 - DEBUG - stack ['$124load_attr.1']
2025-09-26 15:02:39,024 - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=3, lineno=1149)
2025-09-26 15:02:39,024 - DEBUG - stack ['$124load_attr.1', '$null$144.2']
2025-09-26 15:02:39,024 - DEBUG - dispatch pc=148, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:02:39,025 - DEBUG - stack ['$124load_attr.1', '$null$144.2', '$x0146.3']
2025-09-26 15:02:39,025 - DEBUG - dispatch pc=156, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:02:39,025 - DEBUG - stack ['$148call.4']
2025-09-26 15:02:39,025 - DEBUG - dispatch pc=166, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:02:39,025 - DEBUG - stack ['$148call.4', '$156load_global.5']
2025-09-26 15:02:39,025 - DEBUG - dispatch pc=186, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:02:39,025 - DEBUG - stack ['$148call.4', '$166load_attr.6']
2025-09-26 15:02:39,025 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=4, lineno=1149)
2025-09-26 15:02:39,025 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7']
2025-09-26 15:02:39,026 - DEBUG - dispatch pc=190, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:02:39,026 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7', '$x1188.8']
2025-09-26 15:02:39,026 - DEBUG - dispatch pc=198, inst=COMPARE_OP(arg=103, lineno=1149)
2025-09-26 15:02:39,026 - DEBUG - stack ['$148call.4', '$190call.9']
2025-09-26 15:02:39,026 - DEBUG - dispatch pc=202, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-09-26 15:02:39,026 - DEBUG - stack ['$198compare_op.10']
2025-09-26 15:02:39,026 - DEBUG - end state. edges=[]
2025-09-26 15:02:39,026 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:02:39,026 - DEBUG - stack: []
2025-09-26 15:02:39,027 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=0)
2025-09-26 15:02:39,027 - DEBUG - dispatch pc=204, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:02:39,027 - DEBUG - stack []
2025-09-26 15:02:39,027 - DEBUG - dispatch pc=214, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:02:39,027 - DEBUG - stack ['$204load_global.0']
2025-09-26 15:02:39,027 - DEBUG - dispatch pc=234, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:02:39,027 - DEBUG - stack ['$214load_attr.1']
2025-09-26 15:02:39,027 - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=3, lineno=1151)
2025-09-26 15:02:39,027 - DEBUG - stack ['$214load_attr.1', '$null$234.2']
2025-09-26 15:02:39,027 - DEBUG - dispatch pc=238, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:02:39,028 - DEBUG - stack ['$214load_attr.1', '$null$234.2', '$x0236.3']
2025-09-26 15:02:39,028 - DEBUG - dispatch pc=246, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:02:39,028 - DEBUG - stack ['$238call.4']
2025-09-26 15:02:39,028 - DEBUG - dispatch pc=256, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:02:39,028 - DEBUG - stack ['$238call.4', '$246load_global.5']
2025-09-26 15:02:39,028 - DEBUG - dispatch pc=276, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:02:39,028 - DEBUG - stack ['$238call.4', '$256load_attr.6']
2025-09-26 15:02:39,029 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=4, lineno=1151)
2025-09-26 15:02:39,029 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7']
2025-09-26 15:02:39,029 - DEBUG - dispatch pc=280, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:02:39,029 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7', '$x1278.8']
2025-09-26 15:02:39,029 - DEBUG - dispatch pc=288, inst=COMPARE_OP(arg=103, lineno=1151)
2025-09-26 15:02:39,029 - DEBUG - stack ['$238call.4', '$280call.9']
2025-09-26 15:02:39,030 - DEBUG - dispatch pc=292, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:02:39,030 - DEBUG - stack ['$288compare_op.10']
2025-09-26 15:02:39,030 - DEBUG - end state. edges=[]
2025-09-26 15:02:39,030 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:02:39,030 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:02:39,030 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=1): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=204 nstack_initial=0): set()})
2025-09-26 15:02:39,031 - DEBUG - defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi44.0': State(pc_initial=0 nstack_initial=0),
 '$phi80.0': State(pc_initial=52 nstack_initial=0),
 '$phi92.0': State(pc_initial=52 nstack_initial=0)}
2025-09-26 15:02:39,031 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:02:39,031 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:02:39,032 - DEBUG - keep phismap: {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
 '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}}
2025-09-26 15:02:39,032 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$x018.5'},
             State(pc_initial=52 nstack_initial=0): {'$phi80.0': '$x166.5'}})
2025-09-26 15:02:39,032 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:02:39,032 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'value': '$8binary_subscr.2'}), (14, {'res': '$threshold14.3'}), (16, {'value': '$threshold14.3', 'res': '$16unary_negative.4'}), (18, {'res': '$x018.5'}), (24, {'lhs': '$16unary_negative.4', 'rhs': '$x018.5', 'res': '$24compare_op.6'}), (28, {'pred': '$24compare_op.6'})), outgoing_phis={'$phi32.0': '$x018.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$x018.5',), 44: ('$x018.5',)})
2025-09-26 15:02:39,033 - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'res': '$threshold32.1'}), (34, {'lhs': '$phi32.0', 'rhs': '$threshold32.1', 'res': '$34compare_op.2'}), (38, {'pred': '$34compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 52: ()})
2025-09-26 15:02:39,033 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ()})
2025-09-26 15:02:39,033 - DEBUG - block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((46, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:02:39,033 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$const48.0.1'}), (50, {'value': '$const48.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:02:39,033 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$x52.0'}), (54, {'res': '$const54.1.2'}), (56, {'index': '$const54.1.2', 'target': '$x52.0', 'res': '$56binary_subscr.2'}), (60, {'value': '$56binary_subscr.2'}), (62, {'res': '$threshold62.3'}), (64, {'value': '$threshold62.3', 'res': '$64unary_negative.4'}), (66, {'res': '$x166.5'}), (72, {'lhs': '$64unary_negative.4', 'rhs': '$x166.5', 'res': '$72compare_op.6'}), (76, {'pred': '$72compare_op.6'})), outgoing_phis={'$phi80.0': '$x166.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$x166.5',), 92: ('$x166.5',)})
2025-09-26 15:02:39,033 - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$threshold80.1'}), (82, {'lhs': '$phi80.0', 'rhs': '$threshold80.1', 'res': '$82compare_op.2'}), (86, {'pred': '$82compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 100: ()})
2025-09-26 15:02:39,033 - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
2025-09-26 15:02:39,034 - DEBUG - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((94, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:02:39,034 - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$const96.0.1'}), (98, {'value': '$const96.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:02:39,034 - DEBUG - block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$zero_pos100.0'}), (102, {'val': '$zero_pos100.0', 'res': '$102to_bool.1'}), (110, {'pred': '$102to_bool.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 204: ()})
2025-09-26 15:02:39,034 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'idx': 0, 'res': '$114load_global.0'}), (124, {'item': '$114load_global.0', 'res': '$124load_attr.1'}), (144, {}), (146, {'res': '$x0146.3'}), (148, {'func': '$124load_attr.1', 'args': ['$x0146.3'], 'kw_names': None, 'res': '$148call.4'}), (156, {'idx': 0, 'res': '$156load_global.5'}), (166, {'item': '$156load_global.5', 'res': '$166load_attr.6'}), (186, {}), (188, {'res': '$x1188.8'}), (190, {'func': '$166load_attr.6', 'args': ['$x1188.8'], 'kw_names': None, 'res': '$190call.9'}), (198, {'lhs': '$148call.4', 'rhs': '$190call.9', 'res': '$198compare_op.10'}), (202, {'retval': '$198compare_op.10', 'castval': '$202return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:02:39,034 - DEBUG - block_infos State(pc_initial=204 nstack_initial=0):
AdaptBlockInfo(insts=((204, {'idx': 0, 'res': '$204load_global.0'}), (214, {'item': '$204load_global.0', 'res': '$214load_attr.1'}), (234, {}), (236, {'res': '$x0236.3'}), (238, {'func': '$214load_attr.1', 'args': ['$x0236.3'], 'kw_names': None, 'res': '$238call.4'}), (246, {'idx': 0, 'res': '$246load_global.5'}), (256, {'item': '$246load_global.5', 'res': '$256load_attr.6'}), (276, {}), (278, {'res': '$x1278.8'}), (280, {'func': '$256load_attr.6', 'args': ['$x1278.8'], 'kw_names': None, 'res': '$280call.9'}), (288, {'lhs': '$238call.4', 'rhs': '$280call.9', 'res': '$288compare_op.10'}), (292, {'retval': '$288compare_op.10', 'castval': '$292return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:02:39,035 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    x0 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$const6.1.1', 'x', 'x0']
    $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$16unary_negative.4', 'threshold']
    $24compare_op.6 = $16unary_negative.4 <= x0 ['$16unary_negative.4', '$24compare_op.6', 'x0']
    $bool28 = global(bool: <class 'bool'>)   ['$bool28']
    $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.6', '$28pred', '$bool28']
    $phi32.0 = x0                            ['$phi32.0', 'x0']
    branch $28pred, 32, 44                   ['$28pred']
label 32:
    $34compare_op.2 = $phi32.0 <= threshold  ['$34compare_op.2', '$phi32.0', 'threshold']
    $bool38 = global(bool: <class 'bool'>)   ['$bool38']
    $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.2', '$38pred', '$bool38']
    branch $38pred, 42, 52                   ['$38pred']
label 42:
    jump 48                                  []
label 44:
    jump 52                                  []
label 48:
    x0 = const(int, 0)                       ['x0']
    jump 52                                  []
label 52:
    $const54.1.2 = const(int, -1)            ['$const54.1.2']
    x1 = getitem(value=x, index=$const54.1.2, fn=<built-in function getitem>) ['$const54.1.2', 'x', 'x1']
    $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$64unary_negative.4', 'threshold']
    $72compare_op.6 = $64unary_negative.4 <= x1 ['$64unary_negative.4', '$72compare_op.6', 'x1']
    $bool76 = global(bool: <class 'bool'>)   ['$bool76']
    $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$72compare_op.6', '$76pred', '$bool76']
    $phi80.0 = x1                            ['$phi80.0', 'x1']
    branch $76pred, 80, 92                   ['$76pred']
label 80:
    $82compare_op.2 = $phi80.0 <= threshold  ['$82compare_op.2', '$phi80.0', 'threshold']
    $bool86 = global(bool: <class 'bool'>)   ['$bool86']
    $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$82compare_op.2', '$86pred', '$bool86']
    branch $86pred, 90, 100                  ['$86pred']
label 90:
    jump 96                                  []
label 92:
    jump 100                                 []
label 96:
    x1 = const(int, 0)                       ['x1']
    jump 100                                 []
label 100:
    $bool110 = global(bool: <class 'bool'>)  ['$bool110']
    $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$110pred', '$bool110', 'zero_pos']
    branch $110pred, 114, 204                ['$110pred']
label 114:
    $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$114load_global.0']
    $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit) ['$114load_global.0', '$124load_attr.1']
    $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$124load_attr.1', '$148call.4', 'x0']
    $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$156load_global.5']
    $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit) ['$156load_global.5', '$166load_attr.6']
    $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.6', '$190call.9', 'x1']
    $198compare_op.10 = $148call.4 != $190call.9 ['$148call.4', '$190call.9', '$198compare_op.10']
    $202return_value.11 = cast(value=$198compare_op.10) ['$198compare_op.10', '$202return_value.11']
    return $202return_value.11               ['$202return_value.11']
label 204:
    $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$204load_global.0']
    $214load_attr.1 = getattr(value=$204load_global.0, attr=sign) ['$204load_global.0', '$214load_attr.1']
    $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.1', '$238call.4', 'x0']
    $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$246load_global.5']
    $256load_attr.6 = getattr(value=$246load_global.5, attr=sign) ['$246load_global.5', '$256load_attr.6']
    $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$256load_attr.6', '$280call.9', 'x1']
    $288compare_op.10 = $238call.4 != $280call.9 ['$238call.4', '$280call.9', '$288compare_op.10']
    $292return_value.11 = cast(value=$288compare_op.10) ['$288compare_op.10', '$292return_value.11']
    return $292return_value.11               ['$292return_value.11']

2025-09-26 15:02:39,482 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1154)
           2	RESUME(arg=0, lineno=1154)
           4	LOAD_GLOBAL(arg=1, lineno=1170)
          14	LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
          16	LOAD_FAST(arg=2, lineno=1170)
          18	CALL(arg=3, lineno=1170)
          26	LOAD_FAST(arg=3, lineno=1170)
          28	LOAD_CONST(arg=1, lineno=1170)
          30	LOAD_CONST(arg=1, lineno=1170)
          32	STORE_SLICE(arg=None, lineno=1170)
          34	RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:02:39,483 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:02:39,483 - DEBUG - stack: []
2025-09-26 15:02:39,483 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:02:39,483 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1154)
2025-09-26 15:02:39,483 - DEBUG - stack []
2025-09-26 15:02:39,483 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1154)
2025-09-26 15:02:39,484 - DEBUG - stack []
2025-09-26 15:02:39,484 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1170)
2025-09-26 15:02:39,484 - DEBUG - stack []
2025-09-26 15:02:39,484 - DEBUG - dispatch pc=14, inst=LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
2025-09-26 15:02:39,484 - DEBUG - stack ['$4load_global.0', '$null$4.1']
2025-09-26 15:02:39,484 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=1170)
2025-09-26 15:02:39,485 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3']
2025-09-26 15:02:39,485 - DEBUG - dispatch pc=18, inst=CALL(arg=3, lineno=1170)
2025-09-26 15:02:39,485 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3', '$zero_pos16.4']
2025-09-26 15:02:39,485 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=3, lineno=1170)
2025-09-26 15:02:39,485 - DEBUG - stack ['$18call.5']
2025-09-26 15:02:39,485 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:02:39,485 - DEBUG - stack ['$18call.5', '$y26.6']
2025-09-26 15:02:39,486 - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:02:39,486 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1']
2025-09-26 15:02:39,486 - DEBUG - dispatch pc=32, inst=STORE_SLICE(arg=None, lineno=1170)
2025-09-26 15:02:39,486 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1', '$const30.8.1']
2025-09-26 15:02:39,486 - DEBUG - dispatch pc=34, inst=RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:02:39,486 - DEBUG - stack []
2025-09-26 15:02:39,486 - DEBUG - end state. edges=[]
2025-09-26 15:02:39,486 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:02:39,487 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-09-26 15:02:39,487 - DEBUG - defmap: {}
2025-09-26 15:02:39,487 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:02:39,487 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:02:39,487 - DEBUG - keep phismap: {}
2025-09-26 15:02:39,487 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-09-26 15:02:39,487 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:02:39,488 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res1': '$x14.2', 'res2': '$threshold14.3'}), (16, {'res': '$zero_pos16.4'}), (18, {'func': '$4load_global.0', 'args': ['$x14.2', '$threshold14.3', '$zero_pos16.4'], 'kw_names': None, 'res': '$18call.5'}), (26, {'res': '$y26.6'}), (28, {'res': '$const28.7.1'}), (30, {'res': '$const30.8.1'}), (32, {'start': '$const28.7.1', 'end': '$const30.8.1', 'container': '$y26.6', 'value': '$18call.5', 'res': '$32store_slice.10', 'slicevar': '$32store_slice.9'}), (34, {'retval': '$const34.11', 'castval': '$34return_const.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:02:39,488 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002985B92EBA0>) ['$4load_global.0']
    $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const28.7.1 = const(NoneType, None)     ['$const28.7.1']
    $const30.8.1 = const(NoneType, None)     ['$const30.8.1']
    $32store_slice.9 = global(slice: <class 'slice'>) ['$32store_slice.9']
    $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$32store_slice.10', '$32store_slice.9', '$const28.7.1', '$const30.8.1']
    y[$32store_slice.10] = $18call.5         ['$18call.5', '$32store_slice.10', 'y']
    $const34.11 = const(NoneType, None)      ['$const34.11']
    $34return_const.12 = cast(value=$const34.11) ['$34return_const.12', '$const34.11']
    return $34return_const.12                ['$34return_const.12']

2025-09-26 15:02:39,493 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:02:39,493 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985C7B0AD0>
2025-09-26 15:02:39,493 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:39,493 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:39,493 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:39,493 - DEBUG - on stmt: y = arg(3, name=y)
2025-09-26 15:02:39,493 - DEBUG - on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002985B92EBA0>)
2025-09-26 15:02:39,494 - DEBUG - on stmt: $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,494 - DEBUG - on stmt: $const28.7.1 = const(NoneType, None)
2025-09-26 15:02:39,494 - DEBUG - on stmt: $const30.8.1 = const(NoneType, None)
2025-09-26 15:02:39,494 - DEBUG - on stmt: $32store_slice.9 = global(slice: <class 'slice'>)
2025-09-26 15:02:39,494 - DEBUG - on stmt: $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,494 - DEBUG - on stmt: y[slice(None, None, None)] = $18call.5
2025-09-26 15:02:39,494 - DEBUG - on stmt: $const34.11 = const(NoneType, None)
2025-09-26 15:02:39,495 - DEBUG - on stmt: $34return_const.12 = cast(value=$const34.11)
2025-09-26 15:02:39,495 - DEBUG - on stmt: return $34return_const.12
2025-09-26 15:02:39,495 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.5': [(<numba.core.ir.Assign object at 0x000002985C7A1370>,
                            0)],
             '$32store_slice.10': [(<numba.core.ir.Assign object at 0x000002985C7A1D90>,
                                    0)],
             '$32store_slice.9': [(<numba.core.ir.Assign object at 0x000002985C7A1C70>,
                                   0)],
             '$34return_const.12': [(<numba.core.ir.Assign object at 0x000002985C7A1F70>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000002985C7A1670>,
                                  0)],
             '$const28.7.1': [(<numba.core.ir.Assign object at 0x000002985C7A11F0>,
                               0)],
             '$const30.8.1': [(<numba.core.ir.Assign object at 0x000002985C7A1BB0>,
                               0)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x000002985C7A1E50>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002985C7A18B0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002985C7A1910>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000002985C7A1610>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002985C7A17F0>,
                           0)]})
2025-09-26 15:02:39,496 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002985C7B0C20>
2025-09-26 15:02:39,625 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=3, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=3, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	LOAD_CONST(arg=1, lineno=3)
          92	CALL_KW(arg=2, lineno=3)
          94	STORE_FAST(arg=4, lineno=3)
          96	LOAD_CONST(arg=2, lineno=4)
          98	LOAD_FAST(arg=4, lineno=4)
         100	LOAD_CONST(arg=0, lineno=4)
         102	LOAD_CONST(arg=3, lineno=4)
         104	STORE_SLICE(arg=None, lineno=4)
         106	LOAD_CONST(arg=2, lineno=5)
         108	LOAD_FAST(arg=4, lineno=5)
         110	LOAD_CONST(arg=2, lineno=5)
         112	LOAD_CONST(arg=0, lineno=5)
         114	STORE_SLICE(arg=None, lineno=5)
         116	LOAD_GLOBAL(arg=9, lineno=6)
         126	LOAD_GLOBAL(arg=11, lineno=6)
         136	LOAD_CONST(arg=2, lineno=6)
         138	LOAD_CONST(arg=4, lineno=6)
         140	CALL(arg=2, lineno=6)
         148	UNARY_NEGATIVE(arg=None, lineno=6)
         150	LOAD_FAST(arg=3, lineno=6)
         152	LOAD_CONST(arg=2, lineno=6)
         154	BINARY_SUBSCR(arg=None, lineno=6)
         158	LOAD_GLOBAL(arg=13, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	LOAD_CONST(arg=2, lineno=6)
         172	CALL(arg=2, lineno=6)
         180	BINARY_OP(arg=10, lineno=6)
         184	CALL(arg=2, lineno=6)
         192	GET_ITER(arg=None, lineno=6)
>        194	FOR_ITER(arg=5, lineno=6)
         198	STORE_FAST(arg=5, lineno=6)
         200	LOAD_CONST(arg=2, lineno=7)
         202	STORE_FAST(arg=6, lineno=7)
         204	JUMP_BACKWARD(arg=7, lineno=7)
>        208	END_FOR(arg=None, lineno=6)
         210	POP_TOP(arg=None, lineno=6)
         212	LOAD_FAST(arg=4, lineno=8)
         214	RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:02:39,626 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:02:39,626 - DEBUG - stack: []
2025-09-26 15:02:39,626 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:02:39,627 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-09-26 15:02:39,627 - DEBUG - stack []
2025-09-26 15:02:39,627 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2025-09-26 15:02:39,627 - DEBUG - stack []
2025-09-26 15:02:39,627 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2025-09-26 15:02:39,627 - DEBUG - stack []
2025-09-26 15:02:39,628 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2025-09-26 15:02:39,628 - DEBUG - stack ['$x4.0']
2025-09-26 15:02:39,628 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=3, lineno=2)
2025-09-26 15:02:39,628 - DEBUG - stack ['$6load_attr.1']
2025-09-26 15:02:39,628 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:02:39,628 - DEBUG - stack []
2025-09-26 15:02:39,628 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2025-09-26 15:02:39,629 - DEBUG - stack ['$28load_global.2']
2025-09-26 15:02:39,629 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=3, lineno=3)
2025-09-26 15:02:39,629 - DEBUG - stack ['$38load_attr.3', '$null$38.4']
2025-09-26 15:02:39,629 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:02:39,629 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5']
2025-09-26 15:02:39,629 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2025-09-26 15:02:39,629 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$60load_global.6']
2025-09-26 15:02:39,629 - DEBUG - dispatch pc=90, inst=LOAD_CONST(arg=1, lineno=3)
2025-09-26 15:02:39,630 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7']
2025-09-26 15:02:39,630 - DEBUG - dispatch pc=92, inst=CALL_KW(arg=2, lineno=3)
2025-09-26 15:02:39,630 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7', '$const90.8.1']
2025-09-26 15:02:39,630 - DEBUG - dispatch pc=94, inst=STORE_FAST(arg=4, lineno=3)
2025-09-26 15:02:39,630 - DEBUG - stack ['$92call_kw.9']
2025-09-26 15:02:39,630 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=2, lineno=4)
2025-09-26 15:02:39,630 - DEBUG - stack []
2025-09-26 15:02:39,630 - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=4)
2025-09-26 15:02:39,630 - DEBUG - stack ['$const96.10.2']
2025-09-26 15:02:39,630 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=0, lineno=4)
2025-09-26 15:02:39,631 - DEBUG - stack ['$const96.10.2', '$out098.11']
2025-09-26 15:02:39,631 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=3, lineno=4)
2025-09-26 15:02:39,631 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0']
2025-09-26 15:02:39,631 - DEBUG - dispatch pc=104, inst=STORE_SLICE(arg=None, lineno=4)
2025-09-26 15:02:39,631 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0', '$const102.13.3']
2025-09-26 15:02:39,631 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:02:39,631 - DEBUG - stack []
2025-09-26 15:02:39,631 - DEBUG - dispatch pc=108, inst=LOAD_FAST(arg=4, lineno=5)
2025-09-26 15:02:39,632 - DEBUG - stack ['$const106.16.2']
2025-09-26 15:02:39,632 - DEBUG - dispatch pc=110, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:02:39,632 - DEBUG - stack ['$const106.16.2', '$out0108.17']
2025-09-26 15:02:39,632 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=0, lineno=5)
2025-09-26 15:02:39,632 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2']
2025-09-26 15:02:39,632 - DEBUG - dispatch pc=114, inst=STORE_SLICE(arg=None, lineno=5)
2025-09-26 15:02:39,632 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2', '$const112.19.0']
2025-09-26 15:02:39,632 - DEBUG - dispatch pc=116, inst=LOAD_GLOBAL(arg=9, lineno=6)
2025-09-26 15:02:39,632 - DEBUG - stack []
2025-09-26 15:02:39,633 - DEBUG - dispatch pc=126, inst=LOAD_GLOBAL(arg=11, lineno=6)
2025-09-26 15:02:39,633 - DEBUG - stack ['$116load_global.22', '$null$116.23']
2025-09-26 15:02:39,633 - DEBUG - dispatch pc=136, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:02:39,633 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25']
2025-09-26 15:02:39,633 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=4, lineno=6)
2025-09-26 15:02:39,633 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2']
2025-09-26 15:02:39,633 - DEBUG - dispatch pc=140, inst=CALL(arg=2, lineno=6)
2025-09-26 15:02:39,633 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2', '$const138.27.4']
2025-09-26 15:02:39,633 - DEBUG - dispatch pc=148, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-09-26 15:02:39,634 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$140call.28']
2025-09-26 15:02:39,634 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=3, lineno=6)
2025-09-26 15:02:39,634 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29']
2025-09-26 15:02:39,634 - DEBUG - dispatch pc=152, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:02:39,634 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30']
2025-09-26 15:02:39,634 - DEBUG - dispatch pc=154, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-09-26 15:02:39,634 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30', '$const152.31.2']
2025-09-26 15:02:39,634 - DEBUG - dispatch pc=158, inst=LOAD_GLOBAL(arg=13, lineno=6)
2025-09-26 15:02:39,634 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32']
2025-09-26 15:02:39,635 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:02:39,635 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34']
2025-09-26 15:02:39,635 - DEBUG - dispatch pc=170, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:02:39,635 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2']
2025-09-26 15:02:39,635 - DEBUG - dispatch pc=172, inst=CALL(arg=2, lineno=6)
2025-09-26 15:02:39,635 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2', '$const170.36.2']
2025-09-26 15:02:39,635 - DEBUG - dispatch pc=180, inst=BINARY_OP(arg=10, lineno=6)
2025-09-26 15:02:39,635 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$172call.37']
2025-09-26 15:02:39,636 - DEBUG - dispatch pc=184, inst=CALL(arg=2, lineno=6)
2025-09-26 15:02:39,636 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$binop_sub180.38']
2025-09-26 15:02:39,636 - DEBUG - dispatch pc=192, inst=GET_ITER(arg=None, lineno=6)
2025-09-26 15:02:39,636 - DEBUG - stack ['$184call.39']
2025-09-26 15:02:39,636 - DEBUG - end state. edges=[Edge(pc=194, stack=('$192get_iter.40',), blockstack=(), npush=0)]
2025-09-26 15:02:39,636 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:02:39,636 - DEBUG - stack: ['$phi194.0']
2025-09-26 15:02:39,636 - DEBUG - state.pc_initial: State(pc_initial=194 nstack_initial=1)
2025-09-26 15:02:39,637 - DEBUG - dispatch pc=194, inst=FOR_ITER(arg=5, lineno=6)
2025-09-26 15:02:39,637 - DEBUG - stack ['$phi194.0']
2025-09-26 15:02:39,637 - DEBUG - end state. edges=[Edge(pc=208, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0), Edge(pc=198, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0)]
2025-09-26 15:02:39,637 - DEBUG - pending: deque([State(pc_initial=208 nstack_initial=2), State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:02:39,637 - DEBUG - stack: ['$phi208.0', '$phi208.1']
2025-09-26 15:02:39,637 - DEBUG - state.pc_initial: State(pc_initial=208 nstack_initial=2)
2025-09-26 15:02:39,637 - DEBUG - dispatch pc=208, inst=END_FOR(arg=None, lineno=6)
2025-09-26 15:02:39,638 - DEBUG - stack ['$phi208.0', '$phi208.1']
2025-09-26 15:02:39,638 - DEBUG - dispatch pc=210, inst=POP_TOP(arg=None, lineno=6)
2025-09-26 15:02:39,638 - DEBUG - stack ['$phi208.0']
2025-09-26 15:02:39,638 - DEBUG - dispatch pc=212, inst=LOAD_FAST(arg=4, lineno=8)
2025-09-26 15:02:39,638 - DEBUG - stack []
2025-09-26 15:02:39,638 - DEBUG - dispatch pc=214, inst=RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:02:39,638 - DEBUG - stack ['$out0212.2']
2025-09-26 15:02:39,638 - DEBUG - end state. edges=[]
2025-09-26 15:02:39,638 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:02:39,639 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2025-09-26 15:02:39,639 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2025-09-26 15:02:39,639 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=5, lineno=6)
2025-09-26 15:02:39,639 - DEBUG - stack ['$phi198.0', '$phi198.1']
2025-09-26 15:02:39,639 - DEBUG - dispatch pc=200, inst=LOAD_CONST(arg=2, lineno=7)
2025-09-26 15:02:39,639 - DEBUG - stack ['$phi198.0']
2025-09-26 15:02:39,639 - DEBUG - dispatch pc=202, inst=STORE_FAST(arg=6, lineno=7)
2025-09-26 15:02:39,639 - DEBUG - stack ['$phi198.0', '$const200.2.2']
2025-09-26 15:02:39,639 - DEBUG - dispatch pc=204, inst=JUMP_BACKWARD(arg=7, lineno=7)
2025-09-26 15:02:39,639 - DEBUG - stack ['$phi198.0']
2025-09-26 15:02:39,640 - DEBUG - end state. edges=[Edge(pc=194, stack=('$phi198.0',), blockstack=(), npush=0)]
2025-09-26 15:02:39,640 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:02:39,640 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:02:39,640 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=194 nstack_initial=1): {'$phi194.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=208 nstack_initial=2): set()})
2025-09-26 15:02:39,640 - DEBUG - defmap: {'$phi194.0': State(pc_initial=0 nstack_initial=0),
 '$phi198.1': State(pc_initial=194 nstack_initial=1),
 '$phi208.1': State(pc_initial=194 nstack_initial=1)}
2025-09-26 15:02:39,641 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi198.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:02:39,641 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:02:39,642 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:02:39,642 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:02:39,643 - DEBUG - keep phismap: {'$phi194.0': {('$192get_iter.40', State(pc_initial=0 nstack_initial=0))},
 '$phi198.1': {('$194for_iter.2', State(pc_initial=194 nstack_initial=1))}}
2025-09-26 15:02:39,643 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi194.0': '$192get_iter.40'},
             State(pc_initial=194 nstack_initial=1): {'$phi198.1': '$194for_iter.2'}})
2025-09-26 15:02:39,643 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:02:39,643 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.3'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (90, {'res': '$const90.8.1'}), (92, {'func': '$38load_attr.3', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': '$const90.8.1', 'res': '$92call_kw.9'}), (94, {'value': '$92call_kw.9'}), (96, {'res': '$const96.10.2'}), (98, {'res': '$out098.11'}), (100, {'res': '$const100.12.0'}), (102, {'res': '$const102.13.3'}), (104, {'start': '$const100.12.0', 'end': '$const102.13.3', 'container': '$out098.11', 'value': '$const96.10.2', 'res': '$104store_slice.15', 'slicevar': '$104store_slice.14'}), (106, {'res': '$const106.16.2'}), (108, {'res': '$out0108.17'}), (110, {'res': '$const110.18.2'}), (112, {'res': '$const112.19.0'}), (114, {'start': '$const110.18.2', 'end': '$const112.19.0', 'container': '$out0108.17', 'value': '$const106.16.2', 'res': '$114store_slice.21', 'slicevar': '$114store_slice.20'}), (116, {'idx': 4, 'res': '$116load_global.22'}), (126, {'idx': 5, 'res': '$126load_global.24'}), (136, {'res': '$const136.26.2'}), (138, {'res': '$const138.27.4'}), (140, {'func': '$126load_global.24', 'args': ['$const136.26.2', '$const138.27.4'], 'kw_names': None, 'res': '$140call.28'}), (148, {'value': '$140call.28', 'res': '$148unary_negative.29'}), (150, {'res': '$full_shape0150.30'}), (152, {'res': '$const152.31.2'}), (154, {'index': '$const152.31.2', 'target': '$full_shape0150.30', 'res': '$154binary_subscr.32'}), (158, {'idx': 6, 'res': '$158load_global.33'}), (168, {'res': '$const168.35.2'}), (170, {'res': '$const170.36.2'}), (172, {'func': '$158load_global.33', 'args': ['$const168.35.2', '$const170.36.2'], 'kw_names': None, 'res': '$172call.37'}), (180, {'op': '-', 'lhs': '$154binary_subscr.32', 'rhs': '$172call.37', 'res': '$binop_sub180.38'}), (184, {'func': '$116load_global.22', 'args': ['$148unary_negative.29', '$binop_sub180.38'], 'kw_names': None, 'res': '$184call.39'}), (192, {'value': '$184call.39', 'res': '$192get_iter.40'})), outgoing_phis={'$phi194.0': '$192get_iter.40'}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$192get_iter.40',)})
2025-09-26 15:02:39,644 - DEBUG - block_infos State(pc_initial=194 nstack_initial=1):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.0', 'pair': '$194for_iter.1', 'indval': '$194for_iter.2', 'pred': '$194for_iter.3'}),), outgoing_phis={'$phi198.1': '$194for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={208: ('$phi194.0', '$194for_iter.2'), 198: ('$phi194.0', '$194for_iter.2')})
2025-09-26 15:02:39,644 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$const200.2.2'}), (202, {'value': '$const200.2.2'}), (204, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$phi198.0',)})
2025-09-26 15:02:39,644 - DEBUG - block_infos State(pc_initial=208 nstack_initial=2):
AdaptBlockInfo(insts=((212, {'res': '$out0212.2'}), (214, {'retval': '$out0212.2', 'castval': '$214return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:02:39,645 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$28load_global.2']
    $38load_attr.3 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.3']
    $60load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool) ['$60load_global.6', '$70load_attr.7']
    $const_dtype = const(str, dtype)         ['$const_dtype']
    $const90.8.1 = build_tuple(items=[Var($const_dtype, <string>:3)]) ['$const90.8.1', '$const_dtype']
    out0 = call $38load_attr.3(full_shape0, func=$38load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.3', '$70load_attr.7', 'full_shape0', 'out0']
    $const96.10.2 = const(int, 0)            ['$const96.10.2']
    $const100.12.0 = const(NoneType, None)   ['$const100.12.0']
    $const102.13.3 = const(int, 1)           ['$const102.13.3']
    $104store_slice.14 = global(slice: <class 'slice'>) ['$104store_slice.14']
    $104store_slice.15 = call $104store_slice.14($const100.12.0, $const102.13.3, func=$104store_slice.14, args=(Var($const100.12.0, <string>:4), Var($const102.13.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$104store_slice.14', '$104store_slice.15', '$const100.12.0', '$const102.13.3']
    out0[$104store_slice.15] = $const96.10.2 ['$104store_slice.15', '$const96.10.2', 'out0']
    $const106.16.2 = const(int, 0)           ['$const106.16.2']
    $const110.18.2 = const(int, 0)           ['$const110.18.2']
    $const112.19.0 = const(NoneType, None)   ['$const112.19.0']
    $114store_slice.20 = global(slice: <class 'slice'>) ['$114store_slice.20']
    $114store_slice.21 = call $114store_slice.20($const110.18.2, $const112.19.0, func=$114store_slice.20, args=(Var($const110.18.2, <string>:5), Var($const112.19.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$114store_slice.20', '$114store_slice.21', '$const110.18.2', '$const112.19.0']
    out0[$114store_slice.21] = $const106.16.2 ['$114store_slice.21', '$const106.16.2', 'out0']
    $116load_global.22 = global(range: <class 'range'>) ['$116load_global.22']
    $126load_global.24 = global(min: <built-in function min>) ['$126load_global.24']
    $const136.26.2 = const(int, 0)           ['$const136.26.2']
    $const138.27.4 = const(int, -1)          ['$const138.27.4']
    $140call.28 = call $126load_global.24($const136.26.2, $const138.27.4, func=$126load_global.24, args=[Var($const136.26.2, <string>:6), Var($const138.27.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_global.24', '$140call.28', '$const136.26.2', '$const138.27.4']
    $148unary_negative.29 = unary(fn=<built-in function neg>, value=$140call.28) ['$140call.28', '$148unary_negative.29']
    $const152.31.2 = const(int, 0)           ['$const152.31.2']
    $154binary_subscr.32 = getitem(value=full_shape0, index=$const152.31.2, fn=<built-in function getitem>) ['$154binary_subscr.32', '$const152.31.2', 'full_shape0']
    $158load_global.33 = global(max: <built-in function max>) ['$158load_global.33']
    $const168.35.2 = const(int, 0)           ['$const168.35.2']
    $const170.36.2 = const(int, 0)           ['$const170.36.2']
    $172call.37 = call $158load_global.33($const168.35.2, $const170.36.2, func=$158load_global.33, args=[Var($const168.35.2, <string>:6), Var($const170.36.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$158load_global.33', '$172call.37', '$const168.35.2', '$const170.36.2']
    $binop_sub180.38 = $154binary_subscr.32 - $172call.37 ['$154binary_subscr.32', '$172call.37', '$binop_sub180.38']
    $184call.39 = call $116load_global.22($148unary_negative.29, $binop_sub180.38, func=$116load_global.22, args=[Var($148unary_negative.29, <string>:6), Var($binop_sub180.38, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.22', '$148unary_negative.29', '$184call.39', '$binop_sub180.38']
    $192get_iter.40 = getiter(value=$184call.39) ['$184call.39', '$192get_iter.40']
    $phi194.0 = $192get_iter.40              ['$192get_iter.40', '$phi194.0']
    jump 194                                 []
label 194:
    $194for_iter.1 = iternext(value=$phi194.0) ['$194for_iter.1', '$phi194.0']
    $194for_iter.2 = pair_first(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.2']
    $194for_iter.3 = pair_second(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.3']
    $phi198.1 = $194for_iter.2               ['$194for_iter.2', '$phi198.1']
    branch $194for_iter.3, 198, 208          ['$194for_iter.3']
label 198:
    index00 = $phi198.1                      ['$phi198.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 194                                 []
label 208:
    $214return_value.3 = cast(value=out0)    ['$214return_value.3', 'out0']
    return $214return_value.3                ['$214return_value.3']

2025-09-26 15:02:39,668 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:02:39,669 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985C8447D0>
2025-09-26 15:02:39,669 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:39,669 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:39,669 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:39,669 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:02:39,669 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,669 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:02:39,669 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,670 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:02:39,670 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:02:39,670 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:02:39,670 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,670 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:02:39,670 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:02:39,670 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:02:39,670 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:39,671 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,671 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:02:39,671 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:02:39,671 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:02:39,671 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:02:39,671 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:39,671 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,672 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:02:39,672 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:02:39,672 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:02:39,672 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:02:39,672 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:02:39,672 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,672 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:02:39,672 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:02:39,673 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:02:39,673 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:02:39,673 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:02:39,673 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:02:39,673 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,673 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:02:39,673 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,673 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:02:39,674 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:02:39,674 - DEBUG - on stmt: jump 194
2025-09-26 15:02:39,674 - DEBUG - ==== SSA block analysis pass on 194
2025-09-26 15:02:39,674 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985C8447D0>
2025-09-26 15:02:39,674 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:02:39,674 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:02:39,674 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:02:39,674 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:02:39,675 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:02:39,675 - DEBUG - ==== SSA block analysis pass on 198
2025-09-26 15:02:39,675 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985C8447D0>
2025-09-26 15:02:39,675 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:02:39,675 - DEBUG - on stmt: jump 208
2025-09-26 15:02:39,675 - DEBUG - ==== SSA block analysis pass on 414
2025-09-26 15:02:39,675 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985C8447D0>
2025-09-26 15:02:39,675 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:02:39,676 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:02:39,676 - DEBUG - ==== SSA block analysis pass on 208
2025-09-26 15:02:39,676 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985C8447D0>
2025-09-26 15:02:39,676 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:02:39,676 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:39,676 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:39,676 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:39,676 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:39,677 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,677 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,677 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:02:39,677 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:02:39,677 - DEBUG - ==== SSA block analysis pass on 209
2025-09-26 15:02:39,677 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985C8447D0>
2025-09-26 15:02:39,677 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:02:39,678 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,678 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,678 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:02:39,678 - DEBUG - ==== SSA block analysis pass on 241
2025-09-26 15:02:39,678 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985C8447D0>
2025-09-26 15:02:39,678 - DEBUG - on stmt: jump 251
2025-09-26 15:02:39,678 - DEBUG - ==== SSA block analysis pass on 253
2025-09-26 15:02:39,678 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985C8447D0>
2025-09-26 15:02:39,679 - DEBUG - on stmt: jump 257
2025-09-26 15:02:39,679 - DEBUG - ==== SSA block analysis pass on 251
2025-09-26 15:02:39,679 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985C8447D0>
2025-09-26 15:02:39,679 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:02:39,679 - DEBUG - on stmt: jump 257
2025-09-26 15:02:39,679 - DEBUG - ==== SSA block analysis pass on 257
2025-09-26 15:02:39,679 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985C8447D0>
2025-09-26 15:02:39,679 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:02:39,679 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:02:39,680 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:39,680 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:39,680 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:39,680 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,680 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,680 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:02:39,680 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:02:39,680 - DEBUG - ==== SSA block analysis pass on 261
2025-09-26 15:02:39,681 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985C8447D0>
2025-09-26 15:02:39,681 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:02:39,681 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,681 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,681 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:02:39,681 - DEBUG - ==== SSA block analysis pass on 289
2025-09-26 15:02:39,681 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985C8447D0>
2025-09-26 15:02:39,681 - DEBUG - on stmt: jump 299
2025-09-26 15:02:39,681 - DEBUG - ==== SSA block analysis pass on 301
2025-09-26 15:02:39,682 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985C8447D0>
2025-09-26 15:02:39,682 - DEBUG - on stmt: jump 305
2025-09-26 15:02:39,682 - DEBUG - ==== SSA block analysis pass on 299
2025-09-26 15:02:39,682 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985C8447D0>
2025-09-26 15:02:39,682 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:02:39,682 - DEBUG - on stmt: jump 305
2025-09-26 15:02:39,682 - DEBUG - ==== SSA block analysis pass on 305
2025-09-26 15:02:39,682 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985C8447D0>
2025-09-26 15:02:39,682 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,682 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,683 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:02:39,683 - DEBUG - ==== SSA block analysis pass on 309
2025-09-26 15:02:39,683 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985C8447D0>
2025-09-26 15:02:39,683 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,683 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:02:39,683 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,683 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,683 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:02:39,684 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,684 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:02:39,684 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:02:39,684 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:02:39,684 - DEBUG - on stmt: jump 413
2025-09-26 15:02:39,684 - DEBUG - ==== SSA block analysis pass on 323
2025-09-26 15:02:39,684 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985C8447D0>
2025-09-26 15:02:39,684 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,685 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:02:39,685 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,685 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,685 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:02:39,685 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,685 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:02:39,685 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:02:39,686 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:02:39,686 - DEBUG - on stmt: jump 413
2025-09-26 15:02:39,686 - DEBUG - ==== SSA block analysis pass on 413
2025-09-26 15:02:39,686 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985C8447D0>
2025-09-26 15:02:39,686 - DEBUG - on stmt: jump 194
2025-09-26 15:02:39,686 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104store_slice.14.1': [(<numba.core.ir.Assign object at 0x000002985C8E8CB0>,
                                       0)],
             '$104store_slice.15.1': [(<numba.core.ir.Assign object at 0x000002985C8E8DD0>,
                                       0)],
             '$110pred': [(<numba.core.ir.Assign object at 0x000002985C8AF6B0>,
                           305)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x000002985C8B3B30>,
                                    309)],
             '$114store_slice.20.1': [(<numba.core.ir.Assign object at 0x000002985C8E91F0>,
                                       0)],
             '$114store_slice.21.1': [(<numba.core.ir.Assign object at 0x000002985C8E9310>,
                                       0)],
             '$116load_global.22.1': [(<numba.core.ir.Assign object at 0x000002985C8E9430>,
                                       0)],
             '$124load_attr.1': [(<numba.core.ir.Assign object at 0x000002985C8B5250>,
                                  309)],
             '$126load_global.24.1': [(<numba.core.ir.Assign object at 0x000002985C8E9550>,
                                       0)],
             '$140call.28.1': [(<numba.core.ir.Assign object at 0x000002985C8E97F0>,
                                0)],
             '$148call.4': [(<numba.core.ir.Assign object at 0x000002985C8B6990>,
                             309)],
             '$148unary_negative.29.1': [(<numba.core.ir.Assign object at 0x000002985C8E9910>,
                                          0)],
             '$154binary_subscr.32.1': [(<numba.core.ir.Assign object at 0x000002985C8E9BB0>,
                                         0)],
             '$156load_global.5': [(<numba.core.ir.Assign object at 0x000002985C8B8110>,
                                    309)],
             '$158load_global.33.1': [(<numba.core.ir.Assign object at 0x000002985C8E9CD0>,
                                       0)],
             '$166load_attr.6': [(<numba.core.ir.Assign object at 0x000002985C8B97F0>,
                                  309)],
             '$16unary_negative.4': [(<numba.core.ir.Assign object at 0x000002985C86D370>,
                                      208)],
             '$172call.37.1': [(<numba.core.ir.Assign object at 0x000002985C8E9FD0>,
                                0)],
             '$184call.39.1': [(<numba.core.ir.Assign object at 0x000002985C8EA210>,
                                0)],
             '$190call.9': [(<numba.core.ir.Assign object at 0x000002985C8BAF30>,
                             309)],
             '$192get_iter.40.1': [(<numba.core.ir.Assign object at 0x000002985C8EA330>,
                                    0)],
             '$194for_iter.1.1': [(<numba.core.ir.Assign object at 0x000002985C8E8F50>,
                                   194)],
             '$194for_iter.2.1': [(<numba.core.ir.Assign object at 0x000002985C8EA3F0>,
                                   194)],
             '$194for_iter.3.1': [(<numba.core.ir.Assign object at 0x000002985C8EA510>,
                                   194)],
             '$198compare_op.10': [(<numba.core.ir.Assign object at 0x000002985C8C06B0>,
                                    309)],
             '$202return_value.11': [(<numba.core.ir.Assign object at 0x000002985C8C1DF0>,
                                      309)],
             '$204load_global.0': [(<numba.core.ir.Assign object at 0x000002985C8C6270>,
                                    323)],
             '$214load_attr.1': [(<numba.core.ir.Assign object at 0x000002985C8C79B0>,
                                  323)],
             '$214return_value.3.1': [(<numba.core.ir.Assign object at 0x000002985C8EAAB0>,
                                       414)],
             '$238call.4': [(<numba.core.ir.Assign object at 0x000002985C8CD130>,
                             323)],
             '$246load_global.5': [(<numba.core.ir.Assign object at 0x000002985C8CE870>,
                                    323)],
             '$24compare_op.6': [(<numba.core.ir.Assign object at 0x000002985C86EAB0>,
                                  208)],
             '$256load_attr.6': [(<numba.core.ir.Assign object at 0x000002985C8CFFB0>,
                                  323)],
             '$280call.9': [(<numba.core.ir.Assign object at 0x000002985C8D1730>,
                             323)],
             '$288compare_op.10': [(<numba.core.ir.Assign object at 0x000002985C8D2E70>,
                                    323)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x000002985C8E80B0>,
                                     0)],
             '$28pred': [(<numba.core.ir.Assign object at 0x000002985C829910>,
                          208)],
             '$292return_value.11': [(<numba.core.ir.Assign object at 0x000002985C8D85F0>,
                                      323)],
             '$34compare_op.2': [(<numba.core.ir.Assign object at 0x000002985C873530>,
                                  209)],
             '$38load_attr.3.1': [(<numba.core.ir.Assign object at 0x000002985C8E81D0>,
                                   0)],
             '$38pred': [(<numba.core.ir.Assign object at 0x000002985C87A390>,
                          209)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x000002985C8E83B0>,
                                     0)],
             '$64unary_negative.4': [(<numba.core.ir.Assign object at 0x000002985C887110>,
                                      257)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x000002985C8E84D0>,
                                   0)],
             '$72compare_op.6': [(<numba.core.ir.Assign object at 0x000002985C88C890>,
                                  257)],
             '$76pred': [(<numba.core.ir.Assign object at 0x000002985C88F6B0>,
                          257)],
             '$82compare_op.2': [(<numba.core.ir.Assign object at 0x000002985C899250>,
                                  261)],
             '$86pred': [(<numba.core.ir.Assign object at 0x000002985C89C0B0>,
                          261)],
             '$binop_sub180.38.1': [(<numba.core.ir.Assign object at 0x000002985C8EA0F0>,
                                     0)],
             '$bool110': [(<numba.core.ir.Assign object at 0x000002985C8ADFD0>,
                           305)],
             '$bool28': [(<numba.core.ir.Assign object at 0x000002985C828230>,
                          208)],
             '$bool38': [(<numba.core.ir.Assign object at 0x000002985C878CB0>,
                          209)],
             '$bool76': [(<numba.core.ir.Assign object at 0x000002985C88DFD0>,
                          257)],
             '$bool86': [(<numba.core.ir.Assign object at 0x000002985C89A990>,
                          261)],
             '$const100.12.0.1': [(<numba.core.ir.Assign object at 0x000002985C8E8AD0>,
                                   0)],
             '$const102.13.3.1': [(<numba.core.ir.Assign object at 0x000002985C8E8B90>,
                                   0)],
             '$const106.16.2.1': [(<numba.core.ir.Assign object at 0x000002985C8E8E90>,
                                   0)],
             '$const110.18.2.1': [(<numba.core.ir.Assign object at 0x000002985C8E9010>,
                                   0)],
             '$const112.19.0.1': [(<numba.core.ir.Assign object at 0x000002985C8E90D0>,
                                   0)],
             '$const136.26.2.1': [(<numba.core.ir.Assign object at 0x000002985C8E9610>,
                                   0)],
             '$const138.27.4.1': [(<numba.core.ir.Assign object at 0x000002985C8E96D0>,
                                   0)],
             '$const152.31.2.1': [(<numba.core.ir.Assign object at 0x000002985C8E9A90>,
                                   0)],
             '$const168.35.2.1': [(<numba.core.ir.Assign object at 0x000002985C8E9D90>,
                                   0)],
             '$const170.36.2.1': [(<numba.core.ir.Assign object at 0x000002985C8E9EB0>,
                                   0)],
             '$const54.1.2': [(<numba.core.ir.Assign object at 0x000002985C8842F0>,
                               257)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x000002985C86A690>,
                              208)],
             '$const90.8.1.1': [(<numba.core.ir.Assign object at 0x000002985C8E86B0>,
                                 0)],
             '$const96.10.2.1': [(<numba.core.ir.Assign object at 0x000002985C8E8950>,
                                  0)],
             '$const_dtype.1': [(<numba.core.ir.Assign object at 0x000002985C8E8590>,
                                 0)],
             '$phi194.0.1': [(<numba.core.ir.Assign object at 0x000002985C8DBF50>,
                              0)],
             '$phi198.1.1': [(<numba.core.ir.Assign object at 0x000002985C8EA5D0>,
                              194)],
             '$phi32.0': [(<numba.core.ir.Assign object at 0x000002985C82B050>,
                           208)],
             '$phi80.0': [(<numba.core.ir.Assign object at 0x000002985C894E30>,
                           257)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x000002985C8DBE90>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x000002985C8EA6F0>,
                          198)],
             'out0': [(<numba.core.ir.Assign object at 0x000002985C8E87D0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x000002985C86A630>,
                                208),
                               (<numba.core.ir.Assign object at 0x000002985C8DB4D0>,
                                257)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002985C8DBBF0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002985C8DBB30>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x000002985C8DB410>, 208),
                    (<numba.core.ir.Assign object at 0x000002985C881550>, 251)],
             'x1': [(<numba.core.ir.Assign object at 0x000002985C8DB590>, 257),
                    (<numba.core.ir.Assign object at 0x000002985C8A7230>, 299)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002985C8DBCB0>,
                           0)]})
2025-09-26 15:02:39,696 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002985C8447D0>
2025-09-26 15:02:39,696 - DEBUG - Fix SSA violator on var stencil_index
2025-09-26 15:02:39,696 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:02:39,696 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C7B16A0>
2025-09-26 15:02:39,697 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:39,697 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:39,697 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:39,697 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:02:39,697 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,697 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:02:39,697 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,697 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:02:39,697 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:02:39,698 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:02:39,698 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,698 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:02:39,698 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:02:39,698 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:02:39,698 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:39,698 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,699 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:02:39,699 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:02:39,699 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:02:39,699 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:02:39,699 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:39,699 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,699 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:02:39,699 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:02:39,699 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:02:39,700 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:02:39,700 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:02:39,700 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,700 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:02:39,700 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:02:39,700 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:02:39,700 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:02:39,700 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:02:39,701 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:02:39,701 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,701 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:02:39,701 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,701 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:02:39,701 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:02:39,701 - DEBUG - on stmt: jump 194
2025-09-26 15:02:39,701 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:02:39,702 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C7B16A0>
2025-09-26 15:02:39,702 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:02:39,702 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:02:39,702 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:02:39,702 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:02:39,702 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:02:39,702 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:02:39,702 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C7B16A0>
2025-09-26 15:02:39,703 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:02:39,703 - DEBUG - on stmt: jump 208
2025-09-26 15:02:39,703 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:02:39,703 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C7B16A0>
2025-09-26 15:02:39,703 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:02:39,703 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:02:39,703 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:02:39,703 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C7B16A0>
2025-09-26 15:02:39,704 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:02:39,704 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:39,704 - DEBUG - first assign: stencil_index
2025-09-26 15:02:39,704 - DEBUG - replaced with: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:39,704 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:39,704 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:39,704 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:39,704 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,704 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,705 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:02:39,705 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:02:39,705 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:02:39,705 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C7B16A0>
2025-09-26 15:02:39,705 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:02:39,705 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,705 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,706 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:02:39,706 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:02:39,706 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C7B16A0>
2025-09-26 15:02:39,706 - DEBUG - on stmt: jump 251
2025-09-26 15:02:39,706 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:02:39,706 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C7B16A0>
2025-09-26 15:02:39,706 - DEBUG - on stmt: jump 257
2025-09-26 15:02:39,707 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:02:39,707 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C7B16A0>
2025-09-26 15:02:39,707 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:02:39,707 - DEBUG - on stmt: jump 257
2025-09-26 15:02:39,707 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:02:39,707 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C7B16A0>
2025-09-26 15:02:39,707 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:02:39,708 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:02:39,708 - DEBUG - replaced with: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:02:39,708 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:39,708 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:39,708 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:39,708 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,708 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,709 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:02:39,709 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:02:39,709 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:02:39,709 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C7B16A0>
2025-09-26 15:02:39,709 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:02:39,709 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,709 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,709 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:02:39,709 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:02:39,710 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C7B16A0>
2025-09-26 15:02:39,710 - DEBUG - on stmt: jump 299
2025-09-26 15:02:39,710 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:02:39,710 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C7B16A0>
2025-09-26 15:02:39,710 - DEBUG - on stmt: jump 305
2025-09-26 15:02:39,710 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:02:39,710 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C7B16A0>
2025-09-26 15:02:39,710 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:02:39,710 - DEBUG - on stmt: jump 305
2025-09-26 15:02:39,710 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:02:39,710 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C7B16A0>
2025-09-26 15:02:39,711 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,711 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,711 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:02:39,711 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:02:39,711 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C7B16A0>
2025-09-26 15:02:39,711 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,711 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:02:39,711 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,711 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,712 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:02:39,712 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,712 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:02:39,712 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:02:39,712 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:02:39,712 - DEBUG - on stmt: jump 413
2025-09-26 15:02:39,712 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:02:39,712 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C7B16A0>
2025-09-26 15:02:39,712 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,713 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:02:39,713 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,713 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,713 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:02:39,713 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,713 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:02:39,714 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:02:39,714 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:02:39,714 - DEBUG - on stmt: jump 413
2025-09-26 15:02:39,714 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:02:39,714 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C7B16A0>
2025-09-26 15:02:39,714 - DEBUG - on stmt: jump 194
2025-09-26 15:02:39,714 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002985C8F3E90>],
             257: [<numba.core.ir.Assign object at 0x000002985C8F2390>]})
2025-09-26 15:02:39,715 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:02:39,715 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C7B16A0>
2025-09-26 15:02:39,715 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:39,715 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:39,716 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:39,716 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:02:39,716 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,716 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:02:39,716 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,716 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:02:39,717 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:02:39,717 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:02:39,717 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,717 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:02:39,717 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:02:39,717 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:02:39,718 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:39,718 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,718 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:02:39,718 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:02:39,718 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:02:39,718 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:02:39,719 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:39,719 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,719 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:02:39,719 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:02:39,719 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:02:39,719 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:02:39,719 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:02:39,720 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,720 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:02:39,720 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:02:39,720 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:02:39,720 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:02:39,720 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:02:39,720 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:02:39,720 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,721 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:02:39,721 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,721 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:02:39,721 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:02:39,721 - DEBUG - on stmt: jump 194
2025-09-26 15:02:39,721 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:02:39,722 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C7B16A0>
2025-09-26 15:02:39,722 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:02:39,722 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:02:39,722 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:02:39,722 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:02:39,722 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:02:39,722 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:02:39,723 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C7B16A0>
2025-09-26 15:02:39,723 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:02:39,723 - DEBUG - on stmt: jump 208
2025-09-26 15:02:39,723 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:02:39,723 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C7B16A0>
2025-09-26 15:02:39,723 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:02:39,723 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:02:39,723 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:02:39,724 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C7B16A0>
2025-09-26 15:02:39,724 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:02:39,724 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:39,724 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:39,724 - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:39,724 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:39,724 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:39,724 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,725 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,725 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:02:39,725 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:02:39,725 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:02:39,725 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C7B16A0>
2025-09-26 15:02:39,725 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:02:39,725 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,725 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,726 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:02:39,726 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:02:39,726 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C7B16A0>
2025-09-26 15:02:39,726 - DEBUG - on stmt: jump 251
2025-09-26 15:02:39,726 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:02:39,726 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C7B16A0>
2025-09-26 15:02:39,726 - DEBUG - on stmt: jump 257
2025-09-26 15:02:39,726 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:02:39,727 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C7B16A0>
2025-09-26 15:02:39,727 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:02:39,727 - DEBUG - on stmt: jump 257
2025-09-26 15:02:39,727 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:02:39,727 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C7B16A0>
2025-09-26 15:02:39,727 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:02:39,727 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:02:39,727 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:39,728 - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:39,728 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:39,728 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:39,728 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:39,728 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,728 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,728 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:02:39,729 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:02:39,729 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:02:39,729 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C7B16A0>
2025-09-26 15:02:39,729 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:02:39,729 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,729 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,730 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:02:39,730 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:02:39,730 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C7B16A0>
2025-09-26 15:02:39,730 - DEBUG - on stmt: jump 299
2025-09-26 15:02:39,730 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:02:39,730 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C7B16A0>
2025-09-26 15:02:39,730 - DEBUG - on stmt: jump 305
2025-09-26 15:02:39,731 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:02:39,731 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C7B16A0>
2025-09-26 15:02:39,731 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:02:39,731 - DEBUG - on stmt: jump 305
2025-09-26 15:02:39,731 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:02:39,731 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C7B16A0>
2025-09-26 15:02:39,731 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,731 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,732 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:02:39,732 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:02:39,732 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C7B16A0>
2025-09-26 15:02:39,732 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,732 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:02:39,732 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,732 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,732 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:02:39,733 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,733 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:02:39,733 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:02:39,733 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:02:39,733 - DEBUG - on stmt: jump 413
2025-09-26 15:02:39,733 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:02:39,733 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C7B16A0>
2025-09-26 15:02:39,733 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,734 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:02:39,734 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,734 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,734 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:02:39,734 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,734 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:02:39,734 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:02:39,734 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:02:39,735 - DEBUG - on stmt: jump 413
2025-09-26 15:02:39,735 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:02:39,735 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C7B16A0>
2025-09-26 15:02:39,735 - DEBUG - on stmt: jump 194
2025-09-26 15:02:39,735 - DEBUG - Fix SSA violator on var x0
2025-09-26 15:02:39,735 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:02:39,735 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844910>
2025-09-26 15:02:39,736 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:39,736 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:39,736 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:39,736 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:02:39,736 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,736 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:02:39,736 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,736 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:02:39,736 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:02:39,737 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:02:39,737 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,737 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:02:39,737 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:02:39,737 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:02:39,737 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:39,737 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,738 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:02:39,738 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:02:39,738 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:02:39,738 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:02:39,738 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:39,738 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,738 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:02:39,738 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:02:39,739 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:02:39,739 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:02:39,739 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:02:39,739 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,739 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:02:39,739 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:02:39,739 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:02:39,739 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:02:39,739 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:02:39,739 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:02:39,740 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,740 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:02:39,740 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,740 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:02:39,740 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:02:39,740 - DEBUG - on stmt: jump 194
2025-09-26 15:02:39,740 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:02:39,741 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844910>
2025-09-26 15:02:39,741 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:02:39,741 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:02:39,741 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:02:39,741 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:02:39,741 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:02:39,741 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:02:39,741 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844910>
2025-09-26 15:02:39,741 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:02:39,742 - DEBUG - on stmt: jump 208
2025-09-26 15:02:39,742 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:02:39,742 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844910>
2025-09-26 15:02:39,742 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:02:39,742 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:02:39,742 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:02:39,742 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844910>
2025-09-26 15:02:39,743 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:02:39,743 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:39,743 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:39,743 - DEBUG - first assign: x0
2025-09-26 15:02:39,743 - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:39,744 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:39,744 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:39,744 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,744 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,744 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:02:39,744 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:02:39,744 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:02:39,745 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844910>
2025-09-26 15:02:39,745 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:02:39,745 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,745 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,745 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:02:39,745 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:02:39,745 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844910>
2025-09-26 15:02:39,745 - DEBUG - on stmt: jump 251
2025-09-26 15:02:39,746 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:02:39,746 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844910>
2025-09-26 15:02:39,746 - DEBUG - on stmt: jump 257
2025-09-26 15:02:39,746 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:02:39,746 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844910>
2025-09-26 15:02:39,746 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:02:39,746 - DEBUG - replaced with: x0.1 = const(int, 0)
2025-09-26 15:02:39,746 - DEBUG - on stmt: jump 257
2025-09-26 15:02:39,746 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:02:39,746 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844910>
2025-09-26 15:02:39,747 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:02:39,747 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:02:39,747 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:39,747 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:39,747 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:39,747 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,747 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,747 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:02:39,747 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:02:39,748 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:02:39,748 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844910>
2025-09-26 15:02:39,748 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:02:39,748 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,748 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,749 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:02:39,749 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:02:39,749 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844910>
2025-09-26 15:02:39,749 - DEBUG - on stmt: jump 299
2025-09-26 15:02:39,749 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:02:39,749 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844910>
2025-09-26 15:02:39,749 - DEBUG - on stmt: jump 305
2025-09-26 15:02:39,750 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:02:39,750 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844910>
2025-09-26 15:02:39,750 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:02:39,750 - DEBUG - on stmt: jump 305
2025-09-26 15:02:39,750 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:02:39,750 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844910>
2025-09-26 15:02:39,750 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,750 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,750 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:02:39,751 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:02:39,751 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844910>
2025-09-26 15:02:39,751 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,751 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:02:39,751 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,751 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,751 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:02:39,751 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,752 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:02:39,752 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:02:39,752 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:02:39,752 - DEBUG - on stmt: jump 413
2025-09-26 15:02:39,752 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:02:39,752 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844910>
2025-09-26 15:02:39,752 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,752 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:02:39,752 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,753 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,753 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:02:39,753 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,753 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:02:39,753 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:02:39,753 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:02:39,754 - DEBUG - on stmt: jump 413
2025-09-26 15:02:39,754 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:02:39,754 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844910>
2025-09-26 15:02:39,754 - DEBUG - on stmt: jump 194
2025-09-26 15:02:39,754 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002985C8F1A90>],
             251: [<numba.core.ir.Assign object at 0x000002985C8F2210>]})
2025-09-26 15:02:39,754 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:02:39,755 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844CD0>
2025-09-26 15:02:39,755 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:39,755 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:39,755 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:39,755 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:02:39,755 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,755 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:02:39,755 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,756 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:02:39,756 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:02:39,756 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:02:39,756 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,756 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:02:39,756 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:02:39,756 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:02:39,757 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:39,757 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,757 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:02:39,757 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:02:39,757 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:02:39,757 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:02:39,757 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:39,758 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,758 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:02:39,758 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:02:39,758 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:02:39,758 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:02:39,758 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:02:39,758 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,759 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:02:39,759 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:02:39,759 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:02:39,759 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:02:39,759 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:02:39,759 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:02:39,759 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,760 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:02:39,760 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,760 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:02:39,760 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:02:39,760 - DEBUG - on stmt: jump 194
2025-09-26 15:02:39,760 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:02:39,760 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844CD0>
2025-09-26 15:02:39,760 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:02:39,760 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:02:39,761 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:02:39,761 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:02:39,761 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:02:39,761 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:02:39,761 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844CD0>
2025-09-26 15:02:39,761 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:02:39,761 - DEBUG - on stmt: jump 208
2025-09-26 15:02:39,761 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:02:39,761 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844CD0>
2025-09-26 15:02:39,762 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:02:39,762 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:02:39,762 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:02:39,762 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844CD0>
2025-09-26 15:02:39,762 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:02:39,762 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:39,762 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:39,762 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:39,762 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:39,763 - DEBUG - find_def var='x0' stmt=$24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:39,763 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,763 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,763 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:02:39,763 - DEBUG - find_def var='x0' stmt=$phi32.0 = x0
2025-09-26 15:02:39,763 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:02:39,763 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:02:39,764 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844CD0>
2025-09-26 15:02:39,764 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:02:39,764 - DEBUG - find_def var='x0' stmt=$34compare_op.2 = x0 <= threshold
2025-09-26 15:02:39,764 - DEBUG - find_def_from_top label 209
2025-09-26 15:02:39,764 - DEBUG - idom 208 from label 209
2025-09-26 15:02:39,764 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:02:39,764 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,764 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,765 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:02:39,765 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:02:39,765 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844CD0>
2025-09-26 15:02:39,765 - DEBUG - on stmt: jump 251
2025-09-26 15:02:39,765 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:02:39,765 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844CD0>
2025-09-26 15:02:39,765 - DEBUG - on stmt: jump 257
2025-09-26 15:02:39,765 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:02:39,765 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844CD0>
2025-09-26 15:02:39,766 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:02:39,766 - DEBUG - on stmt: jump 257
2025-09-26 15:02:39,766 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:02:39,766 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844CD0>
2025-09-26 15:02:39,766 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:02:39,766 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:02:39,766 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:39,766 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:39,766 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:39,767 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,767 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,767 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:02:39,767 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:02:39,767 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:02:39,767 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844CD0>
2025-09-26 15:02:39,767 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:02:39,767 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,768 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,768 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:02:39,768 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:02:39,768 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844CD0>
2025-09-26 15:02:39,768 - DEBUG - on stmt: jump 299
2025-09-26 15:02:39,768 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:02:39,768 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844CD0>
2025-09-26 15:02:39,768 - DEBUG - on stmt: jump 305
2025-09-26 15:02:39,769 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:02:39,769 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844CD0>
2025-09-26 15:02:39,769 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:02:39,769 - DEBUG - on stmt: jump 305
2025-09-26 15:02:39,769 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:02:39,769 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844CD0>
2025-09-26 15:02:39,769 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,770 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,770 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:02:39,770 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:02:39,770 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844CD0>
2025-09-26 15:02:39,770 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,770 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:02:39,770 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,771 - DEBUG - find_def var='x0' stmt=$148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,771 - DEBUG - find_def_from_top label 309
2025-09-26 15:02:39,771 - DEBUG - idom 305 from label 309
2025-09-26 15:02:39,771 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:02:39,771 - DEBUG - find_def_from_top label 305
2025-09-26 15:02:39,771 - DEBUG - idom 257 from label 305
2025-09-26 15:02:39,771 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:02:39,772 - DEBUG - find_def_from_top label 257
2025-09-26 15:02:39,772 - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 257
2025-09-26 15:02:39,772 - DEBUG - find_def_from_bottom label 209
2025-09-26 15:02:39,772 - DEBUG - find_def_from_top label 209
2025-09-26 15:02:39,772 - DEBUG - idom 208 from label 209
2025-09-26 15:02:39,772 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:02:39,772 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:39,772 - DEBUG - find_def_from_bottom label 251
2025-09-26 15:02:39,772 - DEBUG - incoming_def x0.1 = const(int, 0)
2025-09-26 15:02:39,773 - DEBUG - find_def_from_bottom label 253
2025-09-26 15:02:39,773 - DEBUG - find_def_from_top label 253
2025-09-26 15:02:39,773 - DEBUG - idom 208 from label 253
2025-09-26 15:02:39,773 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:02:39,773 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:39,773 - DEBUG - replaced with: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,773 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,773 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:02:39,774 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,774 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:02:39,774 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:02:39,774 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:02:39,774 - DEBUG - on stmt: jump 413
2025-09-26 15:02:39,774 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:02:39,774 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844CD0>
2025-09-26 15:02:39,774 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,775 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:02:39,775 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,775 - DEBUG - find_def var='x0' stmt=$238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,775 - DEBUG - find_def_from_top label 323
2025-09-26 15:02:39,775 - DEBUG - idom 305 from label 323
2025-09-26 15:02:39,775 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:02:39,775 - DEBUG - find_def_from_top label 305
2025-09-26 15:02:39,775 - DEBUG - idom 257 from label 305
2025-09-26 15:02:39,776 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:02:39,776 - DEBUG - replaced with: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,776 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,776 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:02:39,776 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,776 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:02:39,777 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:02:39,777 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:02:39,777 - DEBUG - on stmt: jump 413
2025-09-26 15:02:39,777 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:02:39,777 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844CD0>
2025-09-26 15:02:39,777 - DEBUG - on stmt: jump 194
2025-09-26 15:02:39,778 - DEBUG - Fix SSA violator on var x1
2025-09-26 15:02:39,778 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:02:39,778 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844F50>
2025-09-26 15:02:39,778 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:39,778 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:39,778 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:39,778 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:02:39,779 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,779 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:02:39,779 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,779 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:02:39,779 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:02:39,779 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:02:39,779 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,780 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:02:39,780 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:02:39,780 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:02:39,780 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:39,780 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,780 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:02:39,780 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:02:39,780 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:02:39,781 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:02:39,781 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:39,781 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,781 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:02:39,781 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:02:39,781 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:02:39,781 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:02:39,781 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:02:39,782 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,782 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:02:39,782 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:02:39,782 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:02:39,782 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:02:39,782 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:02:39,782 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:02:39,783 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,783 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:02:39,783 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,783 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:02:39,783 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:02:39,783 - DEBUG - on stmt: jump 194
2025-09-26 15:02:39,784 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:02:39,784 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844F50>
2025-09-26 15:02:39,784 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:02:39,784 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:02:39,784 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:02:39,784 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:02:39,784 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:02:39,785 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:02:39,785 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844F50>
2025-09-26 15:02:39,785 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:02:39,785 - DEBUG - on stmt: jump 208
2025-09-26 15:02:39,785 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:02:39,785 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844F50>
2025-09-26 15:02:39,785 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:02:39,785 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:02:39,785 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:02:39,786 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844F50>
2025-09-26 15:02:39,786 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:02:39,786 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:39,786 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:39,786 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:39,786 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:39,786 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,786 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,786 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:02:39,787 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:02:39,787 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:02:39,787 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844F50>
2025-09-26 15:02:39,787 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:02:39,787 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,787 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,787 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:02:39,787 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:02:39,787 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844F50>
2025-09-26 15:02:39,787 - DEBUG - on stmt: jump 251
2025-09-26 15:02:39,788 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:02:39,788 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844F50>
2025-09-26 15:02:39,788 - DEBUG - on stmt: jump 257
2025-09-26 15:02:39,788 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:02:39,788 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844F50>
2025-09-26 15:02:39,788 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:02:39,788 - DEBUG - on stmt: jump 257
2025-09-26 15:02:39,788 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:02:39,788 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844F50>
2025-09-26 15:02:39,789 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:02:39,789 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:02:39,789 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:02:39,789 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:39,789 - DEBUG - first assign: x1
2025-09-26 15:02:39,789 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:39,789 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:39,789 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:39,790 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,790 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,790 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:02:39,790 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:02:39,790 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:02:39,790 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844F50>
2025-09-26 15:02:39,790 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:02:39,790 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,790 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,791 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:02:39,791 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:02:39,791 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844F50>
2025-09-26 15:02:39,791 - DEBUG - on stmt: jump 299
2025-09-26 15:02:39,791 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:02:39,791 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844F50>
2025-09-26 15:02:39,791 - DEBUG - on stmt: jump 305
2025-09-26 15:02:39,791 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:02:39,791 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844F50>
2025-09-26 15:02:39,792 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:02:39,792 - DEBUG - replaced with: x1.1 = const(int, 0)
2025-09-26 15:02:39,792 - DEBUG - on stmt: jump 305
2025-09-26 15:02:39,792 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:02:39,792 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844F50>
2025-09-26 15:02:39,792 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,792 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,792 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:02:39,792 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:02:39,792 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844F50>
2025-09-26 15:02:39,793 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,793 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:02:39,793 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,793 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,793 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:02:39,793 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,793 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:02:39,794 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:02:39,794 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:02:39,794 - DEBUG - on stmt: jump 413
2025-09-26 15:02:39,794 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:02:39,794 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844F50>
2025-09-26 15:02:39,794 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,794 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:02:39,794 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,794 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,795 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:02:39,795 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,795 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:02:39,795 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:02:39,795 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:02:39,795 - DEBUG - on stmt: jump 413
2025-09-26 15:02:39,795 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:02:39,796 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985C844F50>
2025-09-26 15:02:39,796 - DEBUG - on stmt: jump 194
2025-09-26 15:02:39,796 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {257: [<numba.core.ir.Assign object at 0x000002985C8F1AF0>],
             299: [<numba.core.ir.Assign object at 0x000002985C8F2090>]})
2025-09-26 15:02:39,796 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:02:39,796 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844910>
2025-09-26 15:02:39,796 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:39,797 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:39,797 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:39,797 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:02:39,797 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,797 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:02:39,797 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,797 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:02:39,797 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:02:39,798 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:02:39,798 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,798 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:02:39,798 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:02:39,798 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:02:39,798 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:39,798 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,799 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:02:39,799 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:02:39,799 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:02:39,799 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:02:39,799 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:39,799 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,799 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:02:39,799 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:02:39,800 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:02:39,800 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:02:39,800 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:02:39,800 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,800 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:02:39,800 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:02:39,800 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:02:39,800 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:02:39,800 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:02:39,801 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:02:39,801 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,801 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:02:39,801 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,801 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:02:39,801 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:02:39,801 - DEBUG - on stmt: jump 194
2025-09-26 15:02:39,801 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:02:39,801 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844910>
2025-09-26 15:02:39,802 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:02:39,802 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:02:39,802 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:02:39,802 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:02:39,802 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:02:39,802 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:02:39,802 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844910>
2025-09-26 15:02:39,802 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:02:39,802 - DEBUG - on stmt: jump 208
2025-09-26 15:02:39,802 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:02:39,803 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844910>
2025-09-26 15:02:39,803 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:02:39,803 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:02:39,803 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:02:39,803 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844910>
2025-09-26 15:02:39,803 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:02:39,803 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:39,803 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:39,803 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:39,804 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:39,804 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,804 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,804 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:02:39,804 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:02:39,804 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:02:39,804 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844910>
2025-09-26 15:02:39,804 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:02:39,805 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,805 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,805 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:02:39,805 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:02:39,805 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844910>
2025-09-26 15:02:39,805 - DEBUG - on stmt: jump 251
2025-09-26 15:02:39,805 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:02:39,805 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844910>
2025-09-26 15:02:39,805 - DEBUG - on stmt: jump 257
2025-09-26 15:02:39,805 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:02:39,806 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844910>
2025-09-26 15:02:39,806 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:02:39,806 - DEBUG - on stmt: jump 257
2025-09-26 15:02:39,806 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:02:39,806 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844910>
2025-09-26 15:02:39,806 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:02:39,806 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:02:39,806 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:02:39,806 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:39,807 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:39,807 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:39,807 - DEBUG - find_def var='x1' stmt=$72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:39,807 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,807 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,807 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:02:39,807 - DEBUG - find_def var='x1' stmt=$phi80.0 = x1
2025-09-26 15:02:39,807 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:02:39,807 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:02:39,808 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844910>
2025-09-26 15:02:39,808 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:02:39,808 - DEBUG - find_def var='x1' stmt=$82compare_op.2 = x1 <= threshold
2025-09-26 15:02:39,808 - DEBUG - find_def_from_top label 261
2025-09-26 15:02:39,808 - DEBUG - idom 257 from label 261
2025-09-26 15:02:39,808 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:02:39,808 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,808 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,809 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:02:39,809 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:02:39,809 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844910>
2025-09-26 15:02:39,809 - DEBUG - on stmt: jump 299
2025-09-26 15:02:39,809 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:02:39,809 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844910>
2025-09-26 15:02:39,809 - DEBUG - on stmt: jump 305
2025-09-26 15:02:39,810 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:02:39,810 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844910>
2025-09-26 15:02:39,810 - DEBUG - on stmt: x1.1 = const(int, 0)
2025-09-26 15:02:39,810 - DEBUG - on stmt: jump 305
2025-09-26 15:02:39,810 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:02:39,810 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844910>
2025-09-26 15:02:39,810 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:02:39,811 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,811 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:02:39,811 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:02:39,811 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844910>
2025-09-26 15:02:39,811 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,811 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:02:39,811 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,812 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,812 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:02:39,812 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,812 - DEBUG - find_def var='x1' stmt=$190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,812 - DEBUG - find_def_from_top label 309
2025-09-26 15:02:39,812 - DEBUG - idom 305 from label 309
2025-09-26 15:02:39,812 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:02:39,812 - DEBUG - find_def_from_top label 305
2025-09-26 15:02:39,812 - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 305
2025-09-26 15:02:39,813 - DEBUG - find_def_from_bottom label 299
2025-09-26 15:02:39,813 - DEBUG - incoming_def x1.1 = const(int, 0)
2025-09-26 15:02:39,813 - DEBUG - find_def_from_bottom label 301
2025-09-26 15:02:39,813 - DEBUG - find_def_from_top label 301
2025-09-26 15:02:39,813 - DEBUG - idom 257 from label 301
2025-09-26 15:02:39,813 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:02:39,813 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:39,813 - DEBUG - find_def_from_bottom label 261
2025-09-26 15:02:39,813 - DEBUG - find_def_from_top label 261
2025-09-26 15:02:39,814 - DEBUG - idom 257 from label 261
2025-09-26 15:02:39,814 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:02:39,814 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:39,814 - DEBUG - replaced with: $190call.9 = call $166load_attr.6(x1.2, func=$166load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,814 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:02:39,814 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:02:39,814 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:02:39,814 - DEBUG - on stmt: jump 413
2025-09-26 15:02:39,814 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:02:39,815 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844910>
2025-09-26 15:02:39,815 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,815 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:02:39,815 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,815 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:39,815 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:02:39,815 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,815 - DEBUG - find_def var='x1' stmt=$280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,815 - DEBUG - find_def_from_top label 323
2025-09-26 15:02:39,816 - DEBUG - idom 305 from label 323
2025-09-26 15:02:39,816 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:02:39,816 - DEBUG - replaced with: $280call.9 = call $256load_attr.6(x1.2, func=$256load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:39,816 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:02:39,816 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:02:39,816 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:02:39,816 - DEBUG - on stmt: jump 413
2025-09-26 15:02:39,816 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:02:39,816 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985C844910>
2025-09-26 15:02:39,817 - DEBUG - on stmt: jump 194
2025-09-26 15:02:39,830 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с librosa: 'function' object has no attribute 'get_call_template'
2025-09-26 15:02:39,836 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 15:02:39,837 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 15:02:40,384 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\children-voice.mp3'>)))], 'idempotency_key': 'stainless-python-retry-c8210357-a009-4854-a921-838ca50c6b09', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:02:40,480 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:02:40,480 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-26 15:02:40,546 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002985CC15160>
2025-09-26 15:02:40,546 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002985C94D760> server_hostname='api.openai.com' timeout=5.0
2025-09-26 15:02:40,795 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002985C847890>
2025-09-26 15:02:40,796 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:02:40,796 - DEBUG - send_request_headers.complete
2025-09-26 15:02:40,796 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:02:40,798 - DEBUG - send_request_body.complete
2025-09-26 15:02:40,798 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:02:42,230 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:02:42 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'376'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'560'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_ccdb161afe2741acb2ec28316afaaea4'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=pvuFzrn8lIcMoHIOhLJ7.OMWOZDJrhY38ZgOvj63gjE-1758888162-1.0.1.1-gqjpkgewpWDsUQmq0RuRWzeCbmWQTxlEYb7RjIExqg.fJDu_ZaWQqjTy7WKsSUyxQRX4kRbSJGNzzIyjeU08wJw_fgDTgYi1QqVwfYxbXh4; path=/; expires=Fri, 26-Sep-25 12:32:42 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=8CSqDjeMjb7VgRwJ1LcYOqTZ_4m3BflUQdKR7TrPSaM-1758888162199-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529d1d29ab8d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:02:42,231 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:02:42,232 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:02:42,232 - DEBUG - receive_response_body.complete
2025-09-26 15:02:42,232 - DEBUG - response_closed.started
2025-09-26 15:02:42,232 - DEBUG - response_closed.complete
2025-09-26 15:02:42,233 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers([('date', 'Fri, 26 Sep 2025 12:02:42 GMT'), ('content-type', 'text/plain; charset=utf-8'), ('content-length', '1'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'yurisun'), ('openai-processing-ms', '376'), ('openai-project', 'proj_Llb21yVk5b2whxj0ZTkY3iYI'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '560'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-reset-requests', '120ms'), ('x-request-id', 'req_ccdb161afe2741acb2ec28316afaaea4'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=pvuFzrn8lIcMoHIOhLJ7.OMWOZDJrhY38ZgOvj63gjE-1758888162-1.0.1.1-gqjpkgewpWDsUQmq0RuRWzeCbmWQTxlEYb7RjIExqg.fJDu_ZaWQqjTy7WKsSUyxQRX4kRbSJGNzzIyjeU08wJw_fgDTgYi1QqVwfYxbXh4; path=/; expires=Fri, 26-Sep-25 12:32:42 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=8CSqDjeMjb7VgRwJ1LcYOqTZ_4m3BflUQdKR7TrPSaM-1758888162199-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '98529d1d29ab8d5e-HEL'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-09-26 15:02:42,233 - DEBUG - request_id: req_ccdb161afe2741acb2ec28316afaaea4
2025-09-26 15:02:42,233 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:02:42,233 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:02:42,234 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:02:42,234 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: '' (длина: 0)
2025-09-26 15:02:42,234 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 2 - альтернативный язык: en
2025-09-26 15:02:42,234 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\children-voice.mp3'>)))], 'idempotency_key': 'stainless-python-retry-b2c87441-6b75-4606-85f7-74155c5b3b17', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'en', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:02:42,235 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:02:42,235 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:02:42,236 - DEBUG - send_request_headers.complete
2025-09-26 15:02:42,236 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:02:42,237 - DEBUG - send_request_body.complete
2025-09-26 15:02:42,237 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:02:43,519 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:02:43 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'503'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'680'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_8cbb9ac730414f2e98df807b15a849cb'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529d262c4e8d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:02:43,519 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:02:43,520 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:02:43,520 - DEBUG - receive_response_body.complete
2025-09-26 15:02:43,520 - DEBUG - response_closed.started
2025-09-26 15:02:43,520 - DEBUG - response_closed.complete
2025-09-26 15:02:43,520 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:02:43 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '503', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '680', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_8cbb9ac730414f2e98df807b15a849cb', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529d262c4e8d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:02:43,521 - DEBUG - request_id: req_8cbb9ac730414f2e98df807b15a849cb
2025-09-26 15:02:43,521 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:02:43,521 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:02:43,521 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:02:43,522 - DEBUG - ТРАНСКРИПЦИЯ: Результат 2: '' (длина: 0)
2025-09-26 15:02:43,522 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\children-voice.mp3'>)))], 'idempotency_key': 'stainless-python-retry-3d574e33-b2bf-47ea-9b1e-d532f58af8ba', 'json_data': {'model': 'gpt-4o-transcribe', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:02:43,523 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:02:43,523 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:02:43,524 - DEBUG - send_request_headers.complete
2025-09-26 15:02:43,524 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:02:43,525 - DEBUG - send_request_body.complete
2025-09-26 15:02:43,525 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:02:46,179 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:02:46 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1775'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1964'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_f3400949a63a42b2a0c9f4c389ee8695'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529d2e3db58d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:02:46,179 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:02:46,180 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:02:46,180 - DEBUG - receive_response_body.complete
2025-09-26 15:02:46,180 - DEBUG - response_closed.started
2025-09-26 15:02:46,180 - DEBUG - response_closed.complete
2025-09-26 15:02:46,181 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:02:46 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1775', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1964', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_f3400949a63a42b2a0c9f4c389ee8695', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529d2e3db58d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:02:46,181 - DEBUG - request_id: req_f3400949a63a42b2a0c9f4c389ee8695
2025-09-26 15:02:46,181 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:02:46,182 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:02:46,182 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:02:46,182 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 4 - музыкальный промпт
2025-09-26 15:02:46,183 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\children-voice.mp3'>)))], 'idempotency_key': 'stainless-python-retry-faedfe38-4ecf-4a37-8640-2ddc9adf0de2', 'json_data': {'model': 'gpt-4o-transcribe', 'prompt': 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.', 'response_format': 'text'}}
2025-09-26 15:02:46,184 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:02:46,184 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:02:46,184 - DEBUG - send_request_headers.complete
2025-09-26 15:02:46,184 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:02:46,185 - DEBUG - send_request_body.complete
2025-09-26 15:02:46,186 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:02:47,228 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:02:47 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'320'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'487'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_60b9d3a0f3424cb0a5d1f268a3cae169'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529d3ed90c8d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:02:47,229 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:02:47,229 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:02:47,229 - DEBUG - receive_response_body.complete
2025-09-26 15:02:47,230 - DEBUG - response_closed.started
2025-09-26 15:02:47,230 - DEBUG - response_closed.complete
2025-09-26 15:02:47,230 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:02:47 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '320', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '487', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_60b9d3a0f3424cb0a5d1f268a3cae169', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529d3ed90c8d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:02:47,230 - DEBUG - request_id: req_60b9d3a0f3424cb0a5d1f268a3cae169
2025-09-26 15:02:47,231 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:02:47,231 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.'
2025-09-26 15:02:47,231 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:02:47,231 - DEBUG - ТРАНСКРИПЦИЯ: Результат музыкального промпта: '' (длина: 0)
2025-09-26 15:02:47,232 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 5 - английский язык с музыкальным промптом
2025-09-26 15:02:47,232 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\children-voice.mp3'>)))], 'idempotency_key': 'stainless-python-retry-cbfc3c83-9862-45a3-90d4-6df729f913bf', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'en', 'prompt': 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.', 'response_format': 'text'}}
2025-09-26 15:02:47,233 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:02:47,233 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:02:47,233 - DEBUG - send_request_headers.complete
2025-09-26 15:02:47,234 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:02:47,235 - DEBUG - send_request_body.complete
2025-09-26 15:02:47,235 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:02:47,932 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:02:47 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'458'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'478'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_10aa6475f555421eae67d1f6454bfd19'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529d4569ec8d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:02:47,932 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:02:47,932 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:02:47,933 - DEBUG - receive_response_body.complete
2025-09-26 15:02:47,933 - DEBUG - response_closed.started
2025-09-26 15:02:47,933 - DEBUG - response_closed.complete
2025-09-26 15:02:47,933 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:02:47 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '458', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '478', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_10aa6475f555421eae67d1f6454bfd19', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529d4569ec8d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:02:47,933 - DEBUG - request_id: req_10aa6475f555421eae67d1f6454bfd19
2025-09-26 15:02:47,934 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:02:47,934 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.'
2025-09-26 15:02:47,934 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:02:47,934 - DEBUG - ТРАНСКРИПЦИЯ: Результат английского музыкального промпта: '' (длина: 0)
2025-09-26 15:02:47,935 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:02:47,935 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:02:47,935 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:02:47,935 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\children-voice.mp3'>)))], 'idempotency_key': 'stainless-python-retry-705c5a31-e119-4c7f-a8c0-5e0e7474888f', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:02:47,936 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:02:47,936 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:02:47,937 - DEBUG - send_request_headers.complete
2025-09-26 15:02:47,937 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:02:47,938 - DEBUG - send_request_body.complete
2025-09-26 15:02:47,938 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:02:48,550 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:02:48 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'376'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'389'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_7cd27f08848e4c9c89bae1455198032f'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529d49cf458d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:02:48,551 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:02:48,551 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:02:48,551 - DEBUG - receive_response_body.complete
2025-09-26 15:02:48,552 - DEBUG - response_closed.started
2025-09-26 15:02:48,552 - DEBUG - response_closed.complete
2025-09-26 15:02:48,552 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:02:48 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '376', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '389', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_7cd27f08848e4c9c89bae1455198032f', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529d49cf458d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:02:48,552 - DEBUG - request_id: req_7cd27f08848e4c9c89bae1455198032f
2025-09-26 15:02:48,553 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:02:48,553 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:02:48,553 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:02:48,555 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\engine-on-the-spot.mp3
2025-09-26 15:02:48,555 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 2, 'overlap': 0.25, 'jobs': 4}
2025-09-26 15:02:48,555 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла: examples\engine-on-the-spot.mp3
2025-09-26 15:02:48,555 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 15:02:48,555 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 15:02:48,556 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\engine-on-the-spot.mp3
2025-09-26 15:02:49,096 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 15:02:49,097 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\engine-on-the-spot.mp3
2025-09-26 15:02:49,216 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	RESUME(arg=0, lineno=1137)
           4	LOAD_FAST(arg=0, lineno=1140)
           6	LOAD_CONST(arg=1, lineno=1140)
           8	BINARY_SUBSCR(arg=None, lineno=1140)
          12	STORE_FAST(arg=3, lineno=1140)
          14	LOAD_FAST(arg=1, lineno=1141)
          16	UNARY_NEGATIVE(arg=None, lineno=1141)
          18	LOAD_FAST(arg=3, lineno=1141)
          20	SWAP(arg=2, lineno=1141)
          22	COPY(arg=2, lineno=1141)
          24	COMPARE_OP(arg=58, lineno=1141)
          28	POP_JUMP_IF_FALSE(arg=6, lineno=1141)
          32	LOAD_FAST(arg=1, lineno=1141)
          34	COMPARE_OP(arg=58, lineno=1141)
          38	POP_JUMP_IF_FALSE(arg=5, lineno=1141)
          42	JUMP_FORWARD(arg=2, lineno=1141)
>         44	POP_TOP(arg=None, lineno=1141)
          46	JUMP_FORWARD(arg=2, lineno=1141)
>         48	LOAD_CONST(arg=1, lineno=1142)
          50	STORE_FAST(arg=3, lineno=1142)
>         52	LOAD_FAST(arg=0, lineno=1144)
          54	LOAD_CONST(arg=2, lineno=1144)
          56	BINARY_SUBSCR(arg=None, lineno=1144)
          60	STORE_FAST(arg=4, lineno=1144)
          62	LOAD_FAST(arg=1, lineno=1145)
          64	UNARY_NEGATIVE(arg=None, lineno=1145)
          66	LOAD_FAST(arg=4, lineno=1145)
          68	SWAP(arg=2, lineno=1145)
          70	COPY(arg=2, lineno=1145)
          72	COMPARE_OP(arg=58, lineno=1145)
          76	POP_JUMP_IF_FALSE(arg=6, lineno=1145)
          80	LOAD_FAST(arg=1, lineno=1145)
          82	COMPARE_OP(arg=58, lineno=1145)
          86	POP_JUMP_IF_FALSE(arg=5, lineno=1145)
          90	JUMP_FORWARD(arg=2, lineno=1145)
>         92	POP_TOP(arg=None, lineno=1145)
          94	JUMP_FORWARD(arg=2, lineno=1145)
>         96	LOAD_CONST(arg=1, lineno=1146)
          98	STORE_FAST(arg=4, lineno=1146)
>        100	LOAD_FAST(arg=2, lineno=1148)
         102	TO_BOOL(arg=None, lineno=1148)
         110	POP_JUMP_IF_FALSE(arg=45, lineno=1148)
         114	LOAD_GLOBAL(arg=0, lineno=1149)
         124	LOAD_ATTR(arg=2, lineno=1149)
         144	PUSH_NULL(arg=None, lineno=1149)
         146	LOAD_FAST(arg=3, lineno=1149)
         148	CALL(arg=1, lineno=1149)
         156	LOAD_GLOBAL(arg=0, lineno=1149)
         166	LOAD_ATTR(arg=2, lineno=1149)
         186	PUSH_NULL(arg=None, lineno=1149)
         188	LOAD_FAST(arg=4, lineno=1149)
         190	CALL(arg=1, lineno=1149)
         198	COMPARE_OP(arg=103, lineno=1149)
         202	RETURN_VALUE(arg=None, lineno=1149)
>        204	LOAD_GLOBAL(arg=0, lineno=1151)
         214	LOAD_ATTR(arg=4, lineno=1151)
         234	PUSH_NULL(arg=None, lineno=1151)
         236	LOAD_FAST(arg=3, lineno=1151)
         238	CALL(arg=1, lineno=1151)
         246	LOAD_GLOBAL(arg=0, lineno=1151)
         256	LOAD_ATTR(arg=4, lineno=1151)
         276	PUSH_NULL(arg=None, lineno=1151)
         278	LOAD_FAST(arg=4, lineno=1151)
         280	CALL(arg=1, lineno=1151)
         288	COMPARE_OP(arg=103, lineno=1151)
         292	RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:02:49,218 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:02:49,218 - DEBUG - stack: []
2025-09-26 15:02:49,218 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:02:49,219 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-09-26 15:02:49,219 - DEBUG - stack []
2025-09-26 15:02:49,219 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1137)
2025-09-26 15:02:49,219 - DEBUG - stack []
2025-09-26 15:02:49,220 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1140)
2025-09-26 15:02:49,220 - DEBUG - stack []
2025-09-26 15:02:49,220 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1140)
2025-09-26 15:02:49,220 - DEBUG - stack ['$x4.0']
2025-09-26 15:02:49,221 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-09-26 15:02:49,221 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-09-26 15:02:49,221 - DEBUG - dispatch pc=12, inst=STORE_FAST(arg=3, lineno=1140)
2025-09-26 15:02:49,221 - DEBUG - stack ['$8binary_subscr.2']
2025-09-26 15:02:49,221 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:02:49,222 - DEBUG - stack []
2025-09-26 15:02:49,222 - DEBUG - dispatch pc=16, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-09-26 15:02:49,222 - DEBUG - stack ['$threshold14.3']
2025-09-26 15:02:49,222 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=1141)
2025-09-26 15:02:49,222 - DEBUG - stack ['$16unary_negative.4']
2025-09-26 15:02:49,223 - DEBUG - dispatch pc=20, inst=SWAP(arg=2, lineno=1141)
2025-09-26 15:02:49,223 - DEBUG - stack ['$16unary_negative.4', '$x018.5']
2025-09-26 15:02:49,223 - DEBUG - dispatch pc=22, inst=COPY(arg=2, lineno=1141)
2025-09-26 15:02:49,223 - DEBUG - stack ['$x018.5', '$16unary_negative.4']
2025-09-26 15:02:49,223 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:02:49,223 - DEBUG - stack ['$x018.5', '$16unary_negative.4', '$x018.5']
2025-09-26 15:02:49,224 - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1141)
2025-09-26 15:02:49,224 - DEBUG - stack ['$x018.5', '$24compare_op.6']
2025-09-26 15:02:49,224 - DEBUG - end state. edges=[Edge(pc=32, stack=('$x018.5',), blockstack=(), npush=0), Edge(pc=44, stack=('$x018.5',), blockstack=(), npush=0)]
2025-09-26 15:02:49,224 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=44 nstack_initial=1)])
2025-09-26 15:02:49,224 - DEBUG - stack: ['$phi32.0']
2025-09-26 15:02:49,224 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-09-26 15:02:49,224 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:02:49,225 - DEBUG - stack ['$phi32.0']
2025-09-26 15:02:49,225 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:02:49,225 - DEBUG - stack ['$phi32.0', '$threshold32.1']
2025-09-26 15:02:49,225 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1141)
2025-09-26 15:02:49,225 - DEBUG - stack ['$34compare_op.2']
2025-09-26 15:02:49,225 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:49,225 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=1), State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:02:49,225 - DEBUG - stack: ['$phi44.0']
2025-09-26 15:02:49,226 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=1)
2025-09-26 15:02:49,226 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=1141)
2025-09-26 15:02:49,226 - DEBUG - stack ['$phi44.0']
2025-09-26 15:02:49,226 - DEBUG - dispatch pc=46, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:02:49,226 - DEBUG - stack []
2025-09-26 15:02:49,226 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:49,226 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:02:49,226 - DEBUG - stack: []
2025-09-26 15:02:49,227 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-09-26 15:02:49,227 - DEBUG - dispatch pc=42, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:02:49,227 - DEBUG - stack []
2025-09-26 15:02:49,227 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:49,227 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2025-09-26 15:02:49,227 - DEBUG - stack: []
2025-09-26 15:02:49,228 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-09-26 15:02:49,228 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1144)
2025-09-26 15:02:49,228 - DEBUG - stack []
2025-09-26 15:02:49,228 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=1144)
2025-09-26 15:02:49,228 - DEBUG - stack ['$x52.0']
2025-09-26 15:02:49,228 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-09-26 15:02:49,228 - DEBUG - stack ['$x52.0', '$const54.1.2']
2025-09-26 15:02:49,229 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=4, lineno=1144)
2025-09-26 15:02:49,229 - DEBUG - stack ['$56binary_subscr.2']
2025-09-26 15:02:49,229 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:02:49,229 - DEBUG - stack []
2025-09-26 15:02:49,229 - DEBUG - dispatch pc=64, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-09-26 15:02:49,229 - DEBUG - stack ['$threshold62.3']
2025-09-26 15:02:49,229 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=4, lineno=1145)
2025-09-26 15:02:49,229 - DEBUG - stack ['$64unary_negative.4']
2025-09-26 15:02:49,229 - DEBUG - dispatch pc=68, inst=SWAP(arg=2, lineno=1145)
2025-09-26 15:02:49,230 - DEBUG - stack ['$64unary_negative.4', '$x166.5']
2025-09-26 15:02:49,230 - DEBUG - dispatch pc=70, inst=COPY(arg=2, lineno=1145)
2025-09-26 15:02:49,230 - DEBUG - stack ['$x166.5', '$64unary_negative.4']
2025-09-26 15:02:49,230 - DEBUG - dispatch pc=72, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:02:49,230 - DEBUG - stack ['$x166.5', '$64unary_negative.4', '$x166.5']
2025-09-26 15:02:49,230 - DEBUG - dispatch pc=76, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1145)
2025-09-26 15:02:49,230 - DEBUG - stack ['$x166.5', '$72compare_op.6']
2025-09-26 15:02:49,231 - DEBUG - end state. edges=[Edge(pc=80, stack=('$x166.5',), blockstack=(), npush=0), Edge(pc=92, stack=('$x166.5',), blockstack=(), npush=0)]
2025-09-26 15:02:49,231 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:02:49,231 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:02:49,231 - DEBUG - stack: []
2025-09-26 15:02:49,231 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-09-26 15:02:49,231 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1142)
2025-09-26 15:02:49,232 - DEBUG - stack []
2025-09-26 15:02:49,232 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=3, lineno=1142)
2025-09-26 15:02:49,232 - DEBUG - stack ['$const48.0.1']
2025-09-26 15:02:49,232 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:49,232 - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:02:49,232 - DEBUG - stack: ['$phi80.0']
2025-09-26 15:02:49,233 - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-09-26 15:02:49,233 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:02:49,233 - DEBUG - stack ['$phi80.0']
2025-09-26 15:02:49,233 - DEBUG - dispatch pc=82, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:02:49,233 - DEBUG - stack ['$phi80.0', '$threshold80.1']
2025-09-26 15:02:49,233 - DEBUG - dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1145)
2025-09-26 15:02:49,234 - DEBUG - stack ['$82compare_op.2']
2025-09-26 15:02:49,234 - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:49,234 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:02:49,234 - DEBUG - stack: ['$phi92.0']
2025-09-26 15:02:49,234 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=1)
2025-09-26 15:02:49,234 - DEBUG - dispatch pc=92, inst=POP_TOP(arg=None, lineno=1145)
2025-09-26 15:02:49,235 - DEBUG - stack ['$phi92.0']
2025-09-26 15:02:49,235 - DEBUG - dispatch pc=94, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:02:49,235 - DEBUG - stack []
2025-09-26 15:02:49,235 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:49,235 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:02:49,235 - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:02:49,236 - DEBUG - stack: []
2025-09-26 15:02:49,236 - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-09-26 15:02:49,236 - DEBUG - dispatch pc=90, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:02:49,236 - DEBUG - stack []
2025-09-26 15:02:49,236 - DEBUG - end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:49,236 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-09-26 15:02:49,236 - DEBUG - stack: []
2025-09-26 15:02:49,237 - DEBUG - state.pc_initial: State(pc_initial=100 nstack_initial=0)
2025-09-26 15:02:49,237 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=2, lineno=1148)
2025-09-26 15:02:49,237 - DEBUG - stack []
2025-09-26 15:02:49,237 - DEBUG - dispatch pc=102, inst=TO_BOOL(arg=None, lineno=1148)
2025-09-26 15:02:49,237 - DEBUG - stack ['$zero_pos100.0']
2025-09-26 15:02:49,237 - DEBUG - dispatch pc=110, inst=POP_JUMP_IF_FALSE(arg=45, lineno=1148)
2025-09-26 15:02:49,237 - DEBUG - stack ['$102to_bool.1']
2025-09-26 15:02:49,238 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=204, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:49,238 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:02:49,238 - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:02:49,238 - DEBUG - stack: []
2025-09-26 15:02:49,239 - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2025-09-26 15:02:49,239 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=1, lineno=1146)
2025-09-26 15:02:49,239 - DEBUG - stack []
2025-09-26 15:02:49,239 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=4, lineno=1146)
2025-09-26 15:02:49,239 - DEBUG - stack ['$const96.0.1']
2025-09-26 15:02:49,239 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:49,240 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:02:49,240 - DEBUG - stack: []
2025-09-26 15:02:49,240 - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2025-09-26 15:02:49,240 - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:02:49,240 - DEBUG - stack []
2025-09-26 15:02:49,240 - DEBUG - dispatch pc=124, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:02:49,240 - DEBUG - stack ['$114load_global.0']
2025-09-26 15:02:49,240 - DEBUG - dispatch pc=144, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:02:49,241 - DEBUG - stack ['$124load_attr.1']
2025-09-26 15:02:49,241 - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=3, lineno=1149)
2025-09-26 15:02:49,241 - DEBUG - stack ['$124load_attr.1', '$null$144.2']
2025-09-26 15:02:49,241 - DEBUG - dispatch pc=148, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:02:49,241 - DEBUG - stack ['$124load_attr.1', '$null$144.2', '$x0146.3']
2025-09-26 15:02:49,241 - DEBUG - dispatch pc=156, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:02:49,241 - DEBUG - stack ['$148call.4']
2025-09-26 15:02:49,241 - DEBUG - dispatch pc=166, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:02:49,242 - DEBUG - stack ['$148call.4', '$156load_global.5']
2025-09-26 15:02:49,242 - DEBUG - dispatch pc=186, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:02:49,242 - DEBUG - stack ['$148call.4', '$166load_attr.6']
2025-09-26 15:02:49,242 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=4, lineno=1149)
2025-09-26 15:02:49,242 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7']
2025-09-26 15:02:49,242 - DEBUG - dispatch pc=190, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:02:49,243 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7', '$x1188.8']
2025-09-26 15:02:49,243 - DEBUG - dispatch pc=198, inst=COMPARE_OP(arg=103, lineno=1149)
2025-09-26 15:02:49,243 - DEBUG - stack ['$148call.4', '$190call.9']
2025-09-26 15:02:49,243 - DEBUG - dispatch pc=202, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-09-26 15:02:49,243 - DEBUG - stack ['$198compare_op.10']
2025-09-26 15:02:49,243 - DEBUG - end state. edges=[]
2025-09-26 15:02:49,243 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:02:49,244 - DEBUG - stack: []
2025-09-26 15:02:49,244 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=0)
2025-09-26 15:02:49,244 - DEBUG - dispatch pc=204, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:02:49,244 - DEBUG - stack []
2025-09-26 15:02:49,244 - DEBUG - dispatch pc=214, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:02:49,244 - DEBUG - stack ['$204load_global.0']
2025-09-26 15:02:49,244 - DEBUG - dispatch pc=234, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:02:49,245 - DEBUG - stack ['$214load_attr.1']
2025-09-26 15:02:49,245 - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=3, lineno=1151)
2025-09-26 15:02:49,245 - DEBUG - stack ['$214load_attr.1', '$null$234.2']
2025-09-26 15:02:49,245 - DEBUG - dispatch pc=238, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:02:49,245 - DEBUG - stack ['$214load_attr.1', '$null$234.2', '$x0236.3']
2025-09-26 15:02:49,246 - DEBUG - dispatch pc=246, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:02:49,246 - DEBUG - stack ['$238call.4']
2025-09-26 15:02:49,246 - DEBUG - dispatch pc=256, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:02:49,246 - DEBUG - stack ['$238call.4', '$246load_global.5']
2025-09-26 15:02:49,246 - DEBUG - dispatch pc=276, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:02:49,246 - DEBUG - stack ['$238call.4', '$256load_attr.6']
2025-09-26 15:02:49,247 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=4, lineno=1151)
2025-09-26 15:02:49,247 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7']
2025-09-26 15:02:49,247 - DEBUG - dispatch pc=280, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:02:49,247 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7', '$x1278.8']
2025-09-26 15:02:49,247 - DEBUG - dispatch pc=288, inst=COMPARE_OP(arg=103, lineno=1151)
2025-09-26 15:02:49,248 - DEBUG - stack ['$238call.4', '$280call.9']
2025-09-26 15:02:49,248 - DEBUG - dispatch pc=292, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:02:49,248 - DEBUG - stack ['$288compare_op.10']
2025-09-26 15:02:49,248 - DEBUG - end state. edges=[]
2025-09-26 15:02:49,248 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:02:49,248 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:02:49,249 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=1): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=204 nstack_initial=0): set()})
2025-09-26 15:02:49,249 - DEBUG - defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi44.0': State(pc_initial=0 nstack_initial=0),
 '$phi80.0': State(pc_initial=52 nstack_initial=0),
 '$phi92.0': State(pc_initial=52 nstack_initial=0)}
2025-09-26 15:02:49,250 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:02:49,250 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:02:49,250 - DEBUG - keep phismap: {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
 '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}}
2025-09-26 15:02:49,251 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$x018.5'},
             State(pc_initial=52 nstack_initial=0): {'$phi80.0': '$x166.5'}})
2025-09-26 15:02:49,251 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:02:49,251 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'value': '$8binary_subscr.2'}), (14, {'res': '$threshold14.3'}), (16, {'value': '$threshold14.3', 'res': '$16unary_negative.4'}), (18, {'res': '$x018.5'}), (24, {'lhs': '$16unary_negative.4', 'rhs': '$x018.5', 'res': '$24compare_op.6'}), (28, {'pred': '$24compare_op.6'})), outgoing_phis={'$phi32.0': '$x018.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$x018.5',), 44: ('$x018.5',)})
2025-09-26 15:02:49,252 - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'res': '$threshold32.1'}), (34, {'lhs': '$phi32.0', 'rhs': '$threshold32.1', 'res': '$34compare_op.2'}), (38, {'pred': '$34compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 52: ()})
2025-09-26 15:02:49,252 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ()})
2025-09-26 15:02:49,252 - DEBUG - block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((46, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:02:49,252 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$const48.0.1'}), (50, {'value': '$const48.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:02:49,252 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$x52.0'}), (54, {'res': '$const54.1.2'}), (56, {'index': '$const54.1.2', 'target': '$x52.0', 'res': '$56binary_subscr.2'}), (60, {'value': '$56binary_subscr.2'}), (62, {'res': '$threshold62.3'}), (64, {'value': '$threshold62.3', 'res': '$64unary_negative.4'}), (66, {'res': '$x166.5'}), (72, {'lhs': '$64unary_negative.4', 'rhs': '$x166.5', 'res': '$72compare_op.6'}), (76, {'pred': '$72compare_op.6'})), outgoing_phis={'$phi80.0': '$x166.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$x166.5',), 92: ('$x166.5',)})
2025-09-26 15:02:49,253 - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$threshold80.1'}), (82, {'lhs': '$phi80.0', 'rhs': '$threshold80.1', 'res': '$82compare_op.2'}), (86, {'pred': '$82compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 100: ()})
2025-09-26 15:02:49,253 - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
2025-09-26 15:02:49,253 - DEBUG - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((94, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:02:49,253 - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$const96.0.1'}), (98, {'value': '$const96.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:02:49,253 - DEBUG - block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$zero_pos100.0'}), (102, {'val': '$zero_pos100.0', 'res': '$102to_bool.1'}), (110, {'pred': '$102to_bool.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 204: ()})
2025-09-26 15:02:49,254 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'idx': 0, 'res': '$114load_global.0'}), (124, {'item': '$114load_global.0', 'res': '$124load_attr.1'}), (144, {}), (146, {'res': '$x0146.3'}), (148, {'func': '$124load_attr.1', 'args': ['$x0146.3'], 'kw_names': None, 'res': '$148call.4'}), (156, {'idx': 0, 'res': '$156load_global.5'}), (166, {'item': '$156load_global.5', 'res': '$166load_attr.6'}), (186, {}), (188, {'res': '$x1188.8'}), (190, {'func': '$166load_attr.6', 'args': ['$x1188.8'], 'kw_names': None, 'res': '$190call.9'}), (198, {'lhs': '$148call.4', 'rhs': '$190call.9', 'res': '$198compare_op.10'}), (202, {'retval': '$198compare_op.10', 'castval': '$202return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:02:49,254 - DEBUG - block_infos State(pc_initial=204 nstack_initial=0):
AdaptBlockInfo(insts=((204, {'idx': 0, 'res': '$204load_global.0'}), (214, {'item': '$204load_global.0', 'res': '$214load_attr.1'}), (234, {}), (236, {'res': '$x0236.3'}), (238, {'func': '$214load_attr.1', 'args': ['$x0236.3'], 'kw_names': None, 'res': '$238call.4'}), (246, {'idx': 0, 'res': '$246load_global.5'}), (256, {'item': '$246load_global.5', 'res': '$256load_attr.6'}), (276, {}), (278, {'res': '$x1278.8'}), (280, {'func': '$256load_attr.6', 'args': ['$x1278.8'], 'kw_names': None, 'res': '$280call.9'}), (288, {'lhs': '$238call.4', 'rhs': '$280call.9', 'res': '$288compare_op.10'}), (292, {'retval': '$288compare_op.10', 'castval': '$292return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:02:49,255 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    x0 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$const6.1.1', 'x', 'x0']
    $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$16unary_negative.4', 'threshold']
    $24compare_op.6 = $16unary_negative.4 <= x0 ['$16unary_negative.4', '$24compare_op.6', 'x0']
    $bool28 = global(bool: <class 'bool'>)   ['$bool28']
    $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.6', '$28pred', '$bool28']
    $phi32.0 = x0                            ['$phi32.0', 'x0']
    branch $28pred, 32, 44                   ['$28pred']
label 32:
    $34compare_op.2 = $phi32.0 <= threshold  ['$34compare_op.2', '$phi32.0', 'threshold']
    $bool38 = global(bool: <class 'bool'>)   ['$bool38']
    $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.2', '$38pred', '$bool38']
    branch $38pred, 42, 52                   ['$38pred']
label 42:
    jump 48                                  []
label 44:
    jump 52                                  []
label 48:
    x0 = const(int, 0)                       ['x0']
    jump 52                                  []
label 52:
    $const54.1.2 = const(int, -1)            ['$const54.1.2']
    x1 = getitem(value=x, index=$const54.1.2, fn=<built-in function getitem>) ['$const54.1.2', 'x', 'x1']
    $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$64unary_negative.4', 'threshold']
    $72compare_op.6 = $64unary_negative.4 <= x1 ['$64unary_negative.4', '$72compare_op.6', 'x1']
    $bool76 = global(bool: <class 'bool'>)   ['$bool76']
    $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$72compare_op.6', '$76pred', '$bool76']
    $phi80.0 = x1                            ['$phi80.0', 'x1']
    branch $76pred, 80, 92                   ['$76pred']
label 80:
    $82compare_op.2 = $phi80.0 <= threshold  ['$82compare_op.2', '$phi80.0', 'threshold']
    $bool86 = global(bool: <class 'bool'>)   ['$bool86']
    $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$82compare_op.2', '$86pred', '$bool86']
    branch $86pred, 90, 100                  ['$86pred']
label 90:
    jump 96                                  []
label 92:
    jump 100                                 []
label 96:
    x1 = const(int, 0)                       ['x1']
    jump 100                                 []
label 100:
    $bool110 = global(bool: <class 'bool'>)  ['$bool110']
    $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$110pred', '$bool110', 'zero_pos']
    branch $110pred, 114, 204                ['$110pred']
label 114:
    $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$114load_global.0']
    $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit) ['$114load_global.0', '$124load_attr.1']
    $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$124load_attr.1', '$148call.4', 'x0']
    $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$156load_global.5']
    $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit) ['$156load_global.5', '$166load_attr.6']
    $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.6', '$190call.9', 'x1']
    $198compare_op.10 = $148call.4 != $190call.9 ['$148call.4', '$190call.9', '$198compare_op.10']
    $202return_value.11 = cast(value=$198compare_op.10) ['$198compare_op.10', '$202return_value.11']
    return $202return_value.11               ['$202return_value.11']
label 204:
    $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$204load_global.0']
    $214load_attr.1 = getattr(value=$204load_global.0, attr=sign) ['$204load_global.0', '$214load_attr.1']
    $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.1', '$238call.4', 'x0']
    $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$246load_global.5']
    $256load_attr.6 = getattr(value=$246load_global.5, attr=sign) ['$246load_global.5', '$256load_attr.6']
    $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$256load_attr.6', '$280call.9', 'x1']
    $288compare_op.10 = $238call.4 != $280call.9 ['$238call.4', '$280call.9', '$288compare_op.10']
    $292return_value.11 = cast(value=$288compare_op.10) ['$288compare_op.10', '$292return_value.11']
    return $292return_value.11               ['$292return_value.11']

2025-09-26 15:02:49,262 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1154)
           2	RESUME(arg=0, lineno=1154)
           4	LOAD_GLOBAL(arg=1, lineno=1170)
          14	LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
          16	LOAD_FAST(arg=2, lineno=1170)
          18	CALL(arg=3, lineno=1170)
          26	LOAD_FAST(arg=3, lineno=1170)
          28	LOAD_CONST(arg=1, lineno=1170)
          30	LOAD_CONST(arg=1, lineno=1170)
          32	STORE_SLICE(arg=None, lineno=1170)
          34	RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:02:49,262 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:02:49,263 - DEBUG - stack: []
2025-09-26 15:02:49,263 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:02:49,263 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1154)
2025-09-26 15:02:49,263 - DEBUG - stack []
2025-09-26 15:02:49,263 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1154)
2025-09-26 15:02:49,263 - DEBUG - stack []
2025-09-26 15:02:49,263 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1170)
2025-09-26 15:02:49,264 - DEBUG - stack []
2025-09-26 15:02:49,264 - DEBUG - dispatch pc=14, inst=LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
2025-09-26 15:02:49,264 - DEBUG - stack ['$4load_global.0', '$null$4.1']
2025-09-26 15:02:49,264 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=1170)
2025-09-26 15:02:49,264 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3']
2025-09-26 15:02:49,264 - DEBUG - dispatch pc=18, inst=CALL(arg=3, lineno=1170)
2025-09-26 15:02:49,264 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3', '$zero_pos16.4']
2025-09-26 15:02:49,265 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=3, lineno=1170)
2025-09-26 15:02:49,265 - DEBUG - stack ['$18call.5']
2025-09-26 15:02:49,265 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:02:49,265 - DEBUG - stack ['$18call.5', '$y26.6']
2025-09-26 15:02:49,265 - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:02:49,265 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1']
2025-09-26 15:02:49,265 - DEBUG - dispatch pc=32, inst=STORE_SLICE(arg=None, lineno=1170)
2025-09-26 15:02:49,265 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1', '$const30.8.1']
2025-09-26 15:02:49,266 - DEBUG - dispatch pc=34, inst=RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:02:49,266 - DEBUG - stack []
2025-09-26 15:02:49,266 - DEBUG - end state. edges=[]
2025-09-26 15:02:49,266 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:02:49,266 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-09-26 15:02:49,266 - DEBUG - defmap: {}
2025-09-26 15:02:49,266 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:02:49,266 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:02:49,267 - DEBUG - keep phismap: {}
2025-09-26 15:02:49,267 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-09-26 15:02:49,267 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:02:49,267 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res1': '$x14.2', 'res2': '$threshold14.3'}), (16, {'res': '$zero_pos16.4'}), (18, {'func': '$4load_global.0', 'args': ['$x14.2', '$threshold14.3', '$zero_pos16.4'], 'kw_names': None, 'res': '$18call.5'}), (26, {'res': '$y26.6'}), (28, {'res': '$const28.7.1'}), (30, {'res': '$const30.8.1'}), (32, {'start': '$const28.7.1', 'end': '$const30.8.1', 'container': '$y26.6', 'value': '$18call.5', 'res': '$32store_slice.10', 'slicevar': '$32store_slice.9'}), (34, {'retval': '$const34.11', 'castval': '$34return_const.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:02:49,268 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002985CC48E10>) ['$4load_global.0']
    $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const28.7.1 = const(NoneType, None)     ['$const28.7.1']
    $const30.8.1 = const(NoneType, None)     ['$const30.8.1']
    $32store_slice.9 = global(slice: <class 'slice'>) ['$32store_slice.9']
    $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$32store_slice.10', '$32store_slice.9', '$const28.7.1', '$const30.8.1']
    y[$32store_slice.10] = $18call.5         ['$18call.5', '$32store_slice.10', 'y']
    $const34.11 = const(NoneType, None)      ['$const34.11']
    $34return_const.12 = cast(value=$const34.11) ['$34return_const.12', '$const34.11']
    return $34return_const.12                ['$34return_const.12']

2025-09-26 15:02:49,272 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:02:49,272 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CE66850>
2025-09-26 15:02:49,273 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:49,273 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:49,273 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:49,273 - DEBUG - on stmt: y = arg(3, name=y)
2025-09-26 15:02:49,273 - DEBUG - on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002985CC48E10>)
2025-09-26 15:02:49,273 - DEBUG - on stmt: $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,274 - DEBUG - on stmt: $const28.7.1 = const(NoneType, None)
2025-09-26 15:02:49,274 - DEBUG - on stmt: $const30.8.1 = const(NoneType, None)
2025-09-26 15:02:49,274 - DEBUG - on stmt: $32store_slice.9 = global(slice: <class 'slice'>)
2025-09-26 15:02:49,274 - DEBUG - on stmt: $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,274 - DEBUG - on stmt: y[slice(None, None, None)] = $18call.5
2025-09-26 15:02:49,275 - DEBUG - on stmt: $const34.11 = const(NoneType, None)
2025-09-26 15:02:49,275 - DEBUG - on stmt: $34return_const.12 = cast(value=$const34.11)
2025-09-26 15:02:49,275 - DEBUG - on stmt: return $34return_const.12
2025-09-26 15:02:49,275 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.5': [(<numba.core.ir.Assign object at 0x000002985CEDCAD0>,
                            0)],
             '$32store_slice.10': [(<numba.core.ir.Assign object at 0x000002985CEDD010>,
                                    0)],
             '$32store_slice.9': [(<numba.core.ir.Assign object at 0x000002985CEDCEF0>,
                                   0)],
             '$34return_const.12': [(<numba.core.ir.Assign object at 0x000002985CEDD250>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000002985CEDC890>,
                                  0)],
             '$const28.7.1': [(<numba.core.ir.Assign object at 0x000002985CEDCCB0>,
                               0)],
             '$const30.8.1': [(<numba.core.ir.Assign object at 0x000002985CEDCDD0>,
                               0)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x000002985CEDD130>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002985CCA7EF0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002985C8DA2D0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000002985CCA7D70>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002985CCA7FB0>,
                           0)]})
2025-09-26 15:02:49,276 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002985CE66850>
2025-09-26 15:02:49,317 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=3, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=3, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	LOAD_CONST(arg=1, lineno=3)
          92	CALL_KW(arg=2, lineno=3)
          94	STORE_FAST(arg=4, lineno=3)
          96	LOAD_CONST(arg=2, lineno=4)
          98	LOAD_FAST(arg=4, lineno=4)
         100	LOAD_CONST(arg=0, lineno=4)
         102	LOAD_CONST(arg=3, lineno=4)
         104	STORE_SLICE(arg=None, lineno=4)
         106	LOAD_CONST(arg=2, lineno=5)
         108	LOAD_FAST(arg=4, lineno=5)
         110	LOAD_CONST(arg=2, lineno=5)
         112	LOAD_CONST(arg=0, lineno=5)
         114	STORE_SLICE(arg=None, lineno=5)
         116	LOAD_GLOBAL(arg=9, lineno=6)
         126	LOAD_GLOBAL(arg=11, lineno=6)
         136	LOAD_CONST(arg=2, lineno=6)
         138	LOAD_CONST(arg=4, lineno=6)
         140	CALL(arg=2, lineno=6)
         148	UNARY_NEGATIVE(arg=None, lineno=6)
         150	LOAD_FAST(arg=3, lineno=6)
         152	LOAD_CONST(arg=2, lineno=6)
         154	BINARY_SUBSCR(arg=None, lineno=6)
         158	LOAD_GLOBAL(arg=13, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	LOAD_CONST(arg=2, lineno=6)
         172	CALL(arg=2, lineno=6)
         180	BINARY_OP(arg=10, lineno=6)
         184	CALL(arg=2, lineno=6)
         192	GET_ITER(arg=None, lineno=6)
>        194	FOR_ITER(arg=5, lineno=6)
         198	STORE_FAST(arg=5, lineno=6)
         200	LOAD_CONST(arg=2, lineno=7)
         202	STORE_FAST(arg=6, lineno=7)
         204	JUMP_BACKWARD(arg=7, lineno=7)
>        208	END_FOR(arg=None, lineno=6)
         210	POP_TOP(arg=None, lineno=6)
         212	LOAD_FAST(arg=4, lineno=8)
         214	RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:02:49,318 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:02:49,319 - DEBUG - stack: []
2025-09-26 15:02:49,319 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:02:49,319 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-09-26 15:02:49,319 - DEBUG - stack []
2025-09-26 15:02:49,319 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2025-09-26 15:02:49,319 - DEBUG - stack []
2025-09-26 15:02:49,319 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2025-09-26 15:02:49,319 - DEBUG - stack []
2025-09-26 15:02:49,319 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2025-09-26 15:02:49,320 - DEBUG - stack ['$x4.0']
2025-09-26 15:02:49,320 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=3, lineno=2)
2025-09-26 15:02:49,320 - DEBUG - stack ['$6load_attr.1']
2025-09-26 15:02:49,320 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:02:49,320 - DEBUG - stack []
2025-09-26 15:02:49,320 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2025-09-26 15:02:49,320 - DEBUG - stack ['$28load_global.2']
2025-09-26 15:02:49,320 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=3, lineno=3)
2025-09-26 15:02:49,320 - DEBUG - stack ['$38load_attr.3', '$null$38.4']
2025-09-26 15:02:49,321 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:02:49,321 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5']
2025-09-26 15:02:49,321 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2025-09-26 15:02:49,321 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$60load_global.6']
2025-09-26 15:02:49,321 - DEBUG - dispatch pc=90, inst=LOAD_CONST(arg=1, lineno=3)
2025-09-26 15:02:49,321 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7']
2025-09-26 15:02:49,321 - DEBUG - dispatch pc=92, inst=CALL_KW(arg=2, lineno=3)
2025-09-26 15:02:49,321 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7', '$const90.8.1']
2025-09-26 15:02:49,321 - DEBUG - dispatch pc=94, inst=STORE_FAST(arg=4, lineno=3)
2025-09-26 15:02:49,321 - DEBUG - stack ['$92call_kw.9']
2025-09-26 15:02:49,322 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=2, lineno=4)
2025-09-26 15:02:49,322 - DEBUG - stack []
2025-09-26 15:02:49,322 - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=4)
2025-09-26 15:02:49,322 - DEBUG - stack ['$const96.10.2']
2025-09-26 15:02:49,322 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=0, lineno=4)
2025-09-26 15:02:49,322 - DEBUG - stack ['$const96.10.2', '$out098.11']
2025-09-26 15:02:49,322 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=3, lineno=4)
2025-09-26 15:02:49,322 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0']
2025-09-26 15:02:49,322 - DEBUG - dispatch pc=104, inst=STORE_SLICE(arg=None, lineno=4)
2025-09-26 15:02:49,323 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0', '$const102.13.3']
2025-09-26 15:02:49,323 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:02:49,323 - DEBUG - stack []
2025-09-26 15:02:49,323 - DEBUG - dispatch pc=108, inst=LOAD_FAST(arg=4, lineno=5)
2025-09-26 15:02:49,323 - DEBUG - stack ['$const106.16.2']
2025-09-26 15:02:49,323 - DEBUG - dispatch pc=110, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:02:49,323 - DEBUG - stack ['$const106.16.2', '$out0108.17']
2025-09-26 15:02:49,323 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=0, lineno=5)
2025-09-26 15:02:49,324 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2']
2025-09-26 15:02:49,324 - DEBUG - dispatch pc=114, inst=STORE_SLICE(arg=None, lineno=5)
2025-09-26 15:02:49,324 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2', '$const112.19.0']
2025-09-26 15:02:49,324 - DEBUG - dispatch pc=116, inst=LOAD_GLOBAL(arg=9, lineno=6)
2025-09-26 15:02:49,324 - DEBUG - stack []
2025-09-26 15:02:49,324 - DEBUG - dispatch pc=126, inst=LOAD_GLOBAL(arg=11, lineno=6)
2025-09-26 15:02:49,324 - DEBUG - stack ['$116load_global.22', '$null$116.23']
2025-09-26 15:02:49,325 - DEBUG - dispatch pc=136, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:02:49,325 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25']
2025-09-26 15:02:49,325 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=4, lineno=6)
2025-09-26 15:02:49,325 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2']
2025-09-26 15:02:49,325 - DEBUG - dispatch pc=140, inst=CALL(arg=2, lineno=6)
2025-09-26 15:02:49,325 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2', '$const138.27.4']
2025-09-26 15:02:49,325 - DEBUG - dispatch pc=148, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-09-26 15:02:49,326 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$140call.28']
2025-09-26 15:02:49,326 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=3, lineno=6)
2025-09-26 15:02:49,326 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29']
2025-09-26 15:02:49,326 - DEBUG - dispatch pc=152, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:02:49,326 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30']
2025-09-26 15:02:49,326 - DEBUG - dispatch pc=154, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-09-26 15:02:49,326 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30', '$const152.31.2']
2025-09-26 15:02:49,326 - DEBUG - dispatch pc=158, inst=LOAD_GLOBAL(arg=13, lineno=6)
2025-09-26 15:02:49,327 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32']
2025-09-26 15:02:49,327 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:02:49,327 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34']
2025-09-26 15:02:49,327 - DEBUG - dispatch pc=170, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:02:49,327 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2']
2025-09-26 15:02:49,327 - DEBUG - dispatch pc=172, inst=CALL(arg=2, lineno=6)
2025-09-26 15:02:49,327 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2', '$const170.36.2']
2025-09-26 15:02:49,328 - DEBUG - dispatch pc=180, inst=BINARY_OP(arg=10, lineno=6)
2025-09-26 15:02:49,328 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$172call.37']
2025-09-26 15:02:49,328 - DEBUG - dispatch pc=184, inst=CALL(arg=2, lineno=6)
2025-09-26 15:02:49,328 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$binop_sub180.38']
2025-09-26 15:02:49,328 - DEBUG - dispatch pc=192, inst=GET_ITER(arg=None, lineno=6)
2025-09-26 15:02:49,328 - DEBUG - stack ['$184call.39']
2025-09-26 15:02:49,328 - DEBUG - end state. edges=[Edge(pc=194, stack=('$192get_iter.40',), blockstack=(), npush=0)]
2025-09-26 15:02:49,328 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:02:49,328 - DEBUG - stack: ['$phi194.0']
2025-09-26 15:02:49,329 - DEBUG - state.pc_initial: State(pc_initial=194 nstack_initial=1)
2025-09-26 15:02:49,329 - DEBUG - dispatch pc=194, inst=FOR_ITER(arg=5, lineno=6)
2025-09-26 15:02:49,329 - DEBUG - stack ['$phi194.0']
2025-09-26 15:02:49,329 - DEBUG - end state. edges=[Edge(pc=208, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0), Edge(pc=198, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0)]
2025-09-26 15:02:49,329 - DEBUG - pending: deque([State(pc_initial=208 nstack_initial=2), State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:02:49,329 - DEBUG - stack: ['$phi208.0', '$phi208.1']
2025-09-26 15:02:49,329 - DEBUG - state.pc_initial: State(pc_initial=208 nstack_initial=2)
2025-09-26 15:02:49,329 - DEBUG - dispatch pc=208, inst=END_FOR(arg=None, lineno=6)
2025-09-26 15:02:49,329 - DEBUG - stack ['$phi208.0', '$phi208.1']
2025-09-26 15:02:49,330 - DEBUG - dispatch pc=210, inst=POP_TOP(arg=None, lineno=6)
2025-09-26 15:02:49,330 - DEBUG - stack ['$phi208.0']
2025-09-26 15:02:49,330 - DEBUG - dispatch pc=212, inst=LOAD_FAST(arg=4, lineno=8)
2025-09-26 15:02:49,330 - DEBUG - stack []
2025-09-26 15:02:49,330 - DEBUG - dispatch pc=214, inst=RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:02:49,330 - DEBUG - stack ['$out0212.2']
2025-09-26 15:02:49,330 - DEBUG - end state. edges=[]
2025-09-26 15:02:49,330 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:02:49,330 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2025-09-26 15:02:49,330 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2025-09-26 15:02:49,330 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=5, lineno=6)
2025-09-26 15:02:49,331 - DEBUG - stack ['$phi198.0', '$phi198.1']
2025-09-26 15:02:49,331 - DEBUG - dispatch pc=200, inst=LOAD_CONST(arg=2, lineno=7)
2025-09-26 15:02:49,331 - DEBUG - stack ['$phi198.0']
2025-09-26 15:02:49,331 - DEBUG - dispatch pc=202, inst=STORE_FAST(arg=6, lineno=7)
2025-09-26 15:02:49,331 - DEBUG - stack ['$phi198.0', '$const200.2.2']
2025-09-26 15:02:49,331 - DEBUG - dispatch pc=204, inst=JUMP_BACKWARD(arg=7, lineno=7)
2025-09-26 15:02:49,331 - DEBUG - stack ['$phi198.0']
2025-09-26 15:02:49,331 - DEBUG - end state. edges=[Edge(pc=194, stack=('$phi198.0',), blockstack=(), npush=0)]
2025-09-26 15:02:49,331 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:02:49,332 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:02:49,332 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=194 nstack_initial=1): {'$phi194.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=208 nstack_initial=2): set()})
2025-09-26 15:02:49,332 - DEBUG - defmap: {'$phi194.0': State(pc_initial=0 nstack_initial=0),
 '$phi198.1': State(pc_initial=194 nstack_initial=1),
 '$phi208.1': State(pc_initial=194 nstack_initial=1)}
2025-09-26 15:02:49,332 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi198.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:02:49,333 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:02:49,333 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:02:49,334 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:02:49,334 - DEBUG - keep phismap: {'$phi194.0': {('$192get_iter.40', State(pc_initial=0 nstack_initial=0))},
 '$phi198.1': {('$194for_iter.2', State(pc_initial=194 nstack_initial=1))}}
2025-09-26 15:02:49,334 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi194.0': '$192get_iter.40'},
             State(pc_initial=194 nstack_initial=1): {'$phi198.1': '$194for_iter.2'}})
2025-09-26 15:02:49,335 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:02:49,335 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.3'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (90, {'res': '$const90.8.1'}), (92, {'func': '$38load_attr.3', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': '$const90.8.1', 'res': '$92call_kw.9'}), (94, {'value': '$92call_kw.9'}), (96, {'res': '$const96.10.2'}), (98, {'res': '$out098.11'}), (100, {'res': '$const100.12.0'}), (102, {'res': '$const102.13.3'}), (104, {'start': '$const100.12.0', 'end': '$const102.13.3', 'container': '$out098.11', 'value': '$const96.10.2', 'res': '$104store_slice.15', 'slicevar': '$104store_slice.14'}), (106, {'res': '$const106.16.2'}), (108, {'res': '$out0108.17'}), (110, {'res': '$const110.18.2'}), (112, {'res': '$const112.19.0'}), (114, {'start': '$const110.18.2', 'end': '$const112.19.0', 'container': '$out0108.17', 'value': '$const106.16.2', 'res': '$114store_slice.21', 'slicevar': '$114store_slice.20'}), (116, {'idx': 4, 'res': '$116load_global.22'}), (126, {'idx': 5, 'res': '$126load_global.24'}), (136, {'res': '$const136.26.2'}), (138, {'res': '$const138.27.4'}), (140, {'func': '$126load_global.24', 'args': ['$const136.26.2', '$const138.27.4'], 'kw_names': None, 'res': '$140call.28'}), (148, {'value': '$140call.28', 'res': '$148unary_negative.29'}), (150, {'res': '$full_shape0150.30'}), (152, {'res': '$const152.31.2'}), (154, {'index': '$const152.31.2', 'target': '$full_shape0150.30', 'res': '$154binary_subscr.32'}), (158, {'idx': 6, 'res': '$158load_global.33'}), (168, {'res': '$const168.35.2'}), (170, {'res': '$const170.36.2'}), (172, {'func': '$158load_global.33', 'args': ['$const168.35.2', '$const170.36.2'], 'kw_names': None, 'res': '$172call.37'}), (180, {'op': '-', 'lhs': '$154binary_subscr.32', 'rhs': '$172call.37', 'res': '$binop_sub180.38'}), (184, {'func': '$116load_global.22', 'args': ['$148unary_negative.29', '$binop_sub180.38'], 'kw_names': None, 'res': '$184call.39'}), (192, {'value': '$184call.39', 'res': '$192get_iter.40'})), outgoing_phis={'$phi194.0': '$192get_iter.40'}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$192get_iter.40',)})
2025-09-26 15:02:49,335 - DEBUG - block_infos State(pc_initial=194 nstack_initial=1):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.0', 'pair': '$194for_iter.1', 'indval': '$194for_iter.2', 'pred': '$194for_iter.3'}),), outgoing_phis={'$phi198.1': '$194for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={208: ('$phi194.0', '$194for_iter.2'), 198: ('$phi194.0', '$194for_iter.2')})
2025-09-26 15:02:49,335 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$const200.2.2'}), (202, {'value': '$const200.2.2'}), (204, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$phi198.0',)})
2025-09-26 15:02:49,336 - DEBUG - block_infos State(pc_initial=208 nstack_initial=2):
AdaptBlockInfo(insts=((212, {'res': '$out0212.2'}), (214, {'retval': '$out0212.2', 'castval': '$214return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:02:49,336 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$28load_global.2']
    $38load_attr.3 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.3']
    $60load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool) ['$60load_global.6', '$70load_attr.7']
    $const_dtype = const(str, dtype)         ['$const_dtype']
    $const90.8.1 = build_tuple(items=[Var($const_dtype, <string>:3)]) ['$const90.8.1', '$const_dtype']
    out0 = call $38load_attr.3(full_shape0, func=$38load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.3', '$70load_attr.7', 'full_shape0', 'out0']
    $const96.10.2 = const(int, 0)            ['$const96.10.2']
    $const100.12.0 = const(NoneType, None)   ['$const100.12.0']
    $const102.13.3 = const(int, 1)           ['$const102.13.3']
    $104store_slice.14 = global(slice: <class 'slice'>) ['$104store_slice.14']
    $104store_slice.15 = call $104store_slice.14($const100.12.0, $const102.13.3, func=$104store_slice.14, args=(Var($const100.12.0, <string>:4), Var($const102.13.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$104store_slice.14', '$104store_slice.15', '$const100.12.0', '$const102.13.3']
    out0[$104store_slice.15] = $const96.10.2 ['$104store_slice.15', '$const96.10.2', 'out0']
    $const106.16.2 = const(int, 0)           ['$const106.16.2']
    $const110.18.2 = const(int, 0)           ['$const110.18.2']
    $const112.19.0 = const(NoneType, None)   ['$const112.19.0']
    $114store_slice.20 = global(slice: <class 'slice'>) ['$114store_slice.20']
    $114store_slice.21 = call $114store_slice.20($const110.18.2, $const112.19.0, func=$114store_slice.20, args=(Var($const110.18.2, <string>:5), Var($const112.19.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$114store_slice.20', '$114store_slice.21', '$const110.18.2', '$const112.19.0']
    out0[$114store_slice.21] = $const106.16.2 ['$114store_slice.21', '$const106.16.2', 'out0']
    $116load_global.22 = global(range: <class 'range'>) ['$116load_global.22']
    $126load_global.24 = global(min: <built-in function min>) ['$126load_global.24']
    $const136.26.2 = const(int, 0)           ['$const136.26.2']
    $const138.27.4 = const(int, -1)          ['$const138.27.4']
    $140call.28 = call $126load_global.24($const136.26.2, $const138.27.4, func=$126load_global.24, args=[Var($const136.26.2, <string>:6), Var($const138.27.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_global.24', '$140call.28', '$const136.26.2', '$const138.27.4']
    $148unary_negative.29 = unary(fn=<built-in function neg>, value=$140call.28) ['$140call.28', '$148unary_negative.29']
    $const152.31.2 = const(int, 0)           ['$const152.31.2']
    $154binary_subscr.32 = getitem(value=full_shape0, index=$const152.31.2, fn=<built-in function getitem>) ['$154binary_subscr.32', '$const152.31.2', 'full_shape0']
    $158load_global.33 = global(max: <built-in function max>) ['$158load_global.33']
    $const168.35.2 = const(int, 0)           ['$const168.35.2']
    $const170.36.2 = const(int, 0)           ['$const170.36.2']
    $172call.37 = call $158load_global.33($const168.35.2, $const170.36.2, func=$158load_global.33, args=[Var($const168.35.2, <string>:6), Var($const170.36.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$158load_global.33', '$172call.37', '$const168.35.2', '$const170.36.2']
    $binop_sub180.38 = $154binary_subscr.32 - $172call.37 ['$154binary_subscr.32', '$172call.37', '$binop_sub180.38']
    $184call.39 = call $116load_global.22($148unary_negative.29, $binop_sub180.38, func=$116load_global.22, args=[Var($148unary_negative.29, <string>:6), Var($binop_sub180.38, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.22', '$148unary_negative.29', '$184call.39', '$binop_sub180.38']
    $192get_iter.40 = getiter(value=$184call.39) ['$184call.39', '$192get_iter.40']
    $phi194.0 = $192get_iter.40              ['$192get_iter.40', '$phi194.0']
    jump 194                                 []
label 194:
    $194for_iter.1 = iternext(value=$phi194.0) ['$194for_iter.1', '$phi194.0']
    $194for_iter.2 = pair_first(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.2']
    $194for_iter.3 = pair_second(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.3']
    $phi198.1 = $194for_iter.2               ['$194for_iter.2', '$phi198.1']
    branch $194for_iter.3, 198, 208          ['$194for_iter.3']
label 198:
    index00 = $phi198.1                      ['$phi198.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 194                                 []
label 208:
    $214return_value.3 = cast(value=out0)    ['$214return_value.3', 'out0']
    return $214return_value.3                ['$214return_value.3']

2025-09-26 15:02:49,361 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:02:49,362 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC3CD60>
2025-09-26 15:02:49,362 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:49,362 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:49,362 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:49,362 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:02:49,362 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,363 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:02:49,363 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,363 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:02:49,363 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:02:49,363 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:02:49,363 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,364 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:02:49,364 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:02:49,364 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:02:49,364 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:49,364 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,365 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:02:49,365 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:02:49,365 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:02:49,365 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:02:49,365 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:49,365 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,366 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:02:49,366 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:02:49,366 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:02:49,366 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:02:49,366 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:02:49,366 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,367 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:02:49,367 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:02:49,367 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:02:49,367 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:02:49,367 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:02:49,367 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:02:49,368 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,368 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:02:49,368 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,368 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:02:49,368 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:02:49,368 - DEBUG - on stmt: jump 194
2025-09-26 15:02:49,368 - DEBUG - ==== SSA block analysis pass on 194
2025-09-26 15:02:49,369 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC3CD60>
2025-09-26 15:02:49,369 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:02:49,369 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:02:49,369 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:02:49,369 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:02:49,369 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:02:49,369 - DEBUG - ==== SSA block analysis pass on 198
2025-09-26 15:02:49,369 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC3CD60>
2025-09-26 15:02:49,369 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:02:49,369 - DEBUG - on stmt: jump 208
2025-09-26 15:02:49,370 - DEBUG - ==== SSA block analysis pass on 414
2025-09-26 15:02:49,370 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC3CD60>
2025-09-26 15:02:49,370 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:02:49,370 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:02:49,370 - DEBUG - ==== SSA block analysis pass on 208
2025-09-26 15:02:49,370 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC3CD60>
2025-09-26 15:02:49,370 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:02:49,370 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:49,370 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:49,371 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:49,371 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:49,371 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,371 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,371 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:02:49,371 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:02:49,371 - DEBUG - ==== SSA block analysis pass on 209
2025-09-26 15:02:49,371 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC3CD60>
2025-09-26 15:02:49,371 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:02:49,372 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,372 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,372 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:02:49,372 - DEBUG - ==== SSA block analysis pass on 241
2025-09-26 15:02:49,372 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC3CD60>
2025-09-26 15:02:49,372 - DEBUG - on stmt: jump 251
2025-09-26 15:02:49,372 - DEBUG - ==== SSA block analysis pass on 253
2025-09-26 15:02:49,372 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC3CD60>
2025-09-26 15:02:49,373 - DEBUG - on stmt: jump 257
2025-09-26 15:02:49,373 - DEBUG - ==== SSA block analysis pass on 251
2025-09-26 15:02:49,373 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC3CD60>
2025-09-26 15:02:49,373 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:02:49,373 - DEBUG - on stmt: jump 257
2025-09-26 15:02:49,373 - DEBUG - ==== SSA block analysis pass on 257
2025-09-26 15:02:49,373 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC3CD60>
2025-09-26 15:02:49,373 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:02:49,374 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:02:49,374 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:49,374 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:49,374 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:49,374 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,374 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,374 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:02:49,374 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:02:49,374 - DEBUG - ==== SSA block analysis pass on 261
2025-09-26 15:02:49,375 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC3CD60>
2025-09-26 15:02:49,375 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:02:49,375 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,375 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,375 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:02:49,375 - DEBUG - ==== SSA block analysis pass on 289
2025-09-26 15:02:49,375 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC3CD60>
2025-09-26 15:02:49,375 - DEBUG - on stmt: jump 299
2025-09-26 15:02:49,375 - DEBUG - ==== SSA block analysis pass on 301
2025-09-26 15:02:49,375 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC3CD60>
2025-09-26 15:02:49,376 - DEBUG - on stmt: jump 305
2025-09-26 15:02:49,376 - DEBUG - ==== SSA block analysis pass on 299
2025-09-26 15:02:49,376 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC3CD60>
2025-09-26 15:02:49,376 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:02:49,376 - DEBUG - on stmt: jump 305
2025-09-26 15:02:49,376 - DEBUG - ==== SSA block analysis pass on 305
2025-09-26 15:02:49,376 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC3CD60>
2025-09-26 15:02:49,376 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,376 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,376 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:02:49,377 - DEBUG - ==== SSA block analysis pass on 309
2025-09-26 15:02:49,377 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC3CD60>
2025-09-26 15:02:49,377 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,377 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:02:49,377 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,377 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,377 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:02:49,378 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,378 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:02:49,378 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:02:49,378 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:02:49,378 - DEBUG - on stmt: jump 413
2025-09-26 15:02:49,378 - DEBUG - ==== SSA block analysis pass on 323
2025-09-26 15:02:49,379 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC3CD60>
2025-09-26 15:02:49,379 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,379 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:02:49,379 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,379 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,379 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:02:49,379 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,380 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:02:49,380 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:02:49,380 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:02:49,380 - DEBUG - on stmt: jump 413
2025-09-26 15:02:49,380 - DEBUG - ==== SSA block analysis pass on 413
2025-09-26 15:02:49,380 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC3CD60>
2025-09-26 15:02:49,380 - DEBUG - on stmt: jump 194
2025-09-26 15:02:49,380 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104store_slice.14.1': [(<numba.core.ir.Assign object at 0x000002985CF6F0B0>,
                                       0)],
             '$104store_slice.15.1': [(<numba.core.ir.Assign object at 0x000002985CF6F1D0>,
                                       0)],
             '$110pred': [(<numba.core.ir.Assign object at 0x000002985CF45730>,
                           305)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x000002985CF49BB0>,
                                    309)],
             '$114store_slice.20.1': [(<numba.core.ir.Assign object at 0x000002985CF6F710>,
                                       0)],
             '$114store_slice.21.1': [(<numba.core.ir.Assign object at 0x000002985CF6F830>,
                                       0)],
             '$116load_global.22.1': [(<numba.core.ir.Assign object at 0x000002985CF6F950>,
                                       0)],
             '$124load_attr.1': [(<numba.core.ir.Assign object at 0x000002985CF4B2F0>,
                                  309)],
             '$126load_global.24.1': [(<numba.core.ir.Assign object at 0x000002985CF6FA70>,
                                       0)],
             '$140call.28.1': [(<numba.core.ir.Assign object at 0x000002985CF6FDD0>,
                                0)],
             '$148call.4': [(<numba.core.ir.Assign object at 0x000002985CF50A70>,
                             309)],
             '$148unary_negative.29.1': [(<numba.core.ir.Assign object at 0x000002985CF6FEF0>,
                                          0)],
             '$154binary_subscr.32.1': [(<numba.core.ir.Assign object at 0x000002985CF78230>,
                                         0)],
             '$156load_global.5': [(<numba.core.ir.Assign object at 0x000002985CF521B0>,
                                    309)],
             '$158load_global.33.1': [(<numba.core.ir.Assign object at 0x000002985CF78350>,
                                       0)],
             '$166load_attr.6': [(<numba.core.ir.Assign object at 0x000002985CF538F0>,
                                  309)],
             '$16unary_negative.4': [(<numba.core.ir.Assign object at 0x000002985CF06F30>,
                                      208)],
             '$172call.37.1': [(<numba.core.ir.Assign object at 0x000002985CF786B0>,
                                0)],
             '$184call.39.1': [(<numba.core.ir.Assign object at 0x000002985CF788F0>,
                                0)],
             '$190call.9': [(<numba.core.ir.Assign object at 0x000002985CF55070>,
                             309)],
             '$192get_iter.40.1': [(<numba.core.ir.Assign object at 0x000002985CF78A10>,
                                    0)],
             '$194for_iter.1.1': [(<numba.core.ir.Assign object at 0x000002985CF6FFB0>,
                                   194)],
             '$194for_iter.2.1': [(<numba.core.ir.Assign object at 0x000002985CF78B30>,
                                   194)],
             '$194for_iter.3.1': [(<numba.core.ir.Assign object at 0x000002985CF78C50>,
                                   194)],
             '$198compare_op.10': [(<numba.core.ir.Assign object at 0x000002985CF567B0>,
                                    309)],
             '$202return_value.11': [(<numba.core.ir.Assign object at 0x000002985CF57EF0>,
                                      309)],
             '$204load_global.0': [(<numba.core.ir.Assign object at 0x000002985CF603B0>,
                                    323)],
             '$214load_attr.1': [(<numba.core.ir.Assign object at 0x000002985CF61AF0>,
                                  323)],
             '$214return_value.3.1': [(<numba.core.ir.Assign object at 0x000002985CF79250>,
                                       414)],
             '$238call.4': [(<numba.core.ir.Assign object at 0x000002985CF63230>,
                             323)],
             '$246load_global.5': [(<numba.core.ir.Assign object at 0x000002985CF649B0>,
                                    323)],
             '$24compare_op.6': [(<numba.core.ir.Assign object at 0x000002985CF086B0>,
                                  208)],
             '$256load_attr.6': [(<numba.core.ir.Assign object at 0x000002985CF660F0>,
                                  323)],
             '$280call.9': [(<numba.core.ir.Assign object at 0x000002985CF67830>,
                             323)],
             '$288compare_op.10': [(<numba.core.ir.Assign object at 0x000002985CF68FB0>,
                                    323)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x000002985CF6E330>,
                                     0)],
             '$28pred': [(<numba.core.ir.Assign object at 0x000002985CF0B530>,
                          208)],
             '$292return_value.11': [(<numba.core.ir.Assign object at 0x000002985CF6A6F0>,
                                      323)],
             '$34compare_op.2': [(<numba.core.ir.Assign object at 0x000002985CF110D0>,
                                  209)],
             '$38load_attr.3.1': [(<numba.core.ir.Assign object at 0x000002985CF6E450>,
                                   0)],
             '$38pred': [(<numba.core.ir.Assign object at 0x000002985CF13F50>,
                          209)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x000002985CF6E630>,
                                     0)],
             '$64unary_negative.4': [(<numba.core.ir.Assign object at 0x000002985CF28EF0>,
                                      257)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x000002985CF6E750>,
                                   0)],
             '$72compare_op.6': [(<numba.core.ir.Assign object at 0x000002985CF2A630>,
                                  257)],
             '$76pred': [(<numba.core.ir.Assign object at 0x000002985CF2D4F0>,
                          257)],
             '$82compare_op.2': [(<numba.core.ir.Assign object at 0x000002985CF33050>,
                                  261)],
             '$86pred': [(<numba.core.ir.Assign object at 0x000002985CF35F10>,
                          261)],
             '$binop_sub180.38.1': [(<numba.core.ir.Assign object at 0x000002985CF787D0>,
                                     0)],
             '$bool110': [(<numba.core.ir.Assign object at 0x000002985CF3FFB0>,
                           305)],
             '$bool28': [(<numba.core.ir.Assign object at 0x000002985CF09DF0>,
                          208)],
             '$bool38': [(<numba.core.ir.Assign object at 0x000002985CF12810>,
                          209)],
             '$bool76': [(<numba.core.ir.Assign object at 0x000002985CF2BD70>,
                          257)],
             '$bool86': [(<numba.core.ir.Assign object at 0x000002985CF347D0>,
                          261)],
             '$const100.12.0.1': [(<numba.core.ir.Assign object at 0x000002985CF6EE70>,
                                   0)],
             '$const102.13.3.1': [(<numba.core.ir.Assign object at 0x000002985CF6EF90>,
                                   0)],
             '$const106.16.2.1': [(<numba.core.ir.Assign object at 0x000002985CF6F2F0>,
                                   0)],
             '$const110.18.2.1': [(<numba.core.ir.Assign object at 0x000002985CF6F4D0>,
                                   0)],
             '$const112.19.0.1': [(<numba.core.ir.Assign object at 0x000002985CF6F5F0>,
                                   0)],
             '$const136.26.2.1': [(<numba.core.ir.Assign object at 0x000002985CF6FB90>,
                                   0)],
             '$const138.27.4.1': [(<numba.core.ir.Assign object at 0x000002985CF6FCB0>,
                                   0)],
             '$const152.31.2.1': [(<numba.core.ir.Assign object at 0x000002985CF78110>,
                                   0)],
             '$const168.35.2.1': [(<numba.core.ir.Assign object at 0x000002985CF78470>,
                                   0)],
             '$const170.36.2.1': [(<numba.core.ir.Assign object at 0x000002985CF78590>,
                                   0)],
             '$const54.1.2': [(<numba.core.ir.Assign object at 0x000002985CF22030>,
                               257)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x000002985CF040B0>,
                              208)],
             '$const90.8.1.1': [(<numba.core.ir.Assign object at 0x000002985CF6E990>,
                                 0)],
             '$const96.10.2.1': [(<numba.core.ir.Assign object at 0x000002985CF6EC90>,
                                  0)],
             '$const_dtype.1': [(<numba.core.ir.Assign object at 0x000002985CF6E870>,
                                 0)],
             '$phi194.0.1': [(<numba.core.ir.Assign object at 0x000002985CF6E210>,
                              0)],
             '$phi198.1.1': [(<numba.core.ir.Assign object at 0x000002985CF78D10>,
                              194)],
             '$phi32.0': [(<numba.core.ir.Assign object at 0x000002985CF0CCB0>,
                           208)],
             '$phi80.0': [(<numba.core.ir.Assign object at 0x000002985CF2EC30>,
                           257)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x000002985CF6E150>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x000002985CF78E30>,
                          198)],
             'out0': [(<numba.core.ir.Assign object at 0x000002985CF6EAB0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x000002985CF028D0>,
                                208),
                               (<numba.core.ir.Assign object at 0x000002985CF6D4F0>,
                                257)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002985CF6DE50>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002985CF6DD30>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x000002985CF02930>, 208),
                    (<numba.core.ir.Assign object at 0x000002985CF1B1D0>, 251)],
             'x1': [(<numba.core.ir.Assign object at 0x000002985CF6D5B0>, 257),
                    (<numba.core.ir.Assign object at 0x000002985CF3D190>, 299)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002985CF6DF70>,
                           0)]})
2025-09-26 15:02:49,390 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002985CC3CD60>
2025-09-26 15:02:49,390 - DEBUG - Fix SSA violator on var stencil_index
2025-09-26 15:02:49,390 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:02:49,391 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,391 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:49,391 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:49,391 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:49,391 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:02:49,391 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,391 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:02:49,392 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,392 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:02:49,392 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:02:49,392 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:02:49,392 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,392 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:02:49,393 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:02:49,393 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:02:49,393 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:49,393 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,393 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:02:49,393 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:02:49,393 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:02:49,394 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:02:49,394 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:49,394 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,394 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:02:49,394 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:02:49,394 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:02:49,395 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:02:49,395 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:02:49,395 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,395 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:02:49,395 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:02:49,395 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:02:49,395 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:02:49,396 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:02:49,396 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:02:49,396 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,396 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:02:49,396 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,396 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:02:49,396 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:02:49,397 - DEBUG - on stmt: jump 194
2025-09-26 15:02:49,397 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:02:49,397 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,397 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:02:49,397 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:02:49,397 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:02:49,397 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:02:49,397 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:02:49,397 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:02:49,398 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,398 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:02:49,398 - DEBUG - on stmt: jump 208
2025-09-26 15:02:49,398 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:02:49,398 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,398 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:02:49,398 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:02:49,398 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:02:49,399 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,399 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:02:49,399 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:49,399 - DEBUG - first assign: stencil_index
2025-09-26 15:02:49,399 - DEBUG - replaced with: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:49,399 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:49,399 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:49,399 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:49,400 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,400 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,400 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:02:49,400 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:02:49,400 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:02:49,400 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,400 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:02:49,400 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,400 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,401 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:02:49,401 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:02:49,401 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,401 - DEBUG - on stmt: jump 251
2025-09-26 15:02:49,401 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:02:49,401 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,401 - DEBUG - on stmt: jump 257
2025-09-26 15:02:49,402 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:02:49,402 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,402 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:02:49,402 - DEBUG - on stmt: jump 257
2025-09-26 15:02:49,402 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:02:49,402 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,402 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:02:49,402 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:02:49,403 - DEBUG - replaced with: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:02:49,403 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:49,403 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:49,403 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:49,403 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,403 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,403 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:02:49,404 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:02:49,404 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:02:49,404 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,404 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:02:49,404 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,404 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,405 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:02:49,405 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:02:49,405 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,405 - DEBUG - on stmt: jump 299
2025-09-26 15:02:49,405 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:02:49,405 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,406 - DEBUG - on stmt: jump 305
2025-09-26 15:02:49,406 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:02:49,406 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,406 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:02:49,406 - DEBUG - on stmt: jump 305
2025-09-26 15:02:49,406 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:02:49,406 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,407 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,407 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,407 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:02:49,407 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:02:49,407 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,407 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,408 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:02:49,408 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,408 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,408 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:02:49,408 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,409 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:02:49,409 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:02:49,409 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:02:49,409 - DEBUG - on stmt: jump 413
2025-09-26 15:02:49,409 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:02:49,409 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,410 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,410 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:02:49,410 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,410 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,410 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:02:49,410 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,411 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:02:49,411 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:02:49,411 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:02:49,411 - DEBUG - on stmt: jump 413
2025-09-26 15:02:49,411 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:02:49,411 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,411 - DEBUG - on stmt: jump 194
2025-09-26 15:02:49,411 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002985CF7BB90>],
             257: [<numba.core.ir.Assign object at 0x000002985CF96270>]})
2025-09-26 15:02:49,411 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:02:49,412 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,412 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:49,412 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:49,412 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:49,412 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:02:49,412 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,412 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:02:49,412 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,413 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:02:49,413 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:02:49,413 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:02:49,413 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,413 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:02:49,413 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:02:49,413 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:02:49,414 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:49,414 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,414 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:02:49,414 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:02:49,414 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:02:49,414 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:02:49,414 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:49,414 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,414 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:02:49,415 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:02:49,415 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:02:49,415 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:02:49,415 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:02:49,415 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,415 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:02:49,415 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:02:49,415 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:02:49,416 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:02:49,416 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:02:49,416 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:02:49,416 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,416 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:02:49,416 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,416 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:02:49,416 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:02:49,416 - DEBUG - on stmt: jump 194
2025-09-26 15:02:49,417 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:02:49,417 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,417 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:02:49,417 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:02:49,417 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:02:49,417 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:02:49,418 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:02:49,418 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:02:49,418 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,418 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:02:49,418 - DEBUG - on stmt: jump 208
2025-09-26 15:02:49,418 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:02:49,418 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,419 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:02:49,419 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:02:49,419 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:02:49,419 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,419 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:02:49,419 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:49,419 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:49,419 - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:49,420 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:49,420 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:49,420 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,420 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,420 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:02:49,420 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:02:49,420 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:02:49,421 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,421 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:02:49,421 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,421 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,421 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:02:49,421 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:02:49,421 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,421 - DEBUG - on stmt: jump 251
2025-09-26 15:02:49,421 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:02:49,422 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,422 - DEBUG - on stmt: jump 257
2025-09-26 15:02:49,422 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:02:49,422 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,422 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:02:49,422 - DEBUG - on stmt: jump 257
2025-09-26 15:02:49,422 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:02:49,422 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,422 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:02:49,423 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:02:49,423 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:49,423 - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:49,423 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:49,423 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:49,423 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:49,423 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,424 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,424 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:02:49,424 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:02:49,424 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:02:49,424 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,424 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:02:49,424 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,424 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,424 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:02:49,425 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:02:49,425 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,425 - DEBUG - on stmt: jump 299
2025-09-26 15:02:49,425 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:02:49,425 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,425 - DEBUG - on stmt: jump 305
2025-09-26 15:02:49,425 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:02:49,425 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,425 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:02:49,425 - DEBUG - on stmt: jump 305
2025-09-26 15:02:49,426 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:02:49,426 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,426 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,426 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,426 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:02:49,426 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:02:49,426 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,426 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,427 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:02:49,427 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,427 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,427 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:02:49,427 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,427 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:02:49,427 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:02:49,427 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:02:49,427 - DEBUG - on stmt: jump 413
2025-09-26 15:02:49,428 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:02:49,428 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,428 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,428 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:02:49,428 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,428 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,428 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:02:49,428 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,429 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:02:49,429 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:02:49,429 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:02:49,429 - DEBUG - on stmt: jump 413
2025-09-26 15:02:49,429 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:02:49,429 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,429 - DEBUG - on stmt: jump 194
2025-09-26 15:02:49,429 - DEBUG - Fix SSA violator on var x0
2025-09-26 15:02:49,430 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:02:49,430 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,430 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:49,430 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:49,430 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:49,430 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:02:49,430 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,431 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:02:49,431 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,431 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:02:49,431 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:02:49,431 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:02:49,431 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,431 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:02:49,432 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:02:49,432 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:02:49,432 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:49,432 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,432 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:02:49,432 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:02:49,432 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:02:49,432 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:02:49,433 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:49,433 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,433 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:02:49,433 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:02:49,433 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:02:49,433 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:02:49,433 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:02:49,434 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,434 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:02:49,434 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:02:49,434 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:02:49,434 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:02:49,434 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:02:49,434 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:02:49,434 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,435 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:02:49,435 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,435 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:02:49,435 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:02:49,435 - DEBUG - on stmt: jump 194
2025-09-26 15:02:49,435 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:02:49,435 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,435 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:02:49,436 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:02:49,436 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:02:49,436 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:02:49,436 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:02:49,436 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:02:49,436 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,436 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:02:49,436 - DEBUG - on stmt: jump 208
2025-09-26 15:02:49,436 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:02:49,436 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,437 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:02:49,437 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:02:49,437 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:02:49,437 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,437 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:02:49,437 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:49,437 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:49,437 - DEBUG - first assign: x0
2025-09-26 15:02:49,437 - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:49,437 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:49,438 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:49,438 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,438 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,438 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:02:49,438 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:02:49,438 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:02:49,438 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,438 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:02:49,439 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,439 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,439 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:02:49,439 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:02:49,439 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,439 - DEBUG - on stmt: jump 251
2025-09-26 15:02:49,439 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:02:49,439 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,439 - DEBUG - on stmt: jump 257
2025-09-26 15:02:49,440 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:02:49,440 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,440 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:02:49,440 - DEBUG - replaced with: x0.1 = const(int, 0)
2025-09-26 15:02:49,440 - DEBUG - on stmt: jump 257
2025-09-26 15:02:49,440 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:02:49,440 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,440 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:02:49,440 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:02:49,440 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:49,441 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:49,441 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:49,441 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,441 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,441 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:02:49,441 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:02:49,441 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:02:49,441 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,441 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:02:49,441 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,442 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,442 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:02:49,442 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:02:49,442 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,442 - DEBUG - on stmt: jump 299
2025-09-26 15:02:49,442 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:02:49,442 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,442 - DEBUG - on stmt: jump 305
2025-09-26 15:02:49,442 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:02:49,442 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,443 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:02:49,443 - DEBUG - on stmt: jump 305
2025-09-26 15:02:49,443 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:02:49,443 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,443 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,443 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,443 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:02:49,443 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:02:49,444 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,444 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,444 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:02:49,444 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,444 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,444 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:02:49,445 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,445 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:02:49,445 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:02:49,445 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:02:49,445 - DEBUG - on stmt: jump 413
2025-09-26 15:02:49,445 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:02:49,445 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,445 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,446 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:02:49,446 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,446 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,446 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:02:49,446 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,446 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:02:49,446 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:02:49,446 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:02:49,447 - DEBUG - on stmt: jump 413
2025-09-26 15:02:49,447 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:02:49,447 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC3CE90>
2025-09-26 15:02:49,447 - DEBUG - on stmt: jump 194
2025-09-26 15:02:49,447 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002985CF7BC50>],
             251: [<numba.core.ir.Assign object at 0x000002985CF962D0>]})
2025-09-26 15:02:49,447 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:02:49,448 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,448 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:49,448 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:49,448 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:49,448 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:02:49,448 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,448 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:02:49,448 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,448 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:02:49,449 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:02:49,449 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:02:49,449 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,449 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:02:49,449 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:02:49,449 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:02:49,449 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:49,449 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,450 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:02:49,450 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:02:49,450 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:02:49,450 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:02:49,450 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:49,450 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,450 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:02:49,450 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:02:49,450 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:02:49,451 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:02:49,451 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:02:49,451 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,451 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:02:49,451 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:02:49,451 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:02:49,451 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:02:49,451 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:02:49,451 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:02:49,452 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,452 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:02:49,452 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,452 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:02:49,452 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:02:49,452 - DEBUG - on stmt: jump 194
2025-09-26 15:02:49,452 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:02:49,452 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,452 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:02:49,453 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:02:49,453 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:02:49,453 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:02:49,453 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:02:49,453 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:02:49,453 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,453 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:02:49,453 - DEBUG - on stmt: jump 208
2025-09-26 15:02:49,453 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:02:49,454 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,454 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:02:49,454 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:02:49,454 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:02:49,454 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,454 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:02:49,454 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:49,454 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:49,455 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:49,455 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:49,455 - DEBUG - find_def var='x0' stmt=$24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:49,455 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,455 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,455 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:02:49,455 - DEBUG - find_def var='x0' stmt=$phi32.0 = x0
2025-09-26 15:02:49,455 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:02:49,455 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:02:49,455 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,456 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:02:49,456 - DEBUG - find_def var='x0' stmt=$34compare_op.2 = x0 <= threshold
2025-09-26 15:02:49,456 - DEBUG - find_def_from_top label 209
2025-09-26 15:02:49,456 - DEBUG - idom 208 from label 209
2025-09-26 15:02:49,456 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:02:49,456 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,456 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,456 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:02:49,456 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:02:49,457 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,457 - DEBUG - on stmt: jump 251
2025-09-26 15:02:49,457 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:02:49,457 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,457 - DEBUG - on stmt: jump 257
2025-09-26 15:02:49,457 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:02:49,457 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,457 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:02:49,458 - DEBUG - on stmt: jump 257
2025-09-26 15:02:49,458 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:02:49,458 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,458 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:02:49,458 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:02:49,458 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:49,458 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:49,459 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:49,459 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,459 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,459 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:02:49,459 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:02:49,459 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:02:49,459 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,460 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:02:49,460 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,460 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,460 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:02:49,460 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:02:49,460 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,460 - DEBUG - on stmt: jump 299
2025-09-26 15:02:49,460 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:02:49,461 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,461 - DEBUG - on stmt: jump 305
2025-09-26 15:02:49,461 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:02:49,461 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,461 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:02:49,461 - DEBUG - on stmt: jump 305
2025-09-26 15:02:49,461 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:02:49,461 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,461 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,461 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,462 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:02:49,462 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:02:49,462 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,462 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,462 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:02:49,462 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,462 - DEBUG - find_def var='x0' stmt=$148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,463 - DEBUG - find_def_from_top label 309
2025-09-26 15:02:49,463 - DEBUG - idom 305 from label 309
2025-09-26 15:02:49,463 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:02:49,463 - DEBUG - find_def_from_top label 305
2025-09-26 15:02:49,463 - DEBUG - idom 257 from label 305
2025-09-26 15:02:49,463 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:02:49,463 - DEBUG - find_def_from_top label 257
2025-09-26 15:02:49,463 - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 257
2025-09-26 15:02:49,463 - DEBUG - find_def_from_bottom label 209
2025-09-26 15:02:49,463 - DEBUG - find_def_from_top label 209
2025-09-26 15:02:49,464 - DEBUG - idom 208 from label 209
2025-09-26 15:02:49,464 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:02:49,464 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:49,464 - DEBUG - find_def_from_bottom label 251
2025-09-26 15:02:49,464 - DEBUG - incoming_def x0.1 = const(int, 0)
2025-09-26 15:02:49,464 - DEBUG - find_def_from_bottom label 253
2025-09-26 15:02:49,464 - DEBUG - find_def_from_top label 253
2025-09-26 15:02:49,464 - DEBUG - idom 208 from label 253
2025-09-26 15:02:49,464 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:02:49,464 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:49,465 - DEBUG - replaced with: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,465 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,465 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:02:49,465 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,465 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:02:49,465 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:02:49,465 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:02:49,465 - DEBUG - on stmt: jump 413
2025-09-26 15:02:49,466 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:02:49,466 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,466 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,466 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:02:49,466 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,466 - DEBUG - find_def var='x0' stmt=$238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,466 - DEBUG - find_def_from_top label 323
2025-09-26 15:02:49,466 - DEBUG - idom 305 from label 323
2025-09-26 15:02:49,466 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:02:49,466 - DEBUG - find_def_from_top label 305
2025-09-26 15:02:49,467 - DEBUG - idom 257 from label 305
2025-09-26 15:02:49,467 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:02:49,467 - DEBUG - replaced with: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,467 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,467 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:02:49,467 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,467 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:02:49,467 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:02:49,468 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:02:49,468 - DEBUG - on stmt: jump 413
2025-09-26 15:02:49,468 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:02:49,468 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC3CE90>
2025-09-26 15:02:49,468 - DEBUG - on stmt: jump 194
2025-09-26 15:02:49,468 - DEBUG - Fix SSA violator on var x1
2025-09-26 15:02:49,468 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:02:49,468 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC5A7B0>
2025-09-26 15:02:49,468 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:49,469 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:49,469 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:49,469 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:02:49,469 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,469 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:02:49,469 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,469 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:02:49,469 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:02:49,469 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:02:49,469 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,470 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:02:49,470 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:02:49,470 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:02:49,470 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:49,470 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,470 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:02:49,470 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:02:49,471 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:02:49,471 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:02:49,471 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:49,471 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,471 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:02:49,471 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:02:49,471 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:02:49,472 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:02:49,472 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:02:49,472 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,472 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:02:49,472 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:02:49,472 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:02:49,472 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:02:49,472 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:02:49,473 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:02:49,473 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,473 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:02:49,473 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,473 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:02:49,473 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:02:49,473 - DEBUG - on stmt: jump 194
2025-09-26 15:02:49,474 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:02:49,474 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC5A7B0>
2025-09-26 15:02:49,474 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:02:49,474 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:02:49,474 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:02:49,474 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:02:49,474 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:02:49,474 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:02:49,474 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC5A7B0>
2025-09-26 15:02:49,475 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:02:49,475 - DEBUG - on stmt: jump 208
2025-09-26 15:02:49,475 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:02:49,475 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC5A7B0>
2025-09-26 15:02:49,475 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:02:49,475 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:02:49,475 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:02:49,475 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC5A7B0>
2025-09-26 15:02:49,475 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:02:49,475 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:49,476 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:49,476 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:49,476 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:49,476 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,476 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,476 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:02:49,476 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:02:49,476 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:02:49,476 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC5A7B0>
2025-09-26 15:02:49,477 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:02:49,477 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,477 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,477 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:02:49,477 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:02:49,477 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC5A7B0>
2025-09-26 15:02:49,477 - DEBUG - on stmt: jump 251
2025-09-26 15:02:49,477 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:02:49,477 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC5A7B0>
2025-09-26 15:02:49,477 - DEBUG - on stmt: jump 257
2025-09-26 15:02:49,478 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:02:49,478 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC5A7B0>
2025-09-26 15:02:49,478 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:02:49,478 - DEBUG - on stmt: jump 257
2025-09-26 15:02:49,478 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:02:49,478 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC5A7B0>
2025-09-26 15:02:49,478 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:02:49,478 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:02:49,479 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:02:49,479 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:49,479 - DEBUG - first assign: x1
2025-09-26 15:02:49,479 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:49,479 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:49,479 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:49,479 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,479 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,480 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:02:49,480 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:02:49,480 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:02:49,480 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC5A7B0>
2025-09-26 15:02:49,480 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:02:49,480 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,480 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,480 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:02:49,480 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:02:49,480 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC5A7B0>
2025-09-26 15:02:49,481 - DEBUG - on stmt: jump 299
2025-09-26 15:02:49,481 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:02:49,481 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC5A7B0>
2025-09-26 15:02:49,481 - DEBUG - on stmt: jump 305
2025-09-26 15:02:49,481 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:02:49,481 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC5A7B0>
2025-09-26 15:02:49,481 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:02:49,481 - DEBUG - replaced with: x1.1 = const(int, 0)
2025-09-26 15:02:49,481 - DEBUG - on stmt: jump 305
2025-09-26 15:02:49,481 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:02:49,482 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC5A7B0>
2025-09-26 15:02:49,482 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,482 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,482 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:02:49,482 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:02:49,482 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC5A7B0>
2025-09-26 15:02:49,482 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,482 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:02:49,482 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,482 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,483 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:02:49,483 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,483 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:02:49,483 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:02:49,483 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:02:49,483 - DEBUG - on stmt: jump 413
2025-09-26 15:02:49,483 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:02:49,483 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC5A7B0>
2025-09-26 15:02:49,484 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,484 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:02:49,484 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,484 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,484 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:02:49,484 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,485 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:02:49,485 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:02:49,485 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:02:49,485 - DEBUG - on stmt: jump 413
2025-09-26 15:02:49,485 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:02:49,485 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CC5A7B0>
2025-09-26 15:02:49,485 - DEBUG - on stmt: jump 194
2025-09-26 15:02:49,485 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {257: [<numba.core.ir.Assign object at 0x000002985CF96570>],
             299: [<numba.core.ir.Assign object at 0x000002985CF960F0>]})
2025-09-26 15:02:49,486 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:02:49,486 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC5A570>
2025-09-26 15:02:49,486 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:49,486 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:49,486 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:49,486 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:02:49,486 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,487 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:02:49,487 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,487 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:02:49,487 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:02:49,487 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:02:49,487 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,487 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:02:49,487 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:02:49,487 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:02:49,488 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:49,488 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,488 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:02:49,488 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:02:49,488 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:02:49,488 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:02:49,488 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:49,488 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,489 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:02:49,489 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:02:49,489 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:02:49,489 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:02:49,489 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:02:49,489 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,489 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:02:49,489 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:02:49,489 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:02:49,490 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:02:49,490 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:02:49,490 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:02:49,490 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,490 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:02:49,490 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,490 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:02:49,490 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:02:49,490 - DEBUG - on stmt: jump 194
2025-09-26 15:02:49,491 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:02:49,491 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC5A570>
2025-09-26 15:02:49,491 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:02:49,491 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:02:49,491 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:02:49,491 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:02:49,491 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:02:49,491 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:02:49,491 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC5A570>
2025-09-26 15:02:49,491 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:02:49,492 - DEBUG - on stmt: jump 208
2025-09-26 15:02:49,492 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:02:49,492 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC5A570>
2025-09-26 15:02:49,492 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:02:49,492 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:02:49,492 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:02:49,492 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC5A570>
2025-09-26 15:02:49,492 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:02:49,492 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:49,492 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:49,493 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:49,493 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:49,493 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,493 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,493 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:02:49,493 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:02:49,493 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:02:49,494 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC5A570>
2025-09-26 15:02:49,494 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:02:49,494 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,494 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,494 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:02:49,494 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:02:49,494 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC5A570>
2025-09-26 15:02:49,494 - DEBUG - on stmt: jump 251
2025-09-26 15:02:49,494 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:02:49,495 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC5A570>
2025-09-26 15:02:49,495 - DEBUG - on stmt: jump 257
2025-09-26 15:02:49,495 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:02:49,495 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC5A570>
2025-09-26 15:02:49,495 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:02:49,495 - DEBUG - on stmt: jump 257
2025-09-26 15:02:49,495 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:02:49,495 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC5A570>
2025-09-26 15:02:49,495 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:02:49,496 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:02:49,496 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:02:49,496 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:49,496 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:49,496 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:49,496 - DEBUG - find_def var='x1' stmt=$72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:49,496 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,496 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,496 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:02:49,497 - DEBUG - find_def var='x1' stmt=$phi80.0 = x1
2025-09-26 15:02:49,497 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:02:49,497 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:02:49,497 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC5A570>
2025-09-26 15:02:49,497 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:02:49,497 - DEBUG - find_def var='x1' stmt=$82compare_op.2 = x1 <= threshold
2025-09-26 15:02:49,497 - DEBUG - find_def_from_top label 261
2025-09-26 15:02:49,497 - DEBUG - idom 257 from label 261
2025-09-26 15:02:49,498 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:02:49,498 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,498 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,498 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:02:49,498 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:02:49,498 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC5A570>
2025-09-26 15:02:49,498 - DEBUG - on stmt: jump 299
2025-09-26 15:02:49,499 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:02:49,499 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC5A570>
2025-09-26 15:02:49,499 - DEBUG - on stmt: jump 305
2025-09-26 15:02:49,499 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:02:49,499 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC5A570>
2025-09-26 15:02:49,499 - DEBUG - on stmt: x1.1 = const(int, 0)
2025-09-26 15:02:49,499 - DEBUG - on stmt: jump 305
2025-09-26 15:02:49,499 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:02:49,500 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC5A570>
2025-09-26 15:02:49,500 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:02:49,500 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,500 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:02:49,500 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:02:49,500 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC5A570>
2025-09-26 15:02:49,500 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,501 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:02:49,501 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,501 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,501 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:02:49,501 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,501 - DEBUG - find_def var='x1' stmt=$190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,501 - DEBUG - find_def_from_top label 309
2025-09-26 15:02:49,501 - DEBUG - idom 305 from label 309
2025-09-26 15:02:49,501 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:02:49,502 - DEBUG - find_def_from_top label 305
2025-09-26 15:02:49,502 - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 305
2025-09-26 15:02:49,502 - DEBUG - find_def_from_bottom label 299
2025-09-26 15:02:49,502 - DEBUG - incoming_def x1.1 = const(int, 0)
2025-09-26 15:02:49,502 - DEBUG - find_def_from_bottom label 301
2025-09-26 15:02:49,502 - DEBUG - find_def_from_top label 301
2025-09-26 15:02:49,502 - DEBUG - idom 257 from label 301
2025-09-26 15:02:49,502 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:02:49,502 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:49,502 - DEBUG - find_def_from_bottom label 261
2025-09-26 15:02:49,503 - DEBUG - find_def_from_top label 261
2025-09-26 15:02:49,503 - DEBUG - idom 257 from label 261
2025-09-26 15:02:49,503 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:02:49,503 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:49,503 - DEBUG - replaced with: $190call.9 = call $166load_attr.6(x1.2, func=$166load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,503 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:02:49,503 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:02:49,503 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:02:49,504 - DEBUG - on stmt: jump 413
2025-09-26 15:02:49,504 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:02:49,504 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC5A570>
2025-09-26 15:02:49,504 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,504 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:02:49,504 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,504 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:49,504 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:02:49,504 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,505 - DEBUG - find_def var='x1' stmt=$280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,505 - DEBUG - find_def_from_top label 323
2025-09-26 15:02:49,505 - DEBUG - idom 305 from label 323
2025-09-26 15:02:49,505 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:02:49,505 - DEBUG - replaced with: $280call.9 = call $256load_attr.6(x1.2, func=$256load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:49,505 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:02:49,505 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:02:49,505 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:02:49,506 - DEBUG - on stmt: jump 413
2025-09-26 15:02:49,506 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:02:49,506 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CC5A570>
2025-09-26 15:02:49,506 - DEBUG - on stmt: jump 194
2025-09-26 15:02:49,519 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с librosa: 'function' object has no attribute 'get_call_template'
2025-09-26 15:02:49,525 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 15:02:49,526 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 15:02:49,526 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\engine-on-the-spot.mp3'>)))], 'idempotency_key': 'stainless-python-retry-214f0fbc-2022-4aec-9b7e-704250cc7e01', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:02:49,527 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:02:49,528 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:02:49,528 - DEBUG - send_request_headers.complete
2025-09-26 15:02:49,528 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:02:49,530 - DEBUG - send_request_body.complete
2025-09-26 15:02:49,530 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:02:50,799 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:02:50 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'685'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'698'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_161a92e671e046c6ab07a88fbac1c89f'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529d53bb128d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:02:50,800 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:02:50,800 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:02:50,801 - DEBUG - receive_response_body.complete
2025-09-26 15:02:50,801 - DEBUG - response_closed.started
2025-09-26 15:02:50,801 - DEBUG - response_closed.complete
2025-09-26 15:02:50,801 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:02:50 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '685', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '698', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_161a92e671e046c6ab07a88fbac1c89f', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529d53bb128d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:02:50,802 - DEBUG - request_id: req_161a92e671e046c6ab07a88fbac1c89f
2025-09-26 15:02:50,802 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:02:50,802 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:02:50,802 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:02:50,803 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: '' (длина: 0)
2025-09-26 15:02:50,803 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 2 - альтернативный язык: en
2025-09-26 15:02:50,803 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\engine-on-the-spot.mp3'>)))], 'idempotency_key': 'stainless-python-retry-6ccc7686-1bca-4e7c-ae65-2520edf7ce59', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'en', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:02:50,804 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:02:50,805 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:02:50,805 - DEBUG - send_request_headers.complete
2025-09-26 15:02:50,805 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:02:50,807 - DEBUG - send_request_body.complete
2025-09-26 15:02:50,807 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:02:51,929 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:02:51 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'658'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'672'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_e029512d73df4ed0b7674227f21bd880'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529d5bbd1d8d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:02:51,929 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:02:51,930 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:02:51,930 - DEBUG - receive_response_body.complete
2025-09-26 15:02:51,930 - DEBUG - response_closed.started
2025-09-26 15:02:51,930 - DEBUG - response_closed.complete
2025-09-26 15:02:51,930 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:02:51 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '658', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '672', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_e029512d73df4ed0b7674227f21bd880', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529d5bbd1d8d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:02:51,931 - DEBUG - request_id: req_e029512d73df4ed0b7674227f21bd880
2025-09-26 15:02:51,931 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:02:51,931 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:02:51,932 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:02:51,932 - DEBUG - ТРАНСКРИПЦИЯ: Результат 2: '' (длина: 0)
2025-09-26 15:02:51,933 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\engine-on-the-spot.mp3'>)))], 'idempotency_key': 'stainless-python-retry-b1dee491-c9a7-4495-a10d-e951e39b19a3', 'json_data': {'model': 'gpt-4o-transcribe', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:02:51,934 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:02:51,934 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:02:51,935 - DEBUG - send_request_headers.complete
2025-09-26 15:02:51,935 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:02:51,936 - DEBUG - send_request_body.complete
2025-09-26 15:02:51,937 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:02:53,135 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:02:53 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'670'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'711'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_e33e17faceb746ed88918b2fd4a4bcec'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529d62cec28d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:02:53,136 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:02:53,136 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:02:53,137 - DEBUG - receive_response_body.complete
2025-09-26 15:02:53,137 - DEBUG - response_closed.started
2025-09-26 15:02:53,137 - DEBUG - response_closed.complete
2025-09-26 15:02:53,137 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:02:53 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '670', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '711', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_e33e17faceb746ed88918b2fd4a4bcec', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529d62cec28d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:02:53,137 - DEBUG - request_id: req_e33e17faceb746ed88918b2fd4a4bcec
2025-09-26 15:02:53,138 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:02:53,138 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:02:53,138 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:02:53,138 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 4 - музыкальный промпт
2025-09-26 15:02:53,139 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\engine-on-the-spot.mp3'>)))], 'idempotency_key': 'stainless-python-retry-a7fd33b9-6090-49ba-a7cb-d275705c1911', 'json_data': {'model': 'gpt-4o-transcribe', 'prompt': 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.', 'response_format': 'text'}}
2025-09-26 15:02:53,139 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:02:53,140 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:02:53,140 - DEBUG - send_request_headers.complete
2025-09-26 15:02:53,140 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:02:53,141 - DEBUG - send_request_body.complete
2025-09-26 15:02:53,142 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:02:54,074 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:02:54 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'435'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'447'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_5c1ca39149804b42873441ca5be13ebf'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529d6a58a88d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:02:54,075 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:02:54,075 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:02:54,075 - DEBUG - receive_response_body.complete
2025-09-26 15:02:54,075 - DEBUG - response_closed.started
2025-09-26 15:02:54,075 - DEBUG - response_closed.complete
2025-09-26 15:02:54,076 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:02:54 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '435', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '447', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_5c1ca39149804b42873441ca5be13ebf', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529d6a58a88d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:02:54,076 - DEBUG - request_id: req_5c1ca39149804b42873441ca5be13ebf
2025-09-26 15:02:54,076 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:02:54,077 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.'
2025-09-26 15:02:54,077 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:02:54,077 - DEBUG - ТРАНСКРИПЦИЯ: Результат музыкального промпта: '' (длина: 0)
2025-09-26 15:02:54,077 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 5 - английский язык с музыкальным промптом
2025-09-26 15:02:54,078 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\engine-on-the-spot.mp3'>)))], 'idempotency_key': 'stainless-python-retry-21d2141c-994e-445d-adf9-20e755a88b0b', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'en', 'prompt': 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.', 'response_format': 'text'}}
2025-09-26 15:02:54,079 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:02:54,079 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:02:54,080 - DEBUG - send_request_headers.complete
2025-09-26 15:02:54,080 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:02:54,081 - DEBUG - send_request_body.complete
2025-09-26 15:02:54,081 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:02:55,173 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:02:55 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'611'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'623'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_bd1cd878dfe647c5861f616d03c61913'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529d702f708d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:02:55,174 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:02:55,174 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:02:55,174 - DEBUG - receive_response_body.complete
2025-09-26 15:02:55,174 - DEBUG - response_closed.started
2025-09-26 15:02:55,175 - DEBUG - response_closed.complete
2025-09-26 15:02:55,175 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:02:55 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '611', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '623', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_bd1cd878dfe647c5861f616d03c61913', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529d702f708d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:02:55,175 - DEBUG - request_id: req_bd1cd878dfe647c5861f616d03c61913
2025-09-26 15:02:55,175 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:02:55,176 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.'
2025-09-26 15:02:55,176 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:02:55,176 - DEBUG - ТРАНСКРИПЦИЯ: Результат английского музыкального промпта: '' (длина: 0)
2025-09-26 15:02:55,176 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:02:55,177 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:02:55,177 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:02:55,177 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\engine-on-the-spot.mp3'>)))], 'idempotency_key': 'stainless-python-retry-02903353-b991-4ef0-83dc-bb5da1ac4e5e', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:02:55,178 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:02:55,178 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:02:55,179 - DEBUG - send_request_headers.complete
2025-09-26 15:02:55,179 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:02:55,181 - DEBUG - send_request_body.complete
2025-09-26 15:02:55,181 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:02:56,122 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:02:56 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'459'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'470'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_2fcfcae4b9754462977feb0b6c51bf1d'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529d770f9c8d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:02:56,123 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:02:56,123 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:02:56,123 - DEBUG - receive_response_body.complete
2025-09-26 15:02:56,124 - DEBUG - response_closed.started
2025-09-26 15:02:56,124 - DEBUG - response_closed.complete
2025-09-26 15:02:56,124 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:02:56 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '459', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '470', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_2fcfcae4b9754462977feb0b6c51bf1d', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529d770f9c8d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:02:56,124 - DEBUG - request_id: req_2fcfcae4b9754462977feb0b6c51bf1d
2025-09-26 15:02:56,125 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:02:56,125 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:02:56,125 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:02:56,126 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\Incode - Know.mp3
2025-09-26 15:02:56,127 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 2, 'overlap': 0.25, 'jobs': 4}
2025-09-26 15:02:56,127 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла: examples\Incode - Know.mp3
2025-09-26 15:02:56,127 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 15:02:56,127 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 15:02:56,127 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\Incode - Know.mp3
2025-09-26 15:02:56,694 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 15:02:56,695 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\Incode - Know.mp3
2025-09-26 15:02:56,751 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	RESUME(arg=0, lineno=1137)
           4	LOAD_FAST(arg=0, lineno=1140)
           6	LOAD_CONST(arg=1, lineno=1140)
           8	BINARY_SUBSCR(arg=None, lineno=1140)
          12	STORE_FAST(arg=3, lineno=1140)
          14	LOAD_FAST(arg=1, lineno=1141)
          16	UNARY_NEGATIVE(arg=None, lineno=1141)
          18	LOAD_FAST(arg=3, lineno=1141)
          20	SWAP(arg=2, lineno=1141)
          22	COPY(arg=2, lineno=1141)
          24	COMPARE_OP(arg=58, lineno=1141)
          28	POP_JUMP_IF_FALSE(arg=6, lineno=1141)
          32	LOAD_FAST(arg=1, lineno=1141)
          34	COMPARE_OP(arg=58, lineno=1141)
          38	POP_JUMP_IF_FALSE(arg=5, lineno=1141)
          42	JUMP_FORWARD(arg=2, lineno=1141)
>         44	POP_TOP(arg=None, lineno=1141)
          46	JUMP_FORWARD(arg=2, lineno=1141)
>         48	LOAD_CONST(arg=1, lineno=1142)
          50	STORE_FAST(arg=3, lineno=1142)
>         52	LOAD_FAST(arg=0, lineno=1144)
          54	LOAD_CONST(arg=2, lineno=1144)
          56	BINARY_SUBSCR(arg=None, lineno=1144)
          60	STORE_FAST(arg=4, lineno=1144)
          62	LOAD_FAST(arg=1, lineno=1145)
          64	UNARY_NEGATIVE(arg=None, lineno=1145)
          66	LOAD_FAST(arg=4, lineno=1145)
          68	SWAP(arg=2, lineno=1145)
          70	COPY(arg=2, lineno=1145)
          72	COMPARE_OP(arg=58, lineno=1145)
          76	POP_JUMP_IF_FALSE(arg=6, lineno=1145)
          80	LOAD_FAST(arg=1, lineno=1145)
          82	COMPARE_OP(arg=58, lineno=1145)
          86	POP_JUMP_IF_FALSE(arg=5, lineno=1145)
          90	JUMP_FORWARD(arg=2, lineno=1145)
>         92	POP_TOP(arg=None, lineno=1145)
          94	JUMP_FORWARD(arg=2, lineno=1145)
>         96	LOAD_CONST(arg=1, lineno=1146)
          98	STORE_FAST(arg=4, lineno=1146)
>        100	LOAD_FAST(arg=2, lineno=1148)
         102	TO_BOOL(arg=None, lineno=1148)
         110	POP_JUMP_IF_FALSE(arg=45, lineno=1148)
         114	LOAD_GLOBAL(arg=0, lineno=1149)
         124	LOAD_ATTR(arg=2, lineno=1149)
         144	PUSH_NULL(arg=None, lineno=1149)
         146	LOAD_FAST(arg=3, lineno=1149)
         148	CALL(arg=1, lineno=1149)
         156	LOAD_GLOBAL(arg=0, lineno=1149)
         166	LOAD_ATTR(arg=2, lineno=1149)
         186	PUSH_NULL(arg=None, lineno=1149)
         188	LOAD_FAST(arg=4, lineno=1149)
         190	CALL(arg=1, lineno=1149)
         198	COMPARE_OP(arg=103, lineno=1149)
         202	RETURN_VALUE(arg=None, lineno=1149)
>        204	LOAD_GLOBAL(arg=0, lineno=1151)
         214	LOAD_ATTR(arg=4, lineno=1151)
         234	PUSH_NULL(arg=None, lineno=1151)
         236	LOAD_FAST(arg=3, lineno=1151)
         238	CALL(arg=1, lineno=1151)
         246	LOAD_GLOBAL(arg=0, lineno=1151)
         256	LOAD_ATTR(arg=4, lineno=1151)
         276	PUSH_NULL(arg=None, lineno=1151)
         278	LOAD_FAST(arg=4, lineno=1151)
         280	CALL(arg=1, lineno=1151)
         288	COMPARE_OP(arg=103, lineno=1151)
         292	RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:02:56,753 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:02:56,753 - DEBUG - stack: []
2025-09-26 15:02:56,753 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:02:56,753 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-09-26 15:02:56,753 - DEBUG - stack []
2025-09-26 15:02:56,753 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1137)
2025-09-26 15:02:56,753 - DEBUG - stack []
2025-09-26 15:02:56,754 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1140)
2025-09-26 15:02:56,754 - DEBUG - stack []
2025-09-26 15:02:56,754 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1140)
2025-09-26 15:02:56,754 - DEBUG - stack ['$x4.0']
2025-09-26 15:02:56,754 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-09-26 15:02:56,754 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-09-26 15:02:56,754 - DEBUG - dispatch pc=12, inst=STORE_FAST(arg=3, lineno=1140)
2025-09-26 15:02:56,754 - DEBUG - stack ['$8binary_subscr.2']
2025-09-26 15:02:56,755 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:02:56,755 - DEBUG - stack []
2025-09-26 15:02:56,755 - DEBUG - dispatch pc=16, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-09-26 15:02:56,755 - DEBUG - stack ['$threshold14.3']
2025-09-26 15:02:56,755 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=1141)
2025-09-26 15:02:56,755 - DEBUG - stack ['$16unary_negative.4']
2025-09-26 15:02:56,755 - DEBUG - dispatch pc=20, inst=SWAP(arg=2, lineno=1141)
2025-09-26 15:02:56,755 - DEBUG - stack ['$16unary_negative.4', '$x018.5']
2025-09-26 15:02:56,756 - DEBUG - dispatch pc=22, inst=COPY(arg=2, lineno=1141)
2025-09-26 15:02:56,756 - DEBUG - stack ['$x018.5', '$16unary_negative.4']
2025-09-26 15:02:56,756 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:02:56,756 - DEBUG - stack ['$x018.5', '$16unary_negative.4', '$x018.5']
2025-09-26 15:02:56,756 - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1141)
2025-09-26 15:02:56,756 - DEBUG - stack ['$x018.5', '$24compare_op.6']
2025-09-26 15:02:56,756 - DEBUG - end state. edges=[Edge(pc=32, stack=('$x018.5',), blockstack=(), npush=0), Edge(pc=44, stack=('$x018.5',), blockstack=(), npush=0)]
2025-09-26 15:02:56,757 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=44 nstack_initial=1)])
2025-09-26 15:02:56,757 - DEBUG - stack: ['$phi32.0']
2025-09-26 15:02:56,757 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-09-26 15:02:56,757 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:02:56,757 - DEBUG - stack ['$phi32.0']
2025-09-26 15:02:56,757 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:02:56,758 - DEBUG - stack ['$phi32.0', '$threshold32.1']
2025-09-26 15:02:56,758 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1141)
2025-09-26 15:02:56,758 - DEBUG - stack ['$34compare_op.2']
2025-09-26 15:02:56,758 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:56,758 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=1), State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:02:56,758 - DEBUG - stack: ['$phi44.0']
2025-09-26 15:02:56,759 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=1)
2025-09-26 15:02:56,759 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=1141)
2025-09-26 15:02:56,759 - DEBUG - stack ['$phi44.0']
2025-09-26 15:02:56,759 - DEBUG - dispatch pc=46, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:02:56,759 - DEBUG - stack []
2025-09-26 15:02:56,759 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:56,759 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:02:56,759 - DEBUG - stack: []
2025-09-26 15:02:56,760 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-09-26 15:02:56,760 - DEBUG - dispatch pc=42, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:02:56,760 - DEBUG - stack []
2025-09-26 15:02:56,760 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:56,760 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2025-09-26 15:02:56,760 - DEBUG - stack: []
2025-09-26 15:02:56,760 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-09-26 15:02:56,761 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1144)
2025-09-26 15:02:56,761 - DEBUG - stack []
2025-09-26 15:02:56,761 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=1144)
2025-09-26 15:02:56,761 - DEBUG - stack ['$x52.0']
2025-09-26 15:02:56,761 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-09-26 15:02:56,761 - DEBUG - stack ['$x52.0', '$const54.1.2']
2025-09-26 15:02:56,761 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=4, lineno=1144)
2025-09-26 15:02:56,762 - DEBUG - stack ['$56binary_subscr.2']
2025-09-26 15:02:56,762 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:02:56,762 - DEBUG - stack []
2025-09-26 15:02:56,762 - DEBUG - dispatch pc=64, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-09-26 15:02:56,762 - DEBUG - stack ['$threshold62.3']
2025-09-26 15:02:56,762 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=4, lineno=1145)
2025-09-26 15:02:56,762 - DEBUG - stack ['$64unary_negative.4']
2025-09-26 15:02:56,763 - DEBUG - dispatch pc=68, inst=SWAP(arg=2, lineno=1145)
2025-09-26 15:02:56,763 - DEBUG - stack ['$64unary_negative.4', '$x166.5']
2025-09-26 15:02:56,763 - DEBUG - dispatch pc=70, inst=COPY(arg=2, lineno=1145)
2025-09-26 15:02:56,763 - DEBUG - stack ['$x166.5', '$64unary_negative.4']
2025-09-26 15:02:56,763 - DEBUG - dispatch pc=72, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:02:56,763 - DEBUG - stack ['$x166.5', '$64unary_negative.4', '$x166.5']
2025-09-26 15:02:56,763 - DEBUG - dispatch pc=76, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1145)
2025-09-26 15:02:56,764 - DEBUG - stack ['$x166.5', '$72compare_op.6']
2025-09-26 15:02:56,764 - DEBUG - end state. edges=[Edge(pc=80, stack=('$x166.5',), blockstack=(), npush=0), Edge(pc=92, stack=('$x166.5',), blockstack=(), npush=0)]
2025-09-26 15:02:56,764 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:02:56,764 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:02:56,764 - DEBUG - stack: []
2025-09-26 15:02:56,764 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-09-26 15:02:56,764 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1142)
2025-09-26 15:02:56,765 - DEBUG - stack []
2025-09-26 15:02:56,765 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=3, lineno=1142)
2025-09-26 15:02:56,765 - DEBUG - stack ['$const48.0.1']
2025-09-26 15:02:56,765 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:56,765 - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:02:56,765 - DEBUG - stack: ['$phi80.0']
2025-09-26 15:02:56,765 - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-09-26 15:02:56,766 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:02:56,766 - DEBUG - stack ['$phi80.0']
2025-09-26 15:02:56,766 - DEBUG - dispatch pc=82, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:02:56,766 - DEBUG - stack ['$phi80.0', '$threshold80.1']
2025-09-26 15:02:56,766 - DEBUG - dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1145)
2025-09-26 15:02:56,766 - DEBUG - stack ['$82compare_op.2']
2025-09-26 15:02:56,766 - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:56,767 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:02:56,767 - DEBUG - stack: ['$phi92.0']
2025-09-26 15:02:56,767 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=1)
2025-09-26 15:02:56,767 - DEBUG - dispatch pc=92, inst=POP_TOP(arg=None, lineno=1145)
2025-09-26 15:02:56,767 - DEBUG - stack ['$phi92.0']
2025-09-26 15:02:56,767 - DEBUG - dispatch pc=94, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:02:56,767 - DEBUG - stack []
2025-09-26 15:02:56,768 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:56,768 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:02:56,768 - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:02:56,768 - DEBUG - stack: []
2025-09-26 15:02:56,768 - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-09-26 15:02:56,768 - DEBUG - dispatch pc=90, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:02:56,768 - DEBUG - stack []
2025-09-26 15:02:56,769 - DEBUG - end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:56,769 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-09-26 15:02:56,769 - DEBUG - stack: []
2025-09-26 15:02:56,769 - DEBUG - state.pc_initial: State(pc_initial=100 nstack_initial=0)
2025-09-26 15:02:56,769 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=2, lineno=1148)
2025-09-26 15:02:56,769 - DEBUG - stack []
2025-09-26 15:02:56,770 - DEBUG - dispatch pc=102, inst=TO_BOOL(arg=None, lineno=1148)
2025-09-26 15:02:56,770 - DEBUG - stack ['$zero_pos100.0']
2025-09-26 15:02:56,770 - DEBUG - dispatch pc=110, inst=POP_JUMP_IF_FALSE(arg=45, lineno=1148)
2025-09-26 15:02:56,770 - DEBUG - stack ['$102to_bool.1']
2025-09-26 15:02:56,770 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=204, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:56,770 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:02:56,770 - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:02:56,771 - DEBUG - stack: []
2025-09-26 15:02:56,771 - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2025-09-26 15:02:56,771 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=1, lineno=1146)
2025-09-26 15:02:56,771 - DEBUG - stack []
2025-09-26 15:02:56,771 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=4, lineno=1146)
2025-09-26 15:02:56,771 - DEBUG - stack ['$const96.0.1']
2025-09-26 15:02:56,771 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:02:56,771 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:02:56,772 - DEBUG - stack: []
2025-09-26 15:02:56,772 - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2025-09-26 15:02:56,772 - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:02:56,772 - DEBUG - stack []
2025-09-26 15:02:56,772 - DEBUG - dispatch pc=124, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:02:56,772 - DEBUG - stack ['$114load_global.0']
2025-09-26 15:02:56,773 - DEBUG - dispatch pc=144, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:02:56,773 - DEBUG - stack ['$124load_attr.1']
2025-09-26 15:02:56,773 - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=3, lineno=1149)
2025-09-26 15:02:56,773 - DEBUG - stack ['$124load_attr.1', '$null$144.2']
2025-09-26 15:02:56,773 - DEBUG - dispatch pc=148, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:02:56,773 - DEBUG - stack ['$124load_attr.1', '$null$144.2', '$x0146.3']
2025-09-26 15:02:56,773 - DEBUG - dispatch pc=156, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:02:56,774 - DEBUG - stack ['$148call.4']
2025-09-26 15:02:56,774 - DEBUG - dispatch pc=166, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:02:56,774 - DEBUG - stack ['$148call.4', '$156load_global.5']
2025-09-26 15:02:56,774 - DEBUG - dispatch pc=186, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:02:56,774 - DEBUG - stack ['$148call.4', '$166load_attr.6']
2025-09-26 15:02:56,774 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=4, lineno=1149)
2025-09-26 15:02:56,774 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7']
2025-09-26 15:02:56,775 - DEBUG - dispatch pc=190, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:02:56,775 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7', '$x1188.8']
2025-09-26 15:02:56,775 - DEBUG - dispatch pc=198, inst=COMPARE_OP(arg=103, lineno=1149)
2025-09-26 15:02:56,775 - DEBUG - stack ['$148call.4', '$190call.9']
2025-09-26 15:02:56,775 - DEBUG - dispatch pc=202, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-09-26 15:02:56,775 - DEBUG - stack ['$198compare_op.10']
2025-09-26 15:02:56,775 - DEBUG - end state. edges=[]
2025-09-26 15:02:56,775 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:02:56,776 - DEBUG - stack: []
2025-09-26 15:02:56,776 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=0)
2025-09-26 15:02:56,776 - DEBUG - dispatch pc=204, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:02:56,776 - DEBUG - stack []
2025-09-26 15:02:56,776 - DEBUG - dispatch pc=214, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:02:56,776 - DEBUG - stack ['$204load_global.0']
2025-09-26 15:02:56,776 - DEBUG - dispatch pc=234, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:02:56,776 - DEBUG - stack ['$214load_attr.1']
2025-09-26 15:02:56,777 - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=3, lineno=1151)
2025-09-26 15:02:56,777 - DEBUG - stack ['$214load_attr.1', '$null$234.2']
2025-09-26 15:02:56,777 - DEBUG - dispatch pc=238, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:02:56,777 - DEBUG - stack ['$214load_attr.1', '$null$234.2', '$x0236.3']
2025-09-26 15:02:56,777 - DEBUG - dispatch pc=246, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:02:56,777 - DEBUG - stack ['$238call.4']
2025-09-26 15:02:56,777 - DEBUG - dispatch pc=256, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:02:56,778 - DEBUG - stack ['$238call.4', '$246load_global.5']
2025-09-26 15:02:56,778 - DEBUG - dispatch pc=276, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:02:56,778 - DEBUG - stack ['$238call.4', '$256load_attr.6']
2025-09-26 15:02:56,778 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=4, lineno=1151)
2025-09-26 15:02:56,778 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7']
2025-09-26 15:02:56,778 - DEBUG - dispatch pc=280, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:02:56,778 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7', '$x1278.8']
2025-09-26 15:02:56,779 - DEBUG - dispatch pc=288, inst=COMPARE_OP(arg=103, lineno=1151)
2025-09-26 15:02:56,779 - DEBUG - stack ['$238call.4', '$280call.9']
2025-09-26 15:02:56,779 - DEBUG - dispatch pc=292, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:02:56,779 - DEBUG - stack ['$288compare_op.10']
2025-09-26 15:02:56,779 - DEBUG - end state. edges=[]
2025-09-26 15:02:56,779 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:02:56,780 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:02:56,780 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=1): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=204 nstack_initial=0): set()})
2025-09-26 15:02:56,780 - DEBUG - defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi44.0': State(pc_initial=0 nstack_initial=0),
 '$phi80.0': State(pc_initial=52 nstack_initial=0),
 '$phi92.0': State(pc_initial=52 nstack_initial=0)}
2025-09-26 15:02:56,781 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:02:56,781 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:02:56,781 - DEBUG - keep phismap: {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
 '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}}
2025-09-26 15:02:56,782 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$x018.5'},
             State(pc_initial=52 nstack_initial=0): {'$phi80.0': '$x166.5'}})
2025-09-26 15:02:56,782 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:02:56,782 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'value': '$8binary_subscr.2'}), (14, {'res': '$threshold14.3'}), (16, {'value': '$threshold14.3', 'res': '$16unary_negative.4'}), (18, {'res': '$x018.5'}), (24, {'lhs': '$16unary_negative.4', 'rhs': '$x018.5', 'res': '$24compare_op.6'}), (28, {'pred': '$24compare_op.6'})), outgoing_phis={'$phi32.0': '$x018.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$x018.5',), 44: ('$x018.5',)})
2025-09-26 15:02:56,782 - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'res': '$threshold32.1'}), (34, {'lhs': '$phi32.0', 'rhs': '$threshold32.1', 'res': '$34compare_op.2'}), (38, {'pred': '$34compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 52: ()})
2025-09-26 15:02:56,783 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ()})
2025-09-26 15:02:56,783 - DEBUG - block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((46, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:02:56,783 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$const48.0.1'}), (50, {'value': '$const48.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:02:56,783 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$x52.0'}), (54, {'res': '$const54.1.2'}), (56, {'index': '$const54.1.2', 'target': '$x52.0', 'res': '$56binary_subscr.2'}), (60, {'value': '$56binary_subscr.2'}), (62, {'res': '$threshold62.3'}), (64, {'value': '$threshold62.3', 'res': '$64unary_negative.4'}), (66, {'res': '$x166.5'}), (72, {'lhs': '$64unary_negative.4', 'rhs': '$x166.5', 'res': '$72compare_op.6'}), (76, {'pred': '$72compare_op.6'})), outgoing_phis={'$phi80.0': '$x166.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$x166.5',), 92: ('$x166.5',)})
2025-09-26 15:02:56,784 - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$threshold80.1'}), (82, {'lhs': '$phi80.0', 'rhs': '$threshold80.1', 'res': '$82compare_op.2'}), (86, {'pred': '$82compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 100: ()})
2025-09-26 15:02:56,784 - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
2025-09-26 15:02:56,784 - DEBUG - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((94, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:02:56,784 - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$const96.0.1'}), (98, {'value': '$const96.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:02:56,784 - DEBUG - block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$zero_pos100.0'}), (102, {'val': '$zero_pos100.0', 'res': '$102to_bool.1'}), (110, {'pred': '$102to_bool.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 204: ()})
2025-09-26 15:02:56,784 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'idx': 0, 'res': '$114load_global.0'}), (124, {'item': '$114load_global.0', 'res': '$124load_attr.1'}), (144, {}), (146, {'res': '$x0146.3'}), (148, {'func': '$124load_attr.1', 'args': ['$x0146.3'], 'kw_names': None, 'res': '$148call.4'}), (156, {'idx': 0, 'res': '$156load_global.5'}), (166, {'item': '$156load_global.5', 'res': '$166load_attr.6'}), (186, {}), (188, {'res': '$x1188.8'}), (190, {'func': '$166load_attr.6', 'args': ['$x1188.8'], 'kw_names': None, 'res': '$190call.9'}), (198, {'lhs': '$148call.4', 'rhs': '$190call.9', 'res': '$198compare_op.10'}), (202, {'retval': '$198compare_op.10', 'castval': '$202return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:02:56,785 - DEBUG - block_infos State(pc_initial=204 nstack_initial=0):
AdaptBlockInfo(insts=((204, {'idx': 0, 'res': '$204load_global.0'}), (214, {'item': '$204load_global.0', 'res': '$214load_attr.1'}), (234, {}), (236, {'res': '$x0236.3'}), (238, {'func': '$214load_attr.1', 'args': ['$x0236.3'], 'kw_names': None, 'res': '$238call.4'}), (246, {'idx': 0, 'res': '$246load_global.5'}), (256, {'item': '$246load_global.5', 'res': '$256load_attr.6'}), (276, {}), (278, {'res': '$x1278.8'}), (280, {'func': '$256load_attr.6', 'args': ['$x1278.8'], 'kw_names': None, 'res': '$280call.9'}), (288, {'lhs': '$238call.4', 'rhs': '$280call.9', 'res': '$288compare_op.10'}), (292, {'retval': '$288compare_op.10', 'castval': '$292return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:02:56,786 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    x0 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$const6.1.1', 'x', 'x0']
    $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$16unary_negative.4', 'threshold']
    $24compare_op.6 = $16unary_negative.4 <= x0 ['$16unary_negative.4', '$24compare_op.6', 'x0']
    $bool28 = global(bool: <class 'bool'>)   ['$bool28']
    $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.6', '$28pred', '$bool28']
    $phi32.0 = x0                            ['$phi32.0', 'x0']
    branch $28pred, 32, 44                   ['$28pred']
label 32:
    $34compare_op.2 = $phi32.0 <= threshold  ['$34compare_op.2', '$phi32.0', 'threshold']
    $bool38 = global(bool: <class 'bool'>)   ['$bool38']
    $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.2', '$38pred', '$bool38']
    branch $38pred, 42, 52                   ['$38pred']
label 42:
    jump 48                                  []
label 44:
    jump 52                                  []
label 48:
    x0 = const(int, 0)                       ['x0']
    jump 52                                  []
label 52:
    $const54.1.2 = const(int, -1)            ['$const54.1.2']
    x1 = getitem(value=x, index=$const54.1.2, fn=<built-in function getitem>) ['$const54.1.2', 'x', 'x1']
    $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$64unary_negative.4', 'threshold']
    $72compare_op.6 = $64unary_negative.4 <= x1 ['$64unary_negative.4', '$72compare_op.6', 'x1']
    $bool76 = global(bool: <class 'bool'>)   ['$bool76']
    $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$72compare_op.6', '$76pred', '$bool76']
    $phi80.0 = x1                            ['$phi80.0', 'x1']
    branch $76pred, 80, 92                   ['$76pred']
label 80:
    $82compare_op.2 = $phi80.0 <= threshold  ['$82compare_op.2', '$phi80.0', 'threshold']
    $bool86 = global(bool: <class 'bool'>)   ['$bool86']
    $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$82compare_op.2', '$86pred', '$bool86']
    branch $86pred, 90, 100                  ['$86pred']
label 90:
    jump 96                                  []
label 92:
    jump 100                                 []
label 96:
    x1 = const(int, 0)                       ['x1']
    jump 100                                 []
label 100:
    $bool110 = global(bool: <class 'bool'>)  ['$bool110']
    $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$110pred', '$bool110', 'zero_pos']
    branch $110pred, 114, 204                ['$110pred']
label 114:
    $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$114load_global.0']
    $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit) ['$114load_global.0', '$124load_attr.1']
    $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$124load_attr.1', '$148call.4', 'x0']
    $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$156load_global.5']
    $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit) ['$156load_global.5', '$166load_attr.6']
    $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.6', '$190call.9', 'x1']
    $198compare_op.10 = $148call.4 != $190call.9 ['$148call.4', '$190call.9', '$198compare_op.10']
    $202return_value.11 = cast(value=$198compare_op.10) ['$198compare_op.10', '$202return_value.11']
    return $202return_value.11               ['$202return_value.11']
label 204:
    $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$204load_global.0']
    $214load_attr.1 = getattr(value=$204load_global.0, attr=sign) ['$204load_global.0', '$214load_attr.1']
    $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.1', '$238call.4', 'x0']
    $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$246load_global.5']
    $256load_attr.6 = getattr(value=$246load_global.5, attr=sign) ['$246load_global.5', '$256load_attr.6']
    $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$256load_attr.6', '$280call.9', 'x1']
    $288compare_op.10 = $238call.4 != $280call.9 ['$238call.4', '$280call.9', '$288compare_op.10']
    $292return_value.11 = cast(value=$288compare_op.10) ['$288compare_op.10', '$292return_value.11']
    return $292return_value.11               ['$292return_value.11']

2025-09-26 15:02:56,793 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1154)
           2	RESUME(arg=0, lineno=1154)
           4	LOAD_GLOBAL(arg=1, lineno=1170)
          14	LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
          16	LOAD_FAST(arg=2, lineno=1170)
          18	CALL(arg=3, lineno=1170)
          26	LOAD_FAST(arg=3, lineno=1170)
          28	LOAD_CONST(arg=1, lineno=1170)
          30	LOAD_CONST(arg=1, lineno=1170)
          32	STORE_SLICE(arg=None, lineno=1170)
          34	RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:02:56,793 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:02:56,793 - DEBUG - stack: []
2025-09-26 15:02:56,794 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:02:56,794 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1154)
2025-09-26 15:02:56,794 - DEBUG - stack []
2025-09-26 15:02:56,794 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1154)
2025-09-26 15:02:56,794 - DEBUG - stack []
2025-09-26 15:02:56,794 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1170)
2025-09-26 15:02:56,794 - DEBUG - stack []
2025-09-26 15:02:56,795 - DEBUG - dispatch pc=14, inst=LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
2025-09-26 15:02:56,795 - DEBUG - stack ['$4load_global.0', '$null$4.1']
2025-09-26 15:02:56,795 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=1170)
2025-09-26 15:02:56,795 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3']
2025-09-26 15:02:56,795 - DEBUG - dispatch pc=18, inst=CALL(arg=3, lineno=1170)
2025-09-26 15:02:56,795 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3', '$zero_pos16.4']
2025-09-26 15:02:56,796 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=3, lineno=1170)
2025-09-26 15:02:56,796 - DEBUG - stack ['$18call.5']
2025-09-26 15:02:56,796 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:02:56,796 - DEBUG - stack ['$18call.5', '$y26.6']
2025-09-26 15:02:56,796 - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:02:56,796 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1']
2025-09-26 15:02:56,796 - DEBUG - dispatch pc=32, inst=STORE_SLICE(arg=None, lineno=1170)
2025-09-26 15:02:56,797 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1', '$const30.8.1']
2025-09-26 15:02:56,797 - DEBUG - dispatch pc=34, inst=RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:02:56,797 - DEBUG - stack []
2025-09-26 15:02:56,797 - DEBUG - end state. edges=[]
2025-09-26 15:02:56,797 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:02:56,797 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-09-26 15:02:56,797 - DEBUG - defmap: {}
2025-09-26 15:02:56,797 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:02:56,798 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:02:56,798 - DEBUG - keep phismap: {}
2025-09-26 15:02:56,798 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-09-26 15:02:56,798 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:02:56,798 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res1': '$x14.2', 'res2': '$threshold14.3'}), (16, {'res': '$zero_pos16.4'}), (18, {'func': '$4load_global.0', 'args': ['$x14.2', '$threshold14.3', '$zero_pos16.4'], 'kw_names': None, 'res': '$18call.5'}), (26, {'res': '$y26.6'}), (28, {'res': '$const28.7.1'}), (30, {'res': '$const30.8.1'}), (32, {'start': '$const28.7.1', 'end': '$const30.8.1', 'container': '$y26.6', 'value': '$18call.5', 'res': '$32store_slice.10', 'slicevar': '$32store_slice.9'}), (34, {'retval': '$const34.11', 'castval': '$34return_const.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:02:56,799 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002985C847D90>) ['$4load_global.0']
    $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const28.7.1 = const(NoneType, None)     ['$const28.7.1']
    $const30.8.1 = const(NoneType, None)     ['$const30.8.1']
    $32store_slice.9 = global(slice: <class 'slice'>) ['$32store_slice.9']
    $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$32store_slice.10', '$32store_slice.9', '$const28.7.1', '$const30.8.1']
    y[$32store_slice.10] = $18call.5         ['$18call.5', '$32store_slice.10', 'y']
    $const34.11 = const(NoneType, None)      ['$const34.11']
    $34return_const.12 = cast(value=$const34.11) ['$34return_const.12', '$const34.11']
    return $34return_const.12                ['$34return_const.12']

2025-09-26 15:02:56,803 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:02:56,803 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC3D350>
2025-09-26 15:02:56,803 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:56,803 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:56,803 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:56,804 - DEBUG - on stmt: y = arg(3, name=y)
2025-09-26 15:02:56,804 - DEBUG - on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002985C847D90>)
2025-09-26 15:02:56,804 - DEBUG - on stmt: $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,804 - DEBUG - on stmt: $const28.7.1 = const(NoneType, None)
2025-09-26 15:02:56,804 - DEBUG - on stmt: $const30.8.1 = const(NoneType, None)
2025-09-26 15:02:56,804 - DEBUG - on stmt: $32store_slice.9 = global(slice: <class 'slice'>)
2025-09-26 15:02:56,805 - DEBUG - on stmt: $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,805 - DEBUG - on stmt: y[slice(None, None, None)] = $18call.5
2025-09-26 15:02:56,805 - DEBUG - on stmt: $const34.11 = const(NoneType, None)
2025-09-26 15:02:56,805 - DEBUG - on stmt: $34return_const.12 = cast(value=$const34.11)
2025-09-26 15:02:56,805 - DEBUG - on stmt: return $34return_const.12
2025-09-26 15:02:56,806 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.5': [(<numba.core.ir.Assign object at 0x000002985CF6E090>,
                            0)],
             '$32store_slice.10': [(<numba.core.ir.Assign object at 0x000002985CF6E9F0>,
                                    0)],
             '$32store_slice.9': [(<numba.core.ir.Assign object at 0x000002985CF6E990>,
                                   0)],
             '$34return_const.12': [(<numba.core.ir.Assign object at 0x000002985CF6EED0>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000002985CEDDC10>,
                                  0)],
             '$const28.7.1': [(<numba.core.ir.Assign object at 0x000002985CF6E630>,
                               0)],
             '$const30.8.1': [(<numba.core.ir.Assign object at 0x000002985CF6E690>,
                               0)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x000002985CF6EE70>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002985CEDDEB0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002985CEDDDF0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000002985CEDD2B0>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002985CEDDD90>,
                           0)]})
2025-09-26 15:02:56,807 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002985CC3D350>
2025-09-26 15:02:56,849 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=3, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=3, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	LOAD_CONST(arg=1, lineno=3)
          92	CALL_KW(arg=2, lineno=3)
          94	STORE_FAST(arg=4, lineno=3)
          96	LOAD_CONST(arg=2, lineno=4)
          98	LOAD_FAST(arg=4, lineno=4)
         100	LOAD_CONST(arg=0, lineno=4)
         102	LOAD_CONST(arg=3, lineno=4)
         104	STORE_SLICE(arg=None, lineno=4)
         106	LOAD_CONST(arg=2, lineno=5)
         108	LOAD_FAST(arg=4, lineno=5)
         110	LOAD_CONST(arg=2, lineno=5)
         112	LOAD_CONST(arg=0, lineno=5)
         114	STORE_SLICE(arg=None, lineno=5)
         116	LOAD_GLOBAL(arg=9, lineno=6)
         126	LOAD_GLOBAL(arg=11, lineno=6)
         136	LOAD_CONST(arg=2, lineno=6)
         138	LOAD_CONST(arg=4, lineno=6)
         140	CALL(arg=2, lineno=6)
         148	UNARY_NEGATIVE(arg=None, lineno=6)
         150	LOAD_FAST(arg=3, lineno=6)
         152	LOAD_CONST(arg=2, lineno=6)
         154	BINARY_SUBSCR(arg=None, lineno=6)
         158	LOAD_GLOBAL(arg=13, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	LOAD_CONST(arg=2, lineno=6)
         172	CALL(arg=2, lineno=6)
         180	BINARY_OP(arg=10, lineno=6)
         184	CALL(arg=2, lineno=6)
         192	GET_ITER(arg=None, lineno=6)
>        194	FOR_ITER(arg=5, lineno=6)
         198	STORE_FAST(arg=5, lineno=6)
         200	LOAD_CONST(arg=2, lineno=7)
         202	STORE_FAST(arg=6, lineno=7)
         204	JUMP_BACKWARD(arg=7, lineno=7)
>        208	END_FOR(arg=None, lineno=6)
         210	POP_TOP(arg=None, lineno=6)
         212	LOAD_FAST(arg=4, lineno=8)
         214	RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:02:56,850 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:02:56,850 - DEBUG - stack: []
2025-09-26 15:02:56,850 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:02:56,850 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-09-26 15:02:56,850 - DEBUG - stack []
2025-09-26 15:02:56,850 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2025-09-26 15:02:56,851 - DEBUG - stack []
2025-09-26 15:02:56,851 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2025-09-26 15:02:56,851 - DEBUG - stack []
2025-09-26 15:02:56,851 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2025-09-26 15:02:56,851 - DEBUG - stack ['$x4.0']
2025-09-26 15:02:56,851 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=3, lineno=2)
2025-09-26 15:02:56,851 - DEBUG - stack ['$6load_attr.1']
2025-09-26 15:02:56,851 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:02:56,852 - DEBUG - stack []
2025-09-26 15:02:56,852 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2025-09-26 15:02:56,852 - DEBUG - stack ['$28load_global.2']
2025-09-26 15:02:56,852 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=3, lineno=3)
2025-09-26 15:02:56,852 - DEBUG - stack ['$38load_attr.3', '$null$38.4']
2025-09-26 15:02:56,852 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:02:56,852 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5']
2025-09-26 15:02:56,852 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2025-09-26 15:02:56,853 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$60load_global.6']
2025-09-26 15:02:56,853 - DEBUG - dispatch pc=90, inst=LOAD_CONST(arg=1, lineno=3)
2025-09-26 15:02:56,853 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7']
2025-09-26 15:02:56,853 - DEBUG - dispatch pc=92, inst=CALL_KW(arg=2, lineno=3)
2025-09-26 15:02:56,853 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7', '$const90.8.1']
2025-09-26 15:02:56,853 - DEBUG - dispatch pc=94, inst=STORE_FAST(arg=4, lineno=3)
2025-09-26 15:02:56,853 - DEBUG - stack ['$92call_kw.9']
2025-09-26 15:02:56,853 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=2, lineno=4)
2025-09-26 15:02:56,854 - DEBUG - stack []
2025-09-26 15:02:56,854 - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=4)
2025-09-26 15:02:56,854 - DEBUG - stack ['$const96.10.2']
2025-09-26 15:02:56,854 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=0, lineno=4)
2025-09-26 15:02:56,854 - DEBUG - stack ['$const96.10.2', '$out098.11']
2025-09-26 15:02:56,854 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=3, lineno=4)
2025-09-26 15:02:56,854 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0']
2025-09-26 15:02:56,855 - DEBUG - dispatch pc=104, inst=STORE_SLICE(arg=None, lineno=4)
2025-09-26 15:02:56,855 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0', '$const102.13.3']
2025-09-26 15:02:56,855 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:02:56,855 - DEBUG - stack []
2025-09-26 15:02:56,855 - DEBUG - dispatch pc=108, inst=LOAD_FAST(arg=4, lineno=5)
2025-09-26 15:02:56,855 - DEBUG - stack ['$const106.16.2']
2025-09-26 15:02:56,856 - DEBUG - dispatch pc=110, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:02:56,856 - DEBUG - stack ['$const106.16.2', '$out0108.17']
2025-09-26 15:02:56,856 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=0, lineno=5)
2025-09-26 15:02:56,856 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2']
2025-09-26 15:02:56,856 - DEBUG - dispatch pc=114, inst=STORE_SLICE(arg=None, lineno=5)
2025-09-26 15:02:56,856 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2', '$const112.19.0']
2025-09-26 15:02:56,856 - DEBUG - dispatch pc=116, inst=LOAD_GLOBAL(arg=9, lineno=6)
2025-09-26 15:02:56,856 - DEBUG - stack []
2025-09-26 15:02:56,857 - DEBUG - dispatch pc=126, inst=LOAD_GLOBAL(arg=11, lineno=6)
2025-09-26 15:02:56,857 - DEBUG - stack ['$116load_global.22', '$null$116.23']
2025-09-26 15:02:56,857 - DEBUG - dispatch pc=136, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:02:56,857 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25']
2025-09-26 15:02:56,857 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=4, lineno=6)
2025-09-26 15:02:56,857 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2']
2025-09-26 15:02:56,857 - DEBUG - dispatch pc=140, inst=CALL(arg=2, lineno=6)
2025-09-26 15:02:56,857 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2', '$const138.27.4']
2025-09-26 15:02:56,858 - DEBUG - dispatch pc=148, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-09-26 15:02:56,858 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$140call.28']
2025-09-26 15:02:56,858 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=3, lineno=6)
2025-09-26 15:02:56,858 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29']
2025-09-26 15:02:56,858 - DEBUG - dispatch pc=152, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:02:56,858 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30']
2025-09-26 15:02:56,859 - DEBUG - dispatch pc=154, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-09-26 15:02:56,859 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30', '$const152.31.2']
2025-09-26 15:02:56,859 - DEBUG - dispatch pc=158, inst=LOAD_GLOBAL(arg=13, lineno=6)
2025-09-26 15:02:56,859 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32']
2025-09-26 15:02:56,859 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:02:56,859 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34']
2025-09-26 15:02:56,860 - DEBUG - dispatch pc=170, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:02:56,860 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2']
2025-09-26 15:02:56,860 - DEBUG - dispatch pc=172, inst=CALL(arg=2, lineno=6)
2025-09-26 15:02:56,860 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2', '$const170.36.2']
2025-09-26 15:02:56,860 - DEBUG - dispatch pc=180, inst=BINARY_OP(arg=10, lineno=6)
2025-09-26 15:02:56,860 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$172call.37']
2025-09-26 15:02:56,861 - DEBUG - dispatch pc=184, inst=CALL(arg=2, lineno=6)
2025-09-26 15:02:56,861 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$binop_sub180.38']
2025-09-26 15:02:56,861 - DEBUG - dispatch pc=192, inst=GET_ITER(arg=None, lineno=6)
2025-09-26 15:02:56,861 - DEBUG - stack ['$184call.39']
2025-09-26 15:02:56,861 - DEBUG - end state. edges=[Edge(pc=194, stack=('$192get_iter.40',), blockstack=(), npush=0)]
2025-09-26 15:02:56,861 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:02:56,862 - DEBUG - stack: ['$phi194.0']
2025-09-26 15:02:56,862 - DEBUG - state.pc_initial: State(pc_initial=194 nstack_initial=1)
2025-09-26 15:02:56,862 - DEBUG - dispatch pc=194, inst=FOR_ITER(arg=5, lineno=6)
2025-09-26 15:02:56,862 - DEBUG - stack ['$phi194.0']
2025-09-26 15:02:56,862 - DEBUG - end state. edges=[Edge(pc=208, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0), Edge(pc=198, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0)]
2025-09-26 15:02:56,862 - DEBUG - pending: deque([State(pc_initial=208 nstack_initial=2), State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:02:56,862 - DEBUG - stack: ['$phi208.0', '$phi208.1']
2025-09-26 15:02:56,863 - DEBUG - state.pc_initial: State(pc_initial=208 nstack_initial=2)
2025-09-26 15:02:56,863 - DEBUG - dispatch pc=208, inst=END_FOR(arg=None, lineno=6)
2025-09-26 15:02:56,863 - DEBUG - stack ['$phi208.0', '$phi208.1']
2025-09-26 15:02:56,863 - DEBUG - dispatch pc=210, inst=POP_TOP(arg=None, lineno=6)
2025-09-26 15:02:56,863 - DEBUG - stack ['$phi208.0']
2025-09-26 15:02:56,863 - DEBUG - dispatch pc=212, inst=LOAD_FAST(arg=4, lineno=8)
2025-09-26 15:02:56,863 - DEBUG - stack []
2025-09-26 15:02:56,864 - DEBUG - dispatch pc=214, inst=RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:02:56,864 - DEBUG - stack ['$out0212.2']
2025-09-26 15:02:56,864 - DEBUG - end state. edges=[]
2025-09-26 15:02:56,864 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:02:56,864 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2025-09-26 15:02:56,864 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2025-09-26 15:02:56,864 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=5, lineno=6)
2025-09-26 15:02:56,864 - DEBUG - stack ['$phi198.0', '$phi198.1']
2025-09-26 15:02:56,865 - DEBUG - dispatch pc=200, inst=LOAD_CONST(arg=2, lineno=7)
2025-09-26 15:02:56,865 - DEBUG - stack ['$phi198.0']
2025-09-26 15:02:56,865 - DEBUG - dispatch pc=202, inst=STORE_FAST(arg=6, lineno=7)
2025-09-26 15:02:56,865 - DEBUG - stack ['$phi198.0', '$const200.2.2']
2025-09-26 15:02:56,865 - DEBUG - dispatch pc=204, inst=JUMP_BACKWARD(arg=7, lineno=7)
2025-09-26 15:02:56,865 - DEBUG - stack ['$phi198.0']
2025-09-26 15:02:56,865 - DEBUG - end state. edges=[Edge(pc=194, stack=('$phi198.0',), blockstack=(), npush=0)]
2025-09-26 15:02:56,866 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:02:56,866 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:02:56,866 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=194 nstack_initial=1): {'$phi194.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=208 nstack_initial=2): set()})
2025-09-26 15:02:56,866 - DEBUG - defmap: {'$phi194.0': State(pc_initial=0 nstack_initial=0),
 '$phi198.1': State(pc_initial=194 nstack_initial=1),
 '$phi208.1': State(pc_initial=194 nstack_initial=1)}
2025-09-26 15:02:56,866 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi198.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:02:56,867 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:02:56,867 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:02:56,868 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:02:56,869 - DEBUG - keep phismap: {'$phi194.0': {('$192get_iter.40', State(pc_initial=0 nstack_initial=0))},
 '$phi198.1': {('$194for_iter.2', State(pc_initial=194 nstack_initial=1))}}
2025-09-26 15:02:56,869 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi194.0': '$192get_iter.40'},
             State(pc_initial=194 nstack_initial=1): {'$phi198.1': '$194for_iter.2'}})
2025-09-26 15:02:56,869 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:02:56,869 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.3'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (90, {'res': '$const90.8.1'}), (92, {'func': '$38load_attr.3', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': '$const90.8.1', 'res': '$92call_kw.9'}), (94, {'value': '$92call_kw.9'}), (96, {'res': '$const96.10.2'}), (98, {'res': '$out098.11'}), (100, {'res': '$const100.12.0'}), (102, {'res': '$const102.13.3'}), (104, {'start': '$const100.12.0', 'end': '$const102.13.3', 'container': '$out098.11', 'value': '$const96.10.2', 'res': '$104store_slice.15', 'slicevar': '$104store_slice.14'}), (106, {'res': '$const106.16.2'}), (108, {'res': '$out0108.17'}), (110, {'res': '$const110.18.2'}), (112, {'res': '$const112.19.0'}), (114, {'start': '$const110.18.2', 'end': '$const112.19.0', 'container': '$out0108.17', 'value': '$const106.16.2', 'res': '$114store_slice.21', 'slicevar': '$114store_slice.20'}), (116, {'idx': 4, 'res': '$116load_global.22'}), (126, {'idx': 5, 'res': '$126load_global.24'}), (136, {'res': '$const136.26.2'}), (138, {'res': '$const138.27.4'}), (140, {'func': '$126load_global.24', 'args': ['$const136.26.2', '$const138.27.4'], 'kw_names': None, 'res': '$140call.28'}), (148, {'value': '$140call.28', 'res': '$148unary_negative.29'}), (150, {'res': '$full_shape0150.30'}), (152, {'res': '$const152.31.2'}), (154, {'index': '$const152.31.2', 'target': '$full_shape0150.30', 'res': '$154binary_subscr.32'}), (158, {'idx': 6, 'res': '$158load_global.33'}), (168, {'res': '$const168.35.2'}), (170, {'res': '$const170.36.2'}), (172, {'func': '$158load_global.33', 'args': ['$const168.35.2', '$const170.36.2'], 'kw_names': None, 'res': '$172call.37'}), (180, {'op': '-', 'lhs': '$154binary_subscr.32', 'rhs': '$172call.37', 'res': '$binop_sub180.38'}), (184, {'func': '$116load_global.22', 'args': ['$148unary_negative.29', '$binop_sub180.38'], 'kw_names': None, 'res': '$184call.39'}), (192, {'value': '$184call.39', 'res': '$192get_iter.40'})), outgoing_phis={'$phi194.0': '$192get_iter.40'}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$192get_iter.40',)})
2025-09-26 15:02:56,870 - DEBUG - block_infos State(pc_initial=194 nstack_initial=1):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.0', 'pair': '$194for_iter.1', 'indval': '$194for_iter.2', 'pred': '$194for_iter.3'}),), outgoing_phis={'$phi198.1': '$194for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={208: ('$phi194.0', '$194for_iter.2'), 198: ('$phi194.0', '$194for_iter.2')})
2025-09-26 15:02:56,870 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$const200.2.2'}), (202, {'value': '$const200.2.2'}), (204, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$phi198.0',)})
2025-09-26 15:02:56,870 - DEBUG - block_infos State(pc_initial=208 nstack_initial=2):
AdaptBlockInfo(insts=((212, {'res': '$out0212.2'}), (214, {'retval': '$out0212.2', 'castval': '$214return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:02:56,871 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$28load_global.2']
    $38load_attr.3 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.3']
    $60load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool) ['$60load_global.6', '$70load_attr.7']
    $const_dtype = const(str, dtype)         ['$const_dtype']
    $const90.8.1 = build_tuple(items=[Var($const_dtype, <string>:3)]) ['$const90.8.1', '$const_dtype']
    out0 = call $38load_attr.3(full_shape0, func=$38load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.3', '$70load_attr.7', 'full_shape0', 'out0']
    $const96.10.2 = const(int, 0)            ['$const96.10.2']
    $const100.12.0 = const(NoneType, None)   ['$const100.12.0']
    $const102.13.3 = const(int, 1)           ['$const102.13.3']
    $104store_slice.14 = global(slice: <class 'slice'>) ['$104store_slice.14']
    $104store_slice.15 = call $104store_slice.14($const100.12.0, $const102.13.3, func=$104store_slice.14, args=(Var($const100.12.0, <string>:4), Var($const102.13.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$104store_slice.14', '$104store_slice.15', '$const100.12.0', '$const102.13.3']
    out0[$104store_slice.15] = $const96.10.2 ['$104store_slice.15', '$const96.10.2', 'out0']
    $const106.16.2 = const(int, 0)           ['$const106.16.2']
    $const110.18.2 = const(int, 0)           ['$const110.18.2']
    $const112.19.0 = const(NoneType, None)   ['$const112.19.0']
    $114store_slice.20 = global(slice: <class 'slice'>) ['$114store_slice.20']
    $114store_slice.21 = call $114store_slice.20($const110.18.2, $const112.19.0, func=$114store_slice.20, args=(Var($const110.18.2, <string>:5), Var($const112.19.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$114store_slice.20', '$114store_slice.21', '$const110.18.2', '$const112.19.0']
    out0[$114store_slice.21] = $const106.16.2 ['$114store_slice.21', '$const106.16.2', 'out0']
    $116load_global.22 = global(range: <class 'range'>) ['$116load_global.22']
    $126load_global.24 = global(min: <built-in function min>) ['$126load_global.24']
    $const136.26.2 = const(int, 0)           ['$const136.26.2']
    $const138.27.4 = const(int, -1)          ['$const138.27.4']
    $140call.28 = call $126load_global.24($const136.26.2, $const138.27.4, func=$126load_global.24, args=[Var($const136.26.2, <string>:6), Var($const138.27.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_global.24', '$140call.28', '$const136.26.2', '$const138.27.4']
    $148unary_negative.29 = unary(fn=<built-in function neg>, value=$140call.28) ['$140call.28', '$148unary_negative.29']
    $const152.31.2 = const(int, 0)           ['$const152.31.2']
    $154binary_subscr.32 = getitem(value=full_shape0, index=$const152.31.2, fn=<built-in function getitem>) ['$154binary_subscr.32', '$const152.31.2', 'full_shape0']
    $158load_global.33 = global(max: <built-in function max>) ['$158load_global.33']
    $const168.35.2 = const(int, 0)           ['$const168.35.2']
    $const170.36.2 = const(int, 0)           ['$const170.36.2']
    $172call.37 = call $158load_global.33($const168.35.2, $const170.36.2, func=$158load_global.33, args=[Var($const168.35.2, <string>:6), Var($const170.36.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$158load_global.33', '$172call.37', '$const168.35.2', '$const170.36.2']
    $binop_sub180.38 = $154binary_subscr.32 - $172call.37 ['$154binary_subscr.32', '$172call.37', '$binop_sub180.38']
    $184call.39 = call $116load_global.22($148unary_negative.29, $binop_sub180.38, func=$116load_global.22, args=[Var($148unary_negative.29, <string>:6), Var($binop_sub180.38, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.22', '$148unary_negative.29', '$184call.39', '$binop_sub180.38']
    $192get_iter.40 = getiter(value=$184call.39) ['$184call.39', '$192get_iter.40']
    $phi194.0 = $192get_iter.40              ['$192get_iter.40', '$phi194.0']
    jump 194                                 []
label 194:
    $194for_iter.1 = iternext(value=$phi194.0) ['$194for_iter.1', '$phi194.0']
    $194for_iter.2 = pair_first(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.2']
    $194for_iter.3 = pair_second(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.3']
    $phi198.1 = $194for_iter.2               ['$194for_iter.2', '$phi198.1']
    branch $194for_iter.3, 198, 208          ['$194for_iter.3']
label 198:
    index00 = $phi198.1                      ['$phi198.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 194                                 []
label 208:
    $214return_value.3 = cast(value=out0)    ['$214return_value.3', 'out0']
    return $214return_value.3                ['$214return_value.3']

2025-09-26 15:02:56,896 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:02:56,897 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC58CB0>
2025-09-26 15:02:56,897 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:56,897 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:56,897 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:56,897 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:02:56,897 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,898 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:02:56,898 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,898 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:02:56,898 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:02:56,898 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:02:56,898 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,899 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:02:56,899 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:02:56,899 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:02:56,899 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:56,899 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,899 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:02:56,899 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:02:56,899 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:02:56,900 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:02:56,900 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:56,900 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,900 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:02:56,900 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:02:56,900 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:02:56,900 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:02:56,901 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:02:56,901 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,901 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:02:56,901 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:02:56,901 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:02:56,901 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:02:56,901 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:02:56,902 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:02:56,902 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,902 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:02:56,902 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,902 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:02:56,902 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:02:56,903 - DEBUG - on stmt: jump 194
2025-09-26 15:02:56,903 - DEBUG - ==== SSA block analysis pass on 194
2025-09-26 15:02:56,903 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC58CB0>
2025-09-26 15:02:56,903 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:02:56,903 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:02:56,903 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:02:56,903 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:02:56,903 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:02:56,904 - DEBUG - ==== SSA block analysis pass on 198
2025-09-26 15:02:56,904 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC58CB0>
2025-09-26 15:02:56,904 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:02:56,904 - DEBUG - on stmt: jump 208
2025-09-26 15:02:56,904 - DEBUG - ==== SSA block analysis pass on 414
2025-09-26 15:02:56,904 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC58CB0>
2025-09-26 15:02:56,904 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:02:56,904 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:02:56,904 - DEBUG - ==== SSA block analysis pass on 208
2025-09-26 15:02:56,904 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC58CB0>
2025-09-26 15:02:56,905 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:02:56,905 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:56,905 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:56,905 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:56,905 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:56,905 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,905 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,905 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:02:56,906 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:02:56,906 - DEBUG - ==== SSA block analysis pass on 209
2025-09-26 15:02:56,906 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC58CB0>
2025-09-26 15:02:56,906 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:02:56,906 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,906 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,906 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:02:56,906 - DEBUG - ==== SSA block analysis pass on 241
2025-09-26 15:02:56,906 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC58CB0>
2025-09-26 15:02:56,907 - DEBUG - on stmt: jump 251
2025-09-26 15:02:56,907 - DEBUG - ==== SSA block analysis pass on 253
2025-09-26 15:02:56,907 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC58CB0>
2025-09-26 15:02:56,907 - DEBUG - on stmt: jump 257
2025-09-26 15:02:56,907 - DEBUG - ==== SSA block analysis pass on 251
2025-09-26 15:02:56,907 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC58CB0>
2025-09-26 15:02:56,907 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:02:56,907 - DEBUG - on stmt: jump 257
2025-09-26 15:02:56,907 - DEBUG - ==== SSA block analysis pass on 257
2025-09-26 15:02:56,908 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC58CB0>
2025-09-26 15:02:56,908 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:02:56,908 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:02:56,908 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:56,908 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:56,908 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:56,908 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,908 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,909 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:02:56,909 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:02:56,909 - DEBUG - ==== SSA block analysis pass on 261
2025-09-26 15:02:56,909 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC58CB0>
2025-09-26 15:02:56,909 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:02:56,909 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,909 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,909 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:02:56,909 - DEBUG - ==== SSA block analysis pass on 289
2025-09-26 15:02:56,909 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC58CB0>
2025-09-26 15:02:56,910 - DEBUG - on stmt: jump 299
2025-09-26 15:02:56,910 - DEBUG - ==== SSA block analysis pass on 301
2025-09-26 15:02:56,910 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC58CB0>
2025-09-26 15:02:56,910 - DEBUG - on stmt: jump 305
2025-09-26 15:02:56,910 - DEBUG - ==== SSA block analysis pass on 299
2025-09-26 15:02:56,910 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC58CB0>
2025-09-26 15:02:56,910 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:02:56,910 - DEBUG - on stmt: jump 305
2025-09-26 15:02:56,910 - DEBUG - ==== SSA block analysis pass on 305
2025-09-26 15:02:56,910 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC58CB0>
2025-09-26 15:02:56,911 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,911 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,911 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:02:56,911 - DEBUG - ==== SSA block analysis pass on 309
2025-09-26 15:02:56,911 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC58CB0>
2025-09-26 15:02:56,911 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,911 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:02:56,912 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,912 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,912 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:02:56,912 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,912 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:02:56,912 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:02:56,912 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:02:56,913 - DEBUG - on stmt: jump 413
2025-09-26 15:02:56,913 - DEBUG - ==== SSA block analysis pass on 323
2025-09-26 15:02:56,913 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC58CB0>
2025-09-26 15:02:56,913 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,913 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:02:56,913 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,914 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,914 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:02:56,914 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,914 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:02:56,914 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:02:56,914 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:02:56,914 - DEBUG - on stmt: jump 413
2025-09-26 15:02:56,915 - DEBUG - ==== SSA block analysis pass on 413
2025-09-26 15:02:56,915 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CC58CB0>
2025-09-26 15:02:56,915 - DEBUG - on stmt: jump 194
2025-09-26 15:02:56,915 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104store_slice.14.1': [(<numba.core.ir.Assign object at 0x000002985CF0B710>,
                                       0)],
             '$104store_slice.15.1': [(<numba.core.ir.Assign object at 0x000002985CF0B5F0>,
                                       0)],
             '$110pred': [(<numba.core.ir.Assign object at 0x000002985CF45C70>,
                           305)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x000002985CF19790>,
                                    309)],
             '$114store_slice.20.1': [(<numba.core.ir.Assign object at 0x000002985CFC0470>,
                                       0)],
             '$114store_slice.21.1': [(<numba.core.ir.Assign object at 0x000002985CFC0590>,
                                       0)],
             '$116load_global.22.1': [(<numba.core.ir.Assign object at 0x000002985CFC06B0>,
                                       0)],
             '$124load_attr.1': [(<numba.core.ir.Assign object at 0x000002985CF31970>,
                                  309)],
             '$126load_global.24.1': [(<numba.core.ir.Assign object at 0x000002985CFC07D0>,
                                       0)],
             '$140call.28.1': [(<numba.core.ir.Assign object at 0x000002985CFC0B30>,
                                0)],
             '$148call.4': [(<numba.core.ir.Assign object at 0x000002985CF31250>,
                             309)],
             '$148unary_negative.29.1': [(<numba.core.ir.Assign object at 0x000002985CFC0C50>,
                                          0)],
             '$154binary_subscr.32.1': [(<numba.core.ir.Assign object at 0x000002985CFC0F50>,
                                         0)],
             '$156load_global.5': [(<numba.core.ir.Assign object at 0x000002985CF32AB0>,
                                    309)],
             '$158load_global.33.1': [(<numba.core.ir.Assign object at 0x000002985CFC1070>,
                                       0)],
             '$166load_attr.6': [(<numba.core.ir.Assign object at 0x000002985CF37B90>,
                                  309)],
             '$16unary_negative.4': [(<numba.core.ir.Assign object at 0x000002985CFBBCB0>,
                                      208)],
             '$172call.37.1': [(<numba.core.ir.Assign object at 0x000002985CFC13D0>,
                                0)],
             '$184call.39.1': [(<numba.core.ir.Assign object at 0x000002985CFC1610>,
                                0)],
             '$190call.9': [(<numba.core.ir.Assign object at 0x000002985CF36390>,
                             309)],
             '$192get_iter.40.1': [(<numba.core.ir.Assign object at 0x000002985CFC1730>,
                                    0)],
             '$194for_iter.1.1': [(<numba.core.ir.Assign object at 0x000002985CFC0D10>,
                                   194)],
             '$194for_iter.2.1': [(<numba.core.ir.Assign object at 0x000002985CFC1850>,
                                   194)],
             '$194for_iter.3.1': [(<numba.core.ir.Assign object at 0x000002985CFC1970>,
                                   194)],
             '$198compare_op.10': [(<numba.core.ir.Assign object at 0x000002985CF34B30>,
                                    309)],
             '$202return_value.11': [(<numba.core.ir.Assign object at 0x000002985CF04F50>,
                                      309)],
             '$204load_global.0': [(<numba.core.ir.Assign object at 0x000002985CF001D0>,
                                    323)],
             '$214load_attr.1': [(<numba.core.ir.Assign object at 0x000002985CF01310>,
                                  323)],
             '$214return_value.3.1': [(<numba.core.ir.Assign object at 0x000002985CFC1F70>,
                                       414)],
             '$238call.4': [(<numba.core.ir.Assign object at 0x000002985CF02930>,
                             323)],
             '$246load_global.5': [(<numba.core.ir.Assign object at 0x000002985CF12AB0>,
                                    323)],
             '$24compare_op.6': [(<numba.core.ir.Assign object at 0x000002985CFB2BD0>,
                                  208)],
             '$256load_attr.6': [(<numba.core.ir.Assign object at 0x000002985CF111F0>,
                                  323)],
             '$280call.9': [(<numba.core.ir.Assign object at 0x000002985CF17B30>,
                             323)],
             '$288compare_op.10': [(<numba.core.ir.Assign object at 0x000002985CF14CB0>,
                                    323)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x000002985CF0A390>,
                                     0)],
             '$28pred': [(<numba.core.ir.Assign object at 0x000002985CF7BB90>,
                          208)],
             '$292return_value.11': [(<numba.core.ir.Assign object at 0x000002985CF161B0>,
                                      323)],
             '$34compare_op.2': [(<numba.core.ir.Assign object at 0x000002985CF1DE50>,
                                  209)],
             '$38load_attr.3.1': [(<numba.core.ir.Assign object at 0x000002985CF0A270>,
                                   0)],
             '$38pred': [(<numba.core.ir.Assign object at 0x000002985CF6B290>,
                          209)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x000002985CF0A090>,
                                     0)],
             '$64unary_negative.4': [(<numba.core.ir.Assign object at 0x000002985CF4A510>,
                                      257)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x000002985CF09F70>,
                                   0)],
             '$72compare_op.6': [(<numba.core.ir.Assign object at 0x000002985CF49190>,
                                  257)],
             '$76pred': [(<numba.core.ir.Assign object at 0x000002985CF51DF0>,
                          257)],
             '$82compare_op.2': [(<numba.core.ir.Assign object at 0x000002985CF54050>,
                                  261)],
             '$86pred': [(<numba.core.ir.Assign object at 0x000002985CF5AC90>,
                          261)],
             '$binop_sub180.38.1': [(<numba.core.ir.Assign object at 0x000002985CFC14F0>,
                                     0)],
             '$bool110': [(<numba.core.ir.Assign object at 0x000002985CF47470>,
                           305)],
             '$bool28': [(<numba.core.ir.Assign object at 0x000002985CFB1490>,
                          208)],
             '$bool38': [(<numba.core.ir.Assign object at 0x000002985CF1F590>,
                          209)],
             '$bool76': [(<numba.core.ir.Assign object at 0x000002985CF53650>,
                          257)],
             '$bool86': [(<numba.core.ir.Assign object at 0x000002985CF59550>,
                          261)],
             '$const100.12.0.1': [(<numba.core.ir.Assign object at 0x000002985CF0B950>,
                                   0)],
             '$const102.13.3.1': [(<numba.core.ir.Assign object at 0x000002985CF0B830>,
                                   0)],
             '$const106.16.2.1': [(<numba.core.ir.Assign object at 0x000002985CFC0050>,
                                   0)],
             '$const110.18.2.1': [(<numba.core.ir.Assign object at 0x000002985CFC0230>,
                                   0)],
             '$const112.19.0.1': [(<numba.core.ir.Assign object at 0x000002985CFC0350>,
                                   0)],
             '$const136.26.2.1': [(<numba.core.ir.Assign object at 0x000002985CFC08F0>,
                                   0)],
             '$const138.27.4.1': [(<numba.core.ir.Assign object at 0x000002985CFC0A10>,
                                   0)],
             '$const152.31.2.1': [(<numba.core.ir.Assign object at 0x000002985CFC0E30>,
                                   0)],
             '$const168.35.2.1': [(<numba.core.ir.Assign object at 0x000002985CFC1190>,
                                   0)],
             '$const170.36.2.1': [(<numba.core.ir.Assign object at 0x000002985CFC12B0>,
                                   0)],
             '$const54.1.2': [(<numba.core.ir.Assign object at 0x000002985CF611F0>,
                               257)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x000002985CFB9DF0>,
                              208)],
             '$const90.8.1.1': [(<numba.core.ir.Assign object at 0x000002985CF0BE90>,
                                 0)],
             '$const96.10.2.1': [(<numba.core.ir.Assign object at 0x000002985CF0BB90>,
                                  0)],
             '$const_dtype.1': [(<numba.core.ir.Assign object at 0x000002985CF0BFB0>,
                                 0)],
             '$phi194.0.1': [(<numba.core.ir.Assign object at 0x000002985CF0A4B0>,
                              0)],
             '$phi198.1.1': [(<numba.core.ir.Assign object at 0x000002985CFC1A30>,
                              194)],
             '$phi32.0': [(<numba.core.ir.Assign object at 0x000002985CF7ABD0>,
                           208)],
             '$phi80.0': [(<numba.core.ir.Assign object at 0x000002985CF50530>,
                           257)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x000002985CF0A570>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x000002985CFC1B50>,
                          198)],
             'out0': [(<numba.core.ir.Assign object at 0x000002985CF0BD70>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x000002985CF97DD0>,
                                208),
                               (<numba.core.ir.Assign object at 0x000002985CF0B170>,
                                257)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002985CF0A870>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002985CF0A990>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x000002985CF97D70>, 208),
                    (<numba.core.ir.Assign object at 0x000002985CF67830>, 251)],
             'x1': [(<numba.core.ir.Assign object at 0x000002985CF0B0B0>, 257),
                    (<numba.core.ir.Assign object at 0x000002985CF2A210>, 299)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002985CF0A750>,
                           0)]})
2025-09-26 15:02:56,925 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002985CC58CB0>
2025-09-26 15:02:56,925 - DEBUG - Fix SSA violator on var stencil_index
2025-09-26 15:02:56,925 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:02:56,925 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,925 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:56,925 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:56,926 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:56,926 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:02:56,926 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,926 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:02:56,926 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,926 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:02:56,926 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:02:56,927 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:02:56,927 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,927 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:02:56,927 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:02:56,927 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:02:56,927 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:56,927 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,927 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:02:56,928 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:02:56,928 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:02:56,928 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:02:56,928 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:56,928 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,928 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:02:56,928 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:02:56,928 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:02:56,929 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:02:56,929 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:02:56,929 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,929 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:02:56,929 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:02:56,929 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:02:56,929 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:02:56,929 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:02:56,930 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:02:56,930 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,930 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:02:56,930 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,930 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:02:56,930 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:02:56,930 - DEBUG - on stmt: jump 194
2025-09-26 15:02:56,930 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:02:56,931 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,931 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:02:56,931 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:02:56,931 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:02:56,931 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:02:56,931 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:02:56,931 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:02:56,931 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,931 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:02:56,932 - DEBUG - on stmt: jump 208
2025-09-26 15:02:56,932 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:02:56,932 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,932 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:02:56,932 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:02:56,932 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:02:56,932 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,932 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:02:56,932 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:56,933 - DEBUG - first assign: stencil_index
2025-09-26 15:02:56,933 - DEBUG - replaced with: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:56,933 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:56,933 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:56,933 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:56,933 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,933 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,934 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:02:56,934 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:02:56,934 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:02:56,934 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,934 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:02:56,934 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,934 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,934 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:02:56,935 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:02:56,935 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,935 - DEBUG - on stmt: jump 251
2025-09-26 15:02:56,935 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:02:56,935 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,935 - DEBUG - on stmt: jump 257
2025-09-26 15:02:56,935 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:02:56,935 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,935 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:02:56,935 - DEBUG - on stmt: jump 257
2025-09-26 15:02:56,936 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:02:56,936 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,936 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:02:56,936 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:02:56,936 - DEBUG - replaced with: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:02:56,936 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:56,936 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:56,936 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:56,936 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,937 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,937 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:02:56,937 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:02:56,937 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:02:56,937 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,937 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:02:56,937 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,937 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,938 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:02:56,938 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:02:56,938 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,938 - DEBUG - on stmt: jump 299
2025-09-26 15:02:56,938 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:02:56,938 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,938 - DEBUG - on stmt: jump 305
2025-09-26 15:02:56,939 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:02:56,939 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,939 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:02:56,939 - DEBUG - on stmt: jump 305
2025-09-26 15:02:56,939 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:02:56,939 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,939 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,939 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,939 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:02:56,940 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:02:56,940 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,940 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,940 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:02:56,940 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,940 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,941 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:02:56,941 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,941 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:02:56,941 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:02:56,941 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:02:56,941 - DEBUG - on stmt: jump 413
2025-09-26 15:02:56,941 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:02:56,941 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,941 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,942 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:02:56,942 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,942 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,942 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:02:56,942 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,942 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:02:56,942 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:02:56,942 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:02:56,942 - DEBUG - on stmt: jump 413
2025-09-26 15:02:56,943 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:02:56,943 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,943 - DEBUG - on stmt: jump 194
2025-09-26 15:02:56,943 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002985CFCAF90>],
             257: [<numba.core.ir.Assign object at 0x000002985CFCAE10>]})
2025-09-26 15:02:56,943 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:02:56,943 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,943 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:56,943 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:56,944 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:56,944 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:02:56,944 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,944 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:02:56,944 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,944 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:02:56,944 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:02:56,944 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:02:56,944 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,945 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:02:56,945 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:02:56,945 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:02:56,945 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:56,945 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,945 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:02:56,945 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:02:56,945 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:02:56,946 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:02:56,946 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:56,946 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,946 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:02:56,946 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:02:56,946 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:02:56,946 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:02:56,946 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:02:56,946 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,947 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:02:56,947 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:02:56,947 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:02:56,947 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:02:56,947 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:02:56,947 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:02:56,947 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,948 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:02:56,948 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,948 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:02:56,948 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:02:56,948 - DEBUG - on stmt: jump 194
2025-09-26 15:02:56,948 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:02:56,948 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,948 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:02:56,949 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:02:56,949 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:02:56,949 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:02:56,949 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:02:56,949 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:02:56,949 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,949 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:02:56,950 - DEBUG - on stmt: jump 208
2025-09-26 15:02:56,950 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:02:56,950 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,950 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:02:56,950 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:02:56,950 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:02:56,950 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,950 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:02:56,951 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:56,951 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:56,951 - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:56,951 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:56,951 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:56,952 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,952 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,952 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:02:56,952 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:02:56,952 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:02:56,952 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,953 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:02:56,953 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,953 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,953 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:02:56,953 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:02:56,953 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,953 - DEBUG - on stmt: jump 251
2025-09-26 15:02:56,954 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:02:56,954 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,954 - DEBUG - on stmt: jump 257
2025-09-26 15:02:56,954 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:02:56,954 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,954 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:02:56,954 - DEBUG - on stmt: jump 257
2025-09-26 15:02:56,954 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:02:56,954 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,955 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:02:56,955 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:02:56,955 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:56,955 - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:56,955 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:56,955 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:56,956 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:56,956 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,956 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,956 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:02:56,956 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:02:56,956 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:02:56,956 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,956 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:02:56,957 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,957 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,957 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:02:56,957 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:02:56,957 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,957 - DEBUG - on stmt: jump 299
2025-09-26 15:02:56,957 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:02:56,957 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,957 - DEBUG - on stmt: jump 305
2025-09-26 15:02:56,957 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:02:56,958 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,958 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:02:56,958 - DEBUG - on stmt: jump 305
2025-09-26 15:02:56,958 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:02:56,958 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,958 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,958 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,958 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:02:56,959 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:02:56,959 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,959 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,959 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:02:56,959 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,959 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,959 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:02:56,959 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,959 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:02:56,960 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:02:56,960 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:02:56,960 - DEBUG - on stmt: jump 413
2025-09-26 15:02:56,960 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:02:56,960 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,960 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,960 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:02:56,960 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,961 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,961 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:02:56,961 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,961 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:02:56,961 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:02:56,961 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:02:56,962 - DEBUG - on stmt: jump 413
2025-09-26 15:02:56,962 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:02:56,962 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,962 - DEBUG - on stmt: jump 194
2025-09-26 15:02:56,962 - DEBUG - Fix SSA violator on var x0
2025-09-26 15:02:56,962 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:02:56,962 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,963 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:56,963 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:56,963 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:56,963 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:02:56,963 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,963 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:02:56,963 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,964 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:02:56,964 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:02:56,964 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:02:56,964 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,964 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:02:56,964 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:02:56,964 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:02:56,965 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:56,965 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,965 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:02:56,965 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:02:56,965 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:02:56,965 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:02:56,965 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:56,966 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,966 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:02:56,966 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:02:56,966 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:02:56,966 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:02:56,966 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:02:56,966 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,966 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:02:56,967 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:02:56,967 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:02:56,967 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:02:56,967 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:02:56,967 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:02:56,967 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,967 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:02:56,967 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,968 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:02:56,968 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:02:56,968 - DEBUG - on stmt: jump 194
2025-09-26 15:02:56,968 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:02:56,968 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,968 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:02:56,968 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:02:56,968 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:02:56,969 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:02:56,969 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:02:56,969 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:02:56,969 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,969 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:02:56,969 - DEBUG - on stmt: jump 208
2025-09-26 15:02:56,969 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:02:56,969 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,969 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:02:56,970 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:02:56,970 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:02:56,970 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,970 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:02:56,970 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:56,970 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:56,970 - DEBUG - first assign: x0
2025-09-26 15:02:56,970 - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:56,970 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:56,971 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:56,971 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,971 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,971 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:02:56,971 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:02:56,971 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:02:56,971 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,971 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:02:56,971 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,971 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,972 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:02:56,972 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:02:56,972 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,972 - DEBUG - on stmt: jump 251
2025-09-26 15:02:56,972 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:02:56,972 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,972 - DEBUG - on stmt: jump 257
2025-09-26 15:02:56,973 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:02:56,973 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,973 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:02:56,973 - DEBUG - replaced with: x0.1 = const(int, 0)
2025-09-26 15:02:56,973 - DEBUG - on stmt: jump 257
2025-09-26 15:02:56,973 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:02:56,973 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,974 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:02:56,974 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:02:56,974 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:56,974 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:56,974 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:56,974 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,974 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,974 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:02:56,975 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:02:56,975 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:02:56,975 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,975 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:02:56,975 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,975 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,975 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:02:56,975 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:02:56,976 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,976 - DEBUG - on stmt: jump 299
2025-09-26 15:02:56,976 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:02:56,976 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,976 - DEBUG - on stmt: jump 305
2025-09-26 15:02:56,976 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:02:56,976 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,976 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:02:56,976 - DEBUG - on stmt: jump 305
2025-09-26 15:02:56,976 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:02:56,977 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,977 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,977 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,977 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:02:56,977 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:02:56,977 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,977 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,977 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:02:56,978 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,978 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,978 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:02:56,978 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,978 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:02:56,978 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:02:56,978 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:02:56,979 - DEBUG - on stmt: jump 413
2025-09-26 15:02:56,979 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:02:56,979 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,979 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,979 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:02:56,979 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,979 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,979 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:02:56,980 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,980 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:02:56,980 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:02:56,980 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:02:56,980 - DEBUG - on stmt: jump 413
2025-09-26 15:02:56,980 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:02:56,980 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEA9E10>
2025-09-26 15:02:56,981 - DEBUG - on stmt: jump 194
2025-09-26 15:02:56,981 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002985CFC94F0>],
             251: [<numba.core.ir.Assign object at 0x000002985CFCB0B0>]})
2025-09-26 15:02:56,981 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:02:56,981 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,981 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:56,981 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:56,981 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:56,981 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:02:56,982 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,982 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:02:56,982 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,982 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:02:56,982 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:02:56,982 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:02:56,982 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,982 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:02:56,983 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:02:56,983 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:02:56,983 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:56,983 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,983 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:02:56,983 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:02:56,983 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:02:56,983 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:02:56,984 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:56,984 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,984 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:02:56,984 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:02:56,984 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:02:56,984 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:02:56,984 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:02:56,984 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,984 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:02:56,985 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:02:56,985 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:02:56,985 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:02:56,985 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:02:56,985 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:02:56,985 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,985 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:02:56,985 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,986 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:02:56,986 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:02:56,986 - DEBUG - on stmt: jump 194
2025-09-26 15:02:56,986 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:02:56,986 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,986 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:02:56,986 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:02:56,986 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:02:56,986 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:02:56,986 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:02:56,987 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:02:56,987 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,987 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:02:56,987 - DEBUG - on stmt: jump 208
2025-09-26 15:02:56,987 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:02:56,987 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,987 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:02:56,987 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:02:56,987 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:02:56,987 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,988 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:02:56,988 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:56,988 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:56,988 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:56,988 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:56,988 - DEBUG - find_def var='x0' stmt=$24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:56,988 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,988 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,989 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:02:56,989 - DEBUG - find_def var='x0' stmt=$phi32.0 = x0
2025-09-26 15:02:56,989 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:02:56,989 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:02:56,989 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,989 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:02:56,989 - DEBUG - find_def var='x0' stmt=$34compare_op.2 = x0 <= threshold
2025-09-26 15:02:56,989 - DEBUG - find_def_from_top label 209
2025-09-26 15:02:56,989 - DEBUG - idom 208 from label 209
2025-09-26 15:02:56,989 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:02:56,990 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,990 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,990 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:02:56,990 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:02:56,990 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,990 - DEBUG - on stmt: jump 251
2025-09-26 15:02:56,990 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:02:56,990 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,990 - DEBUG - on stmt: jump 257
2025-09-26 15:02:56,991 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:02:56,991 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,991 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:02:56,991 - DEBUG - on stmt: jump 257
2025-09-26 15:02:56,991 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:02:56,991 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,991 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:02:56,991 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:02:56,992 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:56,992 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:56,992 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:56,992 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,992 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,992 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:02:56,992 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:02:56,993 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:02:56,993 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,993 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:02:56,993 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,993 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,993 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:02:56,994 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:02:56,994 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,994 - DEBUG - on stmt: jump 299
2025-09-26 15:02:56,994 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:02:56,994 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,994 - DEBUG - on stmt: jump 305
2025-09-26 15:02:56,994 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:02:56,995 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,995 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:02:56,995 - DEBUG - on stmt: jump 305
2025-09-26 15:02:56,995 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:02:56,995 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,995 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:02:56,995 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,995 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:02:56,996 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:02:56,996 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:56,996 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,996 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:02:56,996 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,996 - DEBUG - find_def var='x0' stmt=$148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,996 - DEBUG - find_def_from_top label 309
2025-09-26 15:02:56,996 - DEBUG - idom 305 from label 309
2025-09-26 15:02:56,997 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:02:56,997 - DEBUG - find_def_from_top label 305
2025-09-26 15:02:56,997 - DEBUG - idom 257 from label 305
2025-09-26 15:02:56,997 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:02:56,997 - DEBUG - find_def_from_top label 257
2025-09-26 15:02:56,997 - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 257
2025-09-26 15:02:56,997 - DEBUG - find_def_from_bottom label 209
2025-09-26 15:02:56,997 - DEBUG - find_def_from_top label 209
2025-09-26 15:02:56,997 - DEBUG - idom 208 from label 209
2025-09-26 15:02:56,997 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:02:56,998 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:56,998 - DEBUG - find_def_from_bottom label 251
2025-09-26 15:02:56,998 - DEBUG - incoming_def x0.1 = const(int, 0)
2025-09-26 15:02:56,998 - DEBUG - find_def_from_bottom label 253
2025-09-26 15:02:56,998 - DEBUG - find_def_from_top label 253
2025-09-26 15:02:56,998 - DEBUG - idom 208 from label 253
2025-09-26 15:02:56,998 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:02:56,998 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:56,998 - DEBUG - replaced with: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,999 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:56,999 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:02:56,999 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:56,999 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:02:56,999 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:02:56,999 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:02:56,999 - DEBUG - on stmt: jump 413
2025-09-26 15:02:56,999 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:02:57,000 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:57,000 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:57,000 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:02:57,000 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,000 - DEBUG - find_def var='x0' stmt=$238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,000 - DEBUG - find_def_from_top label 323
2025-09-26 15:02:57,000 - DEBUG - idom 305 from label 323
2025-09-26 15:02:57,000 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:02:57,000 - DEBUG - find_def_from_top label 305
2025-09-26 15:02:57,000 - DEBUG - idom 257 from label 305
2025-09-26 15:02:57,001 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:02:57,001 - DEBUG - replaced with: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,001 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:57,001 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:02:57,001 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,001 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:02:57,001 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:02:57,001 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:02:57,001 - DEBUG - on stmt: jump 413
2025-09-26 15:02:57,002 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:02:57,002 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEA9E10>
2025-09-26 15:02:57,002 - DEBUG - on stmt: jump 194
2025-09-26 15:02:57,002 - DEBUG - Fix SSA violator on var x1
2025-09-26 15:02:57,002 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:02:57,002 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEEB950>
2025-09-26 15:02:57,002 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:57,002 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:57,002 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:57,002 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:02:57,003 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:57,003 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:02:57,003 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:57,003 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:02:57,003 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:02:57,003 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:02:57,003 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,004 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:02:57,004 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:02:57,004 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:02:57,004 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:57,004 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,004 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:02:57,004 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:02:57,005 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:02:57,005 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:02:57,005 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:57,005 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,005 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:02:57,005 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:02:57,005 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:02:57,006 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:02:57,006 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:02:57,006 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,006 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:02:57,006 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:02:57,006 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:02:57,006 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:02:57,006 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:02:57,007 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:02:57,007 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,007 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:02:57,007 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,007 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:02:57,007 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:02:57,007 - DEBUG - on stmt: jump 194
2025-09-26 15:02:57,008 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:02:57,008 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEEB950>
2025-09-26 15:02:57,008 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:02:57,008 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:02:57,008 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:02:57,008 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:02:57,008 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:02:57,008 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:02:57,009 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEEB950>
2025-09-26 15:02:57,009 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:02:57,009 - DEBUG - on stmt: jump 208
2025-09-26 15:02:57,009 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:02:57,009 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEEB950>
2025-09-26 15:02:57,009 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:02:57,009 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:02:57,009 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:02:57,009 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEEB950>
2025-09-26 15:02:57,009 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:02:57,010 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:57,010 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:57,010 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:57,010 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:57,010 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:02:57,010 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,010 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:02:57,010 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:02:57,010 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:02:57,011 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEEB950>
2025-09-26 15:02:57,011 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:02:57,011 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:02:57,011 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,011 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:02:57,011 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:02:57,011 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEEB950>
2025-09-26 15:02:57,011 - DEBUG - on stmt: jump 251
2025-09-26 15:02:57,011 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:02:57,011 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEEB950>
2025-09-26 15:02:57,012 - DEBUG - on stmt: jump 257
2025-09-26 15:02:57,012 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:02:57,012 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEEB950>
2025-09-26 15:02:57,012 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:02:57,012 - DEBUG - on stmt: jump 257
2025-09-26 15:02:57,012 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:02:57,012 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEEB950>
2025-09-26 15:02:57,012 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:02:57,012 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:02:57,012 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:02:57,013 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:57,013 - DEBUG - first assign: x1
2025-09-26 15:02:57,013 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:57,013 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:57,013 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:57,013 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:02:57,013 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,013 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:02:57,013 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:02:57,014 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:02:57,014 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEEB950>
2025-09-26 15:02:57,014 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:02:57,014 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:02:57,014 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,014 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:02:57,014 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:02:57,014 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEEB950>
2025-09-26 15:02:57,015 - DEBUG - on stmt: jump 299
2025-09-26 15:02:57,015 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:02:57,015 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEEB950>
2025-09-26 15:02:57,015 - DEBUG - on stmt: jump 305
2025-09-26 15:02:57,015 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:02:57,015 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEEB950>
2025-09-26 15:02:57,015 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:02:57,015 - DEBUG - replaced with: x1.1 = const(int, 0)
2025-09-26 15:02:57,015 - DEBUG - on stmt: jump 305
2025-09-26 15:02:57,015 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:02:57,016 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEEB950>
2025-09-26 15:02:57,016 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:02:57,016 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,016 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:02:57,016 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:02:57,016 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEEB950>
2025-09-26 15:02:57,016 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:57,016 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:02:57,016 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,016 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:57,017 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:02:57,017 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,017 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:02:57,017 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:02:57,017 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:02:57,017 - DEBUG - on stmt: jump 413
2025-09-26 15:02:57,017 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:02:57,018 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEEB950>
2025-09-26 15:02:57,018 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:57,018 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:02:57,018 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,018 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:57,018 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:02:57,018 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,019 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:02:57,019 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:02:57,019 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:02:57,019 - DEBUG - on stmt: jump 413
2025-09-26 15:02:57,019 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:02:57,019 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CEEB950>
2025-09-26 15:02:57,019 - DEBUG - on stmt: jump 194
2025-09-26 15:02:57,019 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {257: [<numba.core.ir.Assign object at 0x000002985CFC8B30>],
             299: [<numba.core.ir.Assign object at 0x000002985CFC91F0>]})
2025-09-26 15:02:57,020 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:02:57,020 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEEB950>
2025-09-26 15:02:57,020 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:02:57,020 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:02:57,020 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:02:57,020 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:02:57,021 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:57,021 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:02:57,021 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:57,021 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:02:57,021 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:02:57,021 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:02:57,021 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,022 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:02:57,022 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:02:57,022 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:02:57,022 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:57,022 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,022 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:02:57,022 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:02:57,022 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:02:57,023 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:02:57,023 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:02:57,023 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,023 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:02:57,023 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:02:57,023 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:02:57,023 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:02:57,024 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:02:57,024 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,024 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:02:57,024 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:02:57,024 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:02:57,024 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:02:57,024 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:02:57,024 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:02:57,025 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,025 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:02:57,025 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,025 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:02:57,025 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:02:57,025 - DEBUG - on stmt: jump 194
2025-09-26 15:02:57,025 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:02:57,025 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEEB950>
2025-09-26 15:02:57,026 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:02:57,026 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:02:57,026 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:02:57,026 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:02:57,026 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:02:57,026 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:02:57,026 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEEB950>
2025-09-26 15:02:57,026 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:02:57,026 - DEBUG - on stmt: jump 208
2025-09-26 15:02:57,026 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:02:57,027 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEEB950>
2025-09-26 15:02:57,027 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:02:57,027 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:02:57,027 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:02:57,027 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEEB950>
2025-09-26 15:02:57,027 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:02:57,027 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:02:57,027 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:02:57,027 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:57,027 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:02:57,028 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:02:57,028 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,028 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:02:57,028 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:02:57,028 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:02:57,028 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEEB950>
2025-09-26 15:02:57,028 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:02:57,028 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:02:57,028 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,029 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:02:57,029 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:02:57,029 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEEB950>
2025-09-26 15:02:57,029 - DEBUG - on stmt: jump 251
2025-09-26 15:02:57,029 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:02:57,029 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEEB950>
2025-09-26 15:02:57,029 - DEBUG - on stmt: jump 257
2025-09-26 15:02:57,029 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:02:57,029 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEEB950>
2025-09-26 15:02:57,030 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:02:57,030 - DEBUG - on stmt: jump 257
2025-09-26 15:02:57,030 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:02:57,030 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEEB950>
2025-09-26 15:02:57,030 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:02:57,030 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:02:57,030 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:02:57,030 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:57,030 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:02:57,031 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:57,031 - DEBUG - find_def var='x1' stmt=$72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:02:57,031 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:02:57,031 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,031 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:02:57,031 - DEBUG - find_def var='x1' stmt=$phi80.0 = x1
2025-09-26 15:02:57,031 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:02:57,032 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:02:57,032 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEEB950>
2025-09-26 15:02:57,032 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:02:57,032 - DEBUG - find_def var='x1' stmt=$82compare_op.2 = x1 <= threshold
2025-09-26 15:02:57,032 - DEBUG - find_def_from_top label 261
2025-09-26 15:02:57,032 - DEBUG - idom 257 from label 261
2025-09-26 15:02:57,032 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:02:57,032 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:02:57,033 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,033 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:02:57,033 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:02:57,033 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEEB950>
2025-09-26 15:02:57,033 - DEBUG - on stmt: jump 299
2025-09-26 15:02:57,033 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:02:57,033 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEEB950>
2025-09-26 15:02:57,034 - DEBUG - on stmt: jump 305
2025-09-26 15:02:57,034 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:02:57,034 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEEB950>
2025-09-26 15:02:57,034 - DEBUG - on stmt: x1.1 = const(int, 0)
2025-09-26 15:02:57,034 - DEBUG - on stmt: jump 305
2025-09-26 15:02:57,034 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:02:57,034 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEEB950>
2025-09-26 15:02:57,034 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:02:57,034 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,035 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:02:57,035 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:02:57,035 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEEB950>
2025-09-26 15:02:57,035 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:57,035 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:02:57,035 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,035 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:57,035 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:02:57,036 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,036 - DEBUG - find_def var='x1' stmt=$190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,036 - DEBUG - find_def_from_top label 309
2025-09-26 15:02:57,036 - DEBUG - idom 305 from label 309
2025-09-26 15:02:57,036 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:02:57,036 - DEBUG - find_def_from_top label 305
2025-09-26 15:02:57,036 - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 305
2025-09-26 15:02:57,036 - DEBUG - find_def_from_bottom label 299
2025-09-26 15:02:57,036 - DEBUG - incoming_def x1.1 = const(int, 0)
2025-09-26 15:02:57,036 - DEBUG - find_def_from_bottom label 301
2025-09-26 15:02:57,037 - DEBUG - find_def_from_top label 301
2025-09-26 15:02:57,037 - DEBUG - idom 257 from label 301
2025-09-26 15:02:57,037 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:02:57,037 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:57,037 - DEBUG - find_def_from_bottom label 261
2025-09-26 15:02:57,037 - DEBUG - find_def_from_top label 261
2025-09-26 15:02:57,037 - DEBUG - idom 257 from label 261
2025-09-26 15:02:57,037 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:02:57,037 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:02:57,037 - DEBUG - replaced with: $190call.9 = call $166load_attr.6(x1.2, func=$166load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,038 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:02:57,038 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:02:57,038 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:02:57,038 - DEBUG - on stmt: jump 413
2025-09-26 15:02:57,038 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:02:57,038 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEEB950>
2025-09-26 15:02:57,038 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:57,038 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:02:57,038 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,039 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:02:57,039 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:02:57,039 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,039 - DEBUG - find_def var='x1' stmt=$280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,039 - DEBUG - find_def_from_top label 323
2025-09-26 15:02:57,039 - DEBUG - idom 305 from label 323
2025-09-26 15:02:57,039 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:02:57,040 - DEBUG - replaced with: $280call.9 = call $256load_attr.6(x1.2, func=$256load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:02:57,040 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:02:57,040 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:02:57,040 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:02:57,040 - DEBUG - on stmt: jump 413
2025-09-26 15:02:57,040 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:02:57,040 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CEEB950>
2025-09-26 15:02:57,040 - DEBUG - on stmt: jump 194
2025-09-26 15:02:57,053 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с librosa: 'function' object has no attribute 'get_call_template'
2025-09-26 15:02:57,059 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 15:02:57,060 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 15:02:57,060 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\Incode - Know.mp3'>)))], 'idempotency_key': 'stainless-python-retry-49270af6-aa08-4646-8d53-ae93db173b11', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:02:57,061 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:02:57,062 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:02:57,062 - DEBUG - send_request_headers.complete
2025-09-26 15:02:57,062 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:02:57,065 - DEBUG - send_request_body.complete
2025-09-26 15:02:57,065 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:02:59,110 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:02:59 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'610'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'622'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_4d95741a0d1245a680fe868f8457b760'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529d82de1f8d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:02:59,110 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:02:59,110 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:02:59,111 - DEBUG - receive_response_body.complete
2025-09-26 15:02:59,111 - DEBUG - response_closed.started
2025-09-26 15:02:59,111 - DEBUG - response_closed.complete
2025-09-26 15:02:59,111 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:02:59 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '610', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '622', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_4d95741a0d1245a680fe868f8457b760', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529d82de1f8d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:02:59,111 - DEBUG - request_id: req_4d95741a0d1245a680fe868f8457b760
2025-09-26 15:02:59,112 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:02:59,112 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:02:59,112 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:02:59,112 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: '' (длина: 0)
2025-09-26 15:02:59,112 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 2 - альтернативный язык: en
2025-09-26 15:02:59,113 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\Incode - Know.mp3'>)))], 'idempotency_key': 'stainless-python-retry-fcbfdab8-4e28-4491-b245-67e799f5eca3', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'en', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:02:59,114 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:02:59,114 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:02:59,114 - DEBUG - send_request_headers.complete
2025-09-26 15:02:59,114 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:02:59,117 - DEBUG - send_request_body.complete
2025-09-26 15:02:59,117 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:01,966 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:01 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'36'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1368'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1380'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_69b492f6c0d9415db99924652562d56b'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529d8fae1d8d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:01,967 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:01,967 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:01,967 - DEBUG - receive_response_body.complete
2025-09-26 15:03:01,967 - DEBUG - response_closed.started
2025-09-26 15:03:01,968 - DEBUG - response_closed.complete
2025-09-26 15:03:01,968 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:01 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '36', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1368', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1380', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_69b492f6c0d9415db99924652562d56b', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529d8fae1d8d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:01,968 - DEBUG - request_id: req_69b492f6c0d9415db99924652562d56b
2025-09-26 15:03:01,969 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'LALALALALALALALALALALALALALALALALAL'
2025-09-26 15:03:01,969 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:03:01,970 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'LALALALALALALALALALALALALALALALALAL'
2025-09-26 15:03:01,970 - DEBUG - ТРАНСКРИПЦИЯ: Результат 2: 'LALALALALALALALALALALALALALALALALAL' (длина: 35)
2025-09-26 15:03:01,970 - DEBUG - ТРАНСКРИПЦИЯ: Выбран результат альтернативного языка
2025-09-26 15:03:01,971 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 4 - музыкальный промпт
2025-09-26 15:03:01,971 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\Incode - Know.mp3'>)))], 'idempotency_key': 'stainless-python-retry-60e60fc8-0841-4c96-868f-57297ba24011', 'json_data': {'model': 'gpt-4o-transcribe', 'prompt': 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.', 'response_format': 'text'}}
2025-09-26 15:03:01,972 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:01,972 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:01,973 - DEBUG - send_request_headers.complete
2025-09-26 15:03:01,973 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:01,976 - DEBUG - send_request_body.complete
2025-09-26 15:03:01,976 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:04,176 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:04 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'864'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'880'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_c69d5a2c9d0447eea28a2a994a52ebd4'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529da18aa08d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:04,177 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:04,177 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:04,177 - DEBUG - receive_response_body.complete
2025-09-26 15:03:04,177 - DEBUG - response_closed.started
2025-09-26 15:03:04,178 - DEBUG - response_closed.complete
2025-09-26 15:03:04,178 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:04 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '864', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '880', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_c69d5a2c9d0447eea28a2a994a52ebd4', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529da18aa08d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:04,178 - DEBUG - request_id: req_c69d5a2c9d0447eea28a2a994a52ebd4
2025-09-26 15:03:04,179 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:03:04,179 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.'
2025-09-26 15:03:04,179 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:03:04,179 - DEBUG - ТРАНСКРИПЦИЯ: Результат музыкального промпта: '' (длина: 0)
2025-09-26 15:03:04,179 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 5 - английский язык с музыкальным промптом
2025-09-26 15:03:04,180 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\Incode - Know.mp3'>)))], 'idempotency_key': 'stainless-python-retry-77889a2c-dc32-44ce-94c9-d3d23ea59f6b', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'en', 'prompt': 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.', 'response_format': 'text'}}
2025-09-26 15:03:04,181 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:04,181 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:04,182 - DEBUG - send_request_headers.complete
2025-09-26 15:03:04,182 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:04,184 - DEBUG - send_request_body.complete
2025-09-26 15:03:04,184 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:06,216 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:06 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'3'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'703'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'713'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_47355869c395422fbacb761b7e329ffb'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529daf59d28d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:06,217 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:06,217 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:06,217 - DEBUG - receive_response_body.complete
2025-09-26 15:03:06,218 - DEBUG - response_closed.started
2025-09-26 15:03:06,218 - DEBUG - response_closed.complete
2025-09-26 15:03:06,218 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:06 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '3', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '703', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '713', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_47355869c395422fbacb761b7e329ffb', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529daf59d28d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:06,218 - DEBUG - request_id: req_47355869c395422fbacb761b7e329ffb
2025-09-26 15:03:06,219 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: '""'
2025-09-26 15:03:06,219 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.'
2025-09-26 15:03:06,219 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: '""'
2025-09-26 15:03:06,220 - DEBUG - ТРАНСКРИПЦИЯ: Результат английского музыкального промпта: '""' (длина: 2)
2025-09-26 15:03:06,220 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'LALALALALALALALALALALALALALALALALAL'
2025-09-26 15:03:06,220 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:03:06,220 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'LALALALALALALALALALALALALALALALALAL'
2025-09-26 15:03:06,221 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\Incode - Know.mp3'>)))], 'idempotency_key': 'stainless-python-retry-e7c370b6-4491-4dd7-b9f3-1d3f9a8efc38', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:03:06,222 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:06,222 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:06,223 - DEBUG - send_request_headers.complete
2025-09-26 15:03:06,223 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:06,226 - DEBUG - send_request_body.complete
2025-09-26 15:03:06,226 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:08,106 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:08 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'17'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'554'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'565'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_ad2cf63555024a26a997afcbf353bb5a'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529dbc19cf8d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:08,107 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:08,107 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:08,107 - DEBUG - receive_response_body.complete
2025-09-26 15:03:08,108 - DEBUG - response_closed.started
2025-09-26 15:03:08,108 - DEBUG - response_closed.complete
2025-09-26 15:03:08,108 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:08 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '17', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '554', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '565', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_ad2cf63555024a26a997afcbf353bb5a', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529dbc19cf8d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:08,109 - DEBUG - request_id: req_ad2cf63555024a26a997afcbf353bb5a
2025-09-26 15:03:08,109 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Апуляйра'
2025-09-26 15:03:08,109 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:03:08,109 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Апуляйра'
2025-09-26 15:03:08,111 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a324ee04-01e0-4568-b716-95ed185500e2', 'json_data': {'messages': [{'role': 'system', 'content': 'Ты — специализированная система для анализа аудиозаписей.\nТвоя единственная задача — классифицировать входной аудиофайл в одну из категорий: музыка, речь, шум.\n\nВАЖНО: Ты анализируешь РЕЗУЛЬТАТ ТРАНСКРИПЦИИ аудиофайла, а не сам аудиофайл. Это означает, что:\n- Если в аудио была музыка с вокалом, то в транскрипции будут слова песни\n- Если в аудио была речь, то в транскрипции будет связный текст\n- Если в аудио был шум, то в транскрипции будет мало слов или галлюцинации\n\nКатегории классификации:\n\nМузыка (music):\n- Это песня, музыкальная композиция с вокалом\n- Характерные признаки в транскрипции:\n  * Повторяющиеся фразы или слова (припев)\n  * Рифмы и ритмические паттерны\n  * Музыкальные звуки: "ла-ла-ла", "на-на-на", "о-о-о", "а-а-а"\n  * Эмоциональные восклицания: "Ауф!", "Ой!", "Ах!"\n  * Короткие фразы без логической связи\n  * Слова, которые звучат как песня, а не как обычная речь\n  * Повторяющиеся слова или фразы (припев песни)\n  * Ритмические паттерны в тексте\n\nРечь (speech):\n- Это обычная речь, разговор, диалог\n- Характерные признаки в транскрипции:\n  * Связные предложения с логической структурой\n  * Обычные слова и фразы\n  * Знаки препинания: точки, запятые, восклицательные знаки\n  * Логическая последовательность мыслей\n  * Отсутствие повторяющихся музыкальных паттернов\n  * Естественная речь без ритма\n\nШум (noise):\n- Это неречевые звуки, шум, техника, плач ребенка\n- Характерные признаки в транскрипции:\n  * Очень короткие или бессмысленные фрагменты\n  * Отсутствие связной речи\n  * Случайные слова или звуки\n  * Описания звуков: "[Music]", "[звук]", "[шум]"\n  * Повторяющиеся гласные: "ааа", "ууу", "ооо" (детский плач)\n  * Бессмысленные фразы: "Всем новичкам, всем новичкам"\n  * Короткие бессвязные слова\n\nПравила классификации:\n1. Если транскрипция содержит связную речь с логической структурой → speech\n2. Если транскрипция содержит повторяющиеся фразы, рифмы, музыкальные звуки → music\n3. Если транскрипция короткая, бессвязная или содержит описания звуков → noise\n4. При сомнениях между music и speech: если есть повторения или музыкальные звуки → music\n5. Детский плач (ааа, ууу, ооо) → noise\n6. Белый шум с бессмысленными словами → noise\n\nВАЖНЫЕ ПРИМЕРЫ:\n- "Скажи мне, не говори мне, что ты гонишь" → music (песня с повторениями)\n- "Привет, как дела?" → speech (обычная речь)\n- "Ааааааа" → noise (детский плач)\n- "Всем новичкам, всем новичкам" → noise (белый шум)\n- "Find me, find me, You can find" → music (песня с припевом)\n\nФормат ответа:\nОтвечай только в формате JSON, без лишнего текста:\n{\n  "classification": "music | speech | noise",\n  "confidence": 0.0-1.0,\n  "reasoning": "Краткое объяснение выбора: какие признаки были решающими"\n}\n\nОграничения:\n- Не добавляй ничего, кроме JSON\n- Не предлагай альтернативных категорий\n- Всегда возвращай одно значение в поле "classification"\n- Уровень уверенности (confidence) должен отражать баланс признаков:\n  * 0.9–1.0 → очень высокая уверенность\n  * 0.6–0.89 → умеренная уверенность\n  * <0.6 → низкая уверенность, признаки неоднозначны'}, {'role': 'user', 'content': 'Проанализируй следующий транскрипт аудио и классифицируй его:\n\nАпуляйра'}], 'model': 'gpt-4o-mini', 'max_tokens': 200, 'temperature': 0.1}}
2025-09-26 15:03:08,113 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-26 15:03:08,113 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:08,114 - DEBUG - send_request_headers.complete
2025-09-26 15:03:08,114 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:08,114 - DEBUG - send_request_body.complete
2025-09-26 15:03:08,114 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:10,190 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1324'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1516'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'198686'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'394ms'), (b'x-request-id', b'req_e580c3cbb3f544d981f33718afb0e84e'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529dc7ea058d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:10,190 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 15:03:10,191 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:10,191 - DEBUG - receive_response_body.complete
2025-09-26 15:03:10,191 - DEBUG - response_closed.started
2025-09-26 15:03:10,192 - DEBUG - response_closed.complete
2025-09-26 15:03:10,192 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:10 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1324', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1516', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '198686', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '394ms', 'x-request-id': 'req_e580c3cbb3f544d981f33718afb0e84e', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529dc7ea058d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:10,192 - DEBUG - request_id: req_e580c3cbb3f544d981f33718afb0e84e
2025-09-26 15:03:10,199 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\test_music.wav
2025-09-26 15:03:10,199 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 2, 'overlap': 0.25, 'jobs': 4}
2025-09-26 15:03:10,200 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла: examples\test_music.wav
2025-09-26 15:03:10,200 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 15:03:10,200 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 15:03:10,200 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\test_music.wav
2025-09-26 15:03:10,745 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 15:03:10,746 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\test_music.wav
2025-09-26 15:03:10,815 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	RESUME(arg=0, lineno=1137)
           4	LOAD_FAST(arg=0, lineno=1140)
           6	LOAD_CONST(arg=1, lineno=1140)
           8	BINARY_SUBSCR(arg=None, lineno=1140)
          12	STORE_FAST(arg=3, lineno=1140)
          14	LOAD_FAST(arg=1, lineno=1141)
          16	UNARY_NEGATIVE(arg=None, lineno=1141)
          18	LOAD_FAST(arg=3, lineno=1141)
          20	SWAP(arg=2, lineno=1141)
          22	COPY(arg=2, lineno=1141)
          24	COMPARE_OP(arg=58, lineno=1141)
          28	POP_JUMP_IF_FALSE(arg=6, lineno=1141)
          32	LOAD_FAST(arg=1, lineno=1141)
          34	COMPARE_OP(arg=58, lineno=1141)
          38	POP_JUMP_IF_FALSE(arg=5, lineno=1141)
          42	JUMP_FORWARD(arg=2, lineno=1141)
>         44	POP_TOP(arg=None, lineno=1141)
          46	JUMP_FORWARD(arg=2, lineno=1141)
>         48	LOAD_CONST(arg=1, lineno=1142)
          50	STORE_FAST(arg=3, lineno=1142)
>         52	LOAD_FAST(arg=0, lineno=1144)
          54	LOAD_CONST(arg=2, lineno=1144)
          56	BINARY_SUBSCR(arg=None, lineno=1144)
          60	STORE_FAST(arg=4, lineno=1144)
          62	LOAD_FAST(arg=1, lineno=1145)
          64	UNARY_NEGATIVE(arg=None, lineno=1145)
          66	LOAD_FAST(arg=4, lineno=1145)
          68	SWAP(arg=2, lineno=1145)
          70	COPY(arg=2, lineno=1145)
          72	COMPARE_OP(arg=58, lineno=1145)
          76	POP_JUMP_IF_FALSE(arg=6, lineno=1145)
          80	LOAD_FAST(arg=1, lineno=1145)
          82	COMPARE_OP(arg=58, lineno=1145)
          86	POP_JUMP_IF_FALSE(arg=5, lineno=1145)
          90	JUMP_FORWARD(arg=2, lineno=1145)
>         92	POP_TOP(arg=None, lineno=1145)
          94	JUMP_FORWARD(arg=2, lineno=1145)
>         96	LOAD_CONST(arg=1, lineno=1146)
          98	STORE_FAST(arg=4, lineno=1146)
>        100	LOAD_FAST(arg=2, lineno=1148)
         102	TO_BOOL(arg=None, lineno=1148)
         110	POP_JUMP_IF_FALSE(arg=45, lineno=1148)
         114	LOAD_GLOBAL(arg=0, lineno=1149)
         124	LOAD_ATTR(arg=2, lineno=1149)
         144	PUSH_NULL(arg=None, lineno=1149)
         146	LOAD_FAST(arg=3, lineno=1149)
         148	CALL(arg=1, lineno=1149)
         156	LOAD_GLOBAL(arg=0, lineno=1149)
         166	LOAD_ATTR(arg=2, lineno=1149)
         186	PUSH_NULL(arg=None, lineno=1149)
         188	LOAD_FAST(arg=4, lineno=1149)
         190	CALL(arg=1, lineno=1149)
         198	COMPARE_OP(arg=103, lineno=1149)
         202	RETURN_VALUE(arg=None, lineno=1149)
>        204	LOAD_GLOBAL(arg=0, lineno=1151)
         214	LOAD_ATTR(arg=4, lineno=1151)
         234	PUSH_NULL(arg=None, lineno=1151)
         236	LOAD_FAST(arg=3, lineno=1151)
         238	CALL(arg=1, lineno=1151)
         246	LOAD_GLOBAL(arg=0, lineno=1151)
         256	LOAD_ATTR(arg=4, lineno=1151)
         276	PUSH_NULL(arg=None, lineno=1151)
         278	LOAD_FAST(arg=4, lineno=1151)
         280	CALL(arg=1, lineno=1151)
         288	COMPARE_OP(arg=103, lineno=1151)
         292	RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:03:10,816 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:03:10,817 - DEBUG - stack: []
2025-09-26 15:03:10,817 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:03:10,817 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-09-26 15:03:10,817 - DEBUG - stack []
2025-09-26 15:03:10,817 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1137)
2025-09-26 15:03:10,817 - DEBUG - stack []
2025-09-26 15:03:10,817 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1140)
2025-09-26 15:03:10,817 - DEBUG - stack []
2025-09-26 15:03:10,817 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1140)
2025-09-26 15:03:10,818 - DEBUG - stack ['$x4.0']
2025-09-26 15:03:10,818 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-09-26 15:03:10,818 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-09-26 15:03:10,818 - DEBUG - dispatch pc=12, inst=STORE_FAST(arg=3, lineno=1140)
2025-09-26 15:03:10,818 - DEBUG - stack ['$8binary_subscr.2']
2025-09-26 15:03:10,818 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:03:10,818 - DEBUG - stack []
2025-09-26 15:03:10,818 - DEBUG - dispatch pc=16, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-09-26 15:03:10,819 - DEBUG - stack ['$threshold14.3']
2025-09-26 15:03:10,819 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=1141)
2025-09-26 15:03:10,819 - DEBUG - stack ['$16unary_negative.4']
2025-09-26 15:03:10,819 - DEBUG - dispatch pc=20, inst=SWAP(arg=2, lineno=1141)
2025-09-26 15:03:10,819 - DEBUG - stack ['$16unary_negative.4', '$x018.5']
2025-09-26 15:03:10,819 - DEBUG - dispatch pc=22, inst=COPY(arg=2, lineno=1141)
2025-09-26 15:03:10,819 - DEBUG - stack ['$x018.5', '$16unary_negative.4']
2025-09-26 15:03:10,819 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:03:10,819 - DEBUG - stack ['$x018.5', '$16unary_negative.4', '$x018.5']
2025-09-26 15:03:10,820 - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1141)
2025-09-26 15:03:10,820 - DEBUG - stack ['$x018.5', '$24compare_op.6']
2025-09-26 15:03:10,820 - DEBUG - end state. edges=[Edge(pc=32, stack=('$x018.5',), blockstack=(), npush=0), Edge(pc=44, stack=('$x018.5',), blockstack=(), npush=0)]
2025-09-26 15:03:10,820 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=44 nstack_initial=1)])
2025-09-26 15:03:10,820 - DEBUG - stack: ['$phi32.0']
2025-09-26 15:03:10,820 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-09-26 15:03:10,821 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:03:10,821 - DEBUG - stack ['$phi32.0']
2025-09-26 15:03:10,821 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:03:10,821 - DEBUG - stack ['$phi32.0', '$threshold32.1']
2025-09-26 15:03:10,821 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1141)
2025-09-26 15:03:10,822 - DEBUG - stack ['$34compare_op.2']
2025-09-26 15:03:10,822 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:10,822 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=1), State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:03:10,822 - DEBUG - stack: ['$phi44.0']
2025-09-26 15:03:10,822 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=1)
2025-09-26 15:03:10,823 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=1141)
2025-09-26 15:03:10,823 - DEBUG - stack ['$phi44.0']
2025-09-26 15:03:10,823 - DEBUG - dispatch pc=46, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:03:10,823 - DEBUG - stack []
2025-09-26 15:03:10,823 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:10,823 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:03:10,824 - DEBUG - stack: []
2025-09-26 15:03:10,824 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-09-26 15:03:10,824 - DEBUG - dispatch pc=42, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:03:10,824 - DEBUG - stack []
2025-09-26 15:03:10,824 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:10,824 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2025-09-26 15:03:10,824 - DEBUG - stack: []
2025-09-26 15:03:10,824 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-09-26 15:03:10,825 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1144)
2025-09-26 15:03:10,825 - DEBUG - stack []
2025-09-26 15:03:10,825 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=1144)
2025-09-26 15:03:10,825 - DEBUG - stack ['$x52.0']
2025-09-26 15:03:10,825 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-09-26 15:03:10,825 - DEBUG - stack ['$x52.0', '$const54.1.2']
2025-09-26 15:03:10,826 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=4, lineno=1144)
2025-09-26 15:03:10,826 - DEBUG - stack ['$56binary_subscr.2']
2025-09-26 15:03:10,826 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:03:10,826 - DEBUG - stack []
2025-09-26 15:03:10,826 - DEBUG - dispatch pc=64, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-09-26 15:03:10,826 - DEBUG - stack ['$threshold62.3']
2025-09-26 15:03:10,826 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=4, lineno=1145)
2025-09-26 15:03:10,826 - DEBUG - stack ['$64unary_negative.4']
2025-09-26 15:03:10,827 - DEBUG - dispatch pc=68, inst=SWAP(arg=2, lineno=1145)
2025-09-26 15:03:10,827 - DEBUG - stack ['$64unary_negative.4', '$x166.5']
2025-09-26 15:03:10,827 - DEBUG - dispatch pc=70, inst=COPY(arg=2, lineno=1145)
2025-09-26 15:03:10,827 - DEBUG - stack ['$x166.5', '$64unary_negative.4']
2025-09-26 15:03:10,827 - DEBUG - dispatch pc=72, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:03:10,827 - DEBUG - stack ['$x166.5', '$64unary_negative.4', '$x166.5']
2025-09-26 15:03:10,827 - DEBUG - dispatch pc=76, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1145)
2025-09-26 15:03:10,827 - DEBUG - stack ['$x166.5', '$72compare_op.6']
2025-09-26 15:03:10,828 - DEBUG - end state. edges=[Edge(pc=80, stack=('$x166.5',), blockstack=(), npush=0), Edge(pc=92, stack=('$x166.5',), blockstack=(), npush=0)]
2025-09-26 15:03:10,828 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:03:10,828 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:03:10,828 - DEBUG - stack: []
2025-09-26 15:03:10,828 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-09-26 15:03:10,828 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1142)
2025-09-26 15:03:10,828 - DEBUG - stack []
2025-09-26 15:03:10,828 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=3, lineno=1142)
2025-09-26 15:03:10,829 - DEBUG - stack ['$const48.0.1']
2025-09-26 15:03:10,829 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:10,829 - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:03:10,829 - DEBUG - stack: ['$phi80.0']
2025-09-26 15:03:10,829 - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-09-26 15:03:10,829 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:03:10,829 - DEBUG - stack ['$phi80.0']
2025-09-26 15:03:10,829 - DEBUG - dispatch pc=82, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:03:10,830 - DEBUG - stack ['$phi80.0', '$threshold80.1']
2025-09-26 15:03:10,830 - DEBUG - dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1145)
2025-09-26 15:03:10,830 - DEBUG - stack ['$82compare_op.2']
2025-09-26 15:03:10,830 - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:10,830 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:10,830 - DEBUG - stack: ['$phi92.0']
2025-09-26 15:03:10,830 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=1)
2025-09-26 15:03:10,830 - DEBUG - dispatch pc=92, inst=POP_TOP(arg=None, lineno=1145)
2025-09-26 15:03:10,831 - DEBUG - stack ['$phi92.0']
2025-09-26 15:03:10,831 - DEBUG - dispatch pc=94, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:03:10,831 - DEBUG - stack []
2025-09-26 15:03:10,831 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:10,831 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:10,831 - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:10,832 - DEBUG - stack: []
2025-09-26 15:03:10,832 - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-09-26 15:03:10,832 - DEBUG - dispatch pc=90, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:03:10,832 - DEBUG - stack []
2025-09-26 15:03:10,832 - DEBUG - end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:10,832 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-09-26 15:03:10,832 - DEBUG - stack: []
2025-09-26 15:03:10,832 - DEBUG - state.pc_initial: State(pc_initial=100 nstack_initial=0)
2025-09-26 15:03:10,833 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=2, lineno=1148)
2025-09-26 15:03:10,833 - DEBUG - stack []
2025-09-26 15:03:10,833 - DEBUG - dispatch pc=102, inst=TO_BOOL(arg=None, lineno=1148)
2025-09-26 15:03:10,833 - DEBUG - stack ['$zero_pos100.0']
2025-09-26 15:03:10,833 - DEBUG - dispatch pc=110, inst=POP_JUMP_IF_FALSE(arg=45, lineno=1148)
2025-09-26 15:03:10,833 - DEBUG - stack ['$102to_bool.1']
2025-09-26 15:03:10,833 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=204, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:10,833 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:03:10,834 - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:03:10,834 - DEBUG - stack: []
2025-09-26 15:03:10,834 - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2025-09-26 15:03:10,834 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=1, lineno=1146)
2025-09-26 15:03:10,834 - DEBUG - stack []
2025-09-26 15:03:10,834 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=4, lineno=1146)
2025-09-26 15:03:10,835 - DEBUG - stack ['$const96.0.1']
2025-09-26 15:03:10,835 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:10,835 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:10,835 - DEBUG - stack: []
2025-09-26 15:03:10,835 - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2025-09-26 15:03:10,835 - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:03:10,835 - DEBUG - stack []
2025-09-26 15:03:10,836 - DEBUG - dispatch pc=124, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:03:10,836 - DEBUG - stack ['$114load_global.0']
2025-09-26 15:03:10,836 - DEBUG - dispatch pc=144, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:03:10,836 - DEBUG - stack ['$124load_attr.1']
2025-09-26 15:03:10,836 - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=3, lineno=1149)
2025-09-26 15:03:10,836 - DEBUG - stack ['$124load_attr.1', '$null$144.2']
2025-09-26 15:03:10,836 - DEBUG - dispatch pc=148, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:03:10,837 - DEBUG - stack ['$124load_attr.1', '$null$144.2', '$x0146.3']
2025-09-26 15:03:10,837 - DEBUG - dispatch pc=156, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:03:10,837 - DEBUG - stack ['$148call.4']
2025-09-26 15:03:10,837 - DEBUG - dispatch pc=166, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:03:10,837 - DEBUG - stack ['$148call.4', '$156load_global.5']
2025-09-26 15:03:10,837 - DEBUG - dispatch pc=186, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:03:10,838 - DEBUG - stack ['$148call.4', '$166load_attr.6']
2025-09-26 15:03:10,838 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=4, lineno=1149)
2025-09-26 15:03:10,838 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7']
2025-09-26 15:03:10,838 - DEBUG - dispatch pc=190, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:03:10,838 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7', '$x1188.8']
2025-09-26 15:03:10,838 - DEBUG - dispatch pc=198, inst=COMPARE_OP(arg=103, lineno=1149)
2025-09-26 15:03:10,839 - DEBUG - stack ['$148call.4', '$190call.9']
2025-09-26 15:03:10,839 - DEBUG - dispatch pc=202, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-09-26 15:03:10,839 - DEBUG - stack ['$198compare_op.10']
2025-09-26 15:03:10,839 - DEBUG - end state. edges=[]
2025-09-26 15:03:10,839 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:10,839 - DEBUG - stack: []
2025-09-26 15:03:10,839 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=0)
2025-09-26 15:03:10,839 - DEBUG - dispatch pc=204, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:03:10,840 - DEBUG - stack []
2025-09-26 15:03:10,840 - DEBUG - dispatch pc=214, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:03:10,840 - DEBUG - stack ['$204load_global.0']
2025-09-26 15:03:10,840 - DEBUG - dispatch pc=234, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:03:10,840 - DEBUG - stack ['$214load_attr.1']
2025-09-26 15:03:10,840 - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=3, lineno=1151)
2025-09-26 15:03:10,840 - DEBUG - stack ['$214load_attr.1', '$null$234.2']
2025-09-26 15:03:10,841 - DEBUG - dispatch pc=238, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:03:10,841 - DEBUG - stack ['$214load_attr.1', '$null$234.2', '$x0236.3']
2025-09-26 15:03:10,841 - DEBUG - dispatch pc=246, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:03:10,841 - DEBUG - stack ['$238call.4']
2025-09-26 15:03:10,841 - DEBUG - dispatch pc=256, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:03:10,841 - DEBUG - stack ['$238call.4', '$246load_global.5']
2025-09-26 15:03:10,841 - DEBUG - dispatch pc=276, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:03:10,842 - DEBUG - stack ['$238call.4', '$256load_attr.6']
2025-09-26 15:03:10,842 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=4, lineno=1151)
2025-09-26 15:03:10,842 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7']
2025-09-26 15:03:10,842 - DEBUG - dispatch pc=280, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:03:10,842 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7', '$x1278.8']
2025-09-26 15:03:10,842 - DEBUG - dispatch pc=288, inst=COMPARE_OP(arg=103, lineno=1151)
2025-09-26 15:03:10,842 - DEBUG - stack ['$238call.4', '$280call.9']
2025-09-26 15:03:10,843 - DEBUG - dispatch pc=292, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:03:10,843 - DEBUG - stack ['$288compare_op.10']
2025-09-26 15:03:10,843 - DEBUG - end state. edges=[]
2025-09-26 15:03:10,843 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:10,843 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:03:10,843 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=1): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=204 nstack_initial=0): set()})
2025-09-26 15:03:10,844 - DEBUG - defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi44.0': State(pc_initial=0 nstack_initial=0),
 '$phi80.0': State(pc_initial=52 nstack_initial=0),
 '$phi92.0': State(pc_initial=52 nstack_initial=0)}
2025-09-26 15:03:10,844 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:03:10,844 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:03:10,845 - DEBUG - keep phismap: {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
 '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}}
2025-09-26 15:03:10,845 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$x018.5'},
             State(pc_initial=52 nstack_initial=0): {'$phi80.0': '$x166.5'}})
2025-09-26 15:03:10,845 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:03:10,845 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'value': '$8binary_subscr.2'}), (14, {'res': '$threshold14.3'}), (16, {'value': '$threshold14.3', 'res': '$16unary_negative.4'}), (18, {'res': '$x018.5'}), (24, {'lhs': '$16unary_negative.4', 'rhs': '$x018.5', 'res': '$24compare_op.6'}), (28, {'pred': '$24compare_op.6'})), outgoing_phis={'$phi32.0': '$x018.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$x018.5',), 44: ('$x018.5',)})
2025-09-26 15:03:10,846 - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'res': '$threshold32.1'}), (34, {'lhs': '$phi32.0', 'rhs': '$threshold32.1', 'res': '$34compare_op.2'}), (38, {'pred': '$34compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 52: ()})
2025-09-26 15:03:10,846 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ()})
2025-09-26 15:03:10,846 - DEBUG - block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((46, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:03:10,846 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$const48.0.1'}), (50, {'value': '$const48.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:03:10,846 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$x52.0'}), (54, {'res': '$const54.1.2'}), (56, {'index': '$const54.1.2', 'target': '$x52.0', 'res': '$56binary_subscr.2'}), (60, {'value': '$56binary_subscr.2'}), (62, {'res': '$threshold62.3'}), (64, {'value': '$threshold62.3', 'res': '$64unary_negative.4'}), (66, {'res': '$x166.5'}), (72, {'lhs': '$64unary_negative.4', 'rhs': '$x166.5', 'res': '$72compare_op.6'}), (76, {'pred': '$72compare_op.6'})), outgoing_phis={'$phi80.0': '$x166.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$x166.5',), 92: ('$x166.5',)})
2025-09-26 15:03:10,847 - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$threshold80.1'}), (82, {'lhs': '$phi80.0', 'rhs': '$threshold80.1', 'res': '$82compare_op.2'}), (86, {'pred': '$82compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 100: ()})
2025-09-26 15:03:10,847 - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
2025-09-26 15:03:10,847 - DEBUG - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((94, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:03:10,847 - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$const96.0.1'}), (98, {'value': '$const96.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:03:10,847 - DEBUG - block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$zero_pos100.0'}), (102, {'val': '$zero_pos100.0', 'res': '$102to_bool.1'}), (110, {'pred': '$102to_bool.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 204: ()})
2025-09-26 15:03:10,848 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'idx': 0, 'res': '$114load_global.0'}), (124, {'item': '$114load_global.0', 'res': '$124load_attr.1'}), (144, {}), (146, {'res': '$x0146.3'}), (148, {'func': '$124load_attr.1', 'args': ['$x0146.3'], 'kw_names': None, 'res': '$148call.4'}), (156, {'idx': 0, 'res': '$156load_global.5'}), (166, {'item': '$156load_global.5', 'res': '$166load_attr.6'}), (186, {}), (188, {'res': '$x1188.8'}), (190, {'func': '$166load_attr.6', 'args': ['$x1188.8'], 'kw_names': None, 'res': '$190call.9'}), (198, {'lhs': '$148call.4', 'rhs': '$190call.9', 'res': '$198compare_op.10'}), (202, {'retval': '$198compare_op.10', 'castval': '$202return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:03:10,848 - DEBUG - block_infos State(pc_initial=204 nstack_initial=0):
AdaptBlockInfo(insts=((204, {'idx': 0, 'res': '$204load_global.0'}), (214, {'item': '$204load_global.0', 'res': '$214load_attr.1'}), (234, {}), (236, {'res': '$x0236.3'}), (238, {'func': '$214load_attr.1', 'args': ['$x0236.3'], 'kw_names': None, 'res': '$238call.4'}), (246, {'idx': 0, 'res': '$246load_global.5'}), (256, {'item': '$246load_global.5', 'res': '$256load_attr.6'}), (276, {}), (278, {'res': '$x1278.8'}), (280, {'func': '$256load_attr.6', 'args': ['$x1278.8'], 'kw_names': None, 'res': '$280call.9'}), (288, {'lhs': '$238call.4', 'rhs': '$280call.9', 'res': '$288compare_op.10'}), (292, {'retval': '$288compare_op.10', 'castval': '$292return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:03:10,849 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    x0 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$const6.1.1', 'x', 'x0']
    $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$16unary_negative.4', 'threshold']
    $24compare_op.6 = $16unary_negative.4 <= x0 ['$16unary_negative.4', '$24compare_op.6', 'x0']
    $bool28 = global(bool: <class 'bool'>)   ['$bool28']
    $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.6', '$28pred', '$bool28']
    $phi32.0 = x0                            ['$phi32.0', 'x0']
    branch $28pred, 32, 44                   ['$28pred']
label 32:
    $34compare_op.2 = $phi32.0 <= threshold  ['$34compare_op.2', '$phi32.0', 'threshold']
    $bool38 = global(bool: <class 'bool'>)   ['$bool38']
    $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.2', '$38pred', '$bool38']
    branch $38pred, 42, 52                   ['$38pred']
label 42:
    jump 48                                  []
label 44:
    jump 52                                  []
label 48:
    x0 = const(int, 0)                       ['x0']
    jump 52                                  []
label 52:
    $const54.1.2 = const(int, -1)            ['$const54.1.2']
    x1 = getitem(value=x, index=$const54.1.2, fn=<built-in function getitem>) ['$const54.1.2', 'x', 'x1']
    $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$64unary_negative.4', 'threshold']
    $72compare_op.6 = $64unary_negative.4 <= x1 ['$64unary_negative.4', '$72compare_op.6', 'x1']
    $bool76 = global(bool: <class 'bool'>)   ['$bool76']
    $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$72compare_op.6', '$76pred', '$bool76']
    $phi80.0 = x1                            ['$phi80.0', 'x1']
    branch $76pred, 80, 92                   ['$76pred']
label 80:
    $82compare_op.2 = $phi80.0 <= threshold  ['$82compare_op.2', '$phi80.0', 'threshold']
    $bool86 = global(bool: <class 'bool'>)   ['$bool86']
    $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$82compare_op.2', '$86pred', '$bool86']
    branch $86pred, 90, 100                  ['$86pred']
label 90:
    jump 96                                  []
label 92:
    jump 100                                 []
label 96:
    x1 = const(int, 0)                       ['x1']
    jump 100                                 []
label 100:
    $bool110 = global(bool: <class 'bool'>)  ['$bool110']
    $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$110pred', '$bool110', 'zero_pos']
    branch $110pred, 114, 204                ['$110pred']
label 114:
    $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$114load_global.0']
    $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit) ['$114load_global.0', '$124load_attr.1']
    $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$124load_attr.1', '$148call.4', 'x0']
    $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$156load_global.5']
    $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit) ['$156load_global.5', '$166load_attr.6']
    $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.6', '$190call.9', 'x1']
    $198compare_op.10 = $148call.4 != $190call.9 ['$148call.4', '$190call.9', '$198compare_op.10']
    $202return_value.11 = cast(value=$198compare_op.10) ['$198compare_op.10', '$202return_value.11']
    return $202return_value.11               ['$202return_value.11']
label 204:
    $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$204load_global.0']
    $214load_attr.1 = getattr(value=$204load_global.0, attr=sign) ['$204load_global.0', '$214load_attr.1']
    $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.1', '$238call.4', 'x0']
    $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$246load_global.5']
    $256load_attr.6 = getattr(value=$246load_global.5, attr=sign) ['$246load_global.5', '$256load_attr.6']
    $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$256load_attr.6', '$280call.9', 'x1']
    $288compare_op.10 = $238call.4 != $280call.9 ['$238call.4', '$280call.9', '$288compare_op.10']
    $292return_value.11 = cast(value=$288compare_op.10) ['$288compare_op.10', '$292return_value.11']
    return $292return_value.11               ['$292return_value.11']

2025-09-26 15:03:10,856 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1154)
           2	RESUME(arg=0, lineno=1154)
           4	LOAD_GLOBAL(arg=1, lineno=1170)
          14	LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
          16	LOAD_FAST(arg=2, lineno=1170)
          18	CALL(arg=3, lineno=1170)
          26	LOAD_FAST(arg=3, lineno=1170)
          28	LOAD_CONST(arg=1, lineno=1170)
          30	LOAD_CONST(arg=1, lineno=1170)
          32	STORE_SLICE(arg=None, lineno=1170)
          34	RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:03:10,856 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:03:10,856 - DEBUG - stack: []
2025-09-26 15:03:10,857 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:03:10,857 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1154)
2025-09-26 15:03:10,857 - DEBUG - stack []
2025-09-26 15:03:10,857 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1154)
2025-09-26 15:03:10,857 - DEBUG - stack []
2025-09-26 15:03:10,857 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1170)
2025-09-26 15:03:10,858 - DEBUG - stack []
2025-09-26 15:03:10,858 - DEBUG - dispatch pc=14, inst=LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
2025-09-26 15:03:10,858 - DEBUG - stack ['$4load_global.0', '$null$4.1']
2025-09-26 15:03:10,858 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=1170)
2025-09-26 15:03:10,858 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3']
2025-09-26 15:03:10,858 - DEBUG - dispatch pc=18, inst=CALL(arg=3, lineno=1170)
2025-09-26 15:03:10,858 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3', '$zero_pos16.4']
2025-09-26 15:03:10,859 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=3, lineno=1170)
2025-09-26 15:03:10,859 - DEBUG - stack ['$18call.5']
2025-09-26 15:03:10,859 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:03:10,859 - DEBUG - stack ['$18call.5', '$y26.6']
2025-09-26 15:03:10,859 - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:03:10,859 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1']
2025-09-26 15:03:10,859 - DEBUG - dispatch pc=32, inst=STORE_SLICE(arg=None, lineno=1170)
2025-09-26 15:03:10,859 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1', '$const30.8.1']
2025-09-26 15:03:10,860 - DEBUG - dispatch pc=34, inst=RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:03:10,860 - DEBUG - stack []
2025-09-26 15:03:10,860 - DEBUG - end state. edges=[]
2025-09-26 15:03:10,860 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:03:10,860 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-09-26 15:03:10,860 - DEBUG - defmap: {}
2025-09-26 15:03:10,861 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:03:10,861 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:03:10,861 - DEBUG - keep phismap: {}
2025-09-26 15:03:10,861 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-09-26 15:03:10,861 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:03:10,861 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res1': '$x14.2', 'res2': '$threshold14.3'}), (16, {'res': '$zero_pos16.4'}), (18, {'func': '$4load_global.0', 'args': ['$x14.2', '$threshold14.3', '$zero_pos16.4'], 'kw_names': None, 'res': '$18call.5'}), (26, {'res': '$y26.6'}), (28, {'res': '$const28.7.1'}), (30, {'res': '$const30.8.1'}), (32, {'start': '$const28.7.1', 'end': '$const30.8.1', 'container': '$y26.6', 'value': '$18call.5', 'res': '$32store_slice.10', 'slicevar': '$32store_slice.9'}), (34, {'retval': '$const34.11', 'castval': '$34return_const.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:03:10,862 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002985CC3DCD0>) ['$4load_global.0']
    $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const28.7.1 = const(NoneType, None)     ['$const28.7.1']
    $const30.8.1 = const(NoneType, None)     ['$const30.8.1']
    $32store_slice.9 = global(slice: <class 'slice'>) ['$32store_slice.9']
    $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$32store_slice.10', '$32store_slice.9', '$const28.7.1', '$const30.8.1']
    y[$32store_slice.10] = $18call.5         ['$18call.5', '$32store_slice.10', 'y']
    $const34.11 = const(NoneType, None)      ['$const34.11']
    $34return_const.12 = cast(value=$const34.11) ['$34return_const.12', '$const34.11']
    return $34return_const.12                ['$34return_const.12']

2025-09-26 15:03:10,866 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:03:10,866 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEA9370>
2025-09-26 15:03:10,866 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:10,866 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:10,867 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:10,867 - DEBUG - on stmt: y = arg(3, name=y)
2025-09-26 15:03:10,867 - DEBUG - on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002985CC3DCD0>)
2025-09-26 15:03:10,867 - DEBUG - on stmt: $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:10,867 - DEBUG - on stmt: $const28.7.1 = const(NoneType, None)
2025-09-26 15:03:10,867 - DEBUG - on stmt: $const30.8.1 = const(NoneType, None)
2025-09-26 15:03:10,867 - DEBUG - on stmt: $32store_slice.9 = global(slice: <class 'slice'>)
2025-09-26 15:03:10,868 - DEBUG - on stmt: $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:10,868 - DEBUG - on stmt: y[slice(None, None, None)] = $18call.5
2025-09-26 15:03:10,868 - DEBUG - on stmt: $const34.11 = const(NoneType, None)
2025-09-26 15:03:10,868 - DEBUG - on stmt: $34return_const.12 = cast(value=$const34.11)
2025-09-26 15:03:10,868 - DEBUG - on stmt: return $34return_const.12
2025-09-26 15:03:10,868 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.5': [(<numba.core.ir.Assign object at 0x000002985CF0A450>,
                            0)],
             '$32store_slice.10': [(<numba.core.ir.Assign object at 0x000002985CF0BC50>,
                                    0)],
             '$32store_slice.9': [(<numba.core.ir.Assign object at 0x000002985CF0BD70>,
                                   0)],
             '$34return_const.12': [(<numba.core.ir.Assign object at 0x000002985CF0B7D0>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000002985C8DA330>,
                                  0)],
             '$const28.7.1': [(<numba.core.ir.Assign object at 0x000002985CF09F70>,
                               0)],
             '$const30.8.1': [(<numba.core.ir.Assign object at 0x000002985CF09F10>,
                               0)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x000002985CF0B830>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002985C8DA690>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002985CEDDC10>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000002985C8DA930>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002985C8DA630>,
                           0)]})
2025-09-26 15:03:10,870 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002985CEA9370>
2025-09-26 15:03:10,940 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=3, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=3, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	LOAD_CONST(arg=1, lineno=3)
          92	CALL_KW(arg=2, lineno=3)
          94	STORE_FAST(arg=4, lineno=3)
          96	LOAD_CONST(arg=2, lineno=4)
          98	LOAD_FAST(arg=4, lineno=4)
         100	LOAD_CONST(arg=0, lineno=4)
         102	LOAD_CONST(arg=3, lineno=4)
         104	STORE_SLICE(arg=None, lineno=4)
         106	LOAD_CONST(arg=2, lineno=5)
         108	LOAD_FAST(arg=4, lineno=5)
         110	LOAD_CONST(arg=2, lineno=5)
         112	LOAD_CONST(arg=0, lineno=5)
         114	STORE_SLICE(arg=None, lineno=5)
         116	LOAD_GLOBAL(arg=9, lineno=6)
         126	LOAD_GLOBAL(arg=11, lineno=6)
         136	LOAD_CONST(arg=2, lineno=6)
         138	LOAD_CONST(arg=4, lineno=6)
         140	CALL(arg=2, lineno=6)
         148	UNARY_NEGATIVE(arg=None, lineno=6)
         150	LOAD_FAST(arg=3, lineno=6)
         152	LOAD_CONST(arg=2, lineno=6)
         154	BINARY_SUBSCR(arg=None, lineno=6)
         158	LOAD_GLOBAL(arg=13, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	LOAD_CONST(arg=2, lineno=6)
         172	CALL(arg=2, lineno=6)
         180	BINARY_OP(arg=10, lineno=6)
         184	CALL(arg=2, lineno=6)
         192	GET_ITER(arg=None, lineno=6)
>        194	FOR_ITER(arg=5, lineno=6)
         198	STORE_FAST(arg=5, lineno=6)
         200	LOAD_CONST(arg=2, lineno=7)
         202	STORE_FAST(arg=6, lineno=7)
         204	JUMP_BACKWARD(arg=7, lineno=7)
>        208	END_FOR(arg=None, lineno=6)
         210	POP_TOP(arg=None, lineno=6)
         212	LOAD_FAST(arg=4, lineno=8)
         214	RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:03:10,943 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:03:10,943 - DEBUG - stack: []
2025-09-26 15:03:10,943 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:03:10,943 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-09-26 15:03:10,944 - DEBUG - stack []
2025-09-26 15:03:10,944 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2025-09-26 15:03:10,944 - DEBUG - stack []
2025-09-26 15:03:10,944 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2025-09-26 15:03:10,944 - DEBUG - stack []
2025-09-26 15:03:10,945 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2025-09-26 15:03:10,945 - DEBUG - stack ['$x4.0']
2025-09-26 15:03:10,945 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=3, lineno=2)
2025-09-26 15:03:10,945 - DEBUG - stack ['$6load_attr.1']
2025-09-26 15:03:10,945 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:03:10,946 - DEBUG - stack []
2025-09-26 15:03:10,946 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2025-09-26 15:03:10,946 - DEBUG - stack ['$28load_global.2']
2025-09-26 15:03:10,946 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=3, lineno=3)
2025-09-26 15:03:10,946 - DEBUG - stack ['$38load_attr.3', '$null$38.4']
2025-09-26 15:03:10,946 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:03:10,946 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5']
2025-09-26 15:03:10,947 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2025-09-26 15:03:10,947 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$60load_global.6']
2025-09-26 15:03:10,947 - DEBUG - dispatch pc=90, inst=LOAD_CONST(arg=1, lineno=3)
2025-09-26 15:03:10,947 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7']
2025-09-26 15:03:10,947 - DEBUG - dispatch pc=92, inst=CALL_KW(arg=2, lineno=3)
2025-09-26 15:03:10,947 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7', '$const90.8.1']
2025-09-26 15:03:10,948 - DEBUG - dispatch pc=94, inst=STORE_FAST(arg=4, lineno=3)
2025-09-26 15:03:10,948 - DEBUG - stack ['$92call_kw.9']
2025-09-26 15:03:10,948 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=2, lineno=4)
2025-09-26 15:03:10,948 - DEBUG - stack []
2025-09-26 15:03:10,948 - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=4)
2025-09-26 15:03:10,949 - DEBUG - stack ['$const96.10.2']
2025-09-26 15:03:10,949 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=0, lineno=4)
2025-09-26 15:03:10,949 - DEBUG - stack ['$const96.10.2', '$out098.11']
2025-09-26 15:03:10,949 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=3, lineno=4)
2025-09-26 15:03:10,949 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0']
2025-09-26 15:03:10,950 - DEBUG - dispatch pc=104, inst=STORE_SLICE(arg=None, lineno=4)
2025-09-26 15:03:10,950 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0', '$const102.13.3']
2025-09-26 15:03:10,950 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:03:10,950 - DEBUG - stack []
2025-09-26 15:03:10,950 - DEBUG - dispatch pc=108, inst=LOAD_FAST(arg=4, lineno=5)
2025-09-26 15:03:10,951 - DEBUG - stack ['$const106.16.2']
2025-09-26 15:03:10,951 - DEBUG - dispatch pc=110, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:03:10,951 - DEBUG - stack ['$const106.16.2', '$out0108.17']
2025-09-26 15:03:10,951 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=0, lineno=5)
2025-09-26 15:03:10,952 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2']
2025-09-26 15:03:10,952 - DEBUG - dispatch pc=114, inst=STORE_SLICE(arg=None, lineno=5)
2025-09-26 15:03:10,952 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2', '$const112.19.0']
2025-09-26 15:03:10,952 - DEBUG - dispatch pc=116, inst=LOAD_GLOBAL(arg=9, lineno=6)
2025-09-26 15:03:10,952 - DEBUG - stack []
2025-09-26 15:03:10,953 - DEBUG - dispatch pc=126, inst=LOAD_GLOBAL(arg=11, lineno=6)
2025-09-26 15:03:10,953 - DEBUG - stack ['$116load_global.22', '$null$116.23']
2025-09-26 15:03:10,953 - DEBUG - dispatch pc=136, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:03:10,953 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25']
2025-09-26 15:03:10,953 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=4, lineno=6)
2025-09-26 15:03:10,954 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2']
2025-09-26 15:03:10,954 - DEBUG - dispatch pc=140, inst=CALL(arg=2, lineno=6)
2025-09-26 15:03:10,954 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2', '$const138.27.4']
2025-09-26 15:03:10,954 - DEBUG - dispatch pc=148, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-09-26 15:03:10,954 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$140call.28']
2025-09-26 15:03:10,955 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=3, lineno=6)
2025-09-26 15:03:10,955 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29']
2025-09-26 15:03:10,955 - DEBUG - dispatch pc=152, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:03:10,955 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30']
2025-09-26 15:03:10,956 - DEBUG - dispatch pc=154, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-09-26 15:03:10,956 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30', '$const152.31.2']
2025-09-26 15:03:10,956 - DEBUG - dispatch pc=158, inst=LOAD_GLOBAL(arg=13, lineno=6)
2025-09-26 15:03:10,956 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32']
2025-09-26 15:03:10,956 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:03:10,957 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34']
2025-09-26 15:03:10,957 - DEBUG - dispatch pc=170, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:03:10,957 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2']
2025-09-26 15:03:10,957 - DEBUG - dispatch pc=172, inst=CALL(arg=2, lineno=6)
2025-09-26 15:03:10,957 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2', '$const170.36.2']
2025-09-26 15:03:10,957 - DEBUG - dispatch pc=180, inst=BINARY_OP(arg=10, lineno=6)
2025-09-26 15:03:10,958 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$172call.37']
2025-09-26 15:03:10,958 - DEBUG - dispatch pc=184, inst=CALL(arg=2, lineno=6)
2025-09-26 15:03:10,958 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$binop_sub180.38']
2025-09-26 15:03:10,958 - DEBUG - dispatch pc=192, inst=GET_ITER(arg=None, lineno=6)
2025-09-26 15:03:10,958 - DEBUG - stack ['$184call.39']
2025-09-26 15:03:10,958 - DEBUG - end state. edges=[Edge(pc=194, stack=('$192get_iter.40',), blockstack=(), npush=0)]
2025-09-26 15:03:10,958 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:03:10,959 - DEBUG - stack: ['$phi194.0']
2025-09-26 15:03:10,959 - DEBUG - state.pc_initial: State(pc_initial=194 nstack_initial=1)
2025-09-26 15:03:10,959 - DEBUG - dispatch pc=194, inst=FOR_ITER(arg=5, lineno=6)
2025-09-26 15:03:10,959 - DEBUG - stack ['$phi194.0']
2025-09-26 15:03:10,959 - DEBUG - end state. edges=[Edge(pc=208, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0), Edge(pc=198, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0)]
2025-09-26 15:03:10,959 - DEBUG - pending: deque([State(pc_initial=208 nstack_initial=2), State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:03:10,960 - DEBUG - stack: ['$phi208.0', '$phi208.1']
2025-09-26 15:03:10,960 - DEBUG - state.pc_initial: State(pc_initial=208 nstack_initial=2)
2025-09-26 15:03:10,960 - DEBUG - dispatch pc=208, inst=END_FOR(arg=None, lineno=6)
2025-09-26 15:03:10,960 - DEBUG - stack ['$phi208.0', '$phi208.1']
2025-09-26 15:03:10,960 - DEBUG - dispatch pc=210, inst=POP_TOP(arg=None, lineno=6)
2025-09-26 15:03:10,960 - DEBUG - stack ['$phi208.0']
2025-09-26 15:03:10,960 - DEBUG - dispatch pc=212, inst=LOAD_FAST(arg=4, lineno=8)
2025-09-26 15:03:10,961 - DEBUG - stack []
2025-09-26 15:03:10,961 - DEBUG - dispatch pc=214, inst=RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:03:10,961 - DEBUG - stack ['$out0212.2']
2025-09-26 15:03:10,961 - DEBUG - end state. edges=[]
2025-09-26 15:03:10,961 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:03:10,961 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2025-09-26 15:03:10,961 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2025-09-26 15:03:10,962 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=5, lineno=6)
2025-09-26 15:03:10,962 - DEBUG - stack ['$phi198.0', '$phi198.1']
2025-09-26 15:03:10,962 - DEBUG - dispatch pc=200, inst=LOAD_CONST(arg=2, lineno=7)
2025-09-26 15:03:10,962 - DEBUG - stack ['$phi198.0']
2025-09-26 15:03:10,962 - DEBUG - dispatch pc=202, inst=STORE_FAST(arg=6, lineno=7)
2025-09-26 15:03:10,962 - DEBUG - stack ['$phi198.0', '$const200.2.2']
2025-09-26 15:03:10,963 - DEBUG - dispatch pc=204, inst=JUMP_BACKWARD(arg=7, lineno=7)
2025-09-26 15:03:10,963 - DEBUG - stack ['$phi198.0']
2025-09-26 15:03:10,963 - DEBUG - end state. edges=[Edge(pc=194, stack=('$phi198.0',), blockstack=(), npush=0)]
2025-09-26 15:03:10,963 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:03:10,963 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:03:10,963 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=194 nstack_initial=1): {'$phi194.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=208 nstack_initial=2): set()})
2025-09-26 15:03:10,964 - DEBUG - defmap: {'$phi194.0': State(pc_initial=0 nstack_initial=0),
 '$phi198.1': State(pc_initial=194 nstack_initial=1),
 '$phi208.1': State(pc_initial=194 nstack_initial=1)}
2025-09-26 15:03:10,981 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi198.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:03:10,997 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:03:10,998 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:03:11,000 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:03:11,004 - DEBUG - keep phismap: {'$phi194.0': {('$192get_iter.40', State(pc_initial=0 nstack_initial=0))},
 '$phi198.1': {('$194for_iter.2', State(pc_initial=194 nstack_initial=1))}}
2025-09-26 15:03:11,005 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi194.0': '$192get_iter.40'},
             State(pc_initial=194 nstack_initial=1): {'$phi198.1': '$194for_iter.2'}})
2025-09-26 15:03:11,008 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:03:11,012 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.3'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (90, {'res': '$const90.8.1'}), (92, {'func': '$38load_attr.3', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': '$const90.8.1', 'res': '$92call_kw.9'}), (94, {'value': '$92call_kw.9'}), (96, {'res': '$const96.10.2'}), (98, {'res': '$out098.11'}), (100, {'res': '$const100.12.0'}), (102, {'res': '$const102.13.3'}), (104, {'start': '$const100.12.0', 'end': '$const102.13.3', 'container': '$out098.11', 'value': '$const96.10.2', 'res': '$104store_slice.15', 'slicevar': '$104store_slice.14'}), (106, {'res': '$const106.16.2'}), (108, {'res': '$out0108.17'}), (110, {'res': '$const110.18.2'}), (112, {'res': '$const112.19.0'}), (114, {'start': '$const110.18.2', 'end': '$const112.19.0', 'container': '$out0108.17', 'value': '$const106.16.2', 'res': '$114store_slice.21', 'slicevar': '$114store_slice.20'}), (116, {'idx': 4, 'res': '$116load_global.22'}), (126, {'idx': 5, 'res': '$126load_global.24'}), (136, {'res': '$const136.26.2'}), (138, {'res': '$const138.27.4'}), (140, {'func': '$126load_global.24', 'args': ['$const136.26.2', '$const138.27.4'], 'kw_names': None, 'res': '$140call.28'}), (148, {'value': '$140call.28', 'res': '$148unary_negative.29'}), (150, {'res': '$full_shape0150.30'}), (152, {'res': '$const152.31.2'}), (154, {'index': '$const152.31.2', 'target': '$full_shape0150.30', 'res': '$154binary_subscr.32'}), (158, {'idx': 6, 'res': '$158load_global.33'}), (168, {'res': '$const168.35.2'}), (170, {'res': '$const170.36.2'}), (172, {'func': '$158load_global.33', 'args': ['$const168.35.2', '$const170.36.2'], 'kw_names': None, 'res': '$172call.37'}), (180, {'op': '-', 'lhs': '$154binary_subscr.32', 'rhs': '$172call.37', 'res': '$binop_sub180.38'}), (184, {'func': '$116load_global.22', 'args': ['$148unary_negative.29', '$binop_sub180.38'], 'kw_names': None, 'res': '$184call.39'}), (192, {'value': '$184call.39', 'res': '$192get_iter.40'})), outgoing_phis={'$phi194.0': '$192get_iter.40'}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$192get_iter.40',)})
2025-09-26 15:03:11,013 - DEBUG - block_infos State(pc_initial=194 nstack_initial=1):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.0', 'pair': '$194for_iter.1', 'indval': '$194for_iter.2', 'pred': '$194for_iter.3'}),), outgoing_phis={'$phi198.1': '$194for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={208: ('$phi194.0', '$194for_iter.2'), 198: ('$phi194.0', '$194for_iter.2')})
2025-09-26 15:03:11,016 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$const200.2.2'}), (202, {'value': '$const200.2.2'}), (204, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$phi198.0',)})
2025-09-26 15:03:11,017 - DEBUG - block_infos State(pc_initial=208 nstack_initial=2):
AdaptBlockInfo(insts=((212, {'res': '$out0212.2'}), (214, {'retval': '$out0212.2', 'castval': '$214return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:03:11,019 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$28load_global.2']
    $38load_attr.3 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.3']
    $60load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool) ['$60load_global.6', '$70load_attr.7']
    $const_dtype = const(str, dtype)         ['$const_dtype']
    $const90.8.1 = build_tuple(items=[Var($const_dtype, <string>:3)]) ['$const90.8.1', '$const_dtype']
    out0 = call $38load_attr.3(full_shape0, func=$38load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.3', '$70load_attr.7', 'full_shape0', 'out0']
    $const96.10.2 = const(int, 0)            ['$const96.10.2']
    $const100.12.0 = const(NoneType, None)   ['$const100.12.0']
    $const102.13.3 = const(int, 1)           ['$const102.13.3']
    $104store_slice.14 = global(slice: <class 'slice'>) ['$104store_slice.14']
    $104store_slice.15 = call $104store_slice.14($const100.12.0, $const102.13.3, func=$104store_slice.14, args=(Var($const100.12.0, <string>:4), Var($const102.13.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$104store_slice.14', '$104store_slice.15', '$const100.12.0', '$const102.13.3']
    out0[$104store_slice.15] = $const96.10.2 ['$104store_slice.15', '$const96.10.2', 'out0']
    $const106.16.2 = const(int, 0)           ['$const106.16.2']
    $const110.18.2 = const(int, 0)           ['$const110.18.2']
    $const112.19.0 = const(NoneType, None)   ['$const112.19.0']
    $114store_slice.20 = global(slice: <class 'slice'>) ['$114store_slice.20']
    $114store_slice.21 = call $114store_slice.20($const110.18.2, $const112.19.0, func=$114store_slice.20, args=(Var($const110.18.2, <string>:5), Var($const112.19.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$114store_slice.20', '$114store_slice.21', '$const110.18.2', '$const112.19.0']
    out0[$114store_slice.21] = $const106.16.2 ['$114store_slice.21', '$const106.16.2', 'out0']
    $116load_global.22 = global(range: <class 'range'>) ['$116load_global.22']
    $126load_global.24 = global(min: <built-in function min>) ['$126load_global.24']
    $const136.26.2 = const(int, 0)           ['$const136.26.2']
    $const138.27.4 = const(int, -1)          ['$const138.27.4']
    $140call.28 = call $126load_global.24($const136.26.2, $const138.27.4, func=$126load_global.24, args=[Var($const136.26.2, <string>:6), Var($const138.27.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_global.24', '$140call.28', '$const136.26.2', '$const138.27.4']
    $148unary_negative.29 = unary(fn=<built-in function neg>, value=$140call.28) ['$140call.28', '$148unary_negative.29']
    $const152.31.2 = const(int, 0)           ['$const152.31.2']
    $154binary_subscr.32 = getitem(value=full_shape0, index=$const152.31.2, fn=<built-in function getitem>) ['$154binary_subscr.32', '$const152.31.2', 'full_shape0']
    $158load_global.33 = global(max: <built-in function max>) ['$158load_global.33']
    $const168.35.2 = const(int, 0)           ['$const168.35.2']
    $const170.36.2 = const(int, 0)           ['$const170.36.2']
    $172call.37 = call $158load_global.33($const168.35.2, $const170.36.2, func=$158load_global.33, args=[Var($const168.35.2, <string>:6), Var($const170.36.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$158load_global.33', '$172call.37', '$const168.35.2', '$const170.36.2']
    $binop_sub180.38 = $154binary_subscr.32 - $172call.37 ['$154binary_subscr.32', '$172call.37', '$binop_sub180.38']
    $184call.39 = call $116load_global.22($148unary_negative.29, $binop_sub180.38, func=$116load_global.22, args=[Var($148unary_negative.29, <string>:6), Var($binop_sub180.38, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.22', '$148unary_negative.29', '$184call.39', '$binop_sub180.38']
    $192get_iter.40 = getiter(value=$184call.39) ['$184call.39', '$192get_iter.40']
    $phi194.0 = $192get_iter.40              ['$192get_iter.40', '$phi194.0']
    jump 194                                 []
label 194:
    $194for_iter.1 = iternext(value=$phi194.0) ['$194for_iter.1', '$phi194.0']
    $194for_iter.2 = pair_first(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.2']
    $194for_iter.3 = pair_second(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.3']
    $phi198.1 = $194for_iter.2               ['$194for_iter.2', '$phi198.1']
    branch $194for_iter.3, 198, 208          ['$194for_iter.3']
label 198:
    index00 = $phi198.1                      ['$phi198.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 194                                 []
label 208:
    $214return_value.3 = cast(value=out0)    ['$214return_value.3', 'out0']
    return $214return_value.3                ['$214return_value.3']

2025-09-26 15:03:11,058 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:03:11,058 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEA9E10>
2025-09-26 15:03:11,058 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:11,059 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:11,059 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:11,059 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:11,059 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,059 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:11,060 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,060 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:11,060 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:11,060 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:11,061 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,061 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:11,061 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:11,061 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:11,062 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:11,062 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,062 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:11,062 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:11,062 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:11,063 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:11,063 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:11,063 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,063 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:11,063 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:11,064 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:11,064 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:11,064 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:11,064 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,064 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:11,065 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:11,065 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:11,065 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:11,065 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:11,065 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:11,065 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,065 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:11,066 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,066 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:11,066 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:11,066 - DEBUG - on stmt: jump 194
2025-09-26 15:03:11,066 - DEBUG - ==== SSA block analysis pass on 194
2025-09-26 15:03:11,066 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEA9E10>
2025-09-26 15:03:11,067 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:11,067 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:11,067 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:11,067 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:11,067 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:11,067 - DEBUG - ==== SSA block analysis pass on 198
2025-09-26 15:03:11,068 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEA9E10>
2025-09-26 15:03:11,068 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:11,068 - DEBUG - on stmt: jump 208
2025-09-26 15:03:11,068 - DEBUG - ==== SSA block analysis pass on 414
2025-09-26 15:03:11,068 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEA9E10>
2025-09-26 15:03:11,068 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:11,068 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:11,069 - DEBUG - ==== SSA block analysis pass on 208
2025-09-26 15:03:11,069 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEA9E10>
2025-09-26 15:03:11,069 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:11,069 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:11,069 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:11,069 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:11,069 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:11,069 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,070 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,070 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:11,070 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:11,070 - DEBUG - ==== SSA block analysis pass on 209
2025-09-26 15:03:11,070 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEA9E10>
2025-09-26 15:03:11,070 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:11,070 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,070 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,071 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:11,071 - DEBUG - ==== SSA block analysis pass on 241
2025-09-26 15:03:11,071 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEA9E10>
2025-09-26 15:03:11,071 - DEBUG - on stmt: jump 251
2025-09-26 15:03:11,071 - DEBUG - ==== SSA block analysis pass on 253
2025-09-26 15:03:11,071 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEA9E10>
2025-09-26 15:03:11,071 - DEBUG - on stmt: jump 257
2025-09-26 15:03:11,071 - DEBUG - ==== SSA block analysis pass on 251
2025-09-26 15:03:11,071 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEA9E10>
2025-09-26 15:03:11,071 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:03:11,072 - DEBUG - on stmt: jump 257
2025-09-26 15:03:11,072 - DEBUG - ==== SSA block analysis pass on 257
2025-09-26 15:03:11,072 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEA9E10>
2025-09-26 15:03:11,072 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:11,072 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:03:11,072 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:11,072 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:11,072 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:11,072 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,073 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,073 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:11,073 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:11,073 - DEBUG - ==== SSA block analysis pass on 261
2025-09-26 15:03:11,073 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEA9E10>
2025-09-26 15:03:11,073 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:11,073 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,074 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,074 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:11,074 - DEBUG - ==== SSA block analysis pass on 289
2025-09-26 15:03:11,074 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEA9E10>
2025-09-26 15:03:11,074 - DEBUG - on stmt: jump 299
2025-09-26 15:03:11,074 - DEBUG - ==== SSA block analysis pass on 301
2025-09-26 15:03:11,074 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEA9E10>
2025-09-26 15:03:11,075 - DEBUG - on stmt: jump 305
2025-09-26 15:03:11,075 - DEBUG - ==== SSA block analysis pass on 299
2025-09-26 15:03:11,075 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEA9E10>
2025-09-26 15:03:11,075 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:11,075 - DEBUG - on stmt: jump 305
2025-09-26 15:03:11,075 - DEBUG - ==== SSA block analysis pass on 305
2025-09-26 15:03:11,075 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEA9E10>
2025-09-26 15:03:11,075 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,076 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,076 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:11,076 - DEBUG - ==== SSA block analysis pass on 309
2025-09-26 15:03:11,076 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEA9E10>
2025-09-26 15:03:11,076 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,076 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:11,076 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,076 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,077 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:11,077 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,077 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:11,077 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:11,077 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:11,077 - DEBUG - on stmt: jump 413
2025-09-26 15:03:11,077 - DEBUG - ==== SSA block analysis pass on 323
2025-09-26 15:03:11,078 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEA9E10>
2025-09-26 15:03:11,078 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,078 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:11,078 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,078 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,078 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:11,078 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,079 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:11,079 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:11,079 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:11,079 - DEBUG - on stmt: jump 413
2025-09-26 15:03:11,079 - DEBUG - ==== SSA block analysis pass on 413
2025-09-26 15:03:11,079 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEA9E10>
2025-09-26 15:03:11,079 - DEBUG - on stmt: jump 194
2025-09-26 15:03:11,079 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104store_slice.14.1': [(<numba.core.ir.Assign object at 0x000002985CFB34D0>,
                                       0)],
             '$104store_slice.15.1': [(<numba.core.ir.Assign object at 0x000002985CFB35F0>,
                                       0)],
             '$110pred': [(<numba.core.ir.Assign object at 0x000002985CF3A2D0>,
                           305)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x000002985CF61E50>,
                                    309)],
             '$114store_slice.20.1': [(<numba.core.ir.Assign object at 0x000002985CFB3DD0>,
                                       0)],
             '$114store_slice.21.1': [(<numba.core.ir.Assign object at 0x000002985CFB3F50>,
                                       0)],
             '$116load_global.22.1': [(<numba.core.ir.Assign object at 0x000002985CFB3170>,
                                       0)],
             '$124load_attr.1': [(<numba.core.ir.Assign object at 0x000002985CF653D0>,
                                  309)],
             '$126load_global.24.1': [(<numba.core.ir.Assign object at 0x000002985CFB3650>,
                                       0)],
             '$140call.28.1': [(<numba.core.ir.Assign object at 0x000002985CFB1610>,
                                0)],
             '$148call.4': [(<numba.core.ir.Assign object at 0x000002985CF646B0>,
                             309)],
             '$148unary_negative.29.1': [(<numba.core.ir.Assign object at 0x000002985CFB1730>,
                                          0)],
             '$154binary_subscr.32.1': [(<numba.core.ir.Assign object at 0x000002985CFB1A30>,
                                         0)],
             '$156load_global.5': [(<numba.core.ir.Assign object at 0x000002985CF67230>,
                                    309)],
             '$158load_global.33.1': [(<numba.core.ir.Assign object at 0x000002985CFB1B50>,
                                       0)],
             '$166load_attr.6': [(<numba.core.ir.Assign object at 0x000002985CF56870>,
                                  309)],
             '$16unary_negative.4': [(<numba.core.ir.Assign object at 0x000002985CE2C230>,
                                      208)],
             '$172call.37.1': [(<numba.core.ir.Assign object at 0x000002985CFB1EB0>,
                                0)],
             '$184call.39.1': [(<numba.core.ir.Assign object at 0x000002985CFB20F0>,
                                0)],
             '$190call.9': [(<numba.core.ir.Assign object at 0x000002985CF567B0>,
                             309)],
             '$192get_iter.40.1': [(<numba.core.ir.Assign object at 0x000002985CFB2210>,
                                    0)],
             '$194for_iter.1.1': [(<numba.core.ir.Assign object at 0x000002985CFB17F0>,
                                   194)],
             '$194for_iter.2.1': [(<numba.core.ir.Assign object at 0x000002985CFB2330>,
                                   194)],
             '$194for_iter.3.1': [(<numba.core.ir.Assign object at 0x000002985CFB2450>,
                                   194)],
             '$198compare_op.10': [(<numba.core.ir.Assign object at 0x000002985CF5AC90>,
                                    309)],
             '$202return_value.11': [(<numba.core.ir.Assign object at 0x000002985CF5A930>,
                                      309)],
             '$204load_global.0': [(<numba.core.ir.Assign object at 0x000002985CFB8590>,
                                    323)],
             '$214load_attr.1': [(<numba.core.ir.Assign object at 0x000002985CFB96D0>,
                                  323)],
             '$214return_value.3.1': [(<numba.core.ir.Assign object at 0x000002985CFB2AB0>,
                                       414)],
             '$238call.4': [(<numba.core.ir.Assign object at 0x000002985CF50890>,
                             323)],
             '$246load_global.5': [(<numba.core.ir.Assign object at 0x000002985CF523F0>,
                                    323)],
             '$24compare_op.6': [(<numba.core.ir.Assign object at 0x000002985CE2DF70>,
                                  208)],
             '$256load_attr.6': [(<numba.core.ir.Assign object at 0x000002985CF53D70>,
                                  323)],
             '$280call.9': [(<numba.core.ir.Assign object at 0x000002985CF1F830>,
                             323)],
             '$288compare_op.10': [(<numba.core.ir.Assign object at 0x000002985CF1DF70>,
                                    323)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x000002985CF6A6F0>,
                                     0)],
             '$28pred': [(<numba.core.ir.Assign object at 0x000002985CDD2150>,
                          208)],
             '$292return_value.11': [(<numba.core.ir.Assign object at 0x000002985CF6B290>,
                                      323)],
             '$34compare_op.2': [(<numba.core.ir.Assign object at 0x000002985CF85670>,
                                  209)],
             '$38load_attr.3.1': [(<numba.core.ir.Assign object at 0x000002985CF68FB0>,
                                   0)],
             '$38pred': [(<numba.core.ir.Assign object at 0x000002985CF117F0>,
                          209)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x000002985CF68170>,
                                     0)],
             '$64unary_negative.4': [(<numba.core.ir.Assign object at 0x000002985CF310D0>,
                                      257)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x000002985CF69A90>,
                                   0)],
             '$72compare_op.6': [(<numba.core.ir.Assign object at 0x000002985CF312B0>,
                                  257)],
             '$76pred': [(<numba.core.ir.Assign object at 0x000002985CF36FF0>,
                          257)],
             '$82compare_op.2': [(<numba.core.ir.Assign object at 0x000002985CF48A70>,
                                  261)],
             '$86pred': [(<numba.core.ir.Assign object at 0x000002985CF4B9B0>,
                          261)],
             '$binop_sub180.38.1': [(<numba.core.ir.Assign object at 0x000002985CFB1FD0>,
                                     0)],
             '$bool110': [(<numba.core.ir.Assign object at 0x000002985CF38C50>,
                           305)],
             '$bool28': [(<numba.core.ir.Assign object at 0x000002985CE2F6B0>,
                          208)],
             '$bool38': [(<numba.core.ir.Assign object at 0x000002985CF111F0>,
                          209)],
             '$bool76': [(<numba.core.ir.Assign object at 0x000002985CF355B0>,
                          257)],
             '$bool86': [(<numba.core.ir.Assign object at 0x000002985CF49F70>,
                          261)],
             '$const100.12.0.1': [(<numba.core.ir.Assign object at 0x000002985CFB3230>,
                                   0)],
             '$const102.13.3.1': [(<numba.core.ir.Assign object at 0x000002985CFB33B0>,
                                   0)],
             '$const106.16.2.1': [(<numba.core.ir.Assign object at 0x000002985CFB3770>,
                                   0)],
             '$const110.18.2.1': [(<numba.core.ir.Assign object at 0x000002985CFB3A70>,
                                   0)],
             '$const112.19.0.1': [(<numba.core.ir.Assign object at 0x000002985CFB3CB0>,
                                   0)],
             '$const136.26.2.1': [(<numba.core.ir.Assign object at 0x000002985CFB3A10>,
                                   0)],
             '$const138.27.4.1': [(<numba.core.ir.Assign object at 0x000002985CFB3EF0>,
                                   0)],
             '$const152.31.2.1': [(<numba.core.ir.Assign object at 0x000002985CFB1910>,
                                   0)],
             '$const168.35.2.1': [(<numba.core.ir.Assign object at 0x000002985CFB1C70>,
                                   0)],
             '$const170.36.2.1': [(<numba.core.ir.Assign object at 0x000002985CFB1D90>,
                                   0)],
             '$const54.1.2': [(<numba.core.ir.Assign object at 0x000002985CF1A750>,
                               257)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x000002985CFC80B0>,
                              208)],
             '$const90.8.1.1': [(<numba.core.ir.Assign object at 0x000002985CFB3C50>,
                                 0)],
             '$const96.10.2.1': [(<numba.core.ir.Assign object at 0x000002985CFB2F30>,
                                  0)],
             '$const_dtype.1': [(<numba.core.ir.Assign object at 0x000002985CFB1430>,
                                 0)],
             '$phi194.0.1': [(<numba.core.ir.Assign object at 0x000002985CF6BFB0>,
                              0)],
             '$phi198.1.1': [(<numba.core.ir.Assign object at 0x000002985CFB2510>,
                              194)],
             '$phi32.0': [(<numba.core.ir.Assign object at 0x000002985CDD2BD0>,
                           208)],
             '$phi80.0': [(<numba.core.ir.Assign object at 0x000002985CF078F0>,
                           257)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x000002985CF6BEF0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x000002985CFB2630>,
                          198)],
             'out0': [(<numba.core.ir.Assign object at 0x000002985CFB2D50>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x000002985CF95EB0>,
                                208),
                               (<numba.core.ir.Assign object at 0x000002985CF6B350>,
                                257)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002985CF6BB90>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002985CF6BA70>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x000002985CCA7D70>, 208),
                    (<numba.core.ir.Assign object at 0x000002985CF18A10>, 251)],
             'x1': [(<numba.core.ir.Assign object at 0x000002985CF6B410>, 257),
                    (<numba.core.ir.Assign object at 0x000002985CF46B70>, 299)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002985CF6BCB0>,
                           0)]})
2025-09-26 15:03:11,089 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002985CEA9E10>
2025-09-26 15:03:11,090 - DEBUG - Fix SSA violator on var stencil_index
2025-09-26 15:03:11,090 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:11,090 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D028C50>
2025-09-26 15:03:11,090 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:11,090 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:11,090 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:11,090 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:11,091 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,091 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:11,091 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,091 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:11,091 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:11,091 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:11,091 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,091 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:11,091 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:11,092 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:11,092 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:11,092 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,092 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:11,092 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:11,092 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:11,092 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:11,092 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:11,092 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,093 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:11,093 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:11,093 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:11,093 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:11,093 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:11,093 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,093 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:11,094 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:11,094 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:11,094 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:11,094 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:11,094 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:11,094 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,094 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:11,094 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,094 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:11,095 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:11,095 - DEBUG - on stmt: jump 194
2025-09-26 15:03:11,095 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:11,095 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D028C50>
2025-09-26 15:03:11,095 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:11,095 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:11,095 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:11,095 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:11,096 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:11,096 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:11,096 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D028C50>
2025-09-26 15:03:11,096 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:11,096 - DEBUG - on stmt: jump 208
2025-09-26 15:03:11,096 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:11,096 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D028C50>
2025-09-26 15:03:11,096 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:11,096 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:11,096 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:11,096 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D028C50>
2025-09-26 15:03:11,097 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:11,097 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:11,097 - DEBUG - first assign: stencil_index
2025-09-26 15:03:11,097 - DEBUG - replaced with: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:11,097 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:11,097 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:11,097 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:11,097 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,098 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,098 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:11,098 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:11,098 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:11,098 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D028C50>
2025-09-26 15:03:11,098 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:11,098 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,098 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,098 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:11,099 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:11,099 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D028C50>
2025-09-26 15:03:11,099 - DEBUG - on stmt: jump 251
2025-09-26 15:03:11,099 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:11,099 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D028C50>
2025-09-26 15:03:11,099 - DEBUG - on stmt: jump 257
2025-09-26 15:03:11,099 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:11,099 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D028C50>
2025-09-26 15:03:11,099 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:03:11,099 - DEBUG - on stmt: jump 257
2025-09-26 15:03:11,100 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:11,100 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D028C50>
2025-09-26 15:03:11,100 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:11,100 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:03:11,100 - DEBUG - replaced with: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:11,100 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:11,101 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:11,101 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:11,101 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,101 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,101 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:11,101 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:11,101 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:11,101 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D028C50>
2025-09-26 15:03:11,102 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:11,102 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,102 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,102 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:11,102 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:11,102 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D028C50>
2025-09-26 15:03:11,102 - DEBUG - on stmt: jump 299
2025-09-26 15:03:11,103 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:11,103 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D028C50>
2025-09-26 15:03:11,103 - DEBUG - on stmt: jump 305
2025-09-26 15:03:11,103 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:11,103 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D028C50>
2025-09-26 15:03:11,103 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:11,103 - DEBUG - on stmt: jump 305
2025-09-26 15:03:11,103 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:11,104 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D028C50>
2025-09-26 15:03:11,104 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,104 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,104 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:11,104 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:11,104 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D028C50>
2025-09-26 15:03:11,104 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,104 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:11,105 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,105 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,105 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:11,105 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,105 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:11,105 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:11,105 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:11,105 - DEBUG - on stmt: jump 413
2025-09-26 15:03:11,106 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:11,106 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D028C50>
2025-09-26 15:03:11,106 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,106 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:11,106 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,106 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,106 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:11,106 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,106 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:11,107 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:11,107 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:11,107 - DEBUG - on stmt: jump 413
2025-09-26 15:03:11,107 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:11,107 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D028C50>
2025-09-26 15:03:11,107 - DEBUG - on stmt: jump 194
2025-09-26 15:03:11,107 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002985D044110>],
             257: [<numba.core.ir.Assign object at 0x000002985D0443B0>]})
2025-09-26 15:03:11,107 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:11,108 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D028C50>
2025-09-26 15:03:11,108 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:11,108 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:11,108 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:11,108 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:11,108 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,108 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:11,108 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,108 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:11,109 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:11,109 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:11,109 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,109 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:11,109 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:11,109 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:11,109 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:11,109 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,109 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:11,110 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:11,110 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:11,110 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:11,110 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:11,110 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,110 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:11,110 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:11,110 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:11,110 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:11,110 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:11,111 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,111 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:11,111 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:11,111 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:11,111 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:11,111 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:11,111 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:11,111 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,112 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:11,112 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,112 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:11,112 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:11,112 - DEBUG - on stmt: jump 194
2025-09-26 15:03:11,112 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:11,112 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D028C50>
2025-09-26 15:03:11,112 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:11,113 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:11,113 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:11,113 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:11,113 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:11,113 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:11,113 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D028C50>
2025-09-26 15:03:11,113 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:11,113 - DEBUG - on stmt: jump 208
2025-09-26 15:03:11,114 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:11,114 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D028C50>
2025-09-26 15:03:11,114 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:11,114 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:11,114 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:11,114 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D028C50>
2025-09-26 15:03:11,114 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:11,115 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:11,115 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:11,115 - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:11,115 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:11,115 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:11,115 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,115 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,115 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:11,116 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:11,116 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:11,116 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D028C50>
2025-09-26 15:03:11,116 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:11,116 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,116 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,116 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:11,116 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:11,117 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D028C50>
2025-09-26 15:03:11,117 - DEBUG - on stmt: jump 251
2025-09-26 15:03:11,117 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:11,117 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D028C50>
2025-09-26 15:03:11,117 - DEBUG - on stmt: jump 257
2025-09-26 15:03:11,117 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:11,117 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D028C50>
2025-09-26 15:03:11,117 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:03:11,118 - DEBUG - on stmt: jump 257
2025-09-26 15:03:11,118 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:11,118 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D028C50>
2025-09-26 15:03:11,118 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:11,118 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:11,118 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:11,118 - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:11,118 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:11,119 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:11,119 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:11,119 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,119 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,119 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:11,119 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:11,119 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:11,119 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D028C50>
2025-09-26 15:03:11,119 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:11,120 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,120 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,120 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:11,120 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:11,120 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D028C50>
2025-09-26 15:03:11,120 - DEBUG - on stmt: jump 299
2025-09-26 15:03:11,120 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:11,120 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D028C50>
2025-09-26 15:03:11,120 - DEBUG - on stmt: jump 305
2025-09-26 15:03:11,120 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:11,121 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D028C50>
2025-09-26 15:03:11,121 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:11,121 - DEBUG - on stmt: jump 305
2025-09-26 15:03:11,121 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:11,121 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D028C50>
2025-09-26 15:03:11,121 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,121 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,121 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:11,121 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:11,121 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D028C50>
2025-09-26 15:03:11,122 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,122 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:11,122 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,122 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,122 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:11,122 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,122 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:11,123 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:11,123 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:11,123 - DEBUG - on stmt: jump 413
2025-09-26 15:03:11,123 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:11,123 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D028C50>
2025-09-26 15:03:11,123 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,123 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:11,123 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,123 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,124 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:11,124 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,124 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:11,124 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:11,124 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:11,124 - DEBUG - on stmt: jump 413
2025-09-26 15:03:11,124 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:11,124 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D028C50>
2025-09-26 15:03:11,124 - DEBUG - on stmt: jump 194
2025-09-26 15:03:11,125 - DEBUG - Fix SSA violator on var x0
2025-09-26 15:03:11,125 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:11,125 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031310>
2025-09-26 15:03:11,125 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:11,125 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:11,125 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:11,125 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:11,125 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,125 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:11,125 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,126 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:11,126 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:11,126 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:11,126 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,126 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:11,126 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:11,126 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:11,126 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:11,127 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,127 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:11,127 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:11,127 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:11,127 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:11,127 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:11,127 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,128 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:11,128 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:11,128 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:11,128 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:11,128 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:11,128 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,128 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:11,128 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:11,129 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:11,129 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:11,129 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:11,129 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:11,129 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,129 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:11,129 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,130 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:11,130 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:11,130 - DEBUG - on stmt: jump 194
2025-09-26 15:03:11,130 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:11,130 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031310>
2025-09-26 15:03:11,130 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:11,130 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:11,130 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:11,131 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:11,131 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:11,131 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:11,131 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031310>
2025-09-26 15:03:11,131 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:11,131 - DEBUG - on stmt: jump 208
2025-09-26 15:03:11,131 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:11,131 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031310>
2025-09-26 15:03:11,131 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:11,132 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:11,132 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:11,132 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031310>
2025-09-26 15:03:11,132 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:11,132 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:11,132 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:11,132 - DEBUG - first assign: x0
2025-09-26 15:03:11,132 - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:11,133 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:11,133 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:11,133 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,133 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,133 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:11,133 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:11,133 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:11,133 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031310>
2025-09-26 15:03:11,134 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:11,134 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,134 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,134 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:11,134 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:11,134 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031310>
2025-09-26 15:03:11,134 - DEBUG - on stmt: jump 251
2025-09-26 15:03:11,135 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:11,135 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031310>
2025-09-26 15:03:11,135 - DEBUG - on stmt: jump 257
2025-09-26 15:03:11,135 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:11,135 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031310>
2025-09-26 15:03:11,135 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:03:11,135 - DEBUG - replaced with: x0.1 = const(int, 0)
2025-09-26 15:03:11,135 - DEBUG - on stmt: jump 257
2025-09-26 15:03:11,135 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:11,135 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031310>
2025-09-26 15:03:11,136 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:11,136 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:11,136 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:11,136 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:11,136 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:11,136 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,136 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,136 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:11,136 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:11,136 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:11,137 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031310>
2025-09-26 15:03:11,137 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:11,137 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,137 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,137 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:11,137 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:11,137 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031310>
2025-09-26 15:03:11,137 - DEBUG - on stmt: jump 299
2025-09-26 15:03:11,137 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:11,138 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031310>
2025-09-26 15:03:11,138 - DEBUG - on stmt: jump 305
2025-09-26 15:03:11,138 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:11,138 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031310>
2025-09-26 15:03:11,138 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:11,138 - DEBUG - on stmt: jump 305
2025-09-26 15:03:11,138 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:11,138 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031310>
2025-09-26 15:03:11,139 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,139 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,139 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:11,139 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:11,139 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031310>
2025-09-26 15:03:11,139 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,139 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:11,139 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,139 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,140 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:11,140 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,140 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:11,140 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:11,140 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:11,140 - DEBUG - on stmt: jump 413
2025-09-26 15:03:11,140 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:11,140 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031310>
2025-09-26 15:03:11,141 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,141 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:11,141 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,141 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,141 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:11,141 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,141 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:11,142 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:11,142 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:11,142 - DEBUG - on stmt: jump 413
2025-09-26 15:03:11,142 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:11,142 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031310>
2025-09-26 15:03:11,142 - DEBUG - on stmt: jump 194
2025-09-26 15:03:11,142 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002985D0446B0>],
             251: [<numba.core.ir.Assign object at 0x000002985D044290>]})
2025-09-26 15:03:11,143 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:11,143 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031220>
2025-09-26 15:03:11,143 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:11,143 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:11,143 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:11,143 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:11,143 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,144 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:11,144 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,144 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:11,144 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:11,144 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:11,144 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,144 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:11,144 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:11,144 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:11,145 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:11,145 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,145 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:11,145 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:11,145 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:11,145 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:11,145 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:11,145 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,145 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:11,146 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:11,146 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:11,146 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:11,146 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:11,146 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,146 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:11,146 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:11,146 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:11,146 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:11,147 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:11,147 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:11,147 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,147 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:11,147 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,147 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:11,147 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:11,147 - DEBUG - on stmt: jump 194
2025-09-26 15:03:11,148 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:11,148 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031220>
2025-09-26 15:03:11,148 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:11,148 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:11,148 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:11,148 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:11,148 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:11,148 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:11,149 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031220>
2025-09-26 15:03:11,149 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:11,149 - DEBUG - on stmt: jump 208
2025-09-26 15:03:11,149 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:11,149 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031220>
2025-09-26 15:03:11,149 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:11,149 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:11,149 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:11,150 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031220>
2025-09-26 15:03:11,150 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:11,150 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:11,150 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:11,150 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:11,150 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:11,150 - DEBUG - find_def var='x0' stmt=$24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:11,150 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,150 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,151 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:11,151 - DEBUG - find_def var='x0' stmt=$phi32.0 = x0
2025-09-26 15:03:11,151 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:11,151 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:11,151 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031220>
2025-09-26 15:03:11,151 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:11,151 - DEBUG - find_def var='x0' stmt=$34compare_op.2 = x0 <= threshold
2025-09-26 15:03:11,151 - DEBUG - find_def_from_top label 209
2025-09-26 15:03:11,151 - DEBUG - idom 208 from label 209
2025-09-26 15:03:11,151 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:03:11,151 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,152 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,152 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:11,152 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:11,152 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031220>
2025-09-26 15:03:11,152 - DEBUG - on stmt: jump 251
2025-09-26 15:03:11,152 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:11,152 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031220>
2025-09-26 15:03:11,152 - DEBUG - on stmt: jump 257
2025-09-26 15:03:11,152 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:11,152 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031220>
2025-09-26 15:03:11,153 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:03:11,153 - DEBUG - on stmt: jump 257
2025-09-26 15:03:11,153 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:11,153 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031220>
2025-09-26 15:03:11,153 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:11,153 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:11,153 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:11,154 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:11,154 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:11,154 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,154 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,154 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:11,154 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:11,155 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:11,155 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031220>
2025-09-26 15:03:11,155 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:11,155 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,155 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,155 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:11,155 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:11,155 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031220>
2025-09-26 15:03:11,156 - DEBUG - on stmt: jump 299
2025-09-26 15:03:11,156 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:11,156 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031220>
2025-09-26 15:03:11,156 - DEBUG - on stmt: jump 305
2025-09-26 15:03:11,156 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:11,156 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031220>
2025-09-26 15:03:11,156 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:11,156 - DEBUG - on stmt: jump 305
2025-09-26 15:03:11,156 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:11,157 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031220>
2025-09-26 15:03:11,157 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,157 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,157 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:11,157 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:11,157 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031220>
2025-09-26 15:03:11,157 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,157 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:11,157 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,158 - DEBUG - find_def var='x0' stmt=$148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,158 - DEBUG - find_def_from_top label 309
2025-09-26 15:03:11,158 - DEBUG - idom 305 from label 309
2025-09-26 15:03:11,158 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:03:11,158 - DEBUG - find_def_from_top label 305
2025-09-26 15:03:11,158 - DEBUG - idom 257 from label 305
2025-09-26 15:03:11,158 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:11,158 - DEBUG - find_def_from_top label 257
2025-09-26 15:03:11,159 - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 257
2025-09-26 15:03:11,159 - DEBUG - find_def_from_bottom label 209
2025-09-26 15:03:11,159 - DEBUG - find_def_from_top label 209
2025-09-26 15:03:11,159 - DEBUG - idom 208 from label 209
2025-09-26 15:03:11,159 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:03:11,159 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:11,159 - DEBUG - find_def_from_bottom label 251
2025-09-26 15:03:11,159 - DEBUG - incoming_def x0.1 = const(int, 0)
2025-09-26 15:03:11,159 - DEBUG - find_def_from_bottom label 253
2025-09-26 15:03:11,160 - DEBUG - find_def_from_top label 253
2025-09-26 15:03:11,160 - DEBUG - idom 208 from label 253
2025-09-26 15:03:11,160 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:03:11,160 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:11,160 - DEBUG - replaced with: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,160 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,160 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:11,160 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,160 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:11,161 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:11,161 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:11,161 - DEBUG - on stmt: jump 413
2025-09-26 15:03:11,161 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:11,161 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031220>
2025-09-26 15:03:11,161 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,161 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:11,161 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,161 - DEBUG - find_def var='x0' stmt=$238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,162 - DEBUG - find_def_from_top label 323
2025-09-26 15:03:11,162 - DEBUG - idom 305 from label 323
2025-09-26 15:03:11,162 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:03:11,162 - DEBUG - find_def_from_top label 305
2025-09-26 15:03:11,162 - DEBUG - idom 257 from label 305
2025-09-26 15:03:11,162 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:11,162 - DEBUG - replaced with: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,162 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,163 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:11,163 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,163 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:11,163 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:11,163 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:11,163 - DEBUG - on stmt: jump 413
2025-09-26 15:03:11,163 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:11,163 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031220>
2025-09-26 15:03:11,163 - DEBUG - on stmt: jump 194
2025-09-26 15:03:11,164 - DEBUG - Fix SSA violator on var x1
2025-09-26 15:03:11,164 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:11,164 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031220>
2025-09-26 15:03:11,164 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:11,164 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:11,164 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:11,164 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:11,164 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,164 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:11,164 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,165 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:11,165 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:11,165 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:11,165 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,165 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:11,165 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:11,165 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:11,165 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:11,165 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,166 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:11,166 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:11,166 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:11,166 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:11,166 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:11,166 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,166 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:11,166 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:11,167 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:11,167 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:11,167 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:11,167 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,167 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:11,167 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:11,167 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:11,168 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:11,168 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:11,168 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:11,168 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,168 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:11,168 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,169 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:11,169 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:11,169 - DEBUG - on stmt: jump 194
2025-09-26 15:03:11,169 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:11,169 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031220>
2025-09-26 15:03:11,169 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:11,169 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:11,169 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:11,170 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:11,170 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:11,170 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:11,170 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031220>
2025-09-26 15:03:11,170 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:11,170 - DEBUG - on stmt: jump 208
2025-09-26 15:03:11,170 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:11,170 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031220>
2025-09-26 15:03:11,171 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:11,171 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:11,171 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:11,171 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031220>
2025-09-26 15:03:11,171 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:11,171 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:11,171 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:11,171 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:11,171 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:11,172 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,172 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,172 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:11,172 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:11,172 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:11,172 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031220>
2025-09-26 15:03:11,172 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:11,172 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,173 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,173 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:11,173 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:11,173 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031220>
2025-09-26 15:03:11,173 - DEBUG - on stmt: jump 251
2025-09-26 15:03:11,173 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:11,173 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031220>
2025-09-26 15:03:11,173 - DEBUG - on stmt: jump 257
2025-09-26 15:03:11,173 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:11,174 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031220>
2025-09-26 15:03:11,174 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:03:11,174 - DEBUG - on stmt: jump 257
2025-09-26 15:03:11,174 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:11,174 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031220>
2025-09-26 15:03:11,174 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:03:11,174 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:11,174 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:11,174 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:11,174 - DEBUG - first assign: x1
2025-09-26 15:03:11,175 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:11,175 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:11,175 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:11,175 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,175 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,175 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:11,175 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:11,175 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:11,175 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031220>
2025-09-26 15:03:11,176 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:11,176 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,176 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,176 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:11,176 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:11,176 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031220>
2025-09-26 15:03:11,176 - DEBUG - on stmt: jump 299
2025-09-26 15:03:11,176 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:11,176 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031220>
2025-09-26 15:03:11,176 - DEBUG - on stmt: jump 305
2025-09-26 15:03:11,177 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:11,177 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031220>
2025-09-26 15:03:11,177 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:11,177 - DEBUG - replaced with: x1.1 = const(int, 0)
2025-09-26 15:03:11,177 - DEBUG - on stmt: jump 305
2025-09-26 15:03:11,177 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:11,177 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031220>
2025-09-26 15:03:11,177 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,177 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,178 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:11,178 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:11,178 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031220>
2025-09-26 15:03:11,178 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,178 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:11,178 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,178 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,178 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:11,179 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,179 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:11,179 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:11,179 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:11,179 - DEBUG - on stmt: jump 413
2025-09-26 15:03:11,179 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:11,179 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031220>
2025-09-26 15:03:11,179 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,179 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:11,180 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,180 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,180 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:11,180 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,180 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:11,180 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:11,181 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:11,181 - DEBUG - on stmt: jump 413
2025-09-26 15:03:11,181 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:11,181 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D031220>
2025-09-26 15:03:11,181 - DEBUG - on stmt: jump 194
2025-09-26 15:03:11,181 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {257: [<numba.core.ir.Assign object at 0x000002985D0442F0>],
             299: [<numba.core.ir.Assign object at 0x000002985D044650>]})
2025-09-26 15:03:11,181 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:11,182 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031310>
2025-09-26 15:03:11,182 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:11,182 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:11,182 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:11,182 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:11,182 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,182 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:11,183 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,183 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:11,183 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:11,183 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:11,183 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,183 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:11,183 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:11,184 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:11,184 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:11,184 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,184 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:11,184 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:11,184 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:11,184 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:11,184 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:11,185 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,185 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:11,185 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:11,185 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:11,185 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:11,185 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:11,185 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,185 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:11,185 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:11,186 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:11,186 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:11,186 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:11,186 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:11,186 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,186 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:11,186 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,186 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:11,186 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:11,187 - DEBUG - on stmt: jump 194
2025-09-26 15:03:11,187 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:11,187 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031310>
2025-09-26 15:03:11,187 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:11,187 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:11,187 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:11,187 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:11,187 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:11,188 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:11,188 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031310>
2025-09-26 15:03:11,188 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:11,188 - DEBUG - on stmt: jump 208
2025-09-26 15:03:11,188 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:11,188 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031310>
2025-09-26 15:03:11,188 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:11,188 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:11,188 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:11,188 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031310>
2025-09-26 15:03:11,189 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:11,189 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:11,189 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:11,189 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:11,189 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:11,189 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,189 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,189 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:11,190 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:11,190 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:11,190 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031310>
2025-09-26 15:03:11,190 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:11,190 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,190 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,190 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:11,190 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:11,190 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031310>
2025-09-26 15:03:11,190 - DEBUG - on stmt: jump 251
2025-09-26 15:03:11,191 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:11,191 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031310>
2025-09-26 15:03:11,191 - DEBUG - on stmt: jump 257
2025-09-26 15:03:11,191 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:11,191 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031310>
2025-09-26 15:03:11,191 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:03:11,191 - DEBUG - on stmt: jump 257
2025-09-26 15:03:11,191 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:11,191 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031310>
2025-09-26 15:03:11,191 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:03:11,192 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:11,192 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:11,192 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:11,192 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:11,192 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:11,192 - DEBUG - find_def var='x1' stmt=$72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:11,192 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,192 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,192 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:11,193 - DEBUG - find_def var='x1' stmt=$phi80.0 = x1
2025-09-26 15:03:11,193 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:11,193 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:11,193 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031310>
2025-09-26 15:03:11,193 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:11,193 - DEBUG - find_def var='x1' stmt=$82compare_op.2 = x1 <= threshold
2025-09-26 15:03:11,193 - DEBUG - find_def_from_top label 261
2025-09-26 15:03:11,194 - DEBUG - idom 257 from label 261
2025-09-26 15:03:11,194 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:11,194 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,194 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,194 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:11,194 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:11,194 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031310>
2025-09-26 15:03:11,195 - DEBUG - on stmt: jump 299
2025-09-26 15:03:11,195 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:11,195 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031310>
2025-09-26 15:03:11,195 - DEBUG - on stmt: jump 305
2025-09-26 15:03:11,195 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:11,195 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031310>
2025-09-26 15:03:11,195 - DEBUG - on stmt: x1.1 = const(int, 0)
2025-09-26 15:03:11,195 - DEBUG - on stmt: jump 305
2025-09-26 15:03:11,196 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:11,196 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031310>
2025-09-26 15:03:11,196 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:11,196 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,196 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:11,196 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:11,196 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031310>
2025-09-26 15:03:11,196 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,196 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:11,197 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,197 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,197 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:11,197 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,197 - DEBUG - find_def var='x1' stmt=$190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,197 - DEBUG - find_def_from_top label 309
2025-09-26 15:03:11,197 - DEBUG - idom 305 from label 309
2025-09-26 15:03:11,198 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:03:11,198 - DEBUG - find_def_from_top label 305
2025-09-26 15:03:11,198 - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 305
2025-09-26 15:03:11,198 - DEBUG - find_def_from_bottom label 299
2025-09-26 15:03:11,198 - DEBUG - incoming_def x1.1 = const(int, 0)
2025-09-26 15:03:11,198 - DEBUG - find_def_from_bottom label 301
2025-09-26 15:03:11,198 - DEBUG - find_def_from_top label 301
2025-09-26 15:03:11,199 - DEBUG - idom 257 from label 301
2025-09-26 15:03:11,199 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:11,199 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:11,199 - DEBUG - find_def_from_bottom label 261
2025-09-26 15:03:11,199 - DEBUG - find_def_from_top label 261
2025-09-26 15:03:11,199 - DEBUG - idom 257 from label 261
2025-09-26 15:03:11,199 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:11,199 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:11,199 - DEBUG - replaced with: $190call.9 = call $166load_attr.6(x1.2, func=$166load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,199 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:11,200 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:11,200 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:11,200 - DEBUG - on stmt: jump 413
2025-09-26 15:03:11,200 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:11,200 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031310>
2025-09-26 15:03:11,200 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,200 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:11,200 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,200 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:11,201 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:11,201 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,201 - DEBUG - find_def var='x1' stmt=$280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,201 - DEBUG - find_def_from_top label 323
2025-09-26 15:03:11,201 - DEBUG - idom 305 from label 323
2025-09-26 15:03:11,201 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:03:11,201 - DEBUG - replaced with: $280call.9 = call $256load_attr.6(x1.2, func=$256load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:11,201 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:11,202 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:11,202 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:11,202 - DEBUG - on stmt: jump 413
2025-09-26 15:03:11,202 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:11,202 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D031310>
2025-09-26 15:03:11,202 - DEBUG - on stmt: jump 194
2025-09-26 15:03:11,215 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с librosa: 'function' object has no attribute 'get_call_template'
2025-09-26 15:03:11,220 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 15:03:11,221 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 15:03:11,222 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\test_music.wav'>)))], 'idempotency_key': 'stainless-python-retry-b6915bdb-eb57-4bb7-98c9-833d268ad8a9', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:03:11,223 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:11,223 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:11,223 - DEBUG - send_request_headers.complete
2025-09-26 15:03:11,223 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:11,225 - DEBUG - send_request_body.complete
2025-09-26 15:03:11,225 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:12,352 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:12 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'555'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'566'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_32051e73ce7047fdaadbc0187446a50b'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529ddb58448d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:12,353 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:12,353 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:12,353 - DEBUG - receive_response_body.complete
2025-09-26 15:03:12,354 - DEBUG - response_closed.started
2025-09-26 15:03:12,354 - DEBUG - response_closed.complete
2025-09-26 15:03:12,354 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:12 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '555', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '566', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_32051e73ce7047fdaadbc0187446a50b', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529ddb58448d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:12,355 - DEBUG - request_id: req_32051e73ce7047fdaadbc0187446a50b
2025-09-26 15:03:12,355 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Ты не видишь, как я тебя люблю?'
2025-09-26 15:03:12,355 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:03:12,355 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Ты не видишь, как я тебя люблю?'
2025-09-26 15:03:12,355 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: 'Ты не видишь, как я тебя люблю?' (длина: 31)
2025-09-26 15:03:12,356 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 4 - музыкальный промпт
2025-09-26 15:03:12,356 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\test_music.wav'>)))], 'idempotency_key': 'stainless-python-retry-6eaa6f6e-6872-4f5b-a6af-09bc744213ca', 'json_data': {'model': 'gpt-4o-transcribe', 'prompt': 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.', 'response_format': 'text'}}
2025-09-26 15:03:12,357 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:12,357 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:12,357 - DEBUG - send_request_headers.complete
2025-09-26 15:03:12,358 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:12,359 - DEBUG - send_request_body.complete
2025-09-26 15:03:12,359 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:14,607 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:14 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1617'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1637'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_058a2e31b3af4cf787d06e8e1e51c41f'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529de2687e8d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:14,608 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:14,608 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:14,608 - DEBUG - receive_response_body.complete
2025-09-26 15:03:14,609 - DEBUG - response_closed.started
2025-09-26 15:03:14,609 - DEBUG - response_closed.complete
2025-09-26 15:03:14,609 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:14 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1617', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1637', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_058a2e31b3af4cf787d06e8e1e51c41f', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529de2687e8d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:14,609 - DEBUG - request_id: req_058a2e31b3af4cf787d06e8e1e51c41f
2025-09-26 15:03:14,609 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Позови меня с собой, я приду сквозь злые ночи.'
2025-09-26 15:03:14,610 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.'
2025-09-26 15:03:14,610 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Позови меня с собой, я приду сквозь злые ночи.'
2025-09-26 15:03:14,610 - DEBUG - ТРАНСКРИПЦИЯ: Результат музыкального промпта: 'Позови меня с собой, я приду сквозь злые ночи.' (длина: 46)
2025-09-26 15:03:14,610 - DEBUG - ТРАНСКРИПЦИЯ: Выбран результат музыкального промпта
2025-09-26 15:03:14,610 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 5 - английский язык с музыкальным промптом
2025-09-26 15:03:14,611 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\test_music.wav'>)))], 'idempotency_key': 'stainless-python-retry-446c7533-f14f-47df-899e-69d04fed7de8', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'en', 'prompt': 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.', 'response_format': 'text'}}
2025-09-26 15:03:14,612 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:14,612 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:14,612 - DEBUG - send_request_headers.complete
2025-09-26 15:03:14,612 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:14,614 - DEBUG - send_request_body.complete
2025-09-26 15:03:14,614 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:16,483 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:16 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'30'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1152'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1163'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_7cd8656729f34108ab19db4c7ece43bc'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529df08aee8d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:16,484 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:16,484 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:16,484 - DEBUG - receive_response_body.complete
2025-09-26 15:03:16,484 - DEBUG - response_closed.started
2025-09-26 15:03:16,484 - DEBUG - response_closed.complete
2025-09-26 15:03:16,485 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:16 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '30', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1152', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1163', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_7cd8656729f34108ab19db4c7ece43bc', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529df08aee8d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:16,485 - DEBUG - request_id: req_7cd8656729f34108ab19db4c7ece43bc
2025-09-26 15:03:16,485 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'You got that real love, love.'
2025-09-26 15:03:16,486 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.'
2025-09-26 15:03:16,486 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'You got that real love, love.'
2025-09-26 15:03:16,486 - DEBUG - ТРАНСКРИПЦИЯ: Результат английского музыкального промпта: 'You got that real love, love.' (длина: 29)
2025-09-26 15:03:16,486 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Позови меня с собой, я приду сквозь злые ночи.'
2025-09-26 15:03:16,487 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:03:16,487 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Позови меня с собой, я приду сквозь злые ночи.'
2025-09-26 15:03:16,487 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\test_music.wav'>)))], 'idempotency_key': 'stainless-python-retry-15ed1058-10ce-4fa9-abe8-e275d2f2cc9b', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:03:16,488 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:16,489 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:16,489 - DEBUG - send_request_headers.complete
2025-09-26 15:03:16,489 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:16,490 - DEBUG - send_request_body.complete
2025-09-26 15:03:16,490 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:17,501 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:17 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'43'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'430'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'448'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_1bf8142fba69464098ffafd50d5c5743'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529dfc39af8d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:17,501 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:17,502 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:17,502 - DEBUG - receive_response_body.complete
2025-09-26 15:03:17,502 - DEBUG - response_closed.started
2025-09-26 15:03:17,502 - DEBUG - response_closed.complete
2025-09-26 15:03:17,502 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:17 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '43', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '430', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '448', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_1bf8142fba69464098ffafd50d5c5743', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529dfc39af8d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:17,503 - DEBUG - request_id: req_1bf8142fba69464098ffafd50d5c5743
2025-09-26 15:03:17,503 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'В лесу родилась ёлочка,'
2025-09-26 15:03:17,503 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:03:17,503 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'В лесу родилась ёлочка,'
2025-09-26 15:03:17,504 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c220999a-345a-421c-86b9-402b642e3cb2', 'json_data': {'messages': [{'role': 'system', 'content': 'Ты — специализированная система для анализа аудиозаписей.\nТвоя единственная задача — классифицировать входной аудиофайл в одну из категорий: музыка, речь, шум.\n\nВАЖНО: Ты анализируешь РЕЗУЛЬТАТ ТРАНСКРИПЦИИ аудиофайла, а не сам аудиофайл. Это означает, что:\n- Если в аудио была музыка с вокалом, то в транскрипции будут слова песни\n- Если в аудио была речь, то в транскрипции будет связный текст\n- Если в аудио был шум, то в транскрипции будет мало слов или галлюцинации\n\nКатегории классификации:\n\nМузыка (music):\n- Это песня, музыкальная композиция с вокалом\n- Характерные признаки в транскрипции:\n  * Повторяющиеся фразы или слова (припев)\n  * Рифмы и ритмические паттерны\n  * Музыкальные звуки: "ла-ла-ла", "на-на-на", "о-о-о", "а-а-а"\n  * Эмоциональные восклицания: "Ауф!", "Ой!", "Ах!"\n  * Короткие фразы без логической связи\n  * Слова, которые звучат как песня, а не как обычная речь\n  * Повторяющиеся слова или фразы (припев песни)\n  * Ритмические паттерны в тексте\n\nРечь (speech):\n- Это обычная речь, разговор, диалог\n- Характерные признаки в транскрипции:\n  * Связные предложения с логической структурой\n  * Обычные слова и фразы\n  * Знаки препинания: точки, запятые, восклицательные знаки\n  * Логическая последовательность мыслей\n  * Отсутствие повторяющихся музыкальных паттернов\n  * Естественная речь без ритма\n\nШум (noise):\n- Это неречевые звуки, шум, техника, плач ребенка\n- Характерные признаки в транскрипции:\n  * Очень короткие или бессмысленные фрагменты\n  * Отсутствие связной речи\n  * Случайные слова или звуки\n  * Описания звуков: "[Music]", "[звук]", "[шум]"\n  * Повторяющиеся гласные: "ааа", "ууу", "ооо" (детский плач)\n  * Бессмысленные фразы: "Всем новичкам, всем новичкам"\n  * Короткие бессвязные слова\n\nПравила классификации:\n1. Если транскрипция содержит связную речь с логической структурой → speech\n2. Если транскрипция содержит повторяющиеся фразы, рифмы, музыкальные звуки → music\n3. Если транскрипция короткая, бессвязная или содержит описания звуков → noise\n4. При сомнениях между music и speech: если есть повторения или музыкальные звуки → music\n5. Детский плач (ааа, ууу, ооо) → noise\n6. Белый шум с бессмысленными словами → noise\n\nВАЖНЫЕ ПРИМЕРЫ:\n- "Скажи мне, не говори мне, что ты гонишь" → music (песня с повторениями)\n- "Привет, как дела?" → speech (обычная речь)\n- "Ааааааа" → noise (детский плач)\n- "Всем новичкам, всем новичкам" → noise (белый шум)\n- "Find me, find me, You can find" → music (песня с припевом)\n\nФормат ответа:\nОтвечай только в формате JSON, без лишнего текста:\n{\n  "classification": "music | speech | noise",\n  "confidence": 0.0-1.0,\n  "reasoning": "Краткое объяснение выбора: какие признаки были решающими"\n}\n\nОграничения:\n- Не добавляй ничего, кроме JSON\n- Не предлагай альтернативных категорий\n- Всегда возвращай одно значение в поле "classification"\n- Уровень уверенности (confidence) должен отражать баланс признаков:\n  * 0.9–1.0 → очень высокая уверенность\n  * 0.6–0.89 → умеренная уверенность\n  * <0.6 → низкая уверенность, признаки неоднозначны'}, {'role': 'user', 'content': 'Проанализируй следующий транскрипт аудио и классифицируй его:\n\nВ лесу родилась ёлочка,'}], 'model': 'gpt-4o-mini', 'max_tokens': 200, 'temperature': 0.1}}
2025-09-26 15:03:17,506 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-26 15:03:17,506 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:17,506 - DEBUG - send_request_headers.complete
2025-09-26 15:03:17,506 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:17,507 - DEBUG - send_request_body.complete
2025-09-26 15:03:17,507 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:19,774 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1991'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2003'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'198680'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'396ms'), (b'x-request-id', b'req_bd4aa87d1daf419689c6507dadebf48d'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529e02996b8d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:19,774 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 15:03:19,774 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:19,780 - DEBUG - receive_response_body.complete
2025-09-26 15:03:19,781 - DEBUG - response_closed.started
2025-09-26 15:03:19,781 - DEBUG - response_closed.complete
2025-09-26 15:03:19,781 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:19 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1991', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2003', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '198680', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '396ms', 'x-request-id': 'req_bd4aa87d1daf419689c6507dadebf48d', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529e02996b8d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:19,782 - DEBUG - request_id: req_bd4aa87d1daf419689c6507dadebf48d
2025-09-26 15:03:19,783 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\test_noise.wav
2025-09-26 15:03:19,783 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 2, 'overlap': 0.25, 'jobs': 4}
2025-09-26 15:03:19,783 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла: examples\test_noise.wav
2025-09-26 15:03:19,784 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 15:03:19,784 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 15:03:19,784 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\test_noise.wav
2025-09-26 15:03:20,318 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 15:03:20,319 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\test_noise.wav
2025-09-26 15:03:20,373 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	RESUME(arg=0, lineno=1137)
           4	LOAD_FAST(arg=0, lineno=1140)
           6	LOAD_CONST(arg=1, lineno=1140)
           8	BINARY_SUBSCR(arg=None, lineno=1140)
          12	STORE_FAST(arg=3, lineno=1140)
          14	LOAD_FAST(arg=1, lineno=1141)
          16	UNARY_NEGATIVE(arg=None, lineno=1141)
          18	LOAD_FAST(arg=3, lineno=1141)
          20	SWAP(arg=2, lineno=1141)
          22	COPY(arg=2, lineno=1141)
          24	COMPARE_OP(arg=58, lineno=1141)
          28	POP_JUMP_IF_FALSE(arg=6, lineno=1141)
          32	LOAD_FAST(arg=1, lineno=1141)
          34	COMPARE_OP(arg=58, lineno=1141)
          38	POP_JUMP_IF_FALSE(arg=5, lineno=1141)
          42	JUMP_FORWARD(arg=2, lineno=1141)
>         44	POP_TOP(arg=None, lineno=1141)
          46	JUMP_FORWARD(arg=2, lineno=1141)
>         48	LOAD_CONST(arg=1, lineno=1142)
          50	STORE_FAST(arg=3, lineno=1142)
>         52	LOAD_FAST(arg=0, lineno=1144)
          54	LOAD_CONST(arg=2, lineno=1144)
          56	BINARY_SUBSCR(arg=None, lineno=1144)
          60	STORE_FAST(arg=4, lineno=1144)
          62	LOAD_FAST(arg=1, lineno=1145)
          64	UNARY_NEGATIVE(arg=None, lineno=1145)
          66	LOAD_FAST(arg=4, lineno=1145)
          68	SWAP(arg=2, lineno=1145)
          70	COPY(arg=2, lineno=1145)
          72	COMPARE_OP(arg=58, lineno=1145)
          76	POP_JUMP_IF_FALSE(arg=6, lineno=1145)
          80	LOAD_FAST(arg=1, lineno=1145)
          82	COMPARE_OP(arg=58, lineno=1145)
          86	POP_JUMP_IF_FALSE(arg=5, lineno=1145)
          90	JUMP_FORWARD(arg=2, lineno=1145)
>         92	POP_TOP(arg=None, lineno=1145)
          94	JUMP_FORWARD(arg=2, lineno=1145)
>         96	LOAD_CONST(arg=1, lineno=1146)
          98	STORE_FAST(arg=4, lineno=1146)
>        100	LOAD_FAST(arg=2, lineno=1148)
         102	TO_BOOL(arg=None, lineno=1148)
         110	POP_JUMP_IF_FALSE(arg=45, lineno=1148)
         114	LOAD_GLOBAL(arg=0, lineno=1149)
         124	LOAD_ATTR(arg=2, lineno=1149)
         144	PUSH_NULL(arg=None, lineno=1149)
         146	LOAD_FAST(arg=3, lineno=1149)
         148	CALL(arg=1, lineno=1149)
         156	LOAD_GLOBAL(arg=0, lineno=1149)
         166	LOAD_ATTR(arg=2, lineno=1149)
         186	PUSH_NULL(arg=None, lineno=1149)
         188	LOAD_FAST(arg=4, lineno=1149)
         190	CALL(arg=1, lineno=1149)
         198	COMPARE_OP(arg=103, lineno=1149)
         202	RETURN_VALUE(arg=None, lineno=1149)
>        204	LOAD_GLOBAL(arg=0, lineno=1151)
         214	LOAD_ATTR(arg=4, lineno=1151)
         234	PUSH_NULL(arg=None, lineno=1151)
         236	LOAD_FAST(arg=3, lineno=1151)
         238	CALL(arg=1, lineno=1151)
         246	LOAD_GLOBAL(arg=0, lineno=1151)
         256	LOAD_ATTR(arg=4, lineno=1151)
         276	PUSH_NULL(arg=None, lineno=1151)
         278	LOAD_FAST(arg=4, lineno=1151)
         280	CALL(arg=1, lineno=1151)
         288	COMPARE_OP(arg=103, lineno=1151)
         292	RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:03:20,375 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:03:20,375 - DEBUG - stack: []
2025-09-26 15:03:20,375 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:03:20,375 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-09-26 15:03:20,375 - DEBUG - stack []
2025-09-26 15:03:20,375 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1137)
2025-09-26 15:03:20,376 - DEBUG - stack []
2025-09-26 15:03:20,376 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1140)
2025-09-26 15:03:20,376 - DEBUG - stack []
2025-09-26 15:03:20,376 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1140)
2025-09-26 15:03:20,376 - DEBUG - stack ['$x4.0']
2025-09-26 15:03:20,376 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-09-26 15:03:20,376 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-09-26 15:03:20,376 - DEBUG - dispatch pc=12, inst=STORE_FAST(arg=3, lineno=1140)
2025-09-26 15:03:20,377 - DEBUG - stack ['$8binary_subscr.2']
2025-09-26 15:03:20,377 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:03:20,377 - DEBUG - stack []
2025-09-26 15:03:20,377 - DEBUG - dispatch pc=16, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-09-26 15:03:20,377 - DEBUG - stack ['$threshold14.3']
2025-09-26 15:03:20,377 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=1141)
2025-09-26 15:03:20,377 - DEBUG - stack ['$16unary_negative.4']
2025-09-26 15:03:20,378 - DEBUG - dispatch pc=20, inst=SWAP(arg=2, lineno=1141)
2025-09-26 15:03:20,378 - DEBUG - stack ['$16unary_negative.4', '$x018.5']
2025-09-26 15:03:20,378 - DEBUG - dispatch pc=22, inst=COPY(arg=2, lineno=1141)
2025-09-26 15:03:20,378 - DEBUG - stack ['$x018.5', '$16unary_negative.4']
2025-09-26 15:03:20,378 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:03:20,378 - DEBUG - stack ['$x018.5', '$16unary_negative.4', '$x018.5']
2025-09-26 15:03:20,379 - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1141)
2025-09-26 15:03:20,379 - DEBUG - stack ['$x018.5', '$24compare_op.6']
2025-09-26 15:03:20,379 - DEBUG - end state. edges=[Edge(pc=32, stack=('$x018.5',), blockstack=(), npush=0), Edge(pc=44, stack=('$x018.5',), blockstack=(), npush=0)]
2025-09-26 15:03:20,379 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=44 nstack_initial=1)])
2025-09-26 15:03:20,379 - DEBUG - stack: ['$phi32.0']
2025-09-26 15:03:20,379 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-09-26 15:03:20,380 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:03:20,380 - DEBUG - stack ['$phi32.0']
2025-09-26 15:03:20,380 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:03:20,380 - DEBUG - stack ['$phi32.0', '$threshold32.1']
2025-09-26 15:03:20,380 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1141)
2025-09-26 15:03:20,380 - DEBUG - stack ['$34compare_op.2']
2025-09-26 15:03:20,381 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:20,381 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=1), State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:03:20,381 - DEBUG - stack: ['$phi44.0']
2025-09-26 15:03:20,381 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=1)
2025-09-26 15:03:20,381 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=1141)
2025-09-26 15:03:20,381 - DEBUG - stack ['$phi44.0']
2025-09-26 15:03:20,381 - DEBUG - dispatch pc=46, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:03:20,382 - DEBUG - stack []
2025-09-26 15:03:20,382 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:20,382 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:03:20,382 - DEBUG - stack: []
2025-09-26 15:03:20,382 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-09-26 15:03:20,382 - DEBUG - dispatch pc=42, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:03:20,382 - DEBUG - stack []
2025-09-26 15:03:20,383 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:20,383 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2025-09-26 15:03:20,383 - DEBUG - stack: []
2025-09-26 15:03:20,383 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-09-26 15:03:20,383 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1144)
2025-09-26 15:03:20,383 - DEBUG - stack []
2025-09-26 15:03:20,384 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=1144)
2025-09-26 15:03:20,384 - DEBUG - stack ['$x52.0']
2025-09-26 15:03:20,384 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-09-26 15:03:20,384 - DEBUG - stack ['$x52.0', '$const54.1.2']
2025-09-26 15:03:20,384 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=4, lineno=1144)
2025-09-26 15:03:20,384 - DEBUG - stack ['$56binary_subscr.2']
2025-09-26 15:03:20,384 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:03:20,385 - DEBUG - stack []
2025-09-26 15:03:20,385 - DEBUG - dispatch pc=64, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-09-26 15:03:20,385 - DEBUG - stack ['$threshold62.3']
2025-09-26 15:03:20,385 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=4, lineno=1145)
2025-09-26 15:03:20,385 - DEBUG - stack ['$64unary_negative.4']
2025-09-26 15:03:20,385 - DEBUG - dispatch pc=68, inst=SWAP(arg=2, lineno=1145)
2025-09-26 15:03:20,385 - DEBUG - stack ['$64unary_negative.4', '$x166.5']
2025-09-26 15:03:20,385 - DEBUG - dispatch pc=70, inst=COPY(arg=2, lineno=1145)
2025-09-26 15:03:20,386 - DEBUG - stack ['$x166.5', '$64unary_negative.4']
2025-09-26 15:03:20,386 - DEBUG - dispatch pc=72, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:03:20,386 - DEBUG - stack ['$x166.5', '$64unary_negative.4', '$x166.5']
2025-09-26 15:03:20,386 - DEBUG - dispatch pc=76, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1145)
2025-09-26 15:03:20,386 - DEBUG - stack ['$x166.5', '$72compare_op.6']
2025-09-26 15:03:20,386 - DEBUG - end state. edges=[Edge(pc=80, stack=('$x166.5',), blockstack=(), npush=0), Edge(pc=92, stack=('$x166.5',), blockstack=(), npush=0)]
2025-09-26 15:03:20,386 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:03:20,387 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:03:20,387 - DEBUG - stack: []
2025-09-26 15:03:20,387 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-09-26 15:03:20,387 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1142)
2025-09-26 15:03:20,387 - DEBUG - stack []
2025-09-26 15:03:20,387 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=3, lineno=1142)
2025-09-26 15:03:20,387 - DEBUG - stack ['$const48.0.1']
2025-09-26 15:03:20,387 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:20,388 - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:03:20,388 - DEBUG - stack: ['$phi80.0']
2025-09-26 15:03:20,388 - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-09-26 15:03:20,388 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:03:20,388 - DEBUG - stack ['$phi80.0']
2025-09-26 15:03:20,388 - DEBUG - dispatch pc=82, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:03:20,388 - DEBUG - stack ['$phi80.0', '$threshold80.1']
2025-09-26 15:03:20,388 - DEBUG - dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1145)
2025-09-26 15:03:20,389 - DEBUG - stack ['$82compare_op.2']
2025-09-26 15:03:20,389 - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:20,389 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:20,389 - DEBUG - stack: ['$phi92.0']
2025-09-26 15:03:20,389 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=1)
2025-09-26 15:03:20,389 - DEBUG - dispatch pc=92, inst=POP_TOP(arg=None, lineno=1145)
2025-09-26 15:03:20,389 - DEBUG - stack ['$phi92.0']
2025-09-26 15:03:20,389 - DEBUG - dispatch pc=94, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:03:20,390 - DEBUG - stack []
2025-09-26 15:03:20,390 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:20,390 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:20,390 - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:20,390 - DEBUG - stack: []
2025-09-26 15:03:20,390 - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-09-26 15:03:20,390 - DEBUG - dispatch pc=90, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:03:20,390 - DEBUG - stack []
2025-09-26 15:03:20,391 - DEBUG - end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:20,391 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-09-26 15:03:20,391 - DEBUG - stack: []
2025-09-26 15:03:20,391 - DEBUG - state.pc_initial: State(pc_initial=100 nstack_initial=0)
2025-09-26 15:03:20,391 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=2, lineno=1148)
2025-09-26 15:03:20,391 - DEBUG - stack []
2025-09-26 15:03:20,391 - DEBUG - dispatch pc=102, inst=TO_BOOL(arg=None, lineno=1148)
2025-09-26 15:03:20,392 - DEBUG - stack ['$zero_pos100.0']
2025-09-26 15:03:20,392 - DEBUG - dispatch pc=110, inst=POP_JUMP_IF_FALSE(arg=45, lineno=1148)
2025-09-26 15:03:20,392 - DEBUG - stack ['$102to_bool.1']
2025-09-26 15:03:20,392 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=204, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:20,392 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:03:20,392 - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:03:20,393 - DEBUG - stack: []
2025-09-26 15:03:20,393 - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2025-09-26 15:03:20,393 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=1, lineno=1146)
2025-09-26 15:03:20,393 - DEBUG - stack []
2025-09-26 15:03:20,393 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=4, lineno=1146)
2025-09-26 15:03:20,393 - DEBUG - stack ['$const96.0.1']
2025-09-26 15:03:20,393 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:20,394 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:20,394 - DEBUG - stack: []
2025-09-26 15:03:20,394 - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2025-09-26 15:03:20,394 - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:03:20,394 - DEBUG - stack []
2025-09-26 15:03:20,394 - DEBUG - dispatch pc=124, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:03:20,395 - DEBUG - stack ['$114load_global.0']
2025-09-26 15:03:20,395 - DEBUG - dispatch pc=144, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:03:20,395 - DEBUG - stack ['$124load_attr.1']
2025-09-26 15:03:20,395 - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=3, lineno=1149)
2025-09-26 15:03:20,395 - DEBUG - stack ['$124load_attr.1', '$null$144.2']
2025-09-26 15:03:20,395 - DEBUG - dispatch pc=148, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:03:20,395 - DEBUG - stack ['$124load_attr.1', '$null$144.2', '$x0146.3']
2025-09-26 15:03:20,396 - DEBUG - dispatch pc=156, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:03:20,396 - DEBUG - stack ['$148call.4']
2025-09-26 15:03:20,396 - DEBUG - dispatch pc=166, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:03:20,396 - DEBUG - stack ['$148call.4', '$156load_global.5']
2025-09-26 15:03:20,396 - DEBUG - dispatch pc=186, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:03:20,396 - DEBUG - stack ['$148call.4', '$166load_attr.6']
2025-09-26 15:03:20,397 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=4, lineno=1149)
2025-09-26 15:03:20,397 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7']
2025-09-26 15:03:20,397 - DEBUG - dispatch pc=190, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:03:20,397 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7', '$x1188.8']
2025-09-26 15:03:20,397 - DEBUG - dispatch pc=198, inst=COMPARE_OP(arg=103, lineno=1149)
2025-09-26 15:03:20,397 - DEBUG - stack ['$148call.4', '$190call.9']
2025-09-26 15:03:20,397 - DEBUG - dispatch pc=202, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-09-26 15:03:20,398 - DEBUG - stack ['$198compare_op.10']
2025-09-26 15:03:20,398 - DEBUG - end state. edges=[]
2025-09-26 15:03:20,398 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:20,398 - DEBUG - stack: []
2025-09-26 15:03:20,398 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=0)
2025-09-26 15:03:20,398 - DEBUG - dispatch pc=204, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:03:20,398 - DEBUG - stack []
2025-09-26 15:03:20,399 - DEBUG - dispatch pc=214, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:03:20,399 - DEBUG - stack ['$204load_global.0']
2025-09-26 15:03:20,399 - DEBUG - dispatch pc=234, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:03:20,399 - DEBUG - stack ['$214load_attr.1']
2025-09-26 15:03:20,399 - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=3, lineno=1151)
2025-09-26 15:03:20,399 - DEBUG - stack ['$214load_attr.1', '$null$234.2']
2025-09-26 15:03:20,399 - DEBUG - dispatch pc=238, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:03:20,399 - DEBUG - stack ['$214load_attr.1', '$null$234.2', '$x0236.3']
2025-09-26 15:03:20,400 - DEBUG - dispatch pc=246, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:03:20,400 - DEBUG - stack ['$238call.4']
2025-09-26 15:03:20,400 - DEBUG - dispatch pc=256, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:03:20,400 - DEBUG - stack ['$238call.4', '$246load_global.5']
2025-09-26 15:03:20,400 - DEBUG - dispatch pc=276, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:03:20,400 - DEBUG - stack ['$238call.4', '$256load_attr.6']
2025-09-26 15:03:20,400 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=4, lineno=1151)
2025-09-26 15:03:20,400 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7']
2025-09-26 15:03:20,401 - DEBUG - dispatch pc=280, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:03:20,401 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7', '$x1278.8']
2025-09-26 15:03:20,401 - DEBUG - dispatch pc=288, inst=COMPARE_OP(arg=103, lineno=1151)
2025-09-26 15:03:20,401 - DEBUG - stack ['$238call.4', '$280call.9']
2025-09-26 15:03:20,401 - DEBUG - dispatch pc=292, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:03:20,401 - DEBUG - stack ['$288compare_op.10']
2025-09-26 15:03:20,401 - DEBUG - end state. edges=[]
2025-09-26 15:03:20,401 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:20,402 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:03:20,402 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=1): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=204 nstack_initial=0): set()})
2025-09-26 15:03:20,402 - DEBUG - defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi44.0': State(pc_initial=0 nstack_initial=0),
 '$phi80.0': State(pc_initial=52 nstack_initial=0),
 '$phi92.0': State(pc_initial=52 nstack_initial=0)}
2025-09-26 15:03:20,402 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:03:20,403 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:03:20,403 - DEBUG - keep phismap: {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
 '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}}
2025-09-26 15:03:20,403 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$x018.5'},
             State(pc_initial=52 nstack_initial=0): {'$phi80.0': '$x166.5'}})
2025-09-26 15:03:20,403 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:03:20,404 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'value': '$8binary_subscr.2'}), (14, {'res': '$threshold14.3'}), (16, {'value': '$threshold14.3', 'res': '$16unary_negative.4'}), (18, {'res': '$x018.5'}), (24, {'lhs': '$16unary_negative.4', 'rhs': '$x018.5', 'res': '$24compare_op.6'}), (28, {'pred': '$24compare_op.6'})), outgoing_phis={'$phi32.0': '$x018.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$x018.5',), 44: ('$x018.5',)})
2025-09-26 15:03:20,404 - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'res': '$threshold32.1'}), (34, {'lhs': '$phi32.0', 'rhs': '$threshold32.1', 'res': '$34compare_op.2'}), (38, {'pred': '$34compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 52: ()})
2025-09-26 15:03:20,404 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ()})
2025-09-26 15:03:20,404 - DEBUG - block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((46, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:03:20,404 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$const48.0.1'}), (50, {'value': '$const48.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:03:20,405 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$x52.0'}), (54, {'res': '$const54.1.2'}), (56, {'index': '$const54.1.2', 'target': '$x52.0', 'res': '$56binary_subscr.2'}), (60, {'value': '$56binary_subscr.2'}), (62, {'res': '$threshold62.3'}), (64, {'value': '$threshold62.3', 'res': '$64unary_negative.4'}), (66, {'res': '$x166.5'}), (72, {'lhs': '$64unary_negative.4', 'rhs': '$x166.5', 'res': '$72compare_op.6'}), (76, {'pred': '$72compare_op.6'})), outgoing_phis={'$phi80.0': '$x166.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$x166.5',), 92: ('$x166.5',)})
2025-09-26 15:03:20,405 - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$threshold80.1'}), (82, {'lhs': '$phi80.0', 'rhs': '$threshold80.1', 'res': '$82compare_op.2'}), (86, {'pred': '$82compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 100: ()})
2025-09-26 15:03:20,405 - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
2025-09-26 15:03:20,405 - DEBUG - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((94, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:03:20,406 - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$const96.0.1'}), (98, {'value': '$const96.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:03:20,406 - DEBUG - block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$zero_pos100.0'}), (102, {'val': '$zero_pos100.0', 'res': '$102to_bool.1'}), (110, {'pred': '$102to_bool.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 204: ()})
2025-09-26 15:03:20,406 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'idx': 0, 'res': '$114load_global.0'}), (124, {'item': '$114load_global.0', 'res': '$124load_attr.1'}), (144, {}), (146, {'res': '$x0146.3'}), (148, {'func': '$124load_attr.1', 'args': ['$x0146.3'], 'kw_names': None, 'res': '$148call.4'}), (156, {'idx': 0, 'res': '$156load_global.5'}), (166, {'item': '$156load_global.5', 'res': '$166load_attr.6'}), (186, {}), (188, {'res': '$x1188.8'}), (190, {'func': '$166load_attr.6', 'args': ['$x1188.8'], 'kw_names': None, 'res': '$190call.9'}), (198, {'lhs': '$148call.4', 'rhs': '$190call.9', 'res': '$198compare_op.10'}), (202, {'retval': '$198compare_op.10', 'castval': '$202return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:03:20,406 - DEBUG - block_infos State(pc_initial=204 nstack_initial=0):
AdaptBlockInfo(insts=((204, {'idx': 0, 'res': '$204load_global.0'}), (214, {'item': '$204load_global.0', 'res': '$214load_attr.1'}), (234, {}), (236, {'res': '$x0236.3'}), (238, {'func': '$214load_attr.1', 'args': ['$x0236.3'], 'kw_names': None, 'res': '$238call.4'}), (246, {'idx': 0, 'res': '$246load_global.5'}), (256, {'item': '$246load_global.5', 'res': '$256load_attr.6'}), (276, {}), (278, {'res': '$x1278.8'}), (280, {'func': '$256load_attr.6', 'args': ['$x1278.8'], 'kw_names': None, 'res': '$280call.9'}), (288, {'lhs': '$238call.4', 'rhs': '$280call.9', 'res': '$288compare_op.10'}), (292, {'retval': '$288compare_op.10', 'castval': '$292return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:03:20,408 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    x0 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$const6.1.1', 'x', 'x0']
    $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$16unary_negative.4', 'threshold']
    $24compare_op.6 = $16unary_negative.4 <= x0 ['$16unary_negative.4', '$24compare_op.6', 'x0']
    $bool28 = global(bool: <class 'bool'>)   ['$bool28']
    $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.6', '$28pred', '$bool28']
    $phi32.0 = x0                            ['$phi32.0', 'x0']
    branch $28pred, 32, 44                   ['$28pred']
label 32:
    $34compare_op.2 = $phi32.0 <= threshold  ['$34compare_op.2', '$phi32.0', 'threshold']
    $bool38 = global(bool: <class 'bool'>)   ['$bool38']
    $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.2', '$38pred', '$bool38']
    branch $38pred, 42, 52                   ['$38pred']
label 42:
    jump 48                                  []
label 44:
    jump 52                                  []
label 48:
    x0 = const(int, 0)                       ['x0']
    jump 52                                  []
label 52:
    $const54.1.2 = const(int, -1)            ['$const54.1.2']
    x1 = getitem(value=x, index=$const54.1.2, fn=<built-in function getitem>) ['$const54.1.2', 'x', 'x1']
    $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$64unary_negative.4', 'threshold']
    $72compare_op.6 = $64unary_negative.4 <= x1 ['$64unary_negative.4', '$72compare_op.6', 'x1']
    $bool76 = global(bool: <class 'bool'>)   ['$bool76']
    $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$72compare_op.6', '$76pred', '$bool76']
    $phi80.0 = x1                            ['$phi80.0', 'x1']
    branch $76pred, 80, 92                   ['$76pred']
label 80:
    $82compare_op.2 = $phi80.0 <= threshold  ['$82compare_op.2', '$phi80.0', 'threshold']
    $bool86 = global(bool: <class 'bool'>)   ['$bool86']
    $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$82compare_op.2', '$86pred', '$bool86']
    branch $86pred, 90, 100                  ['$86pred']
label 90:
    jump 96                                  []
label 92:
    jump 100                                 []
label 96:
    x1 = const(int, 0)                       ['x1']
    jump 100                                 []
label 100:
    $bool110 = global(bool: <class 'bool'>)  ['$bool110']
    $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$110pred', '$bool110', 'zero_pos']
    branch $110pred, 114, 204                ['$110pred']
label 114:
    $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$114load_global.0']
    $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit) ['$114load_global.0', '$124load_attr.1']
    $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$124load_attr.1', '$148call.4', 'x0']
    $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$156load_global.5']
    $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit) ['$156load_global.5', '$166load_attr.6']
    $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.6', '$190call.9', 'x1']
    $198compare_op.10 = $148call.4 != $190call.9 ['$148call.4', '$190call.9', '$198compare_op.10']
    $202return_value.11 = cast(value=$198compare_op.10) ['$198compare_op.10', '$202return_value.11']
    return $202return_value.11               ['$202return_value.11']
label 204:
    $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$204load_global.0']
    $214load_attr.1 = getattr(value=$204load_global.0, attr=sign) ['$204load_global.0', '$214load_attr.1']
    $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.1', '$238call.4', 'x0']
    $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$246load_global.5']
    $256load_attr.6 = getattr(value=$246load_global.5, attr=sign) ['$246load_global.5', '$256load_attr.6']
    $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$256load_attr.6', '$280call.9', 'x1']
    $288compare_op.10 = $238call.4 != $280call.9 ['$238call.4', '$280call.9', '$288compare_op.10']
    $292return_value.11 = cast(value=$288compare_op.10) ['$288compare_op.10', '$292return_value.11']
    return $292return_value.11               ['$292return_value.11']

2025-09-26 15:03:20,413 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1154)
           2	RESUME(arg=0, lineno=1154)
           4	LOAD_GLOBAL(arg=1, lineno=1170)
          14	LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
          16	LOAD_FAST(arg=2, lineno=1170)
          18	CALL(arg=3, lineno=1170)
          26	LOAD_FAST(arg=3, lineno=1170)
          28	LOAD_CONST(arg=1, lineno=1170)
          30	LOAD_CONST(arg=1, lineno=1170)
          32	STORE_SLICE(arg=None, lineno=1170)
          34	RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:03:20,413 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:03:20,413 - DEBUG - stack: []
2025-09-26 15:03:20,413 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:03:20,413 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1154)
2025-09-26 15:03:20,413 - DEBUG - stack []
2025-09-26 15:03:20,414 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1154)
2025-09-26 15:03:20,414 - DEBUG - stack []
2025-09-26 15:03:20,414 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1170)
2025-09-26 15:03:20,414 - DEBUG - stack []
2025-09-26 15:03:20,414 - DEBUG - dispatch pc=14, inst=LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
2025-09-26 15:03:20,414 - DEBUG - stack ['$4load_global.0', '$null$4.1']
2025-09-26 15:03:20,415 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=1170)
2025-09-26 15:03:20,415 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3']
2025-09-26 15:03:20,415 - DEBUG - dispatch pc=18, inst=CALL(arg=3, lineno=1170)
2025-09-26 15:03:20,415 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3', '$zero_pos16.4']
2025-09-26 15:03:20,415 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=3, lineno=1170)
2025-09-26 15:03:20,415 - DEBUG - stack ['$18call.5']
2025-09-26 15:03:20,415 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:03:20,415 - DEBUG - stack ['$18call.5', '$y26.6']
2025-09-26 15:03:20,416 - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:03:20,416 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1']
2025-09-26 15:03:20,416 - DEBUG - dispatch pc=32, inst=STORE_SLICE(arg=None, lineno=1170)
2025-09-26 15:03:20,416 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1', '$const30.8.1']
2025-09-26 15:03:20,416 - DEBUG - dispatch pc=34, inst=RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:03:20,416 - DEBUG - stack []
2025-09-26 15:03:20,416 - DEBUG - end state. edges=[]
2025-09-26 15:03:20,417 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:03:20,417 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-09-26 15:03:20,417 - DEBUG - defmap: {}
2025-09-26 15:03:20,417 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:03:20,417 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:03:20,417 - DEBUG - keep phismap: {}
2025-09-26 15:03:20,418 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-09-26 15:03:20,418 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:03:20,418 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res1': '$x14.2', 'res2': '$threshold14.3'}), (16, {'res': '$zero_pos16.4'}), (18, {'func': '$4load_global.0', 'args': ['$x14.2', '$threshold14.3', '$zero_pos16.4'], 'kw_names': None, 'res': '$18call.5'}), (26, {'res': '$y26.6'}), (28, {'res': '$const28.7.1'}), (30, {'res': '$const30.8.1'}), (32, {'start': '$const28.7.1', 'end': '$const30.8.1', 'container': '$y26.6', 'value': '$18call.5', 'res': '$32store_slice.10', 'slicevar': '$32store_slice.9'}), (34, {'retval': '$const34.11', 'castval': '$34return_const.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:03:20,418 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002985CDDC050>) ['$4load_global.0']
    $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const28.7.1 = const(NoneType, None)     ['$const28.7.1']
    $const30.8.1 = const(NoneType, None)     ['$const30.8.1']
    $32store_slice.9 = global(slice: <class 'slice'>) ['$32store_slice.9']
    $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$32store_slice.10', '$32store_slice.9', '$const28.7.1', '$const30.8.1']
    y[$32store_slice.10] = $18call.5         ['$18call.5', '$32store_slice.10', 'y']
    $const34.11 = const(NoneType, None)      ['$const34.11']
    $34return_const.12 = cast(value=$const34.11) ['$34return_const.12', '$const34.11']
    return $34return_const.12                ['$34return_const.12']

2025-09-26 15:03:20,423 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:03:20,423 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D029050>
2025-09-26 15:03:20,423 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:20,423 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:20,423 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:20,423 - DEBUG - on stmt: y = arg(3, name=y)
2025-09-26 15:03:20,423 - DEBUG - on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002985CDDC050>)
2025-09-26 15:03:20,424 - DEBUG - on stmt: $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,424 - DEBUG - on stmt: $const28.7.1 = const(NoneType, None)
2025-09-26 15:03:20,424 - DEBUG - on stmt: $const30.8.1 = const(NoneType, None)
2025-09-26 15:03:20,424 - DEBUG - on stmt: $32store_slice.9 = global(slice: <class 'slice'>)
2025-09-26 15:03:20,424 - DEBUG - on stmt: $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,424 - DEBUG - on stmt: y[slice(None, None, None)] = $18call.5
2025-09-26 15:03:20,425 - DEBUG - on stmt: $const34.11 = const(NoneType, None)
2025-09-26 15:03:20,425 - DEBUG - on stmt: $34return_const.12 = cast(value=$const34.11)
2025-09-26 15:03:20,425 - DEBUG - on stmt: return $34return_const.12
2025-09-26 15:03:20,425 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.5': [(<numba.core.ir.Assign object at 0x000002985CFC5430>,
                            0)],
             '$32store_slice.10': [(<numba.core.ir.Assign object at 0x000002985CFC5D30>,
                                    0)],
             '$32store_slice.9': [(<numba.core.ir.Assign object at 0x000002985CFC5D90>,
                                   0)],
             '$34return_const.12': [(<numba.core.ir.Assign object at 0x000002985CFC7B90>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000002985CFC6210>,
                                  0)],
             '$const28.7.1': [(<numba.core.ir.Assign object at 0x000002985CFC5C70>,
                               0)],
             '$const30.8.1': [(<numba.core.ir.Assign object at 0x000002985CFC5DF0>,
                               0)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x000002985CFC7A70>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002985CFB27B0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002985CF12AB0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000002985CEDDC70>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002985CEDDE50>,
                           0)]})
2025-09-26 15:03:20,426 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002985D029050>
2025-09-26 15:03:20,475 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=3, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=3, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	LOAD_CONST(arg=1, lineno=3)
          92	CALL_KW(arg=2, lineno=3)
          94	STORE_FAST(arg=4, lineno=3)
          96	LOAD_CONST(arg=2, lineno=4)
          98	LOAD_FAST(arg=4, lineno=4)
         100	LOAD_CONST(arg=0, lineno=4)
         102	LOAD_CONST(arg=3, lineno=4)
         104	STORE_SLICE(arg=None, lineno=4)
         106	LOAD_CONST(arg=2, lineno=5)
         108	LOAD_FAST(arg=4, lineno=5)
         110	LOAD_CONST(arg=2, lineno=5)
         112	LOAD_CONST(arg=0, lineno=5)
         114	STORE_SLICE(arg=None, lineno=5)
         116	LOAD_GLOBAL(arg=9, lineno=6)
         126	LOAD_GLOBAL(arg=11, lineno=6)
         136	LOAD_CONST(arg=2, lineno=6)
         138	LOAD_CONST(arg=4, lineno=6)
         140	CALL(arg=2, lineno=6)
         148	UNARY_NEGATIVE(arg=None, lineno=6)
         150	LOAD_FAST(arg=3, lineno=6)
         152	LOAD_CONST(arg=2, lineno=6)
         154	BINARY_SUBSCR(arg=None, lineno=6)
         158	LOAD_GLOBAL(arg=13, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	LOAD_CONST(arg=2, lineno=6)
         172	CALL(arg=2, lineno=6)
         180	BINARY_OP(arg=10, lineno=6)
         184	CALL(arg=2, lineno=6)
         192	GET_ITER(arg=None, lineno=6)
>        194	FOR_ITER(arg=5, lineno=6)
         198	STORE_FAST(arg=5, lineno=6)
         200	LOAD_CONST(arg=2, lineno=7)
         202	STORE_FAST(arg=6, lineno=7)
         204	JUMP_BACKWARD(arg=7, lineno=7)
>        208	END_FOR(arg=None, lineno=6)
         210	POP_TOP(arg=None, lineno=6)
         212	LOAD_FAST(arg=4, lineno=8)
         214	RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:03:20,476 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:03:20,476 - DEBUG - stack: []
2025-09-26 15:03:20,476 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:03:20,476 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-09-26 15:03:20,477 - DEBUG - stack []
2025-09-26 15:03:20,477 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2025-09-26 15:03:20,477 - DEBUG - stack []
2025-09-26 15:03:20,477 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2025-09-26 15:03:20,477 - DEBUG - stack []
2025-09-26 15:03:20,477 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2025-09-26 15:03:20,477 - DEBUG - stack ['$x4.0']
2025-09-26 15:03:20,478 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=3, lineno=2)
2025-09-26 15:03:20,478 - DEBUG - stack ['$6load_attr.1']
2025-09-26 15:03:20,478 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:03:20,478 - DEBUG - stack []
2025-09-26 15:03:20,478 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2025-09-26 15:03:20,478 - DEBUG - stack ['$28load_global.2']
2025-09-26 15:03:20,478 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=3, lineno=3)
2025-09-26 15:03:20,478 - DEBUG - stack ['$38load_attr.3', '$null$38.4']
2025-09-26 15:03:20,479 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:03:20,479 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5']
2025-09-26 15:03:20,479 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2025-09-26 15:03:20,479 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$60load_global.6']
2025-09-26 15:03:20,479 - DEBUG - dispatch pc=90, inst=LOAD_CONST(arg=1, lineno=3)
2025-09-26 15:03:20,479 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7']
2025-09-26 15:03:20,479 - DEBUG - dispatch pc=92, inst=CALL_KW(arg=2, lineno=3)
2025-09-26 15:03:20,480 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7', '$const90.8.1']
2025-09-26 15:03:20,480 - DEBUG - dispatch pc=94, inst=STORE_FAST(arg=4, lineno=3)
2025-09-26 15:03:20,480 - DEBUG - stack ['$92call_kw.9']
2025-09-26 15:03:20,480 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=2, lineno=4)
2025-09-26 15:03:20,480 - DEBUG - stack []
2025-09-26 15:03:20,480 - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=4)
2025-09-26 15:03:20,480 - DEBUG - stack ['$const96.10.2']
2025-09-26 15:03:20,481 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=0, lineno=4)
2025-09-26 15:03:20,481 - DEBUG - stack ['$const96.10.2', '$out098.11']
2025-09-26 15:03:20,481 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=3, lineno=4)
2025-09-26 15:03:20,481 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0']
2025-09-26 15:03:20,481 - DEBUG - dispatch pc=104, inst=STORE_SLICE(arg=None, lineno=4)
2025-09-26 15:03:20,481 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0', '$const102.13.3']
2025-09-26 15:03:20,482 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:03:20,482 - DEBUG - stack []
2025-09-26 15:03:20,482 - DEBUG - dispatch pc=108, inst=LOAD_FAST(arg=4, lineno=5)
2025-09-26 15:03:20,482 - DEBUG - stack ['$const106.16.2']
2025-09-26 15:03:20,482 - DEBUG - dispatch pc=110, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:03:20,482 - DEBUG - stack ['$const106.16.2', '$out0108.17']
2025-09-26 15:03:20,482 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=0, lineno=5)
2025-09-26 15:03:20,483 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2']
2025-09-26 15:03:20,483 - DEBUG - dispatch pc=114, inst=STORE_SLICE(arg=None, lineno=5)
2025-09-26 15:03:20,483 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2', '$const112.19.0']
2025-09-26 15:03:20,483 - DEBUG - dispatch pc=116, inst=LOAD_GLOBAL(arg=9, lineno=6)
2025-09-26 15:03:20,483 - DEBUG - stack []
2025-09-26 15:03:20,483 - DEBUG - dispatch pc=126, inst=LOAD_GLOBAL(arg=11, lineno=6)
2025-09-26 15:03:20,483 - DEBUG - stack ['$116load_global.22', '$null$116.23']
2025-09-26 15:03:20,484 - DEBUG - dispatch pc=136, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:03:20,484 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25']
2025-09-26 15:03:20,484 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=4, lineno=6)
2025-09-26 15:03:20,484 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2']
2025-09-26 15:03:20,484 - DEBUG - dispatch pc=140, inst=CALL(arg=2, lineno=6)
2025-09-26 15:03:20,484 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2', '$const138.27.4']
2025-09-26 15:03:20,485 - DEBUG - dispatch pc=148, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-09-26 15:03:20,485 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$140call.28']
2025-09-26 15:03:20,485 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=3, lineno=6)
2025-09-26 15:03:20,485 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29']
2025-09-26 15:03:20,485 - DEBUG - dispatch pc=152, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:03:20,485 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30']
2025-09-26 15:03:20,485 - DEBUG - dispatch pc=154, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-09-26 15:03:20,486 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30', '$const152.31.2']
2025-09-26 15:03:20,486 - DEBUG - dispatch pc=158, inst=LOAD_GLOBAL(arg=13, lineno=6)
2025-09-26 15:03:20,486 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32']
2025-09-26 15:03:20,486 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:03:20,486 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34']
2025-09-26 15:03:20,486 - DEBUG - dispatch pc=170, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:03:20,486 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2']
2025-09-26 15:03:20,487 - DEBUG - dispatch pc=172, inst=CALL(arg=2, lineno=6)
2025-09-26 15:03:20,487 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2', '$const170.36.2']
2025-09-26 15:03:20,487 - DEBUG - dispatch pc=180, inst=BINARY_OP(arg=10, lineno=6)
2025-09-26 15:03:20,487 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$172call.37']
2025-09-26 15:03:20,487 - DEBUG - dispatch pc=184, inst=CALL(arg=2, lineno=6)
2025-09-26 15:03:20,487 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$binop_sub180.38']
2025-09-26 15:03:20,487 - DEBUG - dispatch pc=192, inst=GET_ITER(arg=None, lineno=6)
2025-09-26 15:03:20,487 - DEBUG - stack ['$184call.39']
2025-09-26 15:03:20,488 - DEBUG - end state. edges=[Edge(pc=194, stack=('$192get_iter.40',), blockstack=(), npush=0)]
2025-09-26 15:03:20,488 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:03:20,488 - DEBUG - stack: ['$phi194.0']
2025-09-26 15:03:20,488 - DEBUG - state.pc_initial: State(pc_initial=194 nstack_initial=1)
2025-09-26 15:03:20,488 - DEBUG - dispatch pc=194, inst=FOR_ITER(arg=5, lineno=6)
2025-09-26 15:03:20,488 - DEBUG - stack ['$phi194.0']
2025-09-26 15:03:20,488 - DEBUG - end state. edges=[Edge(pc=208, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0), Edge(pc=198, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0)]
2025-09-26 15:03:20,488 - DEBUG - pending: deque([State(pc_initial=208 nstack_initial=2), State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:03:20,489 - DEBUG - stack: ['$phi208.0', '$phi208.1']
2025-09-26 15:03:20,489 - DEBUG - state.pc_initial: State(pc_initial=208 nstack_initial=2)
2025-09-26 15:03:20,489 - DEBUG - dispatch pc=208, inst=END_FOR(arg=None, lineno=6)
2025-09-26 15:03:20,489 - DEBUG - stack ['$phi208.0', '$phi208.1']
2025-09-26 15:03:20,489 - DEBUG - dispatch pc=210, inst=POP_TOP(arg=None, lineno=6)
2025-09-26 15:03:20,489 - DEBUG - stack ['$phi208.0']
2025-09-26 15:03:20,489 - DEBUG - dispatch pc=212, inst=LOAD_FAST(arg=4, lineno=8)
2025-09-26 15:03:20,490 - DEBUG - stack []
2025-09-26 15:03:20,490 - DEBUG - dispatch pc=214, inst=RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:03:20,490 - DEBUG - stack ['$out0212.2']
2025-09-26 15:03:20,490 - DEBUG - end state. edges=[]
2025-09-26 15:03:20,490 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:03:20,490 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2025-09-26 15:03:20,490 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2025-09-26 15:03:20,491 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=5, lineno=6)
2025-09-26 15:03:20,491 - DEBUG - stack ['$phi198.0', '$phi198.1']
2025-09-26 15:03:20,491 - DEBUG - dispatch pc=200, inst=LOAD_CONST(arg=2, lineno=7)
2025-09-26 15:03:20,491 - DEBUG - stack ['$phi198.0']
2025-09-26 15:03:20,491 - DEBUG - dispatch pc=202, inst=STORE_FAST(arg=6, lineno=7)
2025-09-26 15:03:20,491 - DEBUG - stack ['$phi198.0', '$const200.2.2']
2025-09-26 15:03:20,491 - DEBUG - dispatch pc=204, inst=JUMP_BACKWARD(arg=7, lineno=7)
2025-09-26 15:03:20,492 - DEBUG - stack ['$phi198.0']
2025-09-26 15:03:20,492 - DEBUG - end state. edges=[Edge(pc=194, stack=('$phi198.0',), blockstack=(), npush=0)]
2025-09-26 15:03:20,492 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:03:20,492 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:03:20,492 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=194 nstack_initial=1): {'$phi194.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=208 nstack_initial=2): set()})
2025-09-26 15:03:20,492 - DEBUG - defmap: {'$phi194.0': State(pc_initial=0 nstack_initial=0),
 '$phi198.1': State(pc_initial=194 nstack_initial=1),
 '$phi208.1': State(pc_initial=194 nstack_initial=1)}
2025-09-26 15:03:20,493 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi198.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:03:20,493 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:03:20,494 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:03:20,494 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:03:20,495 - DEBUG - keep phismap: {'$phi194.0': {('$192get_iter.40', State(pc_initial=0 nstack_initial=0))},
 '$phi198.1': {('$194for_iter.2', State(pc_initial=194 nstack_initial=1))}}
2025-09-26 15:03:20,495 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi194.0': '$192get_iter.40'},
             State(pc_initial=194 nstack_initial=1): {'$phi198.1': '$194for_iter.2'}})
2025-09-26 15:03:20,495 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:03:20,496 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.3'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (90, {'res': '$const90.8.1'}), (92, {'func': '$38load_attr.3', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': '$const90.8.1', 'res': '$92call_kw.9'}), (94, {'value': '$92call_kw.9'}), (96, {'res': '$const96.10.2'}), (98, {'res': '$out098.11'}), (100, {'res': '$const100.12.0'}), (102, {'res': '$const102.13.3'}), (104, {'start': '$const100.12.0', 'end': '$const102.13.3', 'container': '$out098.11', 'value': '$const96.10.2', 'res': '$104store_slice.15', 'slicevar': '$104store_slice.14'}), (106, {'res': '$const106.16.2'}), (108, {'res': '$out0108.17'}), (110, {'res': '$const110.18.2'}), (112, {'res': '$const112.19.0'}), (114, {'start': '$const110.18.2', 'end': '$const112.19.0', 'container': '$out0108.17', 'value': '$const106.16.2', 'res': '$114store_slice.21', 'slicevar': '$114store_slice.20'}), (116, {'idx': 4, 'res': '$116load_global.22'}), (126, {'idx': 5, 'res': '$126load_global.24'}), (136, {'res': '$const136.26.2'}), (138, {'res': '$const138.27.4'}), (140, {'func': '$126load_global.24', 'args': ['$const136.26.2', '$const138.27.4'], 'kw_names': None, 'res': '$140call.28'}), (148, {'value': '$140call.28', 'res': '$148unary_negative.29'}), (150, {'res': '$full_shape0150.30'}), (152, {'res': '$const152.31.2'}), (154, {'index': '$const152.31.2', 'target': '$full_shape0150.30', 'res': '$154binary_subscr.32'}), (158, {'idx': 6, 'res': '$158load_global.33'}), (168, {'res': '$const168.35.2'}), (170, {'res': '$const170.36.2'}), (172, {'func': '$158load_global.33', 'args': ['$const168.35.2', '$const170.36.2'], 'kw_names': None, 'res': '$172call.37'}), (180, {'op': '-', 'lhs': '$154binary_subscr.32', 'rhs': '$172call.37', 'res': '$binop_sub180.38'}), (184, {'func': '$116load_global.22', 'args': ['$148unary_negative.29', '$binop_sub180.38'], 'kw_names': None, 'res': '$184call.39'}), (192, {'value': '$184call.39', 'res': '$192get_iter.40'})), outgoing_phis={'$phi194.0': '$192get_iter.40'}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$192get_iter.40',)})
2025-09-26 15:03:20,496 - DEBUG - block_infos State(pc_initial=194 nstack_initial=1):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.0', 'pair': '$194for_iter.1', 'indval': '$194for_iter.2', 'pred': '$194for_iter.3'}),), outgoing_phis={'$phi198.1': '$194for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={208: ('$phi194.0', '$194for_iter.2'), 198: ('$phi194.0', '$194for_iter.2')})
2025-09-26 15:03:20,496 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$const200.2.2'}), (202, {'value': '$const200.2.2'}), (204, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$phi198.0',)})
2025-09-26 15:03:20,496 - DEBUG - block_infos State(pc_initial=208 nstack_initial=2):
AdaptBlockInfo(insts=((212, {'res': '$out0212.2'}), (214, {'retval': '$out0212.2', 'castval': '$214return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:03:20,497 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$28load_global.2']
    $38load_attr.3 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.3']
    $60load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool) ['$60load_global.6', '$70load_attr.7']
    $const_dtype = const(str, dtype)         ['$const_dtype']
    $const90.8.1 = build_tuple(items=[Var($const_dtype, <string>:3)]) ['$const90.8.1', '$const_dtype']
    out0 = call $38load_attr.3(full_shape0, func=$38load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.3', '$70load_attr.7', 'full_shape0', 'out0']
    $const96.10.2 = const(int, 0)            ['$const96.10.2']
    $const100.12.0 = const(NoneType, None)   ['$const100.12.0']
    $const102.13.3 = const(int, 1)           ['$const102.13.3']
    $104store_slice.14 = global(slice: <class 'slice'>) ['$104store_slice.14']
    $104store_slice.15 = call $104store_slice.14($const100.12.0, $const102.13.3, func=$104store_slice.14, args=(Var($const100.12.0, <string>:4), Var($const102.13.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$104store_slice.14', '$104store_slice.15', '$const100.12.0', '$const102.13.3']
    out0[$104store_slice.15] = $const96.10.2 ['$104store_slice.15', '$const96.10.2', 'out0']
    $const106.16.2 = const(int, 0)           ['$const106.16.2']
    $const110.18.2 = const(int, 0)           ['$const110.18.2']
    $const112.19.0 = const(NoneType, None)   ['$const112.19.0']
    $114store_slice.20 = global(slice: <class 'slice'>) ['$114store_slice.20']
    $114store_slice.21 = call $114store_slice.20($const110.18.2, $const112.19.0, func=$114store_slice.20, args=(Var($const110.18.2, <string>:5), Var($const112.19.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$114store_slice.20', '$114store_slice.21', '$const110.18.2', '$const112.19.0']
    out0[$114store_slice.21] = $const106.16.2 ['$114store_slice.21', '$const106.16.2', 'out0']
    $116load_global.22 = global(range: <class 'range'>) ['$116load_global.22']
    $126load_global.24 = global(min: <built-in function min>) ['$126load_global.24']
    $const136.26.2 = const(int, 0)           ['$const136.26.2']
    $const138.27.4 = const(int, -1)          ['$const138.27.4']
    $140call.28 = call $126load_global.24($const136.26.2, $const138.27.4, func=$126load_global.24, args=[Var($const136.26.2, <string>:6), Var($const138.27.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_global.24', '$140call.28', '$const136.26.2', '$const138.27.4']
    $148unary_negative.29 = unary(fn=<built-in function neg>, value=$140call.28) ['$140call.28', '$148unary_negative.29']
    $const152.31.2 = const(int, 0)           ['$const152.31.2']
    $154binary_subscr.32 = getitem(value=full_shape0, index=$const152.31.2, fn=<built-in function getitem>) ['$154binary_subscr.32', '$const152.31.2', 'full_shape0']
    $158load_global.33 = global(max: <built-in function max>) ['$158load_global.33']
    $const168.35.2 = const(int, 0)           ['$const168.35.2']
    $const170.36.2 = const(int, 0)           ['$const170.36.2']
    $172call.37 = call $158load_global.33($const168.35.2, $const170.36.2, func=$158load_global.33, args=[Var($const168.35.2, <string>:6), Var($const170.36.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$158load_global.33', '$172call.37', '$const168.35.2', '$const170.36.2']
    $binop_sub180.38 = $154binary_subscr.32 - $172call.37 ['$154binary_subscr.32', '$172call.37', '$binop_sub180.38']
    $184call.39 = call $116load_global.22($148unary_negative.29, $binop_sub180.38, func=$116load_global.22, args=[Var($148unary_negative.29, <string>:6), Var($binop_sub180.38, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.22', '$148unary_negative.29', '$184call.39', '$binop_sub180.38']
    $192get_iter.40 = getiter(value=$184call.39) ['$184call.39', '$192get_iter.40']
    $phi194.0 = $192get_iter.40              ['$192get_iter.40', '$phi194.0']
    jump 194                                 []
label 194:
    $194for_iter.1 = iternext(value=$phi194.0) ['$194for_iter.1', '$phi194.0']
    $194for_iter.2 = pair_first(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.2']
    $194for_iter.3 = pair_second(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.3']
    $phi198.1 = $194for_iter.2               ['$194for_iter.2', '$phi198.1']
    branch $194for_iter.3, 198, 208          ['$194for_iter.3']
label 198:
    index00 = $phi198.1                      ['$phi198.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 194                                 []
label 208:
    $214return_value.3 = cast(value=out0)    ['$214return_value.3', 'out0']
    return $214return_value.3                ['$214return_value.3']

2025-09-26 15:03:20,523 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:03:20,523 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEEBB50>
2025-09-26 15:03:20,523 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:20,524 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:20,524 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:20,524 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:20,524 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,524 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:20,524 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,525 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:20,525 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:20,525 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:20,525 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,525 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:20,525 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:20,525 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:20,526 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:20,526 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,526 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:20,526 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:20,526 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:20,526 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:20,526 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:20,527 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,527 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:20,527 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:20,527 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:20,527 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:20,527 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:20,527 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,528 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:20,528 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:20,528 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:20,528 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:20,528 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:20,528 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:20,528 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,528 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:20,529 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,529 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:20,529 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:20,529 - DEBUG - on stmt: jump 194
2025-09-26 15:03:20,529 - DEBUG - ==== SSA block analysis pass on 194
2025-09-26 15:03:20,529 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEEBB50>
2025-09-26 15:03:20,529 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:20,529 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:20,530 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:20,530 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:20,530 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:20,530 - DEBUG - ==== SSA block analysis pass on 198
2025-09-26 15:03:20,530 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEEBB50>
2025-09-26 15:03:20,530 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:20,530 - DEBUG - on stmt: jump 208
2025-09-26 15:03:20,530 - DEBUG - ==== SSA block analysis pass on 414
2025-09-26 15:03:20,530 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEEBB50>
2025-09-26 15:03:20,530 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:20,531 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:20,531 - DEBUG - ==== SSA block analysis pass on 208
2025-09-26 15:03:20,531 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEEBB50>
2025-09-26 15:03:20,531 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:20,531 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:20,531 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:20,531 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:20,531 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:20,532 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,532 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,532 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:20,532 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:20,532 - DEBUG - ==== SSA block analysis pass on 209
2025-09-26 15:03:20,532 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEEBB50>
2025-09-26 15:03:20,532 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:20,532 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,532 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,533 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:20,533 - DEBUG - ==== SSA block analysis pass on 241
2025-09-26 15:03:20,533 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEEBB50>
2025-09-26 15:03:20,533 - DEBUG - on stmt: jump 251
2025-09-26 15:03:20,533 - DEBUG - ==== SSA block analysis pass on 253
2025-09-26 15:03:20,533 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEEBB50>
2025-09-26 15:03:20,533 - DEBUG - on stmt: jump 257
2025-09-26 15:03:20,533 - DEBUG - ==== SSA block analysis pass on 251
2025-09-26 15:03:20,533 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEEBB50>
2025-09-26 15:03:20,533 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:03:20,534 - DEBUG - on stmt: jump 257
2025-09-26 15:03:20,534 - DEBUG - ==== SSA block analysis pass on 257
2025-09-26 15:03:20,534 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEEBB50>
2025-09-26 15:03:20,534 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:20,534 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:03:20,534 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:20,534 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:20,534 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:20,535 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,535 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,535 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:20,535 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:20,535 - DEBUG - ==== SSA block analysis pass on 261
2025-09-26 15:03:20,535 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEEBB50>
2025-09-26 15:03:20,535 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:20,535 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,536 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,536 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:20,536 - DEBUG - ==== SSA block analysis pass on 289
2025-09-26 15:03:20,536 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEEBB50>
2025-09-26 15:03:20,536 - DEBUG - on stmt: jump 299
2025-09-26 15:03:20,536 - DEBUG - ==== SSA block analysis pass on 301
2025-09-26 15:03:20,536 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEEBB50>
2025-09-26 15:03:20,536 - DEBUG - on stmt: jump 305
2025-09-26 15:03:20,536 - DEBUG - ==== SSA block analysis pass on 299
2025-09-26 15:03:20,536 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEEBB50>
2025-09-26 15:03:20,537 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:20,537 - DEBUG - on stmt: jump 305
2025-09-26 15:03:20,537 - DEBUG - ==== SSA block analysis pass on 305
2025-09-26 15:03:20,537 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEEBB50>
2025-09-26 15:03:20,537 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,537 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,537 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:20,538 - DEBUG - ==== SSA block analysis pass on 309
2025-09-26 15:03:20,538 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEEBB50>
2025-09-26 15:03:20,538 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,538 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:20,538 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,538 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,538 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:20,539 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,539 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:20,539 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:20,539 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:20,539 - DEBUG - on stmt: jump 413
2025-09-26 15:03:20,539 - DEBUG - ==== SSA block analysis pass on 323
2025-09-26 15:03:20,539 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEEBB50>
2025-09-26 15:03:20,540 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,540 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:20,540 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,540 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,540 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:20,540 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,540 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:20,541 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:20,541 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:20,541 - DEBUG - on stmt: jump 413
2025-09-26 15:03:20,541 - DEBUG - ==== SSA block analysis pass on 413
2025-09-26 15:03:20,541 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CEEBB50>
2025-09-26 15:03:20,541 - DEBUG - on stmt: jump 194
2025-09-26 15:03:20,541 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104store_slice.14.1': [(<numba.core.ir.Assign object at 0x000002985D0A5010>,
                                       0)],
             '$104store_slice.15.1': [(<numba.core.ir.Assign object at 0x000002985D0A5130>,
                                       0)],
             '$110pred': [(<numba.core.ir.Assign object at 0x000002985CE2FF50>,
                           305)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x000002985CDD2B10>,
                                    309)],
             '$114store_slice.20.1': [(<numba.core.ir.Assign object at 0x000002985D0A5670>,
                                       0)],
             '$114store_slice.21.1': [(<numba.core.ir.Assign object at 0x000002985D0A5790>,
                                       0)],
             '$116load_global.22.1': [(<numba.core.ir.Assign object at 0x000002985D0A58B0>,
                                       0)],
             '$124load_attr.1': [(<numba.core.ir.Assign object at 0x000002985D081310>,
                                  309)],
             '$126load_global.24.1': [(<numba.core.ir.Assign object at 0x000002985D0A59D0>,
                                       0)],
             '$140call.28.1': [(<numba.core.ir.Assign object at 0x000002985D0A5D30>,
                                0)],
             '$148call.4': [(<numba.core.ir.Assign object at 0x000002985D082A50>,
                             309)],
             '$148unary_negative.29.1': [(<numba.core.ir.Assign object at 0x000002985D0A5E50>,
                                          0)],
             '$154binary_subscr.32.1': [(<numba.core.ir.Assign object at 0x000002985D0A6150>,
                                         0)],
             '$156load_global.5': [(<numba.core.ir.Assign object at 0x000002985D08C1D0>,
                                    309)],
             '$158load_global.33.1': [(<numba.core.ir.Assign object at 0x000002985D0A6270>,
                                       0)],
             '$166load_attr.6': [(<numba.core.ir.Assign object at 0x000002985D08D910>,
                                  309)],
             '$16unary_negative.4': [(<numba.core.ir.Assign object at 0x000002985D071A30>,
                                      208)],
             '$172call.37.1': [(<numba.core.ir.Assign object at 0x000002985D0A65D0>,
                                0)],
             '$184call.39.1': [(<numba.core.ir.Assign object at 0x000002985D0A6810>,
                                0)],
             '$190call.9': [(<numba.core.ir.Assign object at 0x000002985D08F050>,
                             309)],
             '$192get_iter.40.1': [(<numba.core.ir.Assign object at 0x000002985D0A6930>,
                                    0)],
             '$194for_iter.1.1': [(<numba.core.ir.Assign object at 0x000002985D0A5F10>,
                                   194)],
             '$194for_iter.2.1': [(<numba.core.ir.Assign object at 0x000002985D0A6A50>,
                                   194)],
             '$194for_iter.3.1': [(<numba.core.ir.Assign object at 0x000002985D0A6B70>,
                                   194)],
             '$198compare_op.10': [(<numba.core.ir.Assign object at 0x000002985D0907D0>,
                                    309)],
             '$202return_value.11': [(<numba.core.ir.Assign object at 0x000002985D091F10>,
                                      309)],
             '$204load_global.0': [(<numba.core.ir.Assign object at 0x000002985D0963F0>,
                                    323)],
             '$214load_attr.1': [(<numba.core.ir.Assign object at 0x000002985D097B30>,
                                  323)],
             '$214return_value.3.1': [(<numba.core.ir.Assign object at 0x000002985D0A7170>,
                                       414)],
             '$238call.4': [(<numba.core.ir.Assign object at 0x000002985D0992B0>,
                             323)],
             '$246load_global.5': [(<numba.core.ir.Assign object at 0x000002985D09A9F0>,
                                    323)],
             '$24compare_op.6': [(<numba.core.ir.Assign object at 0x000002985D073170>,
                                  208)],
             '$256load_attr.6': [(<numba.core.ir.Assign object at 0x000002985D09C170>,
                                  323)],
             '$280call.9': [(<numba.core.ir.Assign object at 0x000002985D09D8B0>,
                             323)],
             '$288compare_op.10': [(<numba.core.ir.Assign object at 0x000002985D09EFF0>,
                                    323)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x000002985D0A4290>,
                                     0)],
             '$28pred': [(<numba.core.ir.Assign object at 0x000002985D07A030>,
                          208)],
             '$292return_value.11': [(<numba.core.ir.Assign object at 0x000002985D0A0770>,
                                      323)],
             '$34compare_op.2': [(<numba.core.ir.Assign object at 0x000002985D07FB90>,
                                  209)],
             '$38load_attr.3.1': [(<numba.core.ir.Assign object at 0x000002985D0A43B0>,
                                   0)],
             '$38pred': [(<numba.core.ir.Assign object at 0x000002985D086A50>,
                          209)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x000002985D0A4590>,
                                     0)],
             '$64unary_negative.4': [(<numba.core.ir.Assign object at 0x000002985CF4AAB0>,
                                      257)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x000002985D0A46B0>,
                                   0)],
             '$72compare_op.6': [(<numba.core.ir.Assign object at 0x000002985CF49430>,
                                  257)],
             '$76pred': [(<numba.core.ir.Assign object at 0x000002985CF6A3F0>,
                          257)],
             '$82compare_op.2': [(<numba.core.ir.Assign object at 0x000002985CFCB890>,
                                  261)],
             '$86pred': [(<numba.core.ir.Assign object at 0x000002985CF11550>,
                          261)],
             '$binop_sub180.38.1': [(<numba.core.ir.Assign object at 0x000002985D0A66F0>,
                                     0)],
             '$bool110': [(<numba.core.ir.Assign object at 0x000002985CE2C9B0>,
                           305)],
             '$bool28': [(<numba.core.ir.Assign object at 0x000002985D0788F0>,
                          208)],
             '$bool38': [(<numba.core.ir.Assign object at 0x000002985D085310>,
                          209)],
             '$bool76': [(<numba.core.ir.Assign object at 0x000002985CF68FB0>,
                          257)],
             '$bool86': [(<numba.core.ir.Assign object at 0x000002985CF13110>,
                          261)],
             '$const100.12.0.1': [(<numba.core.ir.Assign object at 0x000002985D0A4DD0>,
                                   0)],
             '$const102.13.3.1': [(<numba.core.ir.Assign object at 0x000002985D0A4EF0>,
                                   0)],
             '$const106.16.2.1': [(<numba.core.ir.Assign object at 0x000002985D0A5250>,
                                   0)],
             '$const110.18.2.1': [(<numba.core.ir.Assign object at 0x000002985D0A5430>,
                                   0)],
             '$const112.19.0.1': [(<numba.core.ir.Assign object at 0x000002985D0A5550>,
                                   0)],
             '$const136.26.2.1': [(<numba.core.ir.Assign object at 0x000002985D0A5AF0>,
                                   0)],
             '$const138.27.4.1': [(<numba.core.ir.Assign object at 0x000002985D0A5C10>,
                                   0)],
             '$const152.31.2.1': [(<numba.core.ir.Assign object at 0x000002985D0A6030>,
                                   0)],
             '$const168.35.2.1': [(<numba.core.ir.Assign object at 0x000002985D0A6390>,
                                   0)],
             '$const170.36.2.1': [(<numba.core.ir.Assign object at 0x000002985D0A64B0>,
                                   0)],
             '$const54.1.2': [(<numba.core.ir.Assign object at 0x000002985CFB30B0>,
                               257)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x000002985D06EB70>,
                              208)],
             '$const90.8.1.1': [(<numba.core.ir.Assign object at 0x000002985D0A48F0>,
                                 0)],
             '$const96.10.2.1': [(<numba.core.ir.Assign object at 0x000002985D0A4BF0>,
                                  0)],
             '$const_dtype.1': [(<numba.core.ir.Assign object at 0x000002985D0A47D0>,
                                 0)],
             '$phi194.0.1': [(<numba.core.ir.Assign object at 0x000002985D0A4170>,
                              0)],
             '$phi198.1.1': [(<numba.core.ir.Assign object at 0x000002985D0A6C30>,
                              194)],
             '$phi32.0': [(<numba.core.ir.Assign object at 0x000002985D07B770>,
                           208)],
             '$phi80.0': [(<numba.core.ir.Assign object at 0x000002985CF68A10>,
                           257)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x000002985D0A40B0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x000002985D0A6D50>,
                          198)],
             'out0': [(<numba.core.ir.Assign object at 0x000002985D0A4A10>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x000002985D06D3D0>,
                                208),
                               (<numba.core.ir.Assign object at 0x000002985D0A3590>,
                                257)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002985D0A3D70>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002985D0A3C50>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x000002985D06EB10>, 208),
                    (<numba.core.ir.Assign object at 0x000002985CFB0E30>, 251)],
             'x1': [(<numba.core.ir.Assign object at 0x000002985D0A3650>, 257),
                    (<numba.core.ir.Assign object at 0x000002985CF973B0>, 299)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002985D0A3E90>,
                           0)]})
2025-09-26 15:03:20,551 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002985CEEBB50>
2025-09-26 15:03:20,551 - DEBUG - Fix SSA violator on var stencil_index
2025-09-26 15:03:20,551 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:20,551 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,552 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:20,552 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:20,552 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:20,552 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:20,552 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,552 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:20,552 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,553 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:20,553 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:20,553 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:20,553 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,553 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:20,553 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:20,553 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:20,553 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:20,554 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,554 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:20,554 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:20,554 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:20,554 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:20,554 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:20,554 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,555 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:20,555 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:20,555 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:20,555 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:20,555 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:20,555 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,555 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:20,555 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:20,555 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:20,556 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:20,556 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:20,556 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:20,556 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,556 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:20,556 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,556 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:20,556 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:20,557 - DEBUG - on stmt: jump 194
2025-09-26 15:03:20,557 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:20,557 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,557 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:20,557 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:20,557 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:20,557 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:20,557 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:20,557 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:20,557 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,558 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:20,558 - DEBUG - on stmt: jump 208
2025-09-26 15:03:20,558 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:20,558 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,558 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:20,558 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:20,558 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:20,558 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,558 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:20,558 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:20,559 - DEBUG - first assign: stencil_index
2025-09-26 15:03:20,559 - DEBUG - replaced with: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:20,559 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:20,559 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:20,559 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:20,559 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,559 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,559 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:20,560 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:20,560 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:20,560 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,560 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:20,560 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,560 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,560 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:20,560 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:20,560 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,560 - DEBUG - on stmt: jump 251
2025-09-26 15:03:20,561 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:20,561 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,561 - DEBUG - on stmt: jump 257
2025-09-26 15:03:20,561 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:20,561 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,561 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:03:20,561 - DEBUG - on stmt: jump 257
2025-09-26 15:03:20,561 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:20,561 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,561 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:20,562 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:03:20,562 - DEBUG - replaced with: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:20,562 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:20,562 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:20,562 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:20,562 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,562 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,562 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:20,562 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:20,563 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:20,563 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,563 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:20,563 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,563 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,563 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:20,563 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:20,563 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,563 - DEBUG - on stmt: jump 299
2025-09-26 15:03:20,564 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:20,564 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,564 - DEBUG - on stmt: jump 305
2025-09-26 15:03:20,564 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:20,564 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,564 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:20,564 - DEBUG - on stmt: jump 305
2025-09-26 15:03:20,565 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:20,565 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,565 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,565 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,565 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:20,565 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:20,565 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,566 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,566 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:20,566 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,566 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,566 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:20,566 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,567 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:20,567 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:20,567 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:20,567 - DEBUG - on stmt: jump 413
2025-09-26 15:03:20,567 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:20,567 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,567 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,568 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:20,568 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,568 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,568 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:20,568 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,568 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:20,568 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:20,568 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:20,569 - DEBUG - on stmt: jump 413
2025-09-26 15:03:20,569 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:20,569 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,569 - DEBUG - on stmt: jump 194
2025-09-26 15:03:20,569 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002985D0B07D0>],
             257: [<numba.core.ir.Assign object at 0x000002985D0B0A70>]})
2025-09-26 15:03:20,569 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:20,569 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FCB0>
2025-09-26 15:03:20,569 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:20,570 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:20,570 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:20,570 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:20,570 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,570 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:20,570 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,570 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:20,570 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:20,571 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:20,571 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,571 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:20,571 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:20,571 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:20,571 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:20,571 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,571 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:20,572 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:20,572 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:20,572 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:20,572 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:20,572 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,572 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:20,572 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:20,572 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:20,573 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:20,573 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:20,573 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,573 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:20,573 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:20,573 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:20,573 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:20,573 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:20,574 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:20,574 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,574 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:20,574 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,574 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:20,574 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:20,574 - DEBUG - on stmt: jump 194
2025-09-26 15:03:20,575 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:20,575 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FCB0>
2025-09-26 15:03:20,575 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:20,575 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:20,575 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:20,575 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:20,575 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:20,575 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:20,575 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FCB0>
2025-09-26 15:03:20,576 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:20,576 - DEBUG - on stmt: jump 208
2025-09-26 15:03:20,576 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:20,576 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FCB0>
2025-09-26 15:03:20,576 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:20,576 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:20,576 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:20,576 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FCB0>
2025-09-26 15:03:20,576 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:20,577 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:20,577 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:20,577 - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:20,577 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:20,577 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:20,577 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,577 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,578 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:20,578 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:20,578 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:20,578 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FCB0>
2025-09-26 15:03:20,578 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:20,578 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,578 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,579 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:20,579 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:20,579 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FCB0>
2025-09-26 15:03:20,579 - DEBUG - on stmt: jump 251
2025-09-26 15:03:20,579 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:20,579 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FCB0>
2025-09-26 15:03:20,579 - DEBUG - on stmt: jump 257
2025-09-26 15:03:20,580 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:20,580 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FCB0>
2025-09-26 15:03:20,580 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:03:20,580 - DEBUG - on stmt: jump 257
2025-09-26 15:03:20,580 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:20,580 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FCB0>
2025-09-26 15:03:20,580 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:20,581 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:20,581 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:20,581 - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:20,581 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:20,581 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:20,581 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:20,581 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,581 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,582 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:20,582 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:20,582 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:20,582 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FCB0>
2025-09-26 15:03:20,582 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:20,582 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,582 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,583 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:20,583 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:20,583 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FCB0>
2025-09-26 15:03:20,583 - DEBUG - on stmt: jump 299
2025-09-26 15:03:20,583 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:20,583 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FCB0>
2025-09-26 15:03:20,583 - DEBUG - on stmt: jump 305
2025-09-26 15:03:20,583 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:20,583 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FCB0>
2025-09-26 15:03:20,584 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:20,584 - DEBUG - on stmt: jump 305
2025-09-26 15:03:20,584 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:20,584 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FCB0>
2025-09-26 15:03:20,584 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,584 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,584 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:20,584 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:20,585 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FCB0>
2025-09-26 15:03:20,585 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,585 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:20,585 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,585 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,585 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:20,586 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,586 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:20,586 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:20,586 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:20,586 - DEBUG - on stmt: jump 413
2025-09-26 15:03:20,586 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:20,586 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FCB0>
2025-09-26 15:03:20,586 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,587 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:20,587 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,587 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,587 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:20,587 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,587 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:20,587 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:20,587 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:20,588 - DEBUG - on stmt: jump 413
2025-09-26 15:03:20,588 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:20,588 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FCB0>
2025-09-26 15:03:20,588 - DEBUG - on stmt: jump 194
2025-09-26 15:03:20,588 - DEBUG - Fix SSA violator on var x0
2025-09-26 15:03:20,588 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:20,588 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,588 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:20,588 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:20,588 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:20,589 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:20,589 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,589 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:20,589 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,589 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:20,589 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:20,589 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:20,589 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,590 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:20,590 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:20,590 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:20,590 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:20,590 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,590 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:20,591 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:20,591 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:20,591 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:20,591 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:20,591 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,592 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:20,592 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:20,592 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:20,592 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:20,592 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:20,592 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,592 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:20,593 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:20,593 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:20,593 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:20,593 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:20,593 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:20,593 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,594 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:20,594 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,594 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:20,594 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:20,594 - DEBUG - on stmt: jump 194
2025-09-26 15:03:20,594 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:20,595 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,595 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:20,595 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:20,595 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:20,595 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:20,595 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:20,595 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:20,596 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,596 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:20,596 - DEBUG - on stmt: jump 208
2025-09-26 15:03:20,596 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:20,596 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,596 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:20,596 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:20,596 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:20,596 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,597 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:20,597 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:20,597 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:20,597 - DEBUG - first assign: x0
2025-09-26 15:03:20,597 - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:20,597 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:20,597 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:20,597 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,597 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,598 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:20,598 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:20,598 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:20,598 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,598 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:20,598 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,598 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,598 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:20,598 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:20,599 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,599 - DEBUG - on stmt: jump 251
2025-09-26 15:03:20,599 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:20,599 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,599 - DEBUG - on stmt: jump 257
2025-09-26 15:03:20,599 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:20,599 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,600 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:03:20,600 - DEBUG - replaced with: x0.1 = const(int, 0)
2025-09-26 15:03:20,600 - DEBUG - on stmt: jump 257
2025-09-26 15:03:20,600 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:20,600 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,600 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:20,600 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:20,600 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:20,601 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:20,601 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:20,601 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,601 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,601 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:20,601 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:20,601 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:20,601 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,602 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:20,602 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,602 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,602 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:20,602 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:20,602 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,602 - DEBUG - on stmt: jump 299
2025-09-26 15:03:20,602 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:20,602 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,603 - DEBUG - on stmt: jump 305
2025-09-26 15:03:20,603 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:20,603 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,603 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:20,603 - DEBUG - on stmt: jump 305
2025-09-26 15:03:20,603 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:20,603 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,603 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,603 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,604 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:20,604 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:20,604 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,604 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,604 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:20,604 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,605 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,605 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:20,605 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,605 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:20,605 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:20,605 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:20,606 - DEBUG - on stmt: jump 413
2025-09-26 15:03:20,606 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:20,606 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,606 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,606 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:20,606 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,607 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,607 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:20,607 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,607 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:20,607 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:20,607 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:20,607 - DEBUG - on stmt: jump 413
2025-09-26 15:03:20,607 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:20,607 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE8FE70>
2025-09-26 15:03:20,608 - DEBUG - on stmt: jump 194
2025-09-26 15:03:20,608 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002985D0B0B90>],
             251: [<numba.core.ir.Assign object at 0x000002985D0B0890>]})
2025-09-26 15:03:20,608 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:20,608 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FBD0>
2025-09-26 15:03:20,608 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:20,608 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:20,608 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:20,608 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:20,609 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,609 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:20,609 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,609 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:20,609 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:20,609 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:20,609 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,609 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:20,610 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:20,610 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:20,610 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:20,610 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,610 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:20,610 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:20,610 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:20,610 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:20,611 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:20,611 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,611 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:20,611 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:20,611 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:20,611 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:20,611 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:20,611 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,611 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:20,612 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:20,612 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:20,612 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:20,612 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:20,612 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:20,612 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,612 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:20,612 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,613 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:20,613 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:20,613 - DEBUG - on stmt: jump 194
2025-09-26 15:03:20,613 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:20,613 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FBD0>
2025-09-26 15:03:20,613 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:20,613 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:20,613 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:20,613 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:20,614 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:20,614 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:20,614 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FBD0>
2025-09-26 15:03:20,614 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:20,614 - DEBUG - on stmt: jump 208
2025-09-26 15:03:20,614 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:20,614 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FBD0>
2025-09-26 15:03:20,614 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:20,614 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:20,615 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:20,615 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FBD0>
2025-09-26 15:03:20,615 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:20,615 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:20,615 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:20,615 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:20,615 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:20,615 - DEBUG - find_def var='x0' stmt=$24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:20,616 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,616 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,616 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:20,616 - DEBUG - find_def var='x0' stmt=$phi32.0 = x0
2025-09-26 15:03:20,616 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:20,616 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:20,616 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FBD0>
2025-09-26 15:03:20,616 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:20,616 - DEBUG - find_def var='x0' stmt=$34compare_op.2 = x0 <= threshold
2025-09-26 15:03:20,617 - DEBUG - find_def_from_top label 209
2025-09-26 15:03:20,617 - DEBUG - idom 208 from label 209
2025-09-26 15:03:20,617 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:03:20,617 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,617 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,617 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:20,617 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:20,618 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FBD0>
2025-09-26 15:03:20,618 - DEBUG - on stmt: jump 251
2025-09-26 15:03:20,618 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:20,618 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FBD0>
2025-09-26 15:03:20,618 - DEBUG - on stmt: jump 257
2025-09-26 15:03:20,618 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:20,618 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FBD0>
2025-09-26 15:03:20,618 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:03:20,619 - DEBUG - on stmt: jump 257
2025-09-26 15:03:20,619 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:20,619 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FBD0>
2025-09-26 15:03:20,619 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:20,619 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:20,619 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:20,620 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:20,620 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:20,620 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,620 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,620 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:20,620 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:20,620 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:20,620 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FBD0>
2025-09-26 15:03:20,621 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:20,621 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,621 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,621 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:20,621 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:20,621 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FBD0>
2025-09-26 15:03:20,621 - DEBUG - on stmt: jump 299
2025-09-26 15:03:20,621 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:20,621 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FBD0>
2025-09-26 15:03:20,622 - DEBUG - on stmt: jump 305
2025-09-26 15:03:20,622 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:20,622 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FBD0>
2025-09-26 15:03:20,622 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:20,622 - DEBUG - on stmt: jump 305
2025-09-26 15:03:20,622 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:20,622 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FBD0>
2025-09-26 15:03:20,622 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,622 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,623 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:20,623 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:20,623 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FBD0>
2025-09-26 15:03:20,623 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,623 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:20,623 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,623 - DEBUG - find_def var='x0' stmt=$148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,623 - DEBUG - find_def_from_top label 309
2025-09-26 15:03:20,624 - DEBUG - idom 305 from label 309
2025-09-26 15:03:20,624 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:03:20,624 - DEBUG - find_def_from_top label 305
2025-09-26 15:03:20,624 - DEBUG - idom 257 from label 305
2025-09-26 15:03:20,624 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:20,624 - DEBUG - find_def_from_top label 257
2025-09-26 15:03:20,624 - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 257
2025-09-26 15:03:20,624 - DEBUG - find_def_from_bottom label 209
2025-09-26 15:03:20,625 - DEBUG - find_def_from_top label 209
2025-09-26 15:03:20,625 - DEBUG - idom 208 from label 209
2025-09-26 15:03:20,625 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:03:20,625 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:20,625 - DEBUG - find_def_from_bottom label 251
2025-09-26 15:03:20,625 - DEBUG - incoming_def x0.1 = const(int, 0)
2025-09-26 15:03:20,625 - DEBUG - find_def_from_bottom label 253
2025-09-26 15:03:20,625 - DEBUG - find_def_from_top label 253
2025-09-26 15:03:20,625 - DEBUG - idom 208 from label 253
2025-09-26 15:03:20,625 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:03:20,626 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:20,626 - DEBUG - replaced with: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,626 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,626 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:20,626 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,626 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:20,626 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:20,627 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:20,627 - DEBUG - on stmt: jump 413
2025-09-26 15:03:20,627 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:20,627 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FBD0>
2025-09-26 15:03:20,627 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,627 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:20,627 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,627 - DEBUG - find_def var='x0' stmt=$238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,627 - DEBUG - find_def_from_top label 323
2025-09-26 15:03:20,628 - DEBUG - idom 305 from label 323
2025-09-26 15:03:20,628 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:03:20,628 - DEBUG - find_def_from_top label 305
2025-09-26 15:03:20,628 - DEBUG - idom 257 from label 305
2025-09-26 15:03:20,628 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:20,628 - DEBUG - replaced with: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,628 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,628 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:20,628 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,629 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:20,629 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:20,629 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:20,629 - DEBUG - on stmt: jump 413
2025-09-26 15:03:20,629 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:20,629 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE8FBD0>
2025-09-26 15:03:20,629 - DEBUG - on stmt: jump 194
2025-09-26 15:03:20,629 - DEBUG - Fix SSA violator on var x1
2025-09-26 15:03:20,630 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:20,630 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDF8940>
2025-09-26 15:03:20,630 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:20,630 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:20,630 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:20,630 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:20,630 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,630 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:20,631 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,631 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:20,631 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:20,631 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:20,631 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,631 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:20,632 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:20,632 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:20,632 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:20,632 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,632 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:20,632 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:20,632 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:20,632 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:20,633 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:20,633 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,633 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:20,633 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:20,633 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:20,633 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:20,633 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:20,634 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,634 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:20,634 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:20,634 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:20,634 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:20,634 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:20,634 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:20,635 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,635 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:20,635 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,635 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:20,635 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:20,635 - DEBUG - on stmt: jump 194
2025-09-26 15:03:20,635 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:20,636 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDF8940>
2025-09-26 15:03:20,636 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:20,636 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:20,636 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:20,636 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:20,636 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:20,636 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:20,636 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDF8940>
2025-09-26 15:03:20,636 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:20,636 - DEBUG - on stmt: jump 208
2025-09-26 15:03:20,637 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:20,637 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDF8940>
2025-09-26 15:03:20,637 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:20,637 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:20,637 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:20,637 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDF8940>
2025-09-26 15:03:20,637 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:20,637 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:20,637 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:20,638 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:20,638 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:20,638 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,638 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,638 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:20,638 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:20,638 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:20,638 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDF8940>
2025-09-26 15:03:20,638 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:20,639 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,639 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,639 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:20,639 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:20,639 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDF8940>
2025-09-26 15:03:20,639 - DEBUG - on stmt: jump 251
2025-09-26 15:03:20,639 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:20,639 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDF8940>
2025-09-26 15:03:20,639 - DEBUG - on stmt: jump 257
2025-09-26 15:03:20,640 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:20,640 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDF8940>
2025-09-26 15:03:20,640 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:03:20,640 - DEBUG - on stmt: jump 257
2025-09-26 15:03:20,640 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:20,640 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDF8940>
2025-09-26 15:03:20,640 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:03:20,640 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:20,640 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:20,641 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:20,641 - DEBUG - first assign: x1
2025-09-26 15:03:20,641 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:20,641 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:20,641 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:20,641 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,641 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,641 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:20,641 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:20,642 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:20,642 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDF8940>
2025-09-26 15:03:20,642 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:20,642 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,642 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,642 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:20,642 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:20,642 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDF8940>
2025-09-26 15:03:20,642 - DEBUG - on stmt: jump 299
2025-09-26 15:03:20,643 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:20,643 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDF8940>
2025-09-26 15:03:20,643 - DEBUG - on stmt: jump 305
2025-09-26 15:03:20,643 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:20,643 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDF8940>
2025-09-26 15:03:20,643 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:20,643 - DEBUG - replaced with: x1.1 = const(int, 0)
2025-09-26 15:03:20,643 - DEBUG - on stmt: jump 305
2025-09-26 15:03:20,643 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:20,644 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDF8940>
2025-09-26 15:03:20,644 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,644 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,644 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:20,644 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:20,644 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDF8940>
2025-09-26 15:03:20,644 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,645 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:20,645 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,645 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,645 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:20,645 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,645 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:20,645 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:20,646 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:20,646 - DEBUG - on stmt: jump 413
2025-09-26 15:03:20,646 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:20,646 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDF8940>
2025-09-26 15:03:20,646 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,646 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:20,646 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,647 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,647 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:20,647 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,647 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:20,647 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:20,647 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:20,647 - DEBUG - on stmt: jump 413
2025-09-26 15:03:20,648 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:20,648 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDF8940>
2025-09-26 15:03:20,648 - DEBUG - on stmt: jump 194
2025-09-26 15:03:20,648 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {257: [<numba.core.ir.Assign object at 0x000002985D0B0CB0>],
             299: [<numba.core.ir.Assign object at 0x000002985D0B0C50>]})
2025-09-26 15:03:20,648 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:20,648 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDF87A0>
2025-09-26 15:03:20,648 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:20,648 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:20,649 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:20,649 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:20,649 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,649 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:20,649 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,649 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:20,650 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:20,650 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:20,650 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,650 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:20,650 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:20,650 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:20,650 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:20,650 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,651 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:20,651 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:20,651 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:20,651 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:20,651 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:20,651 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,651 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:20,651 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:20,652 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:20,652 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:20,652 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:20,652 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,652 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:20,652 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:20,652 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:20,652 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:20,652 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:20,653 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:20,653 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,653 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:20,653 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,653 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:20,653 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:20,653 - DEBUG - on stmt: jump 194
2025-09-26 15:03:20,653 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:20,654 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDF87A0>
2025-09-26 15:03:20,654 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:20,654 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:20,654 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:20,654 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:20,654 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:20,654 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:20,654 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDF87A0>
2025-09-26 15:03:20,654 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:20,655 - DEBUG - on stmt: jump 208
2025-09-26 15:03:20,655 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:20,655 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDF87A0>
2025-09-26 15:03:20,655 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:20,655 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:20,655 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:20,655 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDF87A0>
2025-09-26 15:03:20,655 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:20,656 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:20,656 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:20,656 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:20,656 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:20,656 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,656 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,656 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:20,656 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:20,657 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:20,657 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDF87A0>
2025-09-26 15:03:20,657 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:20,657 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,657 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,657 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:20,657 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:20,657 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDF87A0>
2025-09-26 15:03:20,658 - DEBUG - on stmt: jump 251
2025-09-26 15:03:20,658 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:20,658 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDF87A0>
2025-09-26 15:03:20,658 - DEBUG - on stmt: jump 257
2025-09-26 15:03:20,658 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:20,658 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDF87A0>
2025-09-26 15:03:20,658 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:03:20,658 - DEBUG - on stmt: jump 257
2025-09-26 15:03:20,659 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:20,659 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDF87A0>
2025-09-26 15:03:20,659 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:03:20,659 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:20,659 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:20,659 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:20,659 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:20,660 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:20,660 - DEBUG - find_def var='x1' stmt=$72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:20,660 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,660 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,660 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:20,660 - DEBUG - find_def var='x1' stmt=$phi80.0 = x1
2025-09-26 15:03:20,660 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:20,660 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:20,661 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDF87A0>
2025-09-26 15:03:20,661 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:20,661 - DEBUG - find_def var='x1' stmt=$82compare_op.2 = x1 <= threshold
2025-09-26 15:03:20,661 - DEBUG - find_def_from_top label 261
2025-09-26 15:03:20,661 - DEBUG - idom 257 from label 261
2025-09-26 15:03:20,661 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:20,661 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,661 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,661 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:20,662 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:20,662 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDF87A0>
2025-09-26 15:03:20,662 - DEBUG - on stmt: jump 299
2025-09-26 15:03:20,662 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:20,662 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDF87A0>
2025-09-26 15:03:20,662 - DEBUG - on stmt: jump 305
2025-09-26 15:03:20,662 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:20,662 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDF87A0>
2025-09-26 15:03:20,662 - DEBUG - on stmt: x1.1 = const(int, 0)
2025-09-26 15:03:20,663 - DEBUG - on stmt: jump 305
2025-09-26 15:03:20,663 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:20,663 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDF87A0>
2025-09-26 15:03:20,663 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:20,663 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,663 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:20,663 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:20,663 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDF87A0>
2025-09-26 15:03:20,663 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,663 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:20,664 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,664 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,664 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:20,664 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,664 - DEBUG - find_def var='x1' stmt=$190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,664 - DEBUG - find_def_from_top label 309
2025-09-26 15:03:20,664 - DEBUG - idom 305 from label 309
2025-09-26 15:03:20,664 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:03:20,665 - DEBUG - find_def_from_top label 305
2025-09-26 15:03:20,665 - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 305
2025-09-26 15:03:20,665 - DEBUG - find_def_from_bottom label 299
2025-09-26 15:03:20,665 - DEBUG - incoming_def x1.1 = const(int, 0)
2025-09-26 15:03:20,665 - DEBUG - find_def_from_bottom label 301
2025-09-26 15:03:20,665 - DEBUG - find_def_from_top label 301
2025-09-26 15:03:20,665 - DEBUG - idom 257 from label 301
2025-09-26 15:03:20,665 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:20,665 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:20,666 - DEBUG - find_def_from_bottom label 261
2025-09-26 15:03:20,666 - DEBUG - find_def_from_top label 261
2025-09-26 15:03:20,666 - DEBUG - idom 257 from label 261
2025-09-26 15:03:20,666 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:20,666 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:20,666 - DEBUG - replaced with: $190call.9 = call $166load_attr.6(x1.2, func=$166load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,666 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:20,666 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:20,666 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:20,667 - DEBUG - on stmt: jump 413
2025-09-26 15:03:20,667 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:20,667 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDF87A0>
2025-09-26 15:03:20,667 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,667 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:20,667 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,667 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:20,667 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:20,667 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,668 - DEBUG - find_def var='x1' stmt=$280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,668 - DEBUG - find_def_from_top label 323
2025-09-26 15:03:20,668 - DEBUG - idom 305 from label 323
2025-09-26 15:03:20,668 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:03:20,668 - DEBUG - replaced with: $280call.9 = call $256load_attr.6(x1.2, func=$256load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:20,668 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:20,668 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:20,668 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:20,668 - DEBUG - on stmt: jump 413
2025-09-26 15:03:20,669 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:20,669 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDF87A0>
2025-09-26 15:03:20,669 - DEBUG - on stmt: jump 194
2025-09-26 15:03:20,682 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с librosa: 'function' object has no attribute 'get_call_template'
2025-09-26 15:03:20,688 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 15:03:20,689 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 15:03:20,689 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\test_noise.wav'>)))], 'idempotency_key': 'stainless-python-retry-aeb2d954-21da-453e-8ebb-9144a8839369', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:03:20,690 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:20,690 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:20,691 - DEBUG - send_request_headers.complete
2025-09-26 15:03:20,691 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:20,692 - DEBUG - send_request_body.complete
2025-09-26 15:03:20,692 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:21,419 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:21 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'374'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'386'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_6db1c67673fd4ae19d1e15ce0f0cc7ae'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529e1689808d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:21,420 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:21,420 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:21,420 - DEBUG - receive_response_body.complete
2025-09-26 15:03:21,421 - DEBUG - response_closed.started
2025-09-26 15:03:21,421 - DEBUG - response_closed.complete
2025-09-26 15:03:21,421 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:21 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '374', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '386', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_6db1c67673fd4ae19d1e15ce0f0cc7ae', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529e1689808d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:21,421 - DEBUG - request_id: req_6db1c67673fd4ae19d1e15ce0f0cc7ae
2025-09-26 15:03:21,422 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:03:21,422 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:03:21,422 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:03:21,422 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: '' (длина: 0)
2025-09-26 15:03:21,423 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 2 - альтернативный язык: en
2025-09-26 15:03:21,423 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\test_noise.wav'>)))], 'idempotency_key': 'stainless-python-retry-2479b495-256b-4386-88ed-608d69dcb55e', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'en', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:03:21,424 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:21,424 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:21,424 - DEBUG - send_request_headers.complete
2025-09-26 15:03:21,425 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:21,426 - DEBUG - send_request_body.complete
2025-09-26 15:03:21,426 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:22,548 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:22 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'25'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'716'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'731'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_487f345cc3ae4af399ff260d66b9c565'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529e1b1f3d8d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:22,549 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:22,549 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:22,549 - DEBUG - receive_response_body.complete
2025-09-26 15:03:22,550 - DEBUG - response_closed.started
2025-09-26 15:03:22,550 - DEBUG - response_closed.complete
2025-09-26 15:03:22,550 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:22 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '25', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '716', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '731', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_487f345cc3ae4af399ff260d66b9c565', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529e1b1f3d8d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:22,550 - DEBUG - request_id: req_487f345cc3ae4af399ff260d66b9c565
2025-09-26 15:03:22,551 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: '[sound of running water]'
2025-09-26 15:03:22,551 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:03:22,551 - DEBUG - ГАЛЛЮЦИНАЦИЯ: текст '[sound of running water]' отфильтрован - описание звука
2025-09-26 15:03:22,551 - WARNING - ФИЛЬТРАЦИЯ: Текст определен как галлюцинация - отфильтровано
2025-09-26 15:03:22,552 - DEBUG - ТРАНСКРИПЦИЯ: Результат 2: '[sound of running water]' (длина: 24)
2025-09-26 15:03:22,552 - DEBUG - ТРАНСКРИПЦИЯ: Выбран результат альтернативного языка
2025-09-26 15:03:22,552 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 4 - музыкальный промпт
2025-09-26 15:03:22,553 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\test_noise.wav'>)))], 'idempotency_key': 'stainless-python-retry-a18f141d-08d7-44db-a66d-2f70378779a2', 'json_data': {'model': 'gpt-4o-transcribe', 'prompt': 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.', 'response_format': 'text'}}
2025-09-26 15:03:22,554 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:22,554 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:22,554 - DEBUG - send_request_headers.complete
2025-09-26 15:03:22,554 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:22,556 - DEBUG - send_request_body.complete
2025-09-26 15:03:22,556 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:23,370 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:23 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'412'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'423'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_10a199ff59b640a5903196b8213c661e'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529e22282d8d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:23,371 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:23,371 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:23,371 - DEBUG - receive_response_body.complete
2025-09-26 15:03:23,371 - DEBUG - response_closed.started
2025-09-26 15:03:23,372 - DEBUG - response_closed.complete
2025-09-26 15:03:23,372 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:23 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '412', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '423', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_10a199ff59b640a5903196b8213c661e', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529e22282d8d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:23,372 - DEBUG - request_id: req_10a199ff59b640a5903196b8213c661e
2025-09-26 15:03:23,372 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:03:23,373 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.'
2025-09-26 15:03:23,373 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:03:23,373 - DEBUG - ТРАНСКРИПЦИЯ: Результат музыкального промпта: '' (длина: 0)
2025-09-26 15:03:23,373 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 5 - английский язык с музыкальным промптом
2025-09-26 15:03:23,374 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\test_noise.wav'>)))], 'idempotency_key': 'stainless-python-retry-2624659e-c0c7-4e98-8e3f-c981649f60bc', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'en', 'prompt': 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.', 'response_format': 'text'}}
2025-09-26 15:03:23,375 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:23,375 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:23,375 - DEBUG - send_request_headers.complete
2025-09-26 15:03:23,375 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:23,376 - DEBUG - send_request_body.complete
2025-09-26 15:03:23,377 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:24,591 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:24 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'827'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'856'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_2e2ec368294e4f29af7dd8e5c30c1dc5'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529e274f3e8d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:24,592 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:24,592 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:24,592 - DEBUG - receive_response_body.complete
2025-09-26 15:03:24,592 - DEBUG - response_closed.started
2025-09-26 15:03:24,592 - DEBUG - response_closed.complete
2025-09-26 15:03:24,593 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:24 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '827', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '856', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_2e2ec368294e4f29af7dd8e5c30c1dc5', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529e274f3e8d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:24,593 - DEBUG - request_id: req_2e2ec368294e4f29af7dd8e5c30c1dc5
2025-09-26 15:03:24,593 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:03:24,594 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.'
2025-09-26 15:03:24,594 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:03:24,594 - DEBUG - ТРАНСКРИПЦИЯ: Результат английского музыкального промпта: '' (длина: 0)
2025-09-26 15:03:24,594 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: '[sound of running water]'
2025-09-26 15:03:24,595 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:03:24,595 - DEBUG - ГАЛЛЮЦИНАЦИЯ: текст '[sound of running water]' отфильтрован - описание звука
2025-09-26 15:03:24,595 - WARNING - ФИЛЬТРАЦИЯ: Текст определен как галлюцинация - отфильтровано
2025-09-26 15:03:24,596 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\test_noise.wav'>)))], 'idempotency_key': 'stainless-python-retry-3c1fa4c9-46cc-4acd-9be5-5825ec4b7c6e', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:03:24,597 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:24,597 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:24,597 - DEBUG - send_request_headers.complete
2025-09-26 15:03:24,597 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:24,599 - DEBUG - send_request_body.complete
2025-09-26 15:03:24,599 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:25,742 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:25 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'431'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'443'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_46bf1a0c67c8405f8d318d5bef67132b'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529e2ee97b8d5e-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:25,743 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:25,744 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:25,744 - DEBUG - receive_response_body.complete
2025-09-26 15:03:25,744 - DEBUG - response_closed.started
2025-09-26 15:03:25,744 - DEBUG - response_closed.complete
2025-09-26 15:03:25,745 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:25 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '431', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '443', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_46bf1a0c67c8405f8d318d5bef67132b', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529e2ee97b8d5e-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:25,745 - DEBUG - request_id: req_46bf1a0c67c8405f8d318d5bef67132b
2025-09-26 15:03:25,745 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:03:25,745 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:03:25,746 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:03:25,747 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\test_speech.mp3
2025-09-26 15:03:25,747 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 2, 'overlap': 0.25, 'jobs': 4}
2025-09-26 15:03:25,747 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла: examples\test_speech.mp3
2025-09-26 15:03:25,747 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 15:03:25,748 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 15:03:25,748 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\test_speech.mp3
2025-09-26 15:03:26,244 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 15:03:26,244 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\test_speech.mp3
2025-09-26 15:03:26,308 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	RESUME(arg=0, lineno=1137)
           4	LOAD_FAST(arg=0, lineno=1140)
           6	LOAD_CONST(arg=1, lineno=1140)
           8	BINARY_SUBSCR(arg=None, lineno=1140)
          12	STORE_FAST(arg=3, lineno=1140)
          14	LOAD_FAST(arg=1, lineno=1141)
          16	UNARY_NEGATIVE(arg=None, lineno=1141)
          18	LOAD_FAST(arg=3, lineno=1141)
          20	SWAP(arg=2, lineno=1141)
          22	COPY(arg=2, lineno=1141)
          24	COMPARE_OP(arg=58, lineno=1141)
          28	POP_JUMP_IF_FALSE(arg=6, lineno=1141)
          32	LOAD_FAST(arg=1, lineno=1141)
          34	COMPARE_OP(arg=58, lineno=1141)
          38	POP_JUMP_IF_FALSE(arg=5, lineno=1141)
          42	JUMP_FORWARD(arg=2, lineno=1141)
>         44	POP_TOP(arg=None, lineno=1141)
          46	JUMP_FORWARD(arg=2, lineno=1141)
>         48	LOAD_CONST(arg=1, lineno=1142)
          50	STORE_FAST(arg=3, lineno=1142)
>         52	LOAD_FAST(arg=0, lineno=1144)
          54	LOAD_CONST(arg=2, lineno=1144)
          56	BINARY_SUBSCR(arg=None, lineno=1144)
          60	STORE_FAST(arg=4, lineno=1144)
          62	LOAD_FAST(arg=1, lineno=1145)
          64	UNARY_NEGATIVE(arg=None, lineno=1145)
          66	LOAD_FAST(arg=4, lineno=1145)
          68	SWAP(arg=2, lineno=1145)
          70	COPY(arg=2, lineno=1145)
          72	COMPARE_OP(arg=58, lineno=1145)
          76	POP_JUMP_IF_FALSE(arg=6, lineno=1145)
          80	LOAD_FAST(arg=1, lineno=1145)
          82	COMPARE_OP(arg=58, lineno=1145)
          86	POP_JUMP_IF_FALSE(arg=5, lineno=1145)
          90	JUMP_FORWARD(arg=2, lineno=1145)
>         92	POP_TOP(arg=None, lineno=1145)
          94	JUMP_FORWARD(arg=2, lineno=1145)
>         96	LOAD_CONST(arg=1, lineno=1146)
          98	STORE_FAST(arg=4, lineno=1146)
>        100	LOAD_FAST(arg=2, lineno=1148)
         102	TO_BOOL(arg=None, lineno=1148)
         110	POP_JUMP_IF_FALSE(arg=45, lineno=1148)
         114	LOAD_GLOBAL(arg=0, lineno=1149)
         124	LOAD_ATTR(arg=2, lineno=1149)
         144	PUSH_NULL(arg=None, lineno=1149)
         146	LOAD_FAST(arg=3, lineno=1149)
         148	CALL(arg=1, lineno=1149)
         156	LOAD_GLOBAL(arg=0, lineno=1149)
         166	LOAD_ATTR(arg=2, lineno=1149)
         186	PUSH_NULL(arg=None, lineno=1149)
         188	LOAD_FAST(arg=4, lineno=1149)
         190	CALL(arg=1, lineno=1149)
         198	COMPARE_OP(arg=103, lineno=1149)
         202	RETURN_VALUE(arg=None, lineno=1149)
>        204	LOAD_GLOBAL(arg=0, lineno=1151)
         214	LOAD_ATTR(arg=4, lineno=1151)
         234	PUSH_NULL(arg=None, lineno=1151)
         236	LOAD_FAST(arg=3, lineno=1151)
         238	CALL(arg=1, lineno=1151)
         246	LOAD_GLOBAL(arg=0, lineno=1151)
         256	LOAD_ATTR(arg=4, lineno=1151)
         276	PUSH_NULL(arg=None, lineno=1151)
         278	LOAD_FAST(arg=4, lineno=1151)
         280	CALL(arg=1, lineno=1151)
         288	COMPARE_OP(arg=103, lineno=1151)
         292	RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:03:26,310 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:03:26,310 - DEBUG - stack: []
2025-09-26 15:03:26,310 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:03:26,310 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-09-26 15:03:26,311 - DEBUG - stack []
2025-09-26 15:03:26,311 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1137)
2025-09-26 15:03:26,311 - DEBUG - stack []
2025-09-26 15:03:26,311 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1140)
2025-09-26 15:03:26,311 - DEBUG - stack []
2025-09-26 15:03:26,311 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1140)
2025-09-26 15:03:26,311 - DEBUG - stack ['$x4.0']
2025-09-26 15:03:26,311 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-09-26 15:03:26,312 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-09-26 15:03:26,312 - DEBUG - dispatch pc=12, inst=STORE_FAST(arg=3, lineno=1140)
2025-09-26 15:03:26,312 - DEBUG - stack ['$8binary_subscr.2']
2025-09-26 15:03:26,312 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:03:26,312 - DEBUG - stack []
2025-09-26 15:03:26,312 - DEBUG - dispatch pc=16, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-09-26 15:03:26,312 - DEBUG - stack ['$threshold14.3']
2025-09-26 15:03:26,313 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=1141)
2025-09-26 15:03:26,313 - DEBUG - stack ['$16unary_negative.4']
2025-09-26 15:03:26,313 - DEBUG - dispatch pc=20, inst=SWAP(arg=2, lineno=1141)
2025-09-26 15:03:26,313 - DEBUG - stack ['$16unary_negative.4', '$x018.5']
2025-09-26 15:03:26,313 - DEBUG - dispatch pc=22, inst=COPY(arg=2, lineno=1141)
2025-09-26 15:03:26,313 - DEBUG - stack ['$x018.5', '$16unary_negative.4']
2025-09-26 15:03:26,313 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:03:26,313 - DEBUG - stack ['$x018.5', '$16unary_negative.4', '$x018.5']
2025-09-26 15:03:26,314 - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1141)
2025-09-26 15:03:26,314 - DEBUG - stack ['$x018.5', '$24compare_op.6']
2025-09-26 15:03:26,314 - DEBUG - end state. edges=[Edge(pc=32, stack=('$x018.5',), blockstack=(), npush=0), Edge(pc=44, stack=('$x018.5',), blockstack=(), npush=0)]
2025-09-26 15:03:26,314 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=44 nstack_initial=1)])
2025-09-26 15:03:26,314 - DEBUG - stack: ['$phi32.0']
2025-09-26 15:03:26,315 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-09-26 15:03:26,315 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:03:26,315 - DEBUG - stack ['$phi32.0']
2025-09-26 15:03:26,315 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:03:26,315 - DEBUG - stack ['$phi32.0', '$threshold32.1']
2025-09-26 15:03:26,316 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1141)
2025-09-26 15:03:26,316 - DEBUG - stack ['$34compare_op.2']
2025-09-26 15:03:26,316 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:26,316 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=1), State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:03:26,316 - DEBUG - stack: ['$phi44.0']
2025-09-26 15:03:26,317 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=1)
2025-09-26 15:03:26,317 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=1141)
2025-09-26 15:03:26,317 - DEBUG - stack ['$phi44.0']
2025-09-26 15:03:26,317 - DEBUG - dispatch pc=46, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:03:26,317 - DEBUG - stack []
2025-09-26 15:03:26,318 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:26,318 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:03:26,318 - DEBUG - stack: []
2025-09-26 15:03:26,318 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-09-26 15:03:26,318 - DEBUG - dispatch pc=42, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:03:26,318 - DEBUG - stack []
2025-09-26 15:03:26,318 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:26,319 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2025-09-26 15:03:26,319 - DEBUG - stack: []
2025-09-26 15:03:26,319 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-09-26 15:03:26,319 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1144)
2025-09-26 15:03:26,319 - DEBUG - stack []
2025-09-26 15:03:26,319 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=1144)
2025-09-26 15:03:26,319 - DEBUG - stack ['$x52.0']
2025-09-26 15:03:26,320 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-09-26 15:03:26,320 - DEBUG - stack ['$x52.0', '$const54.1.2']
2025-09-26 15:03:26,320 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=4, lineno=1144)
2025-09-26 15:03:26,320 - DEBUG - stack ['$56binary_subscr.2']
2025-09-26 15:03:26,320 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:03:26,320 - DEBUG - stack []
2025-09-26 15:03:26,320 - DEBUG - dispatch pc=64, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-09-26 15:03:26,321 - DEBUG - stack ['$threshold62.3']
2025-09-26 15:03:26,321 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=4, lineno=1145)
2025-09-26 15:03:26,321 - DEBUG - stack ['$64unary_negative.4']
2025-09-26 15:03:26,321 - DEBUG - dispatch pc=68, inst=SWAP(arg=2, lineno=1145)
2025-09-26 15:03:26,321 - DEBUG - stack ['$64unary_negative.4', '$x166.5']
2025-09-26 15:03:26,321 - DEBUG - dispatch pc=70, inst=COPY(arg=2, lineno=1145)
2025-09-26 15:03:26,321 - DEBUG - stack ['$x166.5', '$64unary_negative.4']
2025-09-26 15:03:26,321 - DEBUG - dispatch pc=72, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:03:26,322 - DEBUG - stack ['$x166.5', '$64unary_negative.4', '$x166.5']
2025-09-26 15:03:26,322 - DEBUG - dispatch pc=76, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1145)
2025-09-26 15:03:26,322 - DEBUG - stack ['$x166.5', '$72compare_op.6']
2025-09-26 15:03:26,322 - DEBUG - end state. edges=[Edge(pc=80, stack=('$x166.5',), blockstack=(), npush=0), Edge(pc=92, stack=('$x166.5',), blockstack=(), npush=0)]
2025-09-26 15:03:26,322 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:03:26,322 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:03:26,323 - DEBUG - stack: []
2025-09-26 15:03:26,323 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-09-26 15:03:26,323 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1142)
2025-09-26 15:03:26,323 - DEBUG - stack []
2025-09-26 15:03:26,323 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=3, lineno=1142)
2025-09-26 15:03:26,323 - DEBUG - stack ['$const48.0.1']
2025-09-26 15:03:26,323 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:26,324 - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:03:26,324 - DEBUG - stack: ['$phi80.0']
2025-09-26 15:03:26,324 - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-09-26 15:03:26,324 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:03:26,324 - DEBUG - stack ['$phi80.0']
2025-09-26 15:03:26,324 - DEBUG - dispatch pc=82, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:03:26,324 - DEBUG - stack ['$phi80.0', '$threshold80.1']
2025-09-26 15:03:26,324 - DEBUG - dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1145)
2025-09-26 15:03:26,325 - DEBUG - stack ['$82compare_op.2']
2025-09-26 15:03:26,325 - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:26,325 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:26,325 - DEBUG - stack: ['$phi92.0']
2025-09-26 15:03:26,325 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=1)
2025-09-26 15:03:26,325 - DEBUG - dispatch pc=92, inst=POP_TOP(arg=None, lineno=1145)
2025-09-26 15:03:26,326 - DEBUG - stack ['$phi92.0']
2025-09-26 15:03:26,326 - DEBUG - dispatch pc=94, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:03:26,326 - DEBUG - stack []
2025-09-26 15:03:26,326 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:26,326 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:26,326 - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:26,326 - DEBUG - stack: []
2025-09-26 15:03:26,327 - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-09-26 15:03:26,327 - DEBUG - dispatch pc=90, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:03:26,327 - DEBUG - stack []
2025-09-26 15:03:26,327 - DEBUG - end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:26,327 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-09-26 15:03:26,327 - DEBUG - stack: []
2025-09-26 15:03:26,327 - DEBUG - state.pc_initial: State(pc_initial=100 nstack_initial=0)
2025-09-26 15:03:26,328 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=2, lineno=1148)
2025-09-26 15:03:26,328 - DEBUG - stack []
2025-09-26 15:03:26,328 - DEBUG - dispatch pc=102, inst=TO_BOOL(arg=None, lineno=1148)
2025-09-26 15:03:26,328 - DEBUG - stack ['$zero_pos100.0']
2025-09-26 15:03:26,328 - DEBUG - dispatch pc=110, inst=POP_JUMP_IF_FALSE(arg=45, lineno=1148)
2025-09-26 15:03:26,328 - DEBUG - stack ['$102to_bool.1']
2025-09-26 15:03:26,329 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=204, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:26,329 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:03:26,329 - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:03:26,329 - DEBUG - stack: []
2025-09-26 15:03:26,329 - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2025-09-26 15:03:26,329 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=1, lineno=1146)
2025-09-26 15:03:26,329 - DEBUG - stack []
2025-09-26 15:03:26,330 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=4, lineno=1146)
2025-09-26 15:03:26,330 - DEBUG - stack ['$const96.0.1']
2025-09-26 15:03:26,330 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:26,330 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:26,330 - DEBUG - stack: []
2025-09-26 15:03:26,331 - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2025-09-26 15:03:26,331 - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:03:26,331 - DEBUG - stack []
2025-09-26 15:03:26,331 - DEBUG - dispatch pc=124, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:03:26,331 - DEBUG - stack ['$114load_global.0']
2025-09-26 15:03:26,331 - DEBUG - dispatch pc=144, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:03:26,331 - DEBUG - stack ['$124load_attr.1']
2025-09-26 15:03:26,332 - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=3, lineno=1149)
2025-09-26 15:03:26,332 - DEBUG - stack ['$124load_attr.1', '$null$144.2']
2025-09-26 15:03:26,332 - DEBUG - dispatch pc=148, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:03:26,332 - DEBUG - stack ['$124load_attr.1', '$null$144.2', '$x0146.3']
2025-09-26 15:03:26,332 - DEBUG - dispatch pc=156, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:03:26,333 - DEBUG - stack ['$148call.4']
2025-09-26 15:03:26,333 - DEBUG - dispatch pc=166, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:03:26,333 - DEBUG - stack ['$148call.4', '$156load_global.5']
2025-09-26 15:03:26,333 - DEBUG - dispatch pc=186, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:03:26,333 - DEBUG - stack ['$148call.4', '$166load_attr.6']
2025-09-26 15:03:26,334 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=4, lineno=1149)
2025-09-26 15:03:26,334 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7']
2025-09-26 15:03:26,334 - DEBUG - dispatch pc=190, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:03:26,334 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7', '$x1188.8']
2025-09-26 15:03:26,334 - DEBUG - dispatch pc=198, inst=COMPARE_OP(arg=103, lineno=1149)
2025-09-26 15:03:26,334 - DEBUG - stack ['$148call.4', '$190call.9']
2025-09-26 15:03:26,334 - DEBUG - dispatch pc=202, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-09-26 15:03:26,335 - DEBUG - stack ['$198compare_op.10']
2025-09-26 15:03:26,335 - DEBUG - end state. edges=[]
2025-09-26 15:03:26,335 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:26,335 - DEBUG - stack: []
2025-09-26 15:03:26,335 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=0)
2025-09-26 15:03:26,335 - DEBUG - dispatch pc=204, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:03:26,336 - DEBUG - stack []
2025-09-26 15:03:26,336 - DEBUG - dispatch pc=214, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:03:26,336 - DEBUG - stack ['$204load_global.0']
2025-09-26 15:03:26,336 - DEBUG - dispatch pc=234, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:03:26,336 - DEBUG - stack ['$214load_attr.1']
2025-09-26 15:03:26,336 - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=3, lineno=1151)
2025-09-26 15:03:26,336 - DEBUG - stack ['$214load_attr.1', '$null$234.2']
2025-09-26 15:03:26,336 - DEBUG - dispatch pc=238, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:03:26,337 - DEBUG - stack ['$214load_attr.1', '$null$234.2', '$x0236.3']
2025-09-26 15:03:26,337 - DEBUG - dispatch pc=246, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:03:26,337 - DEBUG - stack ['$238call.4']
2025-09-26 15:03:26,337 - DEBUG - dispatch pc=256, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:03:26,337 - DEBUG - stack ['$238call.4', '$246load_global.5']
2025-09-26 15:03:26,337 - DEBUG - dispatch pc=276, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:03:26,337 - DEBUG - stack ['$238call.4', '$256load_attr.6']
2025-09-26 15:03:26,338 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=4, lineno=1151)
2025-09-26 15:03:26,338 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7']
2025-09-26 15:03:26,338 - DEBUG - dispatch pc=280, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:03:26,338 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7', '$x1278.8']
2025-09-26 15:03:26,338 - DEBUG - dispatch pc=288, inst=COMPARE_OP(arg=103, lineno=1151)
2025-09-26 15:03:26,338 - DEBUG - stack ['$238call.4', '$280call.9']
2025-09-26 15:03:26,338 - DEBUG - dispatch pc=292, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:03:26,339 - DEBUG - stack ['$288compare_op.10']
2025-09-26 15:03:26,339 - DEBUG - end state. edges=[]
2025-09-26 15:03:26,339 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:26,339 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:03:26,339 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=1): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=204 nstack_initial=0): set()})
2025-09-26 15:03:26,340 - DEBUG - defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi44.0': State(pc_initial=0 nstack_initial=0),
 '$phi80.0': State(pc_initial=52 nstack_initial=0),
 '$phi92.0': State(pc_initial=52 nstack_initial=0)}
2025-09-26 15:03:26,340 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:03:26,341 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:03:26,341 - DEBUG - keep phismap: {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
 '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}}
2025-09-26 15:03:26,341 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$x018.5'},
             State(pc_initial=52 nstack_initial=0): {'$phi80.0': '$x166.5'}})
2025-09-26 15:03:26,341 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:03:26,342 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'value': '$8binary_subscr.2'}), (14, {'res': '$threshold14.3'}), (16, {'value': '$threshold14.3', 'res': '$16unary_negative.4'}), (18, {'res': '$x018.5'}), (24, {'lhs': '$16unary_negative.4', 'rhs': '$x018.5', 'res': '$24compare_op.6'}), (28, {'pred': '$24compare_op.6'})), outgoing_phis={'$phi32.0': '$x018.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$x018.5',), 44: ('$x018.5',)})
2025-09-26 15:03:26,342 - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'res': '$threshold32.1'}), (34, {'lhs': '$phi32.0', 'rhs': '$threshold32.1', 'res': '$34compare_op.2'}), (38, {'pred': '$34compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 52: ()})
2025-09-26 15:03:26,342 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ()})
2025-09-26 15:03:26,342 - DEBUG - block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((46, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:03:26,343 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$const48.0.1'}), (50, {'value': '$const48.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:03:26,343 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$x52.0'}), (54, {'res': '$const54.1.2'}), (56, {'index': '$const54.1.2', 'target': '$x52.0', 'res': '$56binary_subscr.2'}), (60, {'value': '$56binary_subscr.2'}), (62, {'res': '$threshold62.3'}), (64, {'value': '$threshold62.3', 'res': '$64unary_negative.4'}), (66, {'res': '$x166.5'}), (72, {'lhs': '$64unary_negative.4', 'rhs': '$x166.5', 'res': '$72compare_op.6'}), (76, {'pred': '$72compare_op.6'})), outgoing_phis={'$phi80.0': '$x166.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$x166.5',), 92: ('$x166.5',)})
2025-09-26 15:03:26,343 - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$threshold80.1'}), (82, {'lhs': '$phi80.0', 'rhs': '$threshold80.1', 'res': '$82compare_op.2'}), (86, {'pred': '$82compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 100: ()})
2025-09-26 15:03:26,343 - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
2025-09-26 15:03:26,344 - DEBUG - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((94, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:03:26,344 - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$const96.0.1'}), (98, {'value': '$const96.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:03:26,344 - DEBUG - block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$zero_pos100.0'}), (102, {'val': '$zero_pos100.0', 'res': '$102to_bool.1'}), (110, {'pred': '$102to_bool.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 204: ()})
2025-09-26 15:03:26,344 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'idx': 0, 'res': '$114load_global.0'}), (124, {'item': '$114load_global.0', 'res': '$124load_attr.1'}), (144, {}), (146, {'res': '$x0146.3'}), (148, {'func': '$124load_attr.1', 'args': ['$x0146.3'], 'kw_names': None, 'res': '$148call.4'}), (156, {'idx': 0, 'res': '$156load_global.5'}), (166, {'item': '$156load_global.5', 'res': '$166load_attr.6'}), (186, {}), (188, {'res': '$x1188.8'}), (190, {'func': '$166load_attr.6', 'args': ['$x1188.8'], 'kw_names': None, 'res': '$190call.9'}), (198, {'lhs': '$148call.4', 'rhs': '$190call.9', 'res': '$198compare_op.10'}), (202, {'retval': '$198compare_op.10', 'castval': '$202return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:03:26,345 - DEBUG - block_infos State(pc_initial=204 nstack_initial=0):
AdaptBlockInfo(insts=((204, {'idx': 0, 'res': '$204load_global.0'}), (214, {'item': '$204load_global.0', 'res': '$214load_attr.1'}), (234, {}), (236, {'res': '$x0236.3'}), (238, {'func': '$214load_attr.1', 'args': ['$x0236.3'], 'kw_names': None, 'res': '$238call.4'}), (246, {'idx': 0, 'res': '$246load_global.5'}), (256, {'item': '$246load_global.5', 'res': '$256load_attr.6'}), (276, {}), (278, {'res': '$x1278.8'}), (280, {'func': '$256load_attr.6', 'args': ['$x1278.8'], 'kw_names': None, 'res': '$280call.9'}), (288, {'lhs': '$238call.4', 'rhs': '$280call.9', 'res': '$288compare_op.10'}), (292, {'retval': '$288compare_op.10', 'castval': '$292return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:03:26,346 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    x0 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$const6.1.1', 'x', 'x0']
    $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$16unary_negative.4', 'threshold']
    $24compare_op.6 = $16unary_negative.4 <= x0 ['$16unary_negative.4', '$24compare_op.6', 'x0']
    $bool28 = global(bool: <class 'bool'>)   ['$bool28']
    $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.6', '$28pred', '$bool28']
    $phi32.0 = x0                            ['$phi32.0', 'x0']
    branch $28pred, 32, 44                   ['$28pred']
label 32:
    $34compare_op.2 = $phi32.0 <= threshold  ['$34compare_op.2', '$phi32.0', 'threshold']
    $bool38 = global(bool: <class 'bool'>)   ['$bool38']
    $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.2', '$38pred', '$bool38']
    branch $38pred, 42, 52                   ['$38pred']
label 42:
    jump 48                                  []
label 44:
    jump 52                                  []
label 48:
    x0 = const(int, 0)                       ['x0']
    jump 52                                  []
label 52:
    $const54.1.2 = const(int, -1)            ['$const54.1.2']
    x1 = getitem(value=x, index=$const54.1.2, fn=<built-in function getitem>) ['$const54.1.2', 'x', 'x1']
    $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$64unary_negative.4', 'threshold']
    $72compare_op.6 = $64unary_negative.4 <= x1 ['$64unary_negative.4', '$72compare_op.6', 'x1']
    $bool76 = global(bool: <class 'bool'>)   ['$bool76']
    $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$72compare_op.6', '$76pred', '$bool76']
    $phi80.0 = x1                            ['$phi80.0', 'x1']
    branch $76pred, 80, 92                   ['$76pred']
label 80:
    $82compare_op.2 = $phi80.0 <= threshold  ['$82compare_op.2', '$phi80.0', 'threshold']
    $bool86 = global(bool: <class 'bool'>)   ['$bool86']
    $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$82compare_op.2', '$86pred', '$bool86']
    branch $86pred, 90, 100                  ['$86pred']
label 90:
    jump 96                                  []
label 92:
    jump 100                                 []
label 96:
    x1 = const(int, 0)                       ['x1']
    jump 100                                 []
label 100:
    $bool110 = global(bool: <class 'bool'>)  ['$bool110']
    $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$110pred', '$bool110', 'zero_pos']
    branch $110pred, 114, 204                ['$110pred']
label 114:
    $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$114load_global.0']
    $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit) ['$114load_global.0', '$124load_attr.1']
    $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$124load_attr.1', '$148call.4', 'x0']
    $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$156load_global.5']
    $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit) ['$156load_global.5', '$166load_attr.6']
    $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.6', '$190call.9', 'x1']
    $198compare_op.10 = $148call.4 != $190call.9 ['$148call.4', '$190call.9', '$198compare_op.10']
    $202return_value.11 = cast(value=$198compare_op.10) ['$198compare_op.10', '$202return_value.11']
    return $202return_value.11               ['$202return_value.11']
label 204:
    $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$204load_global.0']
    $214load_attr.1 = getattr(value=$204load_global.0, attr=sign) ['$204load_global.0', '$214load_attr.1']
    $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.1', '$238call.4', 'x0']
    $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$246load_global.5']
    $256load_attr.6 = getattr(value=$246load_global.5, attr=sign) ['$246load_global.5', '$256load_attr.6']
    $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$256load_attr.6', '$280call.9', 'x1']
    $288compare_op.10 = $238call.4 != $280call.9 ['$238call.4', '$280call.9', '$288compare_op.10']
    $292return_value.11 = cast(value=$288compare_op.10) ['$288compare_op.10', '$292return_value.11']
    return $292return_value.11               ['$292return_value.11']

2025-09-26 15:03:26,350 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1154)
           2	RESUME(arg=0, lineno=1154)
           4	LOAD_GLOBAL(arg=1, lineno=1170)
          14	LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
          16	LOAD_FAST(arg=2, lineno=1170)
          18	CALL(arg=3, lineno=1170)
          26	LOAD_FAST(arg=3, lineno=1170)
          28	LOAD_CONST(arg=1, lineno=1170)
          30	LOAD_CONST(arg=1, lineno=1170)
          32	STORE_SLICE(arg=None, lineno=1170)
          34	RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:03:26,351 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:03:26,351 - DEBUG - stack: []
2025-09-26 15:03:26,351 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:03:26,351 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1154)
2025-09-26 15:03:26,351 - DEBUG - stack []
2025-09-26 15:03:26,351 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1154)
2025-09-26 15:03:26,352 - DEBUG - stack []
2025-09-26 15:03:26,352 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1170)
2025-09-26 15:03:26,352 - DEBUG - stack []
2025-09-26 15:03:26,352 - DEBUG - dispatch pc=14, inst=LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
2025-09-26 15:03:26,352 - DEBUG - stack ['$4load_global.0', '$null$4.1']
2025-09-26 15:03:26,352 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=1170)
2025-09-26 15:03:26,353 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3']
2025-09-26 15:03:26,353 - DEBUG - dispatch pc=18, inst=CALL(arg=3, lineno=1170)
2025-09-26 15:03:26,353 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3', '$zero_pos16.4']
2025-09-26 15:03:26,353 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=3, lineno=1170)
2025-09-26 15:03:26,353 - DEBUG - stack ['$18call.5']
2025-09-26 15:03:26,353 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:03:26,353 - DEBUG - stack ['$18call.5', '$y26.6']
2025-09-26 15:03:26,354 - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:03:26,354 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1']
2025-09-26 15:03:26,354 - DEBUG - dispatch pc=32, inst=STORE_SLICE(arg=None, lineno=1170)
2025-09-26 15:03:26,354 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1', '$const30.8.1']
2025-09-26 15:03:26,354 - DEBUG - dispatch pc=34, inst=RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:03:26,354 - DEBUG - stack []
2025-09-26 15:03:26,354 - DEBUG - end state. edges=[]
2025-09-26 15:03:26,355 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:03:26,355 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-09-26 15:03:26,355 - DEBUG - defmap: {}
2025-09-26 15:03:26,355 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:03:26,355 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:03:26,356 - DEBUG - keep phismap: {}
2025-09-26 15:03:26,356 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-09-26 15:03:26,356 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:03:26,356 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res1': '$x14.2', 'res2': '$threshold14.3'}), (16, {'res': '$zero_pos16.4'}), (18, {'func': '$4load_global.0', 'args': ['$x14.2', '$threshold14.3', '$zero_pos16.4'], 'kw_names': None, 'res': '$18call.5'}), (26, {'res': '$y26.6'}), (28, {'res': '$const28.7.1'}), (30, {'res': '$const30.8.1'}), (32, {'start': '$const28.7.1', 'end': '$const30.8.1', 'container': '$y26.6', 'value': '$18call.5', 'res': '$32store_slice.10', 'slicevar': '$32store_slice.9'}), (34, {'retval': '$const34.11', 'castval': '$34return_const.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:03:26,357 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002985CC5A210>) ['$4load_global.0']
    $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const28.7.1 = const(NoneType, None)     ['$const28.7.1']
    $const30.8.1 = const(NoneType, None)     ['$const30.8.1']
    $32store_slice.9 = global(slice: <class 'slice'>) ['$32store_slice.9']
    $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$32store_slice.10', '$32store_slice.9', '$const28.7.1', '$const30.8.1']
    y[$32store_slice.10] = $18call.5         ['$18call.5', '$32store_slice.10', 'y']
    $const34.11 = const(NoneType, None)      ['$const34.11']
    $34return_const.12 = cast(value=$const34.11) ['$34return_const.12', '$const34.11']
    return $34return_const.12                ['$34return_const.12']

2025-09-26 15:03:26,361 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:03:26,361 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D033F20>
2025-09-26 15:03:26,361 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:26,361 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:26,361 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:26,361 - DEBUG - on stmt: y = arg(3, name=y)
2025-09-26 15:03:26,361 - DEBUG - on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002985CC5A210>)
2025-09-26 15:03:26,362 - DEBUG - on stmt: $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,362 - DEBUG - on stmt: $const28.7.1 = const(NoneType, None)
2025-09-26 15:03:26,362 - DEBUG - on stmt: $const30.8.1 = const(NoneType, None)
2025-09-26 15:03:26,362 - DEBUG - on stmt: $32store_slice.9 = global(slice: <class 'slice'>)
2025-09-26 15:03:26,362 - DEBUG - on stmt: $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,362 - DEBUG - on stmt: y[slice(None, None, None)] = $18call.5
2025-09-26 15:03:26,363 - DEBUG - on stmt: $const34.11 = const(NoneType, None)
2025-09-26 15:03:26,363 - DEBUG - on stmt: $34return_const.12 = cast(value=$const34.11)
2025-09-26 15:03:26,363 - DEBUG - on stmt: return $34return_const.12
2025-09-26 15:03:26,363 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.5': [(<numba.core.ir.Assign object at 0x000002985D0B2690>,
                            0)],
             '$32store_slice.10': [(<numba.core.ir.Assign object at 0x000002985D0B3290>,
                                    0)],
             '$32store_slice.9': [(<numba.core.ir.Assign object at 0x000002985D0B2F90>,
                                   0)],
             '$34return_const.12': [(<numba.core.ir.Assign object at 0x000002985D0B1AF0>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000002985D06D430>,
                                  0)],
             '$const28.7.1': [(<numba.core.ir.Assign object at 0x000002985D0B2C90>,
                               0)],
             '$const30.8.1': [(<numba.core.ir.Assign object at 0x000002985D0B2F30>,
                               0)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x000002985D0B36B0>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002985D05EE70>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002985D05EFF0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000002985D05FC50>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002985D05EE10>,
                           0)]})
2025-09-26 15:03:26,364 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002985D033F20>
2025-09-26 15:03:26,406 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=3, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=3, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	LOAD_CONST(arg=1, lineno=3)
          92	CALL_KW(arg=2, lineno=3)
          94	STORE_FAST(arg=4, lineno=3)
          96	LOAD_CONST(arg=2, lineno=4)
          98	LOAD_FAST(arg=4, lineno=4)
         100	LOAD_CONST(arg=0, lineno=4)
         102	LOAD_CONST(arg=3, lineno=4)
         104	STORE_SLICE(arg=None, lineno=4)
         106	LOAD_CONST(arg=2, lineno=5)
         108	LOAD_FAST(arg=4, lineno=5)
         110	LOAD_CONST(arg=2, lineno=5)
         112	LOAD_CONST(arg=0, lineno=5)
         114	STORE_SLICE(arg=None, lineno=5)
         116	LOAD_GLOBAL(arg=9, lineno=6)
         126	LOAD_GLOBAL(arg=11, lineno=6)
         136	LOAD_CONST(arg=2, lineno=6)
         138	LOAD_CONST(arg=4, lineno=6)
         140	CALL(arg=2, lineno=6)
         148	UNARY_NEGATIVE(arg=None, lineno=6)
         150	LOAD_FAST(arg=3, lineno=6)
         152	LOAD_CONST(arg=2, lineno=6)
         154	BINARY_SUBSCR(arg=None, lineno=6)
         158	LOAD_GLOBAL(arg=13, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	LOAD_CONST(arg=2, lineno=6)
         172	CALL(arg=2, lineno=6)
         180	BINARY_OP(arg=10, lineno=6)
         184	CALL(arg=2, lineno=6)
         192	GET_ITER(arg=None, lineno=6)
>        194	FOR_ITER(arg=5, lineno=6)
         198	STORE_FAST(arg=5, lineno=6)
         200	LOAD_CONST(arg=2, lineno=7)
         202	STORE_FAST(arg=6, lineno=7)
         204	JUMP_BACKWARD(arg=7, lineno=7)
>        208	END_FOR(arg=None, lineno=6)
         210	POP_TOP(arg=None, lineno=6)
         212	LOAD_FAST(arg=4, lineno=8)
         214	RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:03:26,407 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:03:26,407 - DEBUG - stack: []
2025-09-26 15:03:26,407 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:03:26,407 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-09-26 15:03:26,408 - DEBUG - stack []
2025-09-26 15:03:26,408 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2025-09-26 15:03:26,408 - DEBUG - stack []
2025-09-26 15:03:26,408 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2025-09-26 15:03:26,408 - DEBUG - stack []
2025-09-26 15:03:26,409 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2025-09-26 15:03:26,409 - DEBUG - stack ['$x4.0']
2025-09-26 15:03:26,409 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=3, lineno=2)
2025-09-26 15:03:26,409 - DEBUG - stack ['$6load_attr.1']
2025-09-26 15:03:26,409 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:03:26,409 - DEBUG - stack []
2025-09-26 15:03:26,410 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2025-09-26 15:03:26,410 - DEBUG - stack ['$28load_global.2']
2025-09-26 15:03:26,410 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=3, lineno=3)
2025-09-26 15:03:26,410 - DEBUG - stack ['$38load_attr.3', '$null$38.4']
2025-09-26 15:03:26,410 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:03:26,410 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5']
2025-09-26 15:03:26,410 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2025-09-26 15:03:26,410 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$60load_global.6']
2025-09-26 15:03:26,411 - DEBUG - dispatch pc=90, inst=LOAD_CONST(arg=1, lineno=3)
2025-09-26 15:03:26,411 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7']
2025-09-26 15:03:26,411 - DEBUG - dispatch pc=92, inst=CALL_KW(arg=2, lineno=3)
2025-09-26 15:03:26,411 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7', '$const90.8.1']
2025-09-26 15:03:26,411 - DEBUG - dispatch pc=94, inst=STORE_FAST(arg=4, lineno=3)
2025-09-26 15:03:26,411 - DEBUG - stack ['$92call_kw.9']
2025-09-26 15:03:26,411 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=2, lineno=4)
2025-09-26 15:03:26,412 - DEBUG - stack []
2025-09-26 15:03:26,412 - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=4)
2025-09-26 15:03:26,412 - DEBUG - stack ['$const96.10.2']
2025-09-26 15:03:26,412 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=0, lineno=4)
2025-09-26 15:03:26,412 - DEBUG - stack ['$const96.10.2', '$out098.11']
2025-09-26 15:03:26,412 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=3, lineno=4)
2025-09-26 15:03:26,412 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0']
2025-09-26 15:03:26,413 - DEBUG - dispatch pc=104, inst=STORE_SLICE(arg=None, lineno=4)
2025-09-26 15:03:26,413 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0', '$const102.13.3']
2025-09-26 15:03:26,413 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:03:26,413 - DEBUG - stack []
2025-09-26 15:03:26,413 - DEBUG - dispatch pc=108, inst=LOAD_FAST(arg=4, lineno=5)
2025-09-26 15:03:26,413 - DEBUG - stack ['$const106.16.2']
2025-09-26 15:03:26,413 - DEBUG - dispatch pc=110, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:03:26,413 - DEBUG - stack ['$const106.16.2', '$out0108.17']
2025-09-26 15:03:26,414 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=0, lineno=5)
2025-09-26 15:03:26,414 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2']
2025-09-26 15:03:26,414 - DEBUG - dispatch pc=114, inst=STORE_SLICE(arg=None, lineno=5)
2025-09-26 15:03:26,414 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2', '$const112.19.0']
2025-09-26 15:03:26,414 - DEBUG - dispatch pc=116, inst=LOAD_GLOBAL(arg=9, lineno=6)
2025-09-26 15:03:26,414 - DEBUG - stack []
2025-09-26 15:03:26,414 - DEBUG - dispatch pc=126, inst=LOAD_GLOBAL(arg=11, lineno=6)
2025-09-26 15:03:26,414 - DEBUG - stack ['$116load_global.22', '$null$116.23']
2025-09-26 15:03:26,415 - DEBUG - dispatch pc=136, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:03:26,415 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25']
2025-09-26 15:03:26,415 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=4, lineno=6)
2025-09-26 15:03:26,415 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2']
2025-09-26 15:03:26,415 - DEBUG - dispatch pc=140, inst=CALL(arg=2, lineno=6)
2025-09-26 15:03:26,415 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2', '$const138.27.4']
2025-09-26 15:03:26,415 - DEBUG - dispatch pc=148, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-09-26 15:03:26,415 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$140call.28']
2025-09-26 15:03:26,416 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=3, lineno=6)
2025-09-26 15:03:26,416 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29']
2025-09-26 15:03:26,416 - DEBUG - dispatch pc=152, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:03:26,416 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30']
2025-09-26 15:03:26,416 - DEBUG - dispatch pc=154, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-09-26 15:03:26,416 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30', '$const152.31.2']
2025-09-26 15:03:26,416 - DEBUG - dispatch pc=158, inst=LOAD_GLOBAL(arg=13, lineno=6)
2025-09-26 15:03:26,416 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32']
2025-09-26 15:03:26,417 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:03:26,417 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34']
2025-09-26 15:03:26,417 - DEBUG - dispatch pc=170, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:03:26,417 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2']
2025-09-26 15:03:26,417 - DEBUG - dispatch pc=172, inst=CALL(arg=2, lineno=6)
2025-09-26 15:03:26,417 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2', '$const170.36.2']
2025-09-26 15:03:26,418 - DEBUG - dispatch pc=180, inst=BINARY_OP(arg=10, lineno=6)
2025-09-26 15:03:26,418 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$172call.37']
2025-09-26 15:03:26,418 - DEBUG - dispatch pc=184, inst=CALL(arg=2, lineno=6)
2025-09-26 15:03:26,418 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$binop_sub180.38']
2025-09-26 15:03:26,418 - DEBUG - dispatch pc=192, inst=GET_ITER(arg=None, lineno=6)
2025-09-26 15:03:26,418 - DEBUG - stack ['$184call.39']
2025-09-26 15:03:26,418 - DEBUG - end state. edges=[Edge(pc=194, stack=('$192get_iter.40',), blockstack=(), npush=0)]
2025-09-26 15:03:26,418 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:03:26,419 - DEBUG - stack: ['$phi194.0']
2025-09-26 15:03:26,419 - DEBUG - state.pc_initial: State(pc_initial=194 nstack_initial=1)
2025-09-26 15:03:26,419 - DEBUG - dispatch pc=194, inst=FOR_ITER(arg=5, lineno=6)
2025-09-26 15:03:26,419 - DEBUG - stack ['$phi194.0']
2025-09-26 15:03:26,419 - DEBUG - end state. edges=[Edge(pc=208, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0), Edge(pc=198, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0)]
2025-09-26 15:03:26,419 - DEBUG - pending: deque([State(pc_initial=208 nstack_initial=2), State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:03:26,419 - DEBUG - stack: ['$phi208.0', '$phi208.1']
2025-09-26 15:03:26,420 - DEBUG - state.pc_initial: State(pc_initial=208 nstack_initial=2)
2025-09-26 15:03:26,420 - DEBUG - dispatch pc=208, inst=END_FOR(arg=None, lineno=6)
2025-09-26 15:03:26,420 - DEBUG - stack ['$phi208.0', '$phi208.1']
2025-09-26 15:03:26,420 - DEBUG - dispatch pc=210, inst=POP_TOP(arg=None, lineno=6)
2025-09-26 15:03:26,420 - DEBUG - stack ['$phi208.0']
2025-09-26 15:03:26,420 - DEBUG - dispatch pc=212, inst=LOAD_FAST(arg=4, lineno=8)
2025-09-26 15:03:26,420 - DEBUG - stack []
2025-09-26 15:03:26,420 - DEBUG - dispatch pc=214, inst=RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:03:26,421 - DEBUG - stack ['$out0212.2']
2025-09-26 15:03:26,421 - DEBUG - end state. edges=[]
2025-09-26 15:03:26,421 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:03:26,421 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2025-09-26 15:03:26,421 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2025-09-26 15:03:26,421 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=5, lineno=6)
2025-09-26 15:03:26,422 - DEBUG - stack ['$phi198.0', '$phi198.1']
2025-09-26 15:03:26,422 - DEBUG - dispatch pc=200, inst=LOAD_CONST(arg=2, lineno=7)
2025-09-26 15:03:26,422 - DEBUG - stack ['$phi198.0']
2025-09-26 15:03:26,422 - DEBUG - dispatch pc=202, inst=STORE_FAST(arg=6, lineno=7)
2025-09-26 15:03:26,422 - DEBUG - stack ['$phi198.0', '$const200.2.2']
2025-09-26 15:03:26,422 - DEBUG - dispatch pc=204, inst=JUMP_BACKWARD(arg=7, lineno=7)
2025-09-26 15:03:26,422 - DEBUG - stack ['$phi198.0']
2025-09-26 15:03:26,423 - DEBUG - end state. edges=[Edge(pc=194, stack=('$phi198.0',), blockstack=(), npush=0)]
2025-09-26 15:03:26,423 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:03:26,423 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:03:26,423 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=194 nstack_initial=1): {'$phi194.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=208 nstack_initial=2): set()})
2025-09-26 15:03:26,424 - DEBUG - defmap: {'$phi194.0': State(pc_initial=0 nstack_initial=0),
 '$phi198.1': State(pc_initial=194 nstack_initial=1),
 '$phi208.1': State(pc_initial=194 nstack_initial=1)}
2025-09-26 15:03:26,424 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi198.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:03:26,425 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:03:26,425 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:03:26,426 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:03:26,426 - DEBUG - keep phismap: {'$phi194.0': {('$192get_iter.40', State(pc_initial=0 nstack_initial=0))},
 '$phi198.1': {('$194for_iter.2', State(pc_initial=194 nstack_initial=1))}}
2025-09-26 15:03:26,426 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi194.0': '$192get_iter.40'},
             State(pc_initial=194 nstack_initial=1): {'$phi198.1': '$194for_iter.2'}})
2025-09-26 15:03:26,427 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:03:26,427 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.3'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (90, {'res': '$const90.8.1'}), (92, {'func': '$38load_attr.3', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': '$const90.8.1', 'res': '$92call_kw.9'}), (94, {'value': '$92call_kw.9'}), (96, {'res': '$const96.10.2'}), (98, {'res': '$out098.11'}), (100, {'res': '$const100.12.0'}), (102, {'res': '$const102.13.3'}), (104, {'start': '$const100.12.0', 'end': '$const102.13.3', 'container': '$out098.11', 'value': '$const96.10.2', 'res': '$104store_slice.15', 'slicevar': '$104store_slice.14'}), (106, {'res': '$const106.16.2'}), (108, {'res': '$out0108.17'}), (110, {'res': '$const110.18.2'}), (112, {'res': '$const112.19.0'}), (114, {'start': '$const110.18.2', 'end': '$const112.19.0', 'container': '$out0108.17', 'value': '$const106.16.2', 'res': '$114store_slice.21', 'slicevar': '$114store_slice.20'}), (116, {'idx': 4, 'res': '$116load_global.22'}), (126, {'idx': 5, 'res': '$126load_global.24'}), (136, {'res': '$const136.26.2'}), (138, {'res': '$const138.27.4'}), (140, {'func': '$126load_global.24', 'args': ['$const136.26.2', '$const138.27.4'], 'kw_names': None, 'res': '$140call.28'}), (148, {'value': '$140call.28', 'res': '$148unary_negative.29'}), (150, {'res': '$full_shape0150.30'}), (152, {'res': '$const152.31.2'}), (154, {'index': '$const152.31.2', 'target': '$full_shape0150.30', 'res': '$154binary_subscr.32'}), (158, {'idx': 6, 'res': '$158load_global.33'}), (168, {'res': '$const168.35.2'}), (170, {'res': '$const170.36.2'}), (172, {'func': '$158load_global.33', 'args': ['$const168.35.2', '$const170.36.2'], 'kw_names': None, 'res': '$172call.37'}), (180, {'op': '-', 'lhs': '$154binary_subscr.32', 'rhs': '$172call.37', 'res': '$binop_sub180.38'}), (184, {'func': '$116load_global.22', 'args': ['$148unary_negative.29', '$binop_sub180.38'], 'kw_names': None, 'res': '$184call.39'}), (192, {'value': '$184call.39', 'res': '$192get_iter.40'})), outgoing_phis={'$phi194.0': '$192get_iter.40'}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$192get_iter.40',)})
2025-09-26 15:03:26,427 - DEBUG - block_infos State(pc_initial=194 nstack_initial=1):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.0', 'pair': '$194for_iter.1', 'indval': '$194for_iter.2', 'pred': '$194for_iter.3'}),), outgoing_phis={'$phi198.1': '$194for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={208: ('$phi194.0', '$194for_iter.2'), 198: ('$phi194.0', '$194for_iter.2')})
2025-09-26 15:03:26,427 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$const200.2.2'}), (202, {'value': '$const200.2.2'}), (204, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$phi198.0',)})
2025-09-26 15:03:26,428 - DEBUG - block_infos State(pc_initial=208 nstack_initial=2):
AdaptBlockInfo(insts=((212, {'res': '$out0212.2'}), (214, {'retval': '$out0212.2', 'castval': '$214return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:03:26,428 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$28load_global.2']
    $38load_attr.3 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.3']
    $60load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool) ['$60load_global.6', '$70load_attr.7']
    $const_dtype = const(str, dtype)         ['$const_dtype']
    $const90.8.1 = build_tuple(items=[Var($const_dtype, <string>:3)]) ['$const90.8.1', '$const_dtype']
    out0 = call $38load_attr.3(full_shape0, func=$38load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.3', '$70load_attr.7', 'full_shape0', 'out0']
    $const96.10.2 = const(int, 0)            ['$const96.10.2']
    $const100.12.0 = const(NoneType, None)   ['$const100.12.0']
    $const102.13.3 = const(int, 1)           ['$const102.13.3']
    $104store_slice.14 = global(slice: <class 'slice'>) ['$104store_slice.14']
    $104store_slice.15 = call $104store_slice.14($const100.12.0, $const102.13.3, func=$104store_slice.14, args=(Var($const100.12.0, <string>:4), Var($const102.13.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$104store_slice.14', '$104store_slice.15', '$const100.12.0', '$const102.13.3']
    out0[$104store_slice.15] = $const96.10.2 ['$104store_slice.15', '$const96.10.2', 'out0']
    $const106.16.2 = const(int, 0)           ['$const106.16.2']
    $const110.18.2 = const(int, 0)           ['$const110.18.2']
    $const112.19.0 = const(NoneType, None)   ['$const112.19.0']
    $114store_slice.20 = global(slice: <class 'slice'>) ['$114store_slice.20']
    $114store_slice.21 = call $114store_slice.20($const110.18.2, $const112.19.0, func=$114store_slice.20, args=(Var($const110.18.2, <string>:5), Var($const112.19.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$114store_slice.20', '$114store_slice.21', '$const110.18.2', '$const112.19.0']
    out0[$114store_slice.21] = $const106.16.2 ['$114store_slice.21', '$const106.16.2', 'out0']
    $116load_global.22 = global(range: <class 'range'>) ['$116load_global.22']
    $126load_global.24 = global(min: <built-in function min>) ['$126load_global.24']
    $const136.26.2 = const(int, 0)           ['$const136.26.2']
    $const138.27.4 = const(int, -1)          ['$const138.27.4']
    $140call.28 = call $126load_global.24($const136.26.2, $const138.27.4, func=$126load_global.24, args=[Var($const136.26.2, <string>:6), Var($const138.27.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_global.24', '$140call.28', '$const136.26.2', '$const138.27.4']
    $148unary_negative.29 = unary(fn=<built-in function neg>, value=$140call.28) ['$140call.28', '$148unary_negative.29']
    $const152.31.2 = const(int, 0)           ['$const152.31.2']
    $154binary_subscr.32 = getitem(value=full_shape0, index=$const152.31.2, fn=<built-in function getitem>) ['$154binary_subscr.32', '$const152.31.2', 'full_shape0']
    $158load_global.33 = global(max: <built-in function max>) ['$158load_global.33']
    $const168.35.2 = const(int, 0)           ['$const168.35.2']
    $const170.36.2 = const(int, 0)           ['$const170.36.2']
    $172call.37 = call $158load_global.33($const168.35.2, $const170.36.2, func=$158load_global.33, args=[Var($const168.35.2, <string>:6), Var($const170.36.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$158load_global.33', '$172call.37', '$const168.35.2', '$const170.36.2']
    $binop_sub180.38 = $154binary_subscr.32 - $172call.37 ['$154binary_subscr.32', '$172call.37', '$binop_sub180.38']
    $184call.39 = call $116load_global.22($148unary_negative.29, $binop_sub180.38, func=$116load_global.22, args=[Var($148unary_negative.29, <string>:6), Var($binop_sub180.38, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.22', '$148unary_negative.29', '$184call.39', '$binop_sub180.38']
    $192get_iter.40 = getiter(value=$184call.39) ['$184call.39', '$192get_iter.40']
    $phi194.0 = $192get_iter.40              ['$192get_iter.40', '$phi194.0']
    jump 194                                 []
label 194:
    $194for_iter.1 = iternext(value=$phi194.0) ['$194for_iter.1', '$phi194.0']
    $194for_iter.2 = pair_first(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.2']
    $194for_iter.3 = pair_second(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.3']
    $phi198.1 = $194for_iter.2               ['$194for_iter.2', '$phi198.1']
    branch $194for_iter.3, 198, 208          ['$194for_iter.3']
label 198:
    index00 = $phi198.1                      ['$phi198.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 194                                 []
label 208:
    $214return_value.3 = cast(value=out0)    ['$214return_value.3', 'out0']
    return $214return_value.3                ['$214return_value.3']

2025-09-26 15:03:26,452 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:03:26,452 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D0F6990>
2025-09-26 15:03:26,453 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:26,453 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:26,453 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:26,453 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:26,453 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,453 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:26,453 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,453 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:26,453 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:26,454 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:26,454 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,454 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:26,454 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:26,454 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:26,454 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:26,454 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,454 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:26,455 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:26,455 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:26,455 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:26,455 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:26,455 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,455 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:26,455 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:26,455 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:26,456 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:26,456 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:26,456 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,456 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:26,456 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:26,456 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:26,456 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:26,456 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:26,457 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:26,457 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,457 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:26,457 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,457 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:26,457 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:26,457 - DEBUG - on stmt: jump 194
2025-09-26 15:03:26,457 - DEBUG - ==== SSA block analysis pass on 194
2025-09-26 15:03:26,458 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D0F6990>
2025-09-26 15:03:26,458 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:26,458 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:26,458 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:26,458 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:26,458 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:26,458 - DEBUG - ==== SSA block analysis pass on 198
2025-09-26 15:03:26,458 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D0F6990>
2025-09-26 15:03:26,458 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:26,458 - DEBUG - on stmt: jump 208
2025-09-26 15:03:26,459 - DEBUG - ==== SSA block analysis pass on 414
2025-09-26 15:03:26,459 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D0F6990>
2025-09-26 15:03:26,459 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:26,459 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:26,459 - DEBUG - ==== SSA block analysis pass on 208
2025-09-26 15:03:26,459 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D0F6990>
2025-09-26 15:03:26,459 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:26,459 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:26,459 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:26,460 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:26,460 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:26,460 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,460 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,460 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:26,460 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:26,460 - DEBUG - ==== SSA block analysis pass on 209
2025-09-26 15:03:26,460 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D0F6990>
2025-09-26 15:03:26,461 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:26,461 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,461 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,461 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:26,461 - DEBUG - ==== SSA block analysis pass on 241
2025-09-26 15:03:26,461 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D0F6990>
2025-09-26 15:03:26,461 - DEBUG - on stmt: jump 251
2025-09-26 15:03:26,461 - DEBUG - ==== SSA block analysis pass on 253
2025-09-26 15:03:26,462 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D0F6990>
2025-09-26 15:03:26,462 - DEBUG - on stmt: jump 257
2025-09-26 15:03:26,462 - DEBUG - ==== SSA block analysis pass on 251
2025-09-26 15:03:26,462 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D0F6990>
2025-09-26 15:03:26,462 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:03:26,462 - DEBUG - on stmt: jump 257
2025-09-26 15:03:26,462 - DEBUG - ==== SSA block analysis pass on 257
2025-09-26 15:03:26,463 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D0F6990>
2025-09-26 15:03:26,463 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:26,463 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:03:26,463 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:26,463 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:26,463 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:26,464 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,464 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,464 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:26,464 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:26,464 - DEBUG - ==== SSA block analysis pass on 261
2025-09-26 15:03:26,464 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D0F6990>
2025-09-26 15:03:26,464 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:26,465 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,465 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,465 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:26,465 - DEBUG - ==== SSA block analysis pass on 289
2025-09-26 15:03:26,465 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D0F6990>
2025-09-26 15:03:26,465 - DEBUG - on stmt: jump 299
2025-09-26 15:03:26,465 - DEBUG - ==== SSA block analysis pass on 301
2025-09-26 15:03:26,465 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D0F6990>
2025-09-26 15:03:26,466 - DEBUG - on stmt: jump 305
2025-09-26 15:03:26,466 - DEBUG - ==== SSA block analysis pass on 299
2025-09-26 15:03:26,466 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D0F6990>
2025-09-26 15:03:26,466 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:26,466 - DEBUG - on stmt: jump 305
2025-09-26 15:03:26,466 - DEBUG - ==== SSA block analysis pass on 305
2025-09-26 15:03:26,466 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D0F6990>
2025-09-26 15:03:26,466 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,466 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,466 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:26,467 - DEBUG - ==== SSA block analysis pass on 309
2025-09-26 15:03:26,467 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D0F6990>
2025-09-26 15:03:26,467 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,467 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:26,467 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,467 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,467 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:26,467 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,468 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:26,468 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:26,468 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:26,468 - DEBUG - on stmt: jump 413
2025-09-26 15:03:26,468 - DEBUG - ==== SSA block analysis pass on 323
2025-09-26 15:03:26,468 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D0F6990>
2025-09-26 15:03:26,468 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,468 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:26,468 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,469 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,469 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:26,469 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,469 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:26,469 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:26,469 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:26,469 - DEBUG - on stmt: jump 413
2025-09-26 15:03:26,469 - DEBUG - ==== SSA block analysis pass on 413
2025-09-26 15:03:26,470 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D0F6990>
2025-09-26 15:03:26,470 - DEBUG - on stmt: jump 194
2025-09-26 15:03:26,470 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104store_slice.14.1': [(<numba.core.ir.Assign object at 0x000002985D0DE330>,
                                       0)],
             '$104store_slice.15.1': [(<numba.core.ir.Assign object at 0x000002985D0DE450>,
                                       0)],
             '$110pred': [(<numba.core.ir.Assign object at 0x000002985CE389B0>,
                           305)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x000002985CE54E30>,
                                    309)],
             '$114store_slice.20.1': [(<numba.core.ir.Assign object at 0x000002985D0DE990>,
                                       0)],
             '$114store_slice.21.1': [(<numba.core.ir.Assign object at 0x000002985D0DEAB0>,
                                       0)],
             '$116load_global.22.1': [(<numba.core.ir.Assign object at 0x000002985D0DEBD0>,
                                       0)],
             '$124load_attr.1': [(<numba.core.ir.Assign object at 0x000002985CE56570>,
                                  309)],
             '$126load_global.24.1': [(<numba.core.ir.Assign object at 0x000002985D0DECF0>,
                                       0)],
             '$140call.28.1': [(<numba.core.ir.Assign object at 0x000002985D0DF050>,
                                0)],
             '$148call.4': [(<numba.core.ir.Assign object at 0x000002985CE57CB0>,
                             309)],
             '$148unary_negative.29.1': [(<numba.core.ir.Assign object at 0x000002985D0DF170>,
                                          0)],
             '$154binary_subscr.32.1': [(<numba.core.ir.Assign object at 0x000002985D0DF470>,
                                         0)],
             '$156load_global.5': [(<numba.core.ir.Assign object at 0x000002985D0C5430>,
                                    309)],
             '$158load_global.33.1': [(<numba.core.ir.Assign object at 0x000002985D0DF590>,
                                       0)],
             '$166load_attr.6': [(<numba.core.ir.Assign object at 0x000002985D0C6B70>,
                                  309)],
             '$16unary_negative.4': [(<numba.core.ir.Assign object at 0x000002985CDEA1B0>,
                                      208)],
             '$172call.37.1': [(<numba.core.ir.Assign object at 0x000002985D0DF8F0>,
                                0)],
             '$184call.39.1': [(<numba.core.ir.Assign object at 0x000002985D0DFB30>,
                                0)],
             '$190call.9': [(<numba.core.ir.Assign object at 0x000002985D0C82F0>,
                             309)],
             '$192get_iter.40.1': [(<numba.core.ir.Assign object at 0x000002985D0DFC50>,
                                    0)],
             '$194for_iter.1.1': [(<numba.core.ir.Assign object at 0x000002985D0DF230>,
                                   194)],
             '$194for_iter.2.1': [(<numba.core.ir.Assign object at 0x000002985D0DFD70>,
                                   194)],
             '$194for_iter.3.1': [(<numba.core.ir.Assign object at 0x000002985D0DFE90>,
                                   194)],
             '$198compare_op.10': [(<numba.core.ir.Assign object at 0x000002985D0C9A30>,
                                    309)],
             '$202return_value.11': [(<numba.core.ir.Assign object at 0x000002985D0CB170>,
                                      309)],
             '$204load_global.0': [(<numba.core.ir.Assign object at 0x000002985D0CF650>,
                                    323)],
             '$214load_attr.1': [(<numba.core.ir.Assign object at 0x000002985D0D0DD0>,
                                  323)],
             '$214return_value.3.1': [(<numba.core.ir.Assign object at 0x000002985D0E44D0>,
                                       414)],
             '$238call.4': [(<numba.core.ir.Assign object at 0x000002985D0D2510>,
                             323)],
             '$246load_global.5': [(<numba.core.ir.Assign object at 0x000002985D0D3C50>,
                                    323)],
             '$24compare_op.6': [(<numba.core.ir.Assign object at 0x000002985CDEB8F0>,
                                  208)],
             '$256load_attr.6': [(<numba.core.ir.Assign object at 0x000002985D0D53D0>,
                                  323)],
             '$280call.9': [(<numba.core.ir.Assign object at 0x000002985D0D6B10>,
                             323)],
             '$288compare_op.10': [(<numba.core.ir.Assign object at 0x000002985D0D8290>,
                                    323)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x000002985D0DD5B0>,
                                     0)],
             '$28pred': [(<numba.core.ir.Assign object at 0x000002985CDF27B0>,
                          208)],
             '$292return_value.11': [(<numba.core.ir.Assign object at 0x000002985D0D99D0>,
                                      323)],
             '$34compare_op.2': [(<numba.core.ir.Assign object at 0x000002985CE48350>,
                                  209)],
             '$38load_attr.3.1': [(<numba.core.ir.Assign object at 0x000002985D0DD6D0>,
                                   0)],
             '$38pred': [(<numba.core.ir.Assign object at 0x000002985CE4B1D0>,
                          209)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x000002985D0DD8B0>,
                                     0)],
             '$64unary_negative.4': [(<numba.core.ir.Assign object at 0x000002985CE70170>,
                                      257)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x000002985D0DD9D0>,
                                   0)],
             '$72compare_op.6': [(<numba.core.ir.Assign object at 0x000002985CE718B0>,
                                  257)],
             '$76pred': [(<numba.core.ir.Assign object at 0x000002985CE98770>,
                          257)],
             '$82compare_op.2': [(<numba.core.ir.Assign object at 0x000002985CEB62D0>,
                                  261)],
             '$86pred': [(<numba.core.ir.Assign object at 0x000002985CE9D190>,
                          261)],
             '$binop_sub180.38.1': [(<numba.core.ir.Assign object at 0x000002985D0DFA10>,
                                     0)],
             '$bool110': [(<numba.core.ir.Assign object at 0x000002985CEA7230>,
                           305)],
             '$bool28': [(<numba.core.ir.Assign object at 0x000002985CDF1070>,
                          208)],
             '$bool38': [(<numba.core.ir.Assign object at 0x000002985CE49A90>,
                          209)],
             '$bool76': [(<numba.core.ir.Assign object at 0x000002985CE72FF0>,
                          257)],
             '$bool86': [(<numba.core.ir.Assign object at 0x000002985CEB7A10>,
                          261)],
             '$const100.12.0.1': [(<numba.core.ir.Assign object at 0x000002985D0DE0F0>,
                                   0)],
             '$const102.13.3.1': [(<numba.core.ir.Assign object at 0x000002985D0DE210>,
                                   0)],
             '$const106.16.2.1': [(<numba.core.ir.Assign object at 0x000002985D0DE570>,
                                   0)],
             '$const110.18.2.1': [(<numba.core.ir.Assign object at 0x000002985D0DE750>,
                                   0)],
             '$const112.19.0.1': [(<numba.core.ir.Assign object at 0x000002985D0DE870>,
                                   0)],
             '$const136.26.2.1': [(<numba.core.ir.Assign object at 0x000002985D0DEE10>,
                                   0)],
             '$const138.27.4.1': [(<numba.core.ir.Assign object at 0x000002985D0DEF30>,
                                   0)],
             '$const152.31.2.1': [(<numba.core.ir.Assign object at 0x000002985D0DF350>,
                                   0)],
             '$const168.35.2.1': [(<numba.core.ir.Assign object at 0x000002985D0DF6B0>,
                                   0)],
             '$const170.36.2.1': [(<numba.core.ir.Assign object at 0x000002985D0DF7D0>,
                                   0)],
             '$const54.1.2': [(<numba.core.ir.Assign object at 0x000002985CDC12B0>,
                               257)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x000002985D0A6750>,
                              208)],
             '$const90.8.1.1': [(<numba.core.ir.Assign object at 0x000002985D0DDC10>,
                                 0)],
             '$const96.10.2.1': [(<numba.core.ir.Assign object at 0x000002985D0DDF10>,
                                  0)],
             '$const_dtype.1': [(<numba.core.ir.Assign object at 0x000002985D0DDAF0>,
                                 0)],
             '$phi194.0.1': [(<numba.core.ir.Assign object at 0x000002985D0DD490>,
                              0)],
             '$phi198.1.1': [(<numba.core.ir.Assign object at 0x000002985D0DFF50>,
                              194)],
             '$phi32.0': [(<numba.core.ir.Assign object at 0x000002985CDF3EF0>,
                           208)],
             '$phi80.0': [(<numba.core.ir.Assign object at 0x000002985CE99EB0>,
                           257)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x000002985D0DD3D0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x000002985D0E40B0>,
                          198)],
             'out0': [(<numba.core.ir.Assign object at 0x000002985D0DDD30>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x000002985D0A86B0>,
                                208),
                               (<numba.core.ir.Assign object at 0x000002985D0DC830>,
                                257)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002985D0DD0D0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002985D0DCFB0>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x000002985D0A8710>, 208),
                    (<numba.core.ir.Assign object at 0x000002985CEA2450>, 251)],
             'x1': [(<numba.core.ir.Assign object at 0x000002985D0DC8F0>, 257),
                    (<numba.core.ir.Assign object at 0x000002985CEA4410>, 299)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002985D0DD1F0>,
                           0)]})
2025-09-26 15:03:26,479 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002985D0F6990>
2025-09-26 15:03:26,480 - DEBUG - Fix SSA violator on var stencil_index
2025-09-26 15:03:26,480 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:26,480 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB350>
2025-09-26 15:03:26,480 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:26,480 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:26,480 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:26,480 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:26,480 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,480 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:26,481 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,481 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:26,481 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:26,481 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:26,481 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,481 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:26,481 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:26,481 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:26,481 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:26,482 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,482 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:26,482 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:26,482 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:26,482 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:26,482 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:26,482 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,482 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:26,483 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:26,483 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:26,483 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:26,483 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:26,483 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,483 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:26,483 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:26,483 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:26,483 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:26,484 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:26,484 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:26,484 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,484 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:26,484 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,484 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:26,484 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:26,484 - DEBUG - on stmt: jump 194
2025-09-26 15:03:26,485 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:26,485 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB350>
2025-09-26 15:03:26,485 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:26,485 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:26,485 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:26,485 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:26,485 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:26,485 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:26,486 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB350>
2025-09-26 15:03:26,486 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:26,486 - DEBUG - on stmt: jump 208
2025-09-26 15:03:26,486 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:26,486 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB350>
2025-09-26 15:03:26,486 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:26,486 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:26,486 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:26,486 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB350>
2025-09-26 15:03:26,487 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:26,487 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:26,487 - DEBUG - first assign: stencil_index
2025-09-26 15:03:26,487 - DEBUG - replaced with: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:26,487 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:26,487 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:26,487 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:26,488 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,488 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,488 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:26,488 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:26,488 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:26,488 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB350>
2025-09-26 15:03:26,488 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:26,489 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,489 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,489 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:26,489 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:26,489 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB350>
2025-09-26 15:03:26,489 - DEBUG - on stmt: jump 251
2025-09-26 15:03:26,489 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:26,489 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB350>
2025-09-26 15:03:26,490 - DEBUG - on stmt: jump 257
2025-09-26 15:03:26,490 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:26,490 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB350>
2025-09-26 15:03:26,490 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:03:26,490 - DEBUG - on stmt: jump 257
2025-09-26 15:03:26,490 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:26,490 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB350>
2025-09-26 15:03:26,490 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:26,491 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:03:26,491 - DEBUG - replaced with: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:26,491 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:26,491 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:26,491 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:26,491 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,491 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,491 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:26,491 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:26,492 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:26,492 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB350>
2025-09-26 15:03:26,492 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:26,492 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,492 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,492 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:26,492 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:26,492 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB350>
2025-09-26 15:03:26,492 - DEBUG - on stmt: jump 299
2025-09-26 15:03:26,492 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:26,493 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB350>
2025-09-26 15:03:26,493 - DEBUG - on stmt: jump 305
2025-09-26 15:03:26,493 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:26,493 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB350>
2025-09-26 15:03:26,493 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:26,493 - DEBUG - on stmt: jump 305
2025-09-26 15:03:26,493 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:26,493 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB350>
2025-09-26 15:03:26,494 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,494 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,494 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:26,494 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:26,494 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB350>
2025-09-26 15:03:26,494 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,494 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:26,494 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,495 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,495 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:26,495 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,495 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:26,495 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:26,495 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:26,495 - DEBUG - on stmt: jump 413
2025-09-26 15:03:26,495 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:26,495 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB350>
2025-09-26 15:03:26,496 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,496 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:26,496 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,496 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,496 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:26,496 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,496 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:26,496 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:26,496 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:26,497 - DEBUG - on stmt: jump 413
2025-09-26 15:03:26,497 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:26,497 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB350>
2025-09-26 15:03:26,497 - DEBUG - on stmt: jump 194
2025-09-26 15:03:26,497 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002985D101AF0>],
             257: [<numba.core.ir.Assign object at 0x000002985D101D90>]})
2025-09-26 15:03:26,497 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:26,497 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB650>
2025-09-26 15:03:26,497 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:26,497 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:26,498 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:26,498 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:26,498 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,498 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:26,498 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,498 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:26,498 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:26,498 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:26,499 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,499 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:26,499 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:26,499 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:26,499 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:26,499 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,499 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:26,499 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:26,500 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:26,500 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:26,500 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:26,500 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,500 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:26,500 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:26,500 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:26,500 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:26,501 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:26,501 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,501 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:26,501 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:26,501 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:26,501 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:26,501 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:26,502 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:26,502 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,502 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:26,502 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,502 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:26,502 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:26,502 - DEBUG - on stmt: jump 194
2025-09-26 15:03:26,502 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:26,503 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB650>
2025-09-26 15:03:26,503 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:26,503 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:26,503 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:26,503 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:26,503 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:26,504 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:26,504 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB650>
2025-09-26 15:03:26,504 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:26,504 - DEBUG - on stmt: jump 208
2025-09-26 15:03:26,504 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:26,504 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB650>
2025-09-26 15:03:26,504 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:26,504 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:26,504 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:26,505 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB650>
2025-09-26 15:03:26,505 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:26,505 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:26,505 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:26,505 - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:26,505 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:26,505 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:26,505 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,505 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,506 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:26,506 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:26,506 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:26,506 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB650>
2025-09-26 15:03:26,506 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:26,506 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,506 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,506 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:26,506 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:26,507 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB650>
2025-09-26 15:03:26,507 - DEBUG - on stmt: jump 251
2025-09-26 15:03:26,507 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:26,507 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB650>
2025-09-26 15:03:26,507 - DEBUG - on stmt: jump 257
2025-09-26 15:03:26,507 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:26,507 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB650>
2025-09-26 15:03:26,507 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:03:26,507 - DEBUG - on stmt: jump 257
2025-09-26 15:03:26,507 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:26,508 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB650>
2025-09-26 15:03:26,508 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:26,508 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:26,508 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:26,508 - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:26,508 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:26,508 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:26,509 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:26,509 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,509 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,509 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:26,509 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:26,509 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:26,509 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB650>
2025-09-26 15:03:26,509 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:26,510 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,510 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,510 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:26,510 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:26,510 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB650>
2025-09-26 15:03:26,510 - DEBUG - on stmt: jump 299
2025-09-26 15:03:26,510 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:26,510 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB650>
2025-09-26 15:03:26,510 - DEBUG - on stmt: jump 305
2025-09-26 15:03:26,510 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:26,511 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB650>
2025-09-26 15:03:26,511 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:26,511 - DEBUG - on stmt: jump 305
2025-09-26 15:03:26,511 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:26,511 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB650>
2025-09-26 15:03:26,511 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,511 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,511 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:26,511 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:26,511 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB650>
2025-09-26 15:03:26,512 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,512 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:26,512 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,512 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,512 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:26,512 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,512 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:26,513 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:26,513 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:26,513 - DEBUG - on stmt: jump 413
2025-09-26 15:03:26,513 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:26,513 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB650>
2025-09-26 15:03:26,513 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,513 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:26,513 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,514 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,514 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:26,514 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,514 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:26,514 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:26,514 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:26,514 - DEBUG - on stmt: jump 413
2025-09-26 15:03:26,515 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:26,515 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB650>
2025-09-26 15:03:26,515 - DEBUG - on stmt: jump 194
2025-09-26 15:03:26,515 - DEBUG - Fix SSA violator on var x0
2025-09-26 15:03:26,515 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:26,515 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB590>
2025-09-26 15:03:26,515 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:26,515 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:26,516 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:26,516 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:26,516 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,516 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:26,516 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,516 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:26,516 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:26,517 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:26,517 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,517 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:26,517 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:26,517 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:26,517 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:26,518 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,518 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:26,518 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:26,518 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:26,518 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:26,518 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:26,518 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,519 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:26,519 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:26,519 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:26,519 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:26,519 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:26,519 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,519 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:26,519 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:26,519 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:26,520 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:26,520 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:26,520 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:26,520 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,520 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:26,520 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,520 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:26,520 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:26,521 - DEBUG - on stmt: jump 194
2025-09-26 15:03:26,521 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:26,521 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB590>
2025-09-26 15:03:26,521 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:26,521 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:26,521 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:26,521 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:26,521 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:26,521 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:26,521 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB590>
2025-09-26 15:03:26,522 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:26,522 - DEBUG - on stmt: jump 208
2025-09-26 15:03:26,522 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:26,522 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB590>
2025-09-26 15:03:26,522 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:26,522 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:26,522 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:26,522 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB590>
2025-09-26 15:03:26,522 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:26,522 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:26,523 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:26,523 - DEBUG - first assign: x0
2025-09-26 15:03:26,523 - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:26,523 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:26,523 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:26,523 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,523 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,523 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:26,524 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:26,524 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:26,524 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB590>
2025-09-26 15:03:26,524 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:26,524 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,524 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,524 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:26,524 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:26,524 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB590>
2025-09-26 15:03:26,525 - DEBUG - on stmt: jump 251
2025-09-26 15:03:26,525 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:26,525 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB590>
2025-09-26 15:03:26,525 - DEBUG - on stmt: jump 257
2025-09-26 15:03:26,525 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:26,525 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB590>
2025-09-26 15:03:26,525 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:03:26,525 - DEBUG - replaced with: x0.1 = const(int, 0)
2025-09-26 15:03:26,525 - DEBUG - on stmt: jump 257
2025-09-26 15:03:26,525 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:26,526 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB590>
2025-09-26 15:03:26,526 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:26,526 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:26,526 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:26,526 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:26,526 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:26,526 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,526 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,526 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:26,527 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:26,527 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:26,527 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB590>
2025-09-26 15:03:26,527 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:26,527 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,527 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,527 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:26,528 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:26,528 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB590>
2025-09-26 15:03:26,528 - DEBUG - on stmt: jump 299
2025-09-26 15:03:26,528 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:26,528 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB590>
2025-09-26 15:03:26,528 - DEBUG - on stmt: jump 305
2025-09-26 15:03:26,528 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:26,529 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB590>
2025-09-26 15:03:26,529 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:26,529 - DEBUG - on stmt: jump 305
2025-09-26 15:03:26,529 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:26,529 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB590>
2025-09-26 15:03:26,529 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,529 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,529 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:26,530 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:26,530 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB590>
2025-09-26 15:03:26,530 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,530 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:26,530 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,530 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,530 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:26,531 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,531 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:26,531 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:26,531 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:26,531 - DEBUG - on stmt: jump 413
2025-09-26 15:03:26,531 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:26,531 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB590>
2025-09-26 15:03:26,531 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,531 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:26,532 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,532 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,532 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:26,532 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,532 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:26,532 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:26,532 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:26,532 - DEBUG - on stmt: jump 413
2025-09-26 15:03:26,532 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:26,532 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CBEB590>
2025-09-26 15:03:26,533 - DEBUG - on stmt: jump 194
2025-09-26 15:03:26,533 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002985D101EB0>],
             251: [<numba.core.ir.Assign object at 0x000002985D101BB0>]})
2025-09-26 15:03:26,533 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:26,533 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB350>
2025-09-26 15:03:26,533 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:26,533 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:26,533 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:26,534 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:26,534 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,534 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:26,534 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,534 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:26,534 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:26,534 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:26,534 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,534 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:26,535 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:26,535 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:26,535 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:26,535 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,535 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:26,535 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:26,535 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:26,535 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:26,535 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:26,536 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,536 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:26,536 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:26,536 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:26,536 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:26,536 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:26,536 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,536 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:26,537 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:26,537 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:26,537 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:26,537 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:26,537 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:26,537 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,537 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:26,537 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,537 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:26,538 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:26,538 - DEBUG - on stmt: jump 194
2025-09-26 15:03:26,538 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:26,538 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB350>
2025-09-26 15:03:26,538 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:26,538 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:26,538 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:26,538 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:26,538 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:26,539 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:26,539 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB350>
2025-09-26 15:03:26,539 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:26,539 - DEBUG - on stmt: jump 208
2025-09-26 15:03:26,539 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:26,539 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB350>
2025-09-26 15:03:26,539 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:26,539 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:26,539 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:26,540 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB350>
2025-09-26 15:03:26,540 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:26,540 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:26,540 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:26,540 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:26,540 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:26,540 - DEBUG - find_def var='x0' stmt=$24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:26,540 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,541 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,541 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:26,541 - DEBUG - find_def var='x0' stmt=$phi32.0 = x0
2025-09-26 15:03:26,541 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:26,541 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:26,541 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB350>
2025-09-26 15:03:26,541 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:26,542 - DEBUG - find_def var='x0' stmt=$34compare_op.2 = x0 <= threshold
2025-09-26 15:03:26,542 - DEBUG - find_def_from_top label 209
2025-09-26 15:03:26,542 - DEBUG - idom 208 from label 209
2025-09-26 15:03:26,542 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:03:26,542 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,542 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,542 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:26,542 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:26,542 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB350>
2025-09-26 15:03:26,543 - DEBUG - on stmt: jump 251
2025-09-26 15:03:26,543 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:26,543 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB350>
2025-09-26 15:03:26,543 - DEBUG - on stmt: jump 257
2025-09-26 15:03:26,543 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:26,543 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB350>
2025-09-26 15:03:26,544 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:03:26,544 - DEBUG - on stmt: jump 257
2025-09-26 15:03:26,544 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:26,544 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB350>
2025-09-26 15:03:26,544 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:26,544 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:26,544 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:26,545 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:26,545 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:26,545 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,545 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,545 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:26,545 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:26,545 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:26,545 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB350>
2025-09-26 15:03:26,545 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:26,546 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,546 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,546 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:26,546 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:26,546 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB350>
2025-09-26 15:03:26,546 - DEBUG - on stmt: jump 299
2025-09-26 15:03:26,546 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:26,546 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB350>
2025-09-26 15:03:26,547 - DEBUG - on stmt: jump 305
2025-09-26 15:03:26,547 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:26,547 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB350>
2025-09-26 15:03:26,547 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:26,547 - DEBUG - on stmt: jump 305
2025-09-26 15:03:26,547 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:26,547 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB350>
2025-09-26 15:03:26,547 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,547 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,548 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:26,548 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:26,548 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB350>
2025-09-26 15:03:26,548 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,548 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:26,548 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,548 - DEBUG - find_def var='x0' stmt=$148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,548 - DEBUG - find_def_from_top label 309
2025-09-26 15:03:26,549 - DEBUG - idom 305 from label 309
2025-09-26 15:03:26,549 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:03:26,549 - DEBUG - find_def_from_top label 305
2025-09-26 15:03:26,549 - DEBUG - idom 257 from label 305
2025-09-26 15:03:26,549 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:26,549 - DEBUG - find_def_from_top label 257
2025-09-26 15:03:26,549 - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 257
2025-09-26 15:03:26,549 - DEBUG - find_def_from_bottom label 209
2025-09-26 15:03:26,550 - DEBUG - find_def_from_top label 209
2025-09-26 15:03:26,550 - DEBUG - idom 208 from label 209
2025-09-26 15:03:26,550 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:03:26,550 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:26,550 - DEBUG - find_def_from_bottom label 251
2025-09-26 15:03:26,550 - DEBUG - incoming_def x0.1 = const(int, 0)
2025-09-26 15:03:26,550 - DEBUG - find_def_from_bottom label 253
2025-09-26 15:03:26,550 - DEBUG - find_def_from_top label 253
2025-09-26 15:03:26,551 - DEBUG - idom 208 from label 253
2025-09-26 15:03:26,551 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:03:26,551 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:26,551 - DEBUG - replaced with: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,551 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,551 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:26,551 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,551 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:26,552 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:26,552 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:26,552 - DEBUG - on stmt: jump 413
2025-09-26 15:03:26,552 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:26,552 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB350>
2025-09-26 15:03:26,552 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,552 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:26,552 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,552 - DEBUG - find_def var='x0' stmt=$238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,553 - DEBUG - find_def_from_top label 323
2025-09-26 15:03:26,553 - DEBUG - idom 305 from label 323
2025-09-26 15:03:26,553 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:03:26,553 - DEBUG - find_def_from_top label 305
2025-09-26 15:03:26,553 - DEBUG - idom 257 from label 305
2025-09-26 15:03:26,553 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:26,553 - DEBUG - replaced with: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,554 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,554 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:26,554 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,554 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:26,554 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:26,554 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:26,555 - DEBUG - on stmt: jump 413
2025-09-26 15:03:26,555 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:26,555 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CBEB350>
2025-09-26 15:03:26,555 - DEBUG - on stmt: jump 194
2025-09-26 15:03:26,555 - DEBUG - Fix SSA violator on var x1
2025-09-26 15:03:26,555 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:26,555 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,556 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:26,556 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:26,556 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:26,556 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:26,556 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,556 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:26,556 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,556 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:26,557 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:26,557 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:26,557 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,557 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:26,557 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:26,557 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:26,557 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:26,558 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,558 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:26,558 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:26,558 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:26,558 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:26,558 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:26,558 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,559 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:26,559 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:26,559 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:26,559 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:26,559 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:26,559 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,559 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:26,559 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:26,560 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:26,560 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:26,560 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:26,560 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:26,560 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,560 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:26,560 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,560 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:26,560 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:26,561 - DEBUG - on stmt: jump 194
2025-09-26 15:03:26,561 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:26,561 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,561 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:26,561 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:26,561 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:26,561 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:26,561 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:26,561 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:26,561 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,562 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:26,562 - DEBUG - on stmt: jump 208
2025-09-26 15:03:26,562 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:26,562 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,562 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:26,562 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:26,562 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:26,562 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,562 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:26,562 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:26,563 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:26,563 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:26,563 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:26,563 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,563 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,563 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:26,563 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:26,563 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:26,564 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,564 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:26,564 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,564 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,564 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:26,564 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:26,564 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,564 - DEBUG - on stmt: jump 251
2025-09-26 15:03:26,564 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:26,565 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,565 - DEBUG - on stmt: jump 257
2025-09-26 15:03:26,565 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:26,565 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,565 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:03:26,565 - DEBUG - on stmt: jump 257
2025-09-26 15:03:26,565 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:26,565 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,565 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:03:26,566 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:26,566 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:26,566 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:26,566 - DEBUG - first assign: x1
2025-09-26 15:03:26,566 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:26,566 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:26,566 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:26,566 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,566 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,566 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:26,567 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:26,567 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:26,567 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,567 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:26,567 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,567 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,567 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:26,568 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:26,568 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,568 - DEBUG - on stmt: jump 299
2025-09-26 15:03:26,568 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:26,568 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,568 - DEBUG - on stmt: jump 305
2025-09-26 15:03:26,568 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:26,569 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,569 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:26,569 - DEBUG - replaced with: x1.1 = const(int, 0)
2025-09-26 15:03:26,569 - DEBUG - on stmt: jump 305
2025-09-26 15:03:26,569 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:26,569 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,569 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,570 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,570 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:26,570 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:26,570 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,570 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,571 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:26,571 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,571 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,571 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:26,571 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,571 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:26,571 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:26,571 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:26,572 - DEBUG - on stmt: jump 413
2025-09-26 15:03:26,572 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:26,572 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,572 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,572 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:26,572 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,572 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,573 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:26,573 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,573 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:26,573 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:26,573 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:26,573 - DEBUG - on stmt: jump 413
2025-09-26 15:03:26,574 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:26,574 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,574 - DEBUG - on stmt: jump 194
2025-09-26 15:03:26,574 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {257: [<numba.core.ir.Assign object at 0x000002985D101FD0>],
             299: [<numba.core.ir.Assign object at 0x000002985D101F70>]})
2025-09-26 15:03:26,574 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:26,574 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,575 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:26,575 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:26,575 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:26,575 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:26,575 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,575 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:26,575 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,576 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:26,576 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:26,576 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:26,576 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,576 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:26,576 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:26,576 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:26,576 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:26,576 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,577 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:26,577 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:26,577 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:26,577 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:26,577 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:26,577 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,577 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:26,577 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:26,578 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:26,578 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:26,578 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:26,578 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,578 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:26,578 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:26,578 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:26,578 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:26,579 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:26,579 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:26,579 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,579 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:26,579 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,579 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:26,579 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:26,580 - DEBUG - on stmt: jump 194
2025-09-26 15:03:26,580 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:26,580 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,580 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:26,580 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:26,580 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:26,581 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:26,581 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:26,581 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:26,581 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,581 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:26,581 - DEBUG - on stmt: jump 208
2025-09-26 15:03:26,581 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:26,582 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,582 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:26,582 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:26,582 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:26,582 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,582 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:26,582 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:26,583 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:26,583 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:26,583 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:26,583 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,583 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,583 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:26,584 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:26,584 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:26,584 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,584 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:26,584 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,584 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,585 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:26,585 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:26,585 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,585 - DEBUG - on stmt: jump 251
2025-09-26 15:03:26,585 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:26,585 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,585 - DEBUG - on stmt: jump 257
2025-09-26 15:03:26,585 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:26,585 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,585 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:03:26,586 - DEBUG - on stmt: jump 257
2025-09-26 15:03:26,586 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:26,586 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,586 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:03:26,586 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:26,586 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:26,586 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:26,586 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:26,586 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:26,587 - DEBUG - find_def var='x1' stmt=$72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:26,587 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,587 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,587 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:26,587 - DEBUG - find_def var='x1' stmt=$phi80.0 = x1
2025-09-26 15:03:26,587 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:26,587 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:26,587 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,588 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:26,588 - DEBUG - find_def var='x1' stmt=$82compare_op.2 = x1 <= threshold
2025-09-26 15:03:26,588 - DEBUG - find_def_from_top label 261
2025-09-26 15:03:26,588 - DEBUG - idom 257 from label 261
2025-09-26 15:03:26,588 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:26,588 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,588 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,588 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:26,589 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:26,589 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,589 - DEBUG - on stmt: jump 299
2025-09-26 15:03:26,589 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:26,589 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,589 - DEBUG - on stmt: jump 305
2025-09-26 15:03:26,589 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:26,589 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,589 - DEBUG - on stmt: x1.1 = const(int, 0)
2025-09-26 15:03:26,589 - DEBUG - on stmt: jump 305
2025-09-26 15:03:26,590 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:26,590 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,590 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:26,590 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,590 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:26,590 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:26,590 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,590 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,590 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:26,591 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,591 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,591 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:26,591 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,591 - DEBUG - find_def var='x1' stmt=$190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,591 - DEBUG - find_def_from_top label 309
2025-09-26 15:03:26,591 - DEBUG - idom 305 from label 309
2025-09-26 15:03:26,591 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:03:26,591 - DEBUG - find_def_from_top label 305
2025-09-26 15:03:26,592 - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 305
2025-09-26 15:03:26,592 - DEBUG - find_def_from_bottom label 299
2025-09-26 15:03:26,592 - DEBUG - incoming_def x1.1 = const(int, 0)
2025-09-26 15:03:26,592 - DEBUG - find_def_from_bottom label 301
2025-09-26 15:03:26,592 - DEBUG - find_def_from_top label 301
2025-09-26 15:03:26,592 - DEBUG - idom 257 from label 301
2025-09-26 15:03:26,592 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:26,592 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:26,592 - DEBUG - find_def_from_bottom label 261
2025-09-26 15:03:26,593 - DEBUG - find_def_from_top label 261
2025-09-26 15:03:26,593 - DEBUG - idom 257 from label 261
2025-09-26 15:03:26,593 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:26,593 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:26,593 - DEBUG - replaced with: $190call.9 = call $166load_attr.6(x1.2, func=$166load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,593 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:26,594 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:26,594 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:26,594 - DEBUG - on stmt: jump 413
2025-09-26 15:03:26,594 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:26,594 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,594 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,594 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:26,595 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,595 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:26,595 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:26,595 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,595 - DEBUG - find_def var='x1' stmt=$280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,595 - DEBUG - find_def_from_top label 323
2025-09-26 15:03:26,596 - DEBUG - idom 305 from label 323
2025-09-26 15:03:26,596 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:03:26,596 - DEBUG - replaced with: $280call.9 = call $256load_attr.6(x1.2, func=$256load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:26,596 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:26,596 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:26,596 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:26,596 - DEBUG - on stmt: jump 413
2025-09-26 15:03:26,597 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:26,597 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CF9FCD0>
2025-09-26 15:03:26,597 - DEBUG - on stmt: jump 194
2025-09-26 15:03:26,612 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с librosa: 'function' object has no attribute 'get_call_template'
2025-09-26 15:03:26,618 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 15:03:26,619 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 15:03:26,619 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\test_speech.mp3'>)))], 'idempotency_key': 'stainless-python-retry-c61ca118-52d8-435e-863b-1c21fa1b59b9', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:03:26,620 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:26,620 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:26,621 - DEBUG - send_request_headers.complete
2025-09-26 15:03:26,621 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:26,622 - DEBUG - send_request_body.complete
2025-09-26 15:03:26,622 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:27,289 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:27 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'453'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'466'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_f58bf4c52acd9e26a85e8566d98faa6b'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529e3b98a38d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:27,290 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:27,290 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:27,290 - DEBUG - receive_response_body.complete
2025-09-26 15:03:27,291 - DEBUG - response_closed.started
2025-09-26 15:03:27,291 - DEBUG - response_closed.complete
2025-09-26 15:03:27,291 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:27 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '453', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '466', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_f58bf4c52acd9e26a85e8566d98faa6b', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529e3b98a38d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:27,291 - DEBUG - request_id: req_f58bf4c52acd9e26a85e8566d98faa6b
2025-09-26 15:03:27,292 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Привет, наконец-то это случилось.'
2025-09-26 15:03:27,292 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:03:27,292 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Привет, наконец-то это случилось.'
2025-09-26 15:03:27,293 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: 'Привет, наконец-то это случилось.' (длина: 33)
2025-09-26 15:03:27,293 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 4 - музыкальный промпт
2025-09-26 15:03:27,293 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\test_speech.mp3'>)))], 'idempotency_key': 'stainless-python-retry-0a24bf8d-55e2-455c-8503-ca6ddcb8db16', 'json_data': {'model': 'gpt-4o-transcribe', 'prompt': 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.', 'response_format': 'text'}}
2025-09-26 15:03:27,294 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:27,294 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:27,294 - DEBUG - send_request_headers.complete
2025-09-26 15:03:27,295 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:27,295 - DEBUG - send_request_body.complete
2025-09-26 15:03:27,296 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:28,112 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:28 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'554'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'576'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_34e47d4c63844934b42d733497688795'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529e3fce438d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:28,113 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:28,113 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:28,113 - DEBUG - receive_response_body.complete
2025-09-26 15:03:28,114 - DEBUG - response_closed.started
2025-09-26 15:03:28,114 - DEBUG - response_closed.complete
2025-09-26 15:03:28,114 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:28 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '554', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '576', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_34e47d4c63844934b42d733497688795', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529e3fce438d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:28,114 - DEBUG - request_id: req_34e47d4c63844934b42d733497688795
2025-09-26 15:03:28,115 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Привет, наконец-то это случилось.'
2025-09-26 15:03:28,115 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.'
2025-09-26 15:03:28,115 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Привет, наконец-то это случилось.'
2025-09-26 15:03:28,115 - DEBUG - ТРАНСКРИПЦИЯ: Результат музыкального промпта: 'Привет, наконец-то это случилось.' (длина: 33)
2025-09-26 15:03:28,115 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 5 - английский язык с музыкальным промптом
2025-09-26 15:03:28,116 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\test_speech.mp3'>)))], 'idempotency_key': 'stainless-python-retry-96c9d6be-9412-4da0-8cd5-95a9abf98ee9', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'en', 'prompt': 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.', 'response_format': 'text'}}
2025-09-26 15:03:28,117 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:28,117 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:28,117 - DEBUG - send_request_headers.complete
2025-09-26 15:03:28,117 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:28,118 - DEBUG - send_request_body.complete
2025-09-26 15:03:28,118 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:29,269 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:29 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'907'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'917'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_0b9ea655adc54793ab5f9aa945f503e9'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529e44ecb08d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:29,270 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:29,270 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:29,270 - DEBUG - receive_response_body.complete
2025-09-26 15:03:29,270 - DEBUG - response_closed.started
2025-09-26 15:03:29,271 - DEBUG - response_closed.complete
2025-09-26 15:03:29,271 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:29 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '907', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '917', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_0b9ea655adc54793ab5f9aa945f503e9', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529e44ecb08d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:29,271 - DEBUG - request_id: req_0b9ea655adc54793ab5f9aa945f503e9
2025-09-26 15:03:29,272 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Привет, наконец-то это случилось.'
2025-09-26 15:03:29,272 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.'
2025-09-26 15:03:29,272 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Привет, наконец-то это случилось.'
2025-09-26 15:03:29,273 - DEBUG - ТРАНСКРИПЦИЯ: Результат английского музыкального промпта: 'Привет, наконец-то это случилось.' (длина: 33)
2025-09-26 15:03:29,273 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Привет, наконец-то это случилось.'
2025-09-26 15:03:29,273 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:03:29,273 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Привет, наконец-то это случилось.'
2025-09-26 15:03:29,274 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\test_speech.mp3'>)))], 'idempotency_key': 'stainless-python-retry-e57137ba-1c3b-40c9-98e0-e630cdedccfa', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:03:29,275 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:29,275 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:29,275 - DEBUG - send_request_headers.complete
2025-09-26 15:03:29,276 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:29,277 - DEBUG - send_request_body.complete
2025-09-26 15:03:29,277 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:29,935 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:29 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'434'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'452'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_60bebd675a5f4e16bf45bfa25b5c60db'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529e4c2d8e8d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:29,936 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:29,936 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:29,937 - DEBUG - receive_response_body.complete
2025-09-26 15:03:29,937 - DEBUG - response_closed.started
2025-09-26 15:03:29,937 - DEBUG - response_closed.complete
2025-09-26 15:03:29,937 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:29 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '434', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '452', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_60bebd675a5f4e16bf45bfa25b5c60db', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529e4c2d8e8d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:29,938 - DEBUG - request_id: req_60bebd675a5f4e16bf45bfa25b5c60db
2025-09-26 15:03:29,938 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Привет, наконец-то это случилось.'
2025-09-26 15:03:29,938 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:03:29,938 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Привет, наконец-то это случилось.'
2025-09-26 15:03:29,939 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-fdd7db52-efdc-4447-acf9-0a80307d2fca', 'json_data': {'messages': [{'role': 'system', 'content': 'Ты — специализированная система для анализа аудиозаписей.\nТвоя единственная задача — классифицировать входной аудиофайл в одну из категорий: музыка, речь, шум.\n\nВАЖНО: Ты анализируешь РЕЗУЛЬТАТ ТРАНСКРИПЦИИ аудиофайла, а не сам аудиофайл. Это означает, что:\n- Если в аудио была музыка с вокалом, то в транскрипции будут слова песни\n- Если в аудио была речь, то в транскрипции будет связный текст\n- Если в аудио был шум, то в транскрипции будет мало слов или галлюцинации\n\nКатегории классификации:\n\nМузыка (music):\n- Это песня, музыкальная композиция с вокалом\n- Характерные признаки в транскрипции:\n  * Повторяющиеся фразы или слова (припев)\n  * Рифмы и ритмические паттерны\n  * Музыкальные звуки: "ла-ла-ла", "на-на-на", "о-о-о", "а-а-а"\n  * Эмоциональные восклицания: "Ауф!", "Ой!", "Ах!"\n  * Короткие фразы без логической связи\n  * Слова, которые звучат как песня, а не как обычная речь\n  * Повторяющиеся слова или фразы (припев песни)\n  * Ритмические паттерны в тексте\n\nРечь (speech):\n- Это обычная речь, разговор, диалог\n- Характерные признаки в транскрипции:\n  * Связные предложения с логической структурой\n  * Обычные слова и фразы\n  * Знаки препинания: точки, запятые, восклицательные знаки\n  * Логическая последовательность мыслей\n  * Отсутствие повторяющихся музыкальных паттернов\n  * Естественная речь без ритма\n\nШум (noise):\n- Это неречевые звуки, шум, техника, плач ребенка\n- Характерные признаки в транскрипции:\n  * Очень короткие или бессмысленные фрагменты\n  * Отсутствие связной речи\n  * Случайные слова или звуки\n  * Описания звуков: "[Music]", "[звук]", "[шум]"\n  * Повторяющиеся гласные: "ааа", "ууу", "ооо" (детский плач)\n  * Бессмысленные фразы: "Всем новичкам, всем новичкам"\n  * Короткие бессвязные слова\n\nПравила классификации:\n1. Если транскрипция содержит связную речь с логической структурой → speech\n2. Если транскрипция содержит повторяющиеся фразы, рифмы, музыкальные звуки → music\n3. Если транскрипция короткая, бессвязная или содержит описания звуков → noise\n4. При сомнениях между music и speech: если есть повторения или музыкальные звуки → music\n5. Детский плач (ааа, ууу, ооо) → noise\n6. Белый шум с бессмысленными словами → noise\n\nВАЖНЫЕ ПРИМЕРЫ:\n- "Скажи мне, не говори мне, что ты гонишь" → music (песня с повторениями)\n- "Привет, как дела?" → speech (обычная речь)\n- "Ааааааа" → noise (детский плач)\n- "Всем новичкам, всем новичкам" → noise (белый шум)\n- "Find me, find me, You can find" → music (песня с припевом)\n\nФормат ответа:\nОтвечай только в формате JSON, без лишнего текста:\n{\n  "classification": "music | speech | noise",\n  "confidence": 0.0-1.0,\n  "reasoning": "Краткое объяснение выбора: какие признаки были решающими"\n}\n\nОграничения:\n- Не добавляй ничего, кроме JSON\n- Не предлагай альтернативных категорий\n- Всегда возвращай одно значение в поле "classification"\n- Уровень уверенности (confidence) должен отражать баланс признаков:\n  * 0.9–1.0 → очень высокая уверенность\n  * 0.6–0.89 → умеренная уверенность\n  * <0.6 → низкая уверенность, признаки неоднозначны'}, {'role': 'user', 'content': 'Проанализируй следующий транскрипт аудио и классифицируй его:\n\nПривет, наконец-то это случилось.'}], 'model': 'gpt-4o-mini', 'max_tokens': 200, 'temperature': 0.1}}
2025-09-26 15:03:29,940 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-26 15:03:29,941 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:29,941 - DEBUG - send_request_headers.complete
2025-09-26 15:03:29,941 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:29,941 - DEBUG - send_request_body.complete
2025-09-26 15:03:29,942 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:32,229 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1332'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1525'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'198675'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'397ms'), (b'x-request-id', b'req_d4fb0cc8fffb4dac99513521504b7c52'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529e505b508d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:32,229 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 15:03:32,230 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:32,230 - DEBUG - receive_response_body.complete
2025-09-26 15:03:32,230 - DEBUG - response_closed.started
2025-09-26 15:03:32,230 - DEBUG - response_closed.complete
2025-09-26 15:03:32,230 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:32 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1332', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1525', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '198675', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '397ms', 'x-request-id': 'req_d4fb0cc8fffb4dac99513521504b7c52', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529e505b508d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:32,231 - DEBUG - request_id: req_d4fb0cc8fffb4dac99513521504b7c52
2025-09-26 15:03:32,232 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\ЛЮБОВЬ.mp3
2025-09-26 15:03:32,232 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 2, 'overlap': 0.25, 'jobs': 4}
2025-09-26 15:03:32,233 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла: examples\ЛЮБОВЬ.mp3
2025-09-26 15:03:32,233 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 15:03:32,233 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 15:03:32,233 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\ЛЮБОВЬ.mp3
2025-09-26 15:03:32,833 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 15:03:32,833 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\ЛЮБОВЬ.mp3
2025-09-26 15:03:32,901 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	RESUME(arg=0, lineno=1137)
           4	LOAD_FAST(arg=0, lineno=1140)
           6	LOAD_CONST(arg=1, lineno=1140)
           8	BINARY_SUBSCR(arg=None, lineno=1140)
          12	STORE_FAST(arg=3, lineno=1140)
          14	LOAD_FAST(arg=1, lineno=1141)
          16	UNARY_NEGATIVE(arg=None, lineno=1141)
          18	LOAD_FAST(arg=3, lineno=1141)
          20	SWAP(arg=2, lineno=1141)
          22	COPY(arg=2, lineno=1141)
          24	COMPARE_OP(arg=58, lineno=1141)
          28	POP_JUMP_IF_FALSE(arg=6, lineno=1141)
          32	LOAD_FAST(arg=1, lineno=1141)
          34	COMPARE_OP(arg=58, lineno=1141)
          38	POP_JUMP_IF_FALSE(arg=5, lineno=1141)
          42	JUMP_FORWARD(arg=2, lineno=1141)
>         44	POP_TOP(arg=None, lineno=1141)
          46	JUMP_FORWARD(arg=2, lineno=1141)
>         48	LOAD_CONST(arg=1, lineno=1142)
          50	STORE_FAST(arg=3, lineno=1142)
>         52	LOAD_FAST(arg=0, lineno=1144)
          54	LOAD_CONST(arg=2, lineno=1144)
          56	BINARY_SUBSCR(arg=None, lineno=1144)
          60	STORE_FAST(arg=4, lineno=1144)
          62	LOAD_FAST(arg=1, lineno=1145)
          64	UNARY_NEGATIVE(arg=None, lineno=1145)
          66	LOAD_FAST(arg=4, lineno=1145)
          68	SWAP(arg=2, lineno=1145)
          70	COPY(arg=2, lineno=1145)
          72	COMPARE_OP(arg=58, lineno=1145)
          76	POP_JUMP_IF_FALSE(arg=6, lineno=1145)
          80	LOAD_FAST(arg=1, lineno=1145)
          82	COMPARE_OP(arg=58, lineno=1145)
          86	POP_JUMP_IF_FALSE(arg=5, lineno=1145)
          90	JUMP_FORWARD(arg=2, lineno=1145)
>         92	POP_TOP(arg=None, lineno=1145)
          94	JUMP_FORWARD(arg=2, lineno=1145)
>         96	LOAD_CONST(arg=1, lineno=1146)
          98	STORE_FAST(arg=4, lineno=1146)
>        100	LOAD_FAST(arg=2, lineno=1148)
         102	TO_BOOL(arg=None, lineno=1148)
         110	POP_JUMP_IF_FALSE(arg=45, lineno=1148)
         114	LOAD_GLOBAL(arg=0, lineno=1149)
         124	LOAD_ATTR(arg=2, lineno=1149)
         144	PUSH_NULL(arg=None, lineno=1149)
         146	LOAD_FAST(arg=3, lineno=1149)
         148	CALL(arg=1, lineno=1149)
         156	LOAD_GLOBAL(arg=0, lineno=1149)
         166	LOAD_ATTR(arg=2, lineno=1149)
         186	PUSH_NULL(arg=None, lineno=1149)
         188	LOAD_FAST(arg=4, lineno=1149)
         190	CALL(arg=1, lineno=1149)
         198	COMPARE_OP(arg=103, lineno=1149)
         202	RETURN_VALUE(arg=None, lineno=1149)
>        204	LOAD_GLOBAL(arg=0, lineno=1151)
         214	LOAD_ATTR(arg=4, lineno=1151)
         234	PUSH_NULL(arg=None, lineno=1151)
         236	LOAD_FAST(arg=3, lineno=1151)
         238	CALL(arg=1, lineno=1151)
         246	LOAD_GLOBAL(arg=0, lineno=1151)
         256	LOAD_ATTR(arg=4, lineno=1151)
         276	PUSH_NULL(arg=None, lineno=1151)
         278	LOAD_FAST(arg=4, lineno=1151)
         280	CALL(arg=1, lineno=1151)
         288	COMPARE_OP(arg=103, lineno=1151)
         292	RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:03:32,902 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:03:32,902 - DEBUG - stack: []
2025-09-26 15:03:32,903 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:03:32,903 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-09-26 15:03:32,903 - DEBUG - stack []
2025-09-26 15:03:32,903 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1137)
2025-09-26 15:03:32,903 - DEBUG - stack []
2025-09-26 15:03:32,903 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1140)
2025-09-26 15:03:32,904 - DEBUG - stack []
2025-09-26 15:03:32,904 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1140)
2025-09-26 15:03:32,904 - DEBUG - stack ['$x4.0']
2025-09-26 15:03:32,904 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-09-26 15:03:32,904 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-09-26 15:03:32,905 - DEBUG - dispatch pc=12, inst=STORE_FAST(arg=3, lineno=1140)
2025-09-26 15:03:32,905 - DEBUG - stack ['$8binary_subscr.2']
2025-09-26 15:03:32,905 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:03:32,905 - DEBUG - stack []
2025-09-26 15:03:32,905 - DEBUG - dispatch pc=16, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-09-26 15:03:32,905 - DEBUG - stack ['$threshold14.3']
2025-09-26 15:03:32,906 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=1141)
2025-09-26 15:03:32,906 - DEBUG - stack ['$16unary_negative.4']
2025-09-26 15:03:32,906 - DEBUG - dispatch pc=20, inst=SWAP(arg=2, lineno=1141)
2025-09-26 15:03:32,906 - DEBUG - stack ['$16unary_negative.4', '$x018.5']
2025-09-26 15:03:32,906 - DEBUG - dispatch pc=22, inst=COPY(arg=2, lineno=1141)
2025-09-26 15:03:32,907 - DEBUG - stack ['$x018.5', '$16unary_negative.4']
2025-09-26 15:03:32,907 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:03:32,907 - DEBUG - stack ['$x018.5', '$16unary_negative.4', '$x018.5']
2025-09-26 15:03:32,907 - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1141)
2025-09-26 15:03:32,907 - DEBUG - stack ['$x018.5', '$24compare_op.6']
2025-09-26 15:03:32,908 - DEBUG - end state. edges=[Edge(pc=32, stack=('$x018.5',), blockstack=(), npush=0), Edge(pc=44, stack=('$x018.5',), blockstack=(), npush=0)]
2025-09-26 15:03:32,908 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=44 nstack_initial=1)])
2025-09-26 15:03:32,908 - DEBUG - stack: ['$phi32.0']
2025-09-26 15:03:32,908 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-09-26 15:03:32,908 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:03:32,908 - DEBUG - stack ['$phi32.0']
2025-09-26 15:03:32,909 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:03:32,909 - DEBUG - stack ['$phi32.0', '$threshold32.1']
2025-09-26 15:03:32,909 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1141)
2025-09-26 15:03:32,909 - DEBUG - stack ['$34compare_op.2']
2025-09-26 15:03:32,909 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:32,909 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=1), State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:03:32,909 - DEBUG - stack: ['$phi44.0']
2025-09-26 15:03:32,910 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=1)
2025-09-26 15:03:32,910 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=1141)
2025-09-26 15:03:32,910 - DEBUG - stack ['$phi44.0']
2025-09-26 15:03:32,910 - DEBUG - dispatch pc=46, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:03:32,910 - DEBUG - stack []
2025-09-26 15:03:32,910 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:32,911 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:03:32,911 - DEBUG - stack: []
2025-09-26 15:03:32,911 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-09-26 15:03:32,911 - DEBUG - dispatch pc=42, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:03:32,911 - DEBUG - stack []
2025-09-26 15:03:32,912 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:32,912 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2025-09-26 15:03:32,912 - DEBUG - stack: []
2025-09-26 15:03:32,912 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-09-26 15:03:32,912 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1144)
2025-09-26 15:03:32,912 - DEBUG - stack []
2025-09-26 15:03:32,912 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=1144)
2025-09-26 15:03:32,913 - DEBUG - stack ['$x52.0']
2025-09-26 15:03:32,913 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-09-26 15:03:32,913 - DEBUG - stack ['$x52.0', '$const54.1.2']
2025-09-26 15:03:32,913 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=4, lineno=1144)
2025-09-26 15:03:32,913 - DEBUG - stack ['$56binary_subscr.2']
2025-09-26 15:03:32,913 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:03:32,914 - DEBUG - stack []
2025-09-26 15:03:32,914 - DEBUG - dispatch pc=64, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-09-26 15:03:32,914 - DEBUG - stack ['$threshold62.3']
2025-09-26 15:03:32,914 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=4, lineno=1145)
2025-09-26 15:03:32,914 - DEBUG - stack ['$64unary_negative.4']
2025-09-26 15:03:32,914 - DEBUG - dispatch pc=68, inst=SWAP(arg=2, lineno=1145)
2025-09-26 15:03:32,915 - DEBUG - stack ['$64unary_negative.4', '$x166.5']
2025-09-26 15:03:32,915 - DEBUG - dispatch pc=70, inst=COPY(arg=2, lineno=1145)
2025-09-26 15:03:32,915 - DEBUG - stack ['$x166.5', '$64unary_negative.4']
2025-09-26 15:03:32,915 - DEBUG - dispatch pc=72, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:03:32,915 - DEBUG - stack ['$x166.5', '$64unary_negative.4', '$x166.5']
2025-09-26 15:03:32,915 - DEBUG - dispatch pc=76, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1145)
2025-09-26 15:03:32,916 - DEBUG - stack ['$x166.5', '$72compare_op.6']
2025-09-26 15:03:32,916 - DEBUG - end state. edges=[Edge(pc=80, stack=('$x166.5',), blockstack=(), npush=0), Edge(pc=92, stack=('$x166.5',), blockstack=(), npush=0)]
2025-09-26 15:03:32,916 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:03:32,916 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:03:32,916 - DEBUG - stack: []
2025-09-26 15:03:32,917 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-09-26 15:03:32,917 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1142)
2025-09-26 15:03:32,917 - DEBUG - stack []
2025-09-26 15:03:32,917 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=3, lineno=1142)
2025-09-26 15:03:32,917 - DEBUG - stack ['$const48.0.1']
2025-09-26 15:03:32,917 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:32,918 - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:03:32,918 - DEBUG - stack: ['$phi80.0']
2025-09-26 15:03:32,918 - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-09-26 15:03:32,918 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:03:32,918 - DEBUG - stack ['$phi80.0']
2025-09-26 15:03:32,918 - DEBUG - dispatch pc=82, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:03:32,918 - DEBUG - stack ['$phi80.0', '$threshold80.1']
2025-09-26 15:03:32,919 - DEBUG - dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1145)
2025-09-26 15:03:32,919 - DEBUG - stack ['$82compare_op.2']
2025-09-26 15:03:32,919 - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:32,919 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:32,919 - DEBUG - stack: ['$phi92.0']
2025-09-26 15:03:32,919 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=1)
2025-09-26 15:03:32,919 - DEBUG - dispatch pc=92, inst=POP_TOP(arg=None, lineno=1145)
2025-09-26 15:03:32,920 - DEBUG - stack ['$phi92.0']
2025-09-26 15:03:32,920 - DEBUG - dispatch pc=94, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:03:32,920 - DEBUG - stack []
2025-09-26 15:03:32,920 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:32,920 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:32,920 - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:32,921 - DEBUG - stack: []
2025-09-26 15:03:32,921 - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-09-26 15:03:32,921 - DEBUG - dispatch pc=90, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:03:32,921 - DEBUG - stack []
2025-09-26 15:03:32,921 - DEBUG - end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:32,921 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-09-26 15:03:32,921 - DEBUG - stack: []
2025-09-26 15:03:32,921 - DEBUG - state.pc_initial: State(pc_initial=100 nstack_initial=0)
2025-09-26 15:03:32,922 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=2, lineno=1148)
2025-09-26 15:03:32,922 - DEBUG - stack []
2025-09-26 15:03:32,922 - DEBUG - dispatch pc=102, inst=TO_BOOL(arg=None, lineno=1148)
2025-09-26 15:03:32,922 - DEBUG - stack ['$zero_pos100.0']
2025-09-26 15:03:32,922 - DEBUG - dispatch pc=110, inst=POP_JUMP_IF_FALSE(arg=45, lineno=1148)
2025-09-26 15:03:32,922 - DEBUG - stack ['$102to_bool.1']
2025-09-26 15:03:32,922 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=204, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:32,923 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:03:32,923 - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:03:32,923 - DEBUG - stack: []
2025-09-26 15:03:32,923 - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2025-09-26 15:03:32,923 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=1, lineno=1146)
2025-09-26 15:03:32,923 - DEBUG - stack []
2025-09-26 15:03:32,923 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=4, lineno=1146)
2025-09-26 15:03:32,923 - DEBUG - stack ['$const96.0.1']
2025-09-26 15:03:32,924 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:32,924 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:32,924 - DEBUG - stack: []
2025-09-26 15:03:32,924 - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2025-09-26 15:03:32,924 - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:03:32,924 - DEBUG - stack []
2025-09-26 15:03:32,924 - DEBUG - dispatch pc=124, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:03:32,924 - DEBUG - stack ['$114load_global.0']
2025-09-26 15:03:32,925 - DEBUG - dispatch pc=144, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:03:32,925 - DEBUG - stack ['$124load_attr.1']
2025-09-26 15:03:32,925 - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=3, lineno=1149)
2025-09-26 15:03:32,925 - DEBUG - stack ['$124load_attr.1', '$null$144.2']
2025-09-26 15:03:32,925 - DEBUG - dispatch pc=148, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:03:32,925 - DEBUG - stack ['$124load_attr.1', '$null$144.2', '$x0146.3']
2025-09-26 15:03:32,925 - DEBUG - dispatch pc=156, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:03:32,925 - DEBUG - stack ['$148call.4']
2025-09-26 15:03:32,925 - DEBUG - dispatch pc=166, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:03:32,926 - DEBUG - stack ['$148call.4', '$156load_global.5']
2025-09-26 15:03:32,926 - DEBUG - dispatch pc=186, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:03:32,926 - DEBUG - stack ['$148call.4', '$166load_attr.6']
2025-09-26 15:03:32,926 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=4, lineno=1149)
2025-09-26 15:03:32,926 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7']
2025-09-26 15:03:32,926 - DEBUG - dispatch pc=190, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:03:32,926 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7', '$x1188.8']
2025-09-26 15:03:32,926 - DEBUG - dispatch pc=198, inst=COMPARE_OP(arg=103, lineno=1149)
2025-09-26 15:03:32,927 - DEBUG - stack ['$148call.4', '$190call.9']
2025-09-26 15:03:32,927 - DEBUG - dispatch pc=202, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-09-26 15:03:32,927 - DEBUG - stack ['$198compare_op.10']
2025-09-26 15:03:32,927 - DEBUG - end state. edges=[]
2025-09-26 15:03:32,927 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:32,927 - DEBUG - stack: []
2025-09-26 15:03:32,928 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=0)
2025-09-26 15:03:32,928 - DEBUG - dispatch pc=204, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:03:32,928 - DEBUG - stack []
2025-09-26 15:03:32,928 - DEBUG - dispatch pc=214, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:03:32,928 - DEBUG - stack ['$204load_global.0']
2025-09-26 15:03:32,929 - DEBUG - dispatch pc=234, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:03:32,929 - DEBUG - stack ['$214load_attr.1']
2025-09-26 15:03:32,929 - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=3, lineno=1151)
2025-09-26 15:03:32,929 - DEBUG - stack ['$214load_attr.1', '$null$234.2']
2025-09-26 15:03:32,929 - DEBUG - dispatch pc=238, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:03:32,929 - DEBUG - stack ['$214load_attr.1', '$null$234.2', '$x0236.3']
2025-09-26 15:03:32,929 - DEBUG - dispatch pc=246, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:03:32,930 - DEBUG - stack ['$238call.4']
2025-09-26 15:03:32,930 - DEBUG - dispatch pc=256, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:03:32,930 - DEBUG - stack ['$238call.4', '$246load_global.5']
2025-09-26 15:03:32,930 - DEBUG - dispatch pc=276, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:03:32,930 - DEBUG - stack ['$238call.4', '$256load_attr.6']
2025-09-26 15:03:32,931 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=4, lineno=1151)
2025-09-26 15:03:32,931 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7']
2025-09-26 15:03:32,931 - DEBUG - dispatch pc=280, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:03:32,931 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7', '$x1278.8']
2025-09-26 15:03:32,931 - DEBUG - dispatch pc=288, inst=COMPARE_OP(arg=103, lineno=1151)
2025-09-26 15:03:32,932 - DEBUG - stack ['$238call.4', '$280call.9']
2025-09-26 15:03:32,932 - DEBUG - dispatch pc=292, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:03:32,932 - DEBUG - stack ['$288compare_op.10']
2025-09-26 15:03:32,932 - DEBUG - end state. edges=[]
2025-09-26 15:03:32,932 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:32,932 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:03:32,933 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=1): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=204 nstack_initial=0): set()})
2025-09-26 15:03:32,933 - DEBUG - defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi44.0': State(pc_initial=0 nstack_initial=0),
 '$phi80.0': State(pc_initial=52 nstack_initial=0),
 '$phi92.0': State(pc_initial=52 nstack_initial=0)}
2025-09-26 15:03:32,934 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:03:32,934 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:03:32,934 - DEBUG - keep phismap: {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
 '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}}
2025-09-26 15:03:32,935 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$x018.5'},
             State(pc_initial=52 nstack_initial=0): {'$phi80.0': '$x166.5'}})
2025-09-26 15:03:32,935 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:03:32,935 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'value': '$8binary_subscr.2'}), (14, {'res': '$threshold14.3'}), (16, {'value': '$threshold14.3', 'res': '$16unary_negative.4'}), (18, {'res': '$x018.5'}), (24, {'lhs': '$16unary_negative.4', 'rhs': '$x018.5', 'res': '$24compare_op.6'}), (28, {'pred': '$24compare_op.6'})), outgoing_phis={'$phi32.0': '$x018.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$x018.5',), 44: ('$x018.5',)})
2025-09-26 15:03:32,935 - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'res': '$threshold32.1'}), (34, {'lhs': '$phi32.0', 'rhs': '$threshold32.1', 'res': '$34compare_op.2'}), (38, {'pred': '$34compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 52: ()})
2025-09-26 15:03:32,935 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ()})
2025-09-26 15:03:32,936 - DEBUG - block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((46, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:03:32,936 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$const48.0.1'}), (50, {'value': '$const48.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:03:32,936 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$x52.0'}), (54, {'res': '$const54.1.2'}), (56, {'index': '$const54.1.2', 'target': '$x52.0', 'res': '$56binary_subscr.2'}), (60, {'value': '$56binary_subscr.2'}), (62, {'res': '$threshold62.3'}), (64, {'value': '$threshold62.3', 'res': '$64unary_negative.4'}), (66, {'res': '$x166.5'}), (72, {'lhs': '$64unary_negative.4', 'rhs': '$x166.5', 'res': '$72compare_op.6'}), (76, {'pred': '$72compare_op.6'})), outgoing_phis={'$phi80.0': '$x166.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$x166.5',), 92: ('$x166.5',)})
2025-09-26 15:03:32,936 - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$threshold80.1'}), (82, {'lhs': '$phi80.0', 'rhs': '$threshold80.1', 'res': '$82compare_op.2'}), (86, {'pred': '$82compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 100: ()})
2025-09-26 15:03:32,937 - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
2025-09-26 15:03:32,937 - DEBUG - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((94, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:03:32,937 - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$const96.0.1'}), (98, {'value': '$const96.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:03:32,937 - DEBUG - block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$zero_pos100.0'}), (102, {'val': '$zero_pos100.0', 'res': '$102to_bool.1'}), (110, {'pred': '$102to_bool.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 204: ()})
2025-09-26 15:03:32,937 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'idx': 0, 'res': '$114load_global.0'}), (124, {'item': '$114load_global.0', 'res': '$124load_attr.1'}), (144, {}), (146, {'res': '$x0146.3'}), (148, {'func': '$124load_attr.1', 'args': ['$x0146.3'], 'kw_names': None, 'res': '$148call.4'}), (156, {'idx': 0, 'res': '$156load_global.5'}), (166, {'item': '$156load_global.5', 'res': '$166load_attr.6'}), (186, {}), (188, {'res': '$x1188.8'}), (190, {'func': '$166load_attr.6', 'args': ['$x1188.8'], 'kw_names': None, 'res': '$190call.9'}), (198, {'lhs': '$148call.4', 'rhs': '$190call.9', 'res': '$198compare_op.10'}), (202, {'retval': '$198compare_op.10', 'castval': '$202return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:03:32,937 - DEBUG - block_infos State(pc_initial=204 nstack_initial=0):
AdaptBlockInfo(insts=((204, {'idx': 0, 'res': '$204load_global.0'}), (214, {'item': '$204load_global.0', 'res': '$214load_attr.1'}), (234, {}), (236, {'res': '$x0236.3'}), (238, {'func': '$214load_attr.1', 'args': ['$x0236.3'], 'kw_names': None, 'res': '$238call.4'}), (246, {'idx': 0, 'res': '$246load_global.5'}), (256, {'item': '$246load_global.5', 'res': '$256load_attr.6'}), (276, {}), (278, {'res': '$x1278.8'}), (280, {'func': '$256load_attr.6', 'args': ['$x1278.8'], 'kw_names': None, 'res': '$280call.9'}), (288, {'lhs': '$238call.4', 'rhs': '$280call.9', 'res': '$288compare_op.10'}), (292, {'retval': '$288compare_op.10', 'castval': '$292return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:03:32,939 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    x0 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$const6.1.1', 'x', 'x0']
    $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$16unary_negative.4', 'threshold']
    $24compare_op.6 = $16unary_negative.4 <= x0 ['$16unary_negative.4', '$24compare_op.6', 'x0']
    $bool28 = global(bool: <class 'bool'>)   ['$bool28']
    $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.6', '$28pred', '$bool28']
    $phi32.0 = x0                            ['$phi32.0', 'x0']
    branch $28pred, 32, 44                   ['$28pred']
label 32:
    $34compare_op.2 = $phi32.0 <= threshold  ['$34compare_op.2', '$phi32.0', 'threshold']
    $bool38 = global(bool: <class 'bool'>)   ['$bool38']
    $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.2', '$38pred', '$bool38']
    branch $38pred, 42, 52                   ['$38pred']
label 42:
    jump 48                                  []
label 44:
    jump 52                                  []
label 48:
    x0 = const(int, 0)                       ['x0']
    jump 52                                  []
label 52:
    $const54.1.2 = const(int, -1)            ['$const54.1.2']
    x1 = getitem(value=x, index=$const54.1.2, fn=<built-in function getitem>) ['$const54.1.2', 'x', 'x1']
    $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$64unary_negative.4', 'threshold']
    $72compare_op.6 = $64unary_negative.4 <= x1 ['$64unary_negative.4', '$72compare_op.6', 'x1']
    $bool76 = global(bool: <class 'bool'>)   ['$bool76']
    $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$72compare_op.6', '$76pred', '$bool76']
    $phi80.0 = x1                            ['$phi80.0', 'x1']
    branch $76pred, 80, 92                   ['$76pred']
label 80:
    $82compare_op.2 = $phi80.0 <= threshold  ['$82compare_op.2', '$phi80.0', 'threshold']
    $bool86 = global(bool: <class 'bool'>)   ['$bool86']
    $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$82compare_op.2', '$86pred', '$bool86']
    branch $86pred, 90, 100                  ['$86pred']
label 90:
    jump 96                                  []
label 92:
    jump 100                                 []
label 96:
    x1 = const(int, 0)                       ['x1']
    jump 100                                 []
label 100:
    $bool110 = global(bool: <class 'bool'>)  ['$bool110']
    $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$110pred', '$bool110', 'zero_pos']
    branch $110pred, 114, 204                ['$110pred']
label 114:
    $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$114load_global.0']
    $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit) ['$114load_global.0', '$124load_attr.1']
    $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$124load_attr.1', '$148call.4', 'x0']
    $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$156load_global.5']
    $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit) ['$156load_global.5', '$166load_attr.6']
    $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.6', '$190call.9', 'x1']
    $198compare_op.10 = $148call.4 != $190call.9 ['$148call.4', '$190call.9', '$198compare_op.10']
    $202return_value.11 = cast(value=$198compare_op.10) ['$198compare_op.10', '$202return_value.11']
    return $202return_value.11               ['$202return_value.11']
label 204:
    $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$204load_global.0']
    $214load_attr.1 = getattr(value=$204load_global.0, attr=sign) ['$204load_global.0', '$214load_attr.1']
    $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.1', '$238call.4', 'x0']
    $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$246load_global.5']
    $256load_attr.6 = getattr(value=$246load_global.5, attr=sign) ['$246load_global.5', '$256load_attr.6']
    $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$256load_attr.6', '$280call.9', 'x1']
    $288compare_op.10 = $238call.4 != $280call.9 ['$238call.4', '$280call.9', '$288compare_op.10']
    $292return_value.11 = cast(value=$288compare_op.10) ['$288compare_op.10', '$292return_value.11']
    return $292return_value.11               ['$292return_value.11']

2025-09-26 15:03:32,945 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1154)
           2	RESUME(arg=0, lineno=1154)
           4	LOAD_GLOBAL(arg=1, lineno=1170)
          14	LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
          16	LOAD_FAST(arg=2, lineno=1170)
          18	CALL(arg=3, lineno=1170)
          26	LOAD_FAST(arg=3, lineno=1170)
          28	LOAD_CONST(arg=1, lineno=1170)
          30	LOAD_CONST(arg=1, lineno=1170)
          32	STORE_SLICE(arg=None, lineno=1170)
          34	RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:03:32,946 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:03:32,946 - DEBUG - stack: []
2025-09-26 15:03:32,946 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:03:32,946 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1154)
2025-09-26 15:03:32,947 - DEBUG - stack []
2025-09-26 15:03:32,947 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1154)
2025-09-26 15:03:32,947 - DEBUG - stack []
2025-09-26 15:03:32,947 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1170)
2025-09-26 15:03:32,947 - DEBUG - stack []
2025-09-26 15:03:32,947 - DEBUG - dispatch pc=14, inst=LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
2025-09-26 15:03:32,948 - DEBUG - stack ['$4load_global.0', '$null$4.1']
2025-09-26 15:03:32,948 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=1170)
2025-09-26 15:03:32,948 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3']
2025-09-26 15:03:32,948 - DEBUG - dispatch pc=18, inst=CALL(arg=3, lineno=1170)
2025-09-26 15:03:32,948 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3', '$zero_pos16.4']
2025-09-26 15:03:32,949 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=3, lineno=1170)
2025-09-26 15:03:32,949 - DEBUG - stack ['$18call.5']
2025-09-26 15:03:32,949 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:03:32,949 - DEBUG - stack ['$18call.5', '$y26.6']
2025-09-26 15:03:32,949 - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:03:32,949 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1']
2025-09-26 15:03:32,949 - DEBUG - dispatch pc=32, inst=STORE_SLICE(arg=None, lineno=1170)
2025-09-26 15:03:32,950 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1', '$const30.8.1']
2025-09-26 15:03:32,950 - DEBUG - dispatch pc=34, inst=RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:03:32,950 - DEBUG - stack []
2025-09-26 15:03:32,950 - DEBUG - end state. edges=[]
2025-09-26 15:03:32,950 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:03:32,950 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-09-26 15:03:32,950 - DEBUG - defmap: {}
2025-09-26 15:03:32,951 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:03:32,951 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:03:32,951 - DEBUG - keep phismap: {}
2025-09-26 15:03:32,951 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-09-26 15:03:32,951 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:03:32,952 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res1': '$x14.2', 'res2': '$threshold14.3'}), (16, {'res': '$zero_pos16.4'}), (18, {'func': '$4load_global.0', 'args': ['$x14.2', '$threshold14.3', '$zero_pos16.4'], 'kw_names': None, 'res': '$18call.5'}), (26, {'res': '$y26.6'}), (28, {'res': '$const28.7.1'}), (30, {'res': '$const30.8.1'}), (32, {'start': '$const28.7.1', 'end': '$const30.8.1', 'container': '$y26.6', 'value': '$18call.5', 'res': '$32store_slice.10', 'slicevar': '$32store_slice.9'}), (34, {'retval': '$const34.11', 'castval': '$34return_const.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:03:32,952 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002985CEA8050>) ['$4load_global.0']
    $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const28.7.1 = const(NoneType, None)     ['$const28.7.1']
    $const30.8.1 = const(NoneType, None)     ['$const30.8.1']
    $32store_slice.9 = global(slice: <class 'slice'>) ['$32store_slice.9']
    $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$32store_slice.10', '$32store_slice.9', '$const28.7.1', '$const30.8.1']
    y[$32store_slice.10] = $18call.5         ['$18call.5', '$32store_slice.10', 'y']
    $const34.11 = const(NoneType, None)      ['$const34.11']
    $34return_const.12 = cast(value=$const34.11) ['$34return_const.12', '$const34.11']
    return $34return_const.12                ['$34return_const.12']

2025-09-26 15:03:32,956 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:03:32,956 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D0FDD30>
2025-09-26 15:03:32,956 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:32,956 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:32,957 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:32,957 - DEBUG - on stmt: y = arg(3, name=y)
2025-09-26 15:03:32,957 - DEBUG - on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002985CEA8050>)
2025-09-26 15:03:32,957 - DEBUG - on stmt: $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:32,957 - DEBUG - on stmt: $const28.7.1 = const(NoneType, None)
2025-09-26 15:03:32,958 - DEBUG - on stmt: $const30.8.1 = const(NoneType, None)
2025-09-26 15:03:32,958 - DEBUG - on stmt: $32store_slice.9 = global(slice: <class 'slice'>)
2025-09-26 15:03:32,958 - DEBUG - on stmt: $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:32,958 - DEBUG - on stmt: y[slice(None, None, None)] = $18call.5
2025-09-26 15:03:32,958 - DEBUG - on stmt: $const34.11 = const(NoneType, None)
2025-09-26 15:03:32,958 - DEBUG - on stmt: $34return_const.12 = cast(value=$const34.11)
2025-09-26 15:03:32,958 - DEBUG - on stmt: return $34return_const.12
2025-09-26 15:03:32,959 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.5': [(<numba.core.ir.Assign object at 0x000002985D0AA390>,
                            0)],
             '$32store_slice.10': [(<numba.core.ir.Assign object at 0x000002985D0A9730>,
                                    0)],
             '$32store_slice.9': [(<numba.core.ir.Assign object at 0x000002985D0AB470>,
                                   0)],
             '$34return_const.12': [(<numba.core.ir.Assign object at 0x000002985D0A9430>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000002985D094050>,
                                  0)],
             '$const28.7.1': [(<numba.core.ir.Assign object at 0x000002985D0AAA50>,
                               0)],
             '$const30.8.1': [(<numba.core.ir.Assign object at 0x000002985D0AAF30>,
                               0)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x000002985D0A97F0>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002985D0946B0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002985D0948F0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000002985D095610>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002985D094230>,
                           0)]})
2025-09-26 15:03:32,960 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002985D0FDD30>
2025-09-26 15:03:33,003 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=3, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=3, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	LOAD_CONST(arg=1, lineno=3)
          92	CALL_KW(arg=2, lineno=3)
          94	STORE_FAST(arg=4, lineno=3)
          96	LOAD_CONST(arg=2, lineno=4)
          98	LOAD_FAST(arg=4, lineno=4)
         100	LOAD_CONST(arg=0, lineno=4)
         102	LOAD_CONST(arg=3, lineno=4)
         104	STORE_SLICE(arg=None, lineno=4)
         106	LOAD_CONST(arg=2, lineno=5)
         108	LOAD_FAST(arg=4, lineno=5)
         110	LOAD_CONST(arg=2, lineno=5)
         112	LOAD_CONST(arg=0, lineno=5)
         114	STORE_SLICE(arg=None, lineno=5)
         116	LOAD_GLOBAL(arg=9, lineno=6)
         126	LOAD_GLOBAL(arg=11, lineno=6)
         136	LOAD_CONST(arg=2, lineno=6)
         138	LOAD_CONST(arg=4, lineno=6)
         140	CALL(arg=2, lineno=6)
         148	UNARY_NEGATIVE(arg=None, lineno=6)
         150	LOAD_FAST(arg=3, lineno=6)
         152	LOAD_CONST(arg=2, lineno=6)
         154	BINARY_SUBSCR(arg=None, lineno=6)
         158	LOAD_GLOBAL(arg=13, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	LOAD_CONST(arg=2, lineno=6)
         172	CALL(arg=2, lineno=6)
         180	BINARY_OP(arg=10, lineno=6)
         184	CALL(arg=2, lineno=6)
         192	GET_ITER(arg=None, lineno=6)
>        194	FOR_ITER(arg=5, lineno=6)
         198	STORE_FAST(arg=5, lineno=6)
         200	LOAD_CONST(arg=2, lineno=7)
         202	STORE_FAST(arg=6, lineno=7)
         204	JUMP_BACKWARD(arg=7, lineno=7)
>        208	END_FOR(arg=None, lineno=6)
         210	POP_TOP(arg=None, lineno=6)
         212	LOAD_FAST(arg=4, lineno=8)
         214	RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:03:33,005 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:03:33,005 - DEBUG - stack: []
2025-09-26 15:03:33,005 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:03:33,005 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-09-26 15:03:33,005 - DEBUG - stack []
2025-09-26 15:03:33,005 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2025-09-26 15:03:33,006 - DEBUG - stack []
2025-09-26 15:03:33,006 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2025-09-26 15:03:33,006 - DEBUG - stack []
2025-09-26 15:03:33,006 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2025-09-26 15:03:33,006 - DEBUG - stack ['$x4.0']
2025-09-26 15:03:33,006 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=3, lineno=2)
2025-09-26 15:03:33,006 - DEBUG - stack ['$6load_attr.1']
2025-09-26 15:03:33,007 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:03:33,007 - DEBUG - stack []
2025-09-26 15:03:33,007 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2025-09-26 15:03:33,007 - DEBUG - stack ['$28load_global.2']
2025-09-26 15:03:33,007 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=3, lineno=3)
2025-09-26 15:03:33,007 - DEBUG - stack ['$38load_attr.3', '$null$38.4']
2025-09-26 15:03:33,007 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:03:33,007 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5']
2025-09-26 15:03:33,008 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2025-09-26 15:03:33,008 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$60load_global.6']
2025-09-26 15:03:33,008 - DEBUG - dispatch pc=90, inst=LOAD_CONST(arg=1, lineno=3)
2025-09-26 15:03:33,008 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7']
2025-09-26 15:03:33,008 - DEBUG - dispatch pc=92, inst=CALL_KW(arg=2, lineno=3)
2025-09-26 15:03:33,008 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7', '$const90.8.1']
2025-09-26 15:03:33,008 - DEBUG - dispatch pc=94, inst=STORE_FAST(arg=4, lineno=3)
2025-09-26 15:03:33,008 - DEBUG - stack ['$92call_kw.9']
2025-09-26 15:03:33,009 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=2, lineno=4)
2025-09-26 15:03:33,009 - DEBUG - stack []
2025-09-26 15:03:33,009 - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=4)
2025-09-26 15:03:33,009 - DEBUG - stack ['$const96.10.2']
2025-09-26 15:03:33,009 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=0, lineno=4)
2025-09-26 15:03:33,009 - DEBUG - stack ['$const96.10.2', '$out098.11']
2025-09-26 15:03:33,010 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=3, lineno=4)
2025-09-26 15:03:33,010 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0']
2025-09-26 15:03:33,010 - DEBUG - dispatch pc=104, inst=STORE_SLICE(arg=None, lineno=4)
2025-09-26 15:03:33,010 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0', '$const102.13.3']
2025-09-26 15:03:33,010 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:03:33,010 - DEBUG - stack []
2025-09-26 15:03:33,011 - DEBUG - dispatch pc=108, inst=LOAD_FAST(arg=4, lineno=5)
2025-09-26 15:03:33,011 - DEBUG - stack ['$const106.16.2']
2025-09-26 15:03:33,011 - DEBUG - dispatch pc=110, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:03:33,011 - DEBUG - stack ['$const106.16.2', '$out0108.17']
2025-09-26 15:03:33,011 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=0, lineno=5)
2025-09-26 15:03:33,011 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2']
2025-09-26 15:03:33,012 - DEBUG - dispatch pc=114, inst=STORE_SLICE(arg=None, lineno=5)
2025-09-26 15:03:33,012 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2', '$const112.19.0']
2025-09-26 15:03:33,012 - DEBUG - dispatch pc=116, inst=LOAD_GLOBAL(arg=9, lineno=6)
2025-09-26 15:03:33,012 - DEBUG - stack []
2025-09-26 15:03:33,012 - DEBUG - dispatch pc=126, inst=LOAD_GLOBAL(arg=11, lineno=6)
2025-09-26 15:03:33,012 - DEBUG - stack ['$116load_global.22', '$null$116.23']
2025-09-26 15:03:33,013 - DEBUG - dispatch pc=136, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:03:33,013 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25']
2025-09-26 15:03:33,013 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=4, lineno=6)
2025-09-26 15:03:33,013 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2']
2025-09-26 15:03:33,013 - DEBUG - dispatch pc=140, inst=CALL(arg=2, lineno=6)
2025-09-26 15:03:33,013 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2', '$const138.27.4']
2025-09-26 15:03:33,014 - DEBUG - dispatch pc=148, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-09-26 15:03:33,014 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$140call.28']
2025-09-26 15:03:33,014 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=3, lineno=6)
2025-09-26 15:03:33,014 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29']
2025-09-26 15:03:33,014 - DEBUG - dispatch pc=152, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:03:33,014 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30']
2025-09-26 15:03:33,014 - DEBUG - dispatch pc=154, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-09-26 15:03:33,015 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30', '$const152.31.2']
2025-09-26 15:03:33,015 - DEBUG - dispatch pc=158, inst=LOAD_GLOBAL(arg=13, lineno=6)
2025-09-26 15:03:33,015 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32']
2025-09-26 15:03:33,015 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:03:33,015 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34']
2025-09-26 15:03:33,015 - DEBUG - dispatch pc=170, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:03:33,015 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2']
2025-09-26 15:03:33,016 - DEBUG - dispatch pc=172, inst=CALL(arg=2, lineno=6)
2025-09-26 15:03:33,016 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2', '$const170.36.2']
2025-09-26 15:03:33,016 - DEBUG - dispatch pc=180, inst=BINARY_OP(arg=10, lineno=6)
2025-09-26 15:03:33,016 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$172call.37']
2025-09-26 15:03:33,016 - DEBUG - dispatch pc=184, inst=CALL(arg=2, lineno=6)
2025-09-26 15:03:33,016 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$binop_sub180.38']
2025-09-26 15:03:33,016 - DEBUG - dispatch pc=192, inst=GET_ITER(arg=None, lineno=6)
2025-09-26 15:03:33,016 - DEBUG - stack ['$184call.39']
2025-09-26 15:03:33,017 - DEBUG - end state. edges=[Edge(pc=194, stack=('$192get_iter.40',), blockstack=(), npush=0)]
2025-09-26 15:03:33,017 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:03:33,017 - DEBUG - stack: ['$phi194.0']
2025-09-26 15:03:33,017 - DEBUG - state.pc_initial: State(pc_initial=194 nstack_initial=1)
2025-09-26 15:03:33,017 - DEBUG - dispatch pc=194, inst=FOR_ITER(arg=5, lineno=6)
2025-09-26 15:03:33,017 - DEBUG - stack ['$phi194.0']
2025-09-26 15:03:33,017 - DEBUG - end state. edges=[Edge(pc=208, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0), Edge(pc=198, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0)]
2025-09-26 15:03:33,018 - DEBUG - pending: deque([State(pc_initial=208 nstack_initial=2), State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:03:33,018 - DEBUG - stack: ['$phi208.0', '$phi208.1']
2025-09-26 15:03:33,018 - DEBUG - state.pc_initial: State(pc_initial=208 nstack_initial=2)
2025-09-26 15:03:33,018 - DEBUG - dispatch pc=208, inst=END_FOR(arg=None, lineno=6)
2025-09-26 15:03:33,018 - DEBUG - stack ['$phi208.0', '$phi208.1']
2025-09-26 15:03:33,018 - DEBUG - dispatch pc=210, inst=POP_TOP(arg=None, lineno=6)
2025-09-26 15:03:33,018 - DEBUG - stack ['$phi208.0']
2025-09-26 15:03:33,018 - DEBUG - dispatch pc=212, inst=LOAD_FAST(arg=4, lineno=8)
2025-09-26 15:03:33,019 - DEBUG - stack []
2025-09-26 15:03:33,019 - DEBUG - dispatch pc=214, inst=RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:03:33,019 - DEBUG - stack ['$out0212.2']
2025-09-26 15:03:33,019 - DEBUG - end state. edges=[]
2025-09-26 15:03:33,019 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:03:33,019 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2025-09-26 15:03:33,019 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2025-09-26 15:03:33,020 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=5, lineno=6)
2025-09-26 15:03:33,020 - DEBUG - stack ['$phi198.0', '$phi198.1']
2025-09-26 15:03:33,020 - DEBUG - dispatch pc=200, inst=LOAD_CONST(arg=2, lineno=7)
2025-09-26 15:03:33,020 - DEBUG - stack ['$phi198.0']
2025-09-26 15:03:33,020 - DEBUG - dispatch pc=202, inst=STORE_FAST(arg=6, lineno=7)
2025-09-26 15:03:33,020 - DEBUG - stack ['$phi198.0', '$const200.2.2']
2025-09-26 15:03:33,020 - DEBUG - dispatch pc=204, inst=JUMP_BACKWARD(arg=7, lineno=7)
2025-09-26 15:03:33,020 - DEBUG - stack ['$phi198.0']
2025-09-26 15:03:33,021 - DEBUG - end state. edges=[Edge(pc=194, stack=('$phi198.0',), blockstack=(), npush=0)]
2025-09-26 15:03:33,021 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:03:33,021 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:03:33,021 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=194 nstack_initial=1): {'$phi194.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=208 nstack_initial=2): set()})
2025-09-26 15:03:33,021 - DEBUG - defmap: {'$phi194.0': State(pc_initial=0 nstack_initial=0),
 '$phi198.1': State(pc_initial=194 nstack_initial=1),
 '$phi208.1': State(pc_initial=194 nstack_initial=1)}
2025-09-26 15:03:33,021 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi198.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:03:33,022 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:03:33,023 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:03:33,024 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:03:33,024 - DEBUG - keep phismap: {'$phi194.0': {('$192get_iter.40', State(pc_initial=0 nstack_initial=0))},
 '$phi198.1': {('$194for_iter.2', State(pc_initial=194 nstack_initial=1))}}
2025-09-26 15:03:33,025 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi194.0': '$192get_iter.40'},
             State(pc_initial=194 nstack_initial=1): {'$phi198.1': '$194for_iter.2'}})
2025-09-26 15:03:33,025 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:03:33,025 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.3'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (90, {'res': '$const90.8.1'}), (92, {'func': '$38load_attr.3', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': '$const90.8.1', 'res': '$92call_kw.9'}), (94, {'value': '$92call_kw.9'}), (96, {'res': '$const96.10.2'}), (98, {'res': '$out098.11'}), (100, {'res': '$const100.12.0'}), (102, {'res': '$const102.13.3'}), (104, {'start': '$const100.12.0', 'end': '$const102.13.3', 'container': '$out098.11', 'value': '$const96.10.2', 'res': '$104store_slice.15', 'slicevar': '$104store_slice.14'}), (106, {'res': '$const106.16.2'}), (108, {'res': '$out0108.17'}), (110, {'res': '$const110.18.2'}), (112, {'res': '$const112.19.0'}), (114, {'start': '$const110.18.2', 'end': '$const112.19.0', 'container': '$out0108.17', 'value': '$const106.16.2', 'res': '$114store_slice.21', 'slicevar': '$114store_slice.20'}), (116, {'idx': 4, 'res': '$116load_global.22'}), (126, {'idx': 5, 'res': '$126load_global.24'}), (136, {'res': '$const136.26.2'}), (138, {'res': '$const138.27.4'}), (140, {'func': '$126load_global.24', 'args': ['$const136.26.2', '$const138.27.4'], 'kw_names': None, 'res': '$140call.28'}), (148, {'value': '$140call.28', 'res': '$148unary_negative.29'}), (150, {'res': '$full_shape0150.30'}), (152, {'res': '$const152.31.2'}), (154, {'index': '$const152.31.2', 'target': '$full_shape0150.30', 'res': '$154binary_subscr.32'}), (158, {'idx': 6, 'res': '$158load_global.33'}), (168, {'res': '$const168.35.2'}), (170, {'res': '$const170.36.2'}), (172, {'func': '$158load_global.33', 'args': ['$const168.35.2', '$const170.36.2'], 'kw_names': None, 'res': '$172call.37'}), (180, {'op': '-', 'lhs': '$154binary_subscr.32', 'rhs': '$172call.37', 'res': '$binop_sub180.38'}), (184, {'func': '$116load_global.22', 'args': ['$148unary_negative.29', '$binop_sub180.38'], 'kw_names': None, 'res': '$184call.39'}), (192, {'value': '$184call.39', 'res': '$192get_iter.40'})), outgoing_phis={'$phi194.0': '$192get_iter.40'}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$192get_iter.40',)})
2025-09-26 15:03:33,026 - DEBUG - block_infos State(pc_initial=194 nstack_initial=1):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.0', 'pair': '$194for_iter.1', 'indval': '$194for_iter.2', 'pred': '$194for_iter.3'}),), outgoing_phis={'$phi198.1': '$194for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={208: ('$phi194.0', '$194for_iter.2'), 198: ('$phi194.0', '$194for_iter.2')})
2025-09-26 15:03:33,026 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$const200.2.2'}), (202, {'value': '$const200.2.2'}), (204, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$phi198.0',)})
2025-09-26 15:03:33,026 - DEBUG - block_infos State(pc_initial=208 nstack_initial=2):
AdaptBlockInfo(insts=((212, {'res': '$out0212.2'}), (214, {'retval': '$out0212.2', 'castval': '$214return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:03:33,027 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$28load_global.2']
    $38load_attr.3 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.3']
    $60load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool) ['$60load_global.6', '$70load_attr.7']
    $const_dtype = const(str, dtype)         ['$const_dtype']
    $const90.8.1 = build_tuple(items=[Var($const_dtype, <string>:3)]) ['$const90.8.1', '$const_dtype']
    out0 = call $38load_attr.3(full_shape0, func=$38load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.3', '$70load_attr.7', 'full_shape0', 'out0']
    $const96.10.2 = const(int, 0)            ['$const96.10.2']
    $const100.12.0 = const(NoneType, None)   ['$const100.12.0']
    $const102.13.3 = const(int, 1)           ['$const102.13.3']
    $104store_slice.14 = global(slice: <class 'slice'>) ['$104store_slice.14']
    $104store_slice.15 = call $104store_slice.14($const100.12.0, $const102.13.3, func=$104store_slice.14, args=(Var($const100.12.0, <string>:4), Var($const102.13.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$104store_slice.14', '$104store_slice.15', '$const100.12.0', '$const102.13.3']
    out0[$104store_slice.15] = $const96.10.2 ['$104store_slice.15', '$const96.10.2', 'out0']
    $const106.16.2 = const(int, 0)           ['$const106.16.2']
    $const110.18.2 = const(int, 0)           ['$const110.18.2']
    $const112.19.0 = const(NoneType, None)   ['$const112.19.0']
    $114store_slice.20 = global(slice: <class 'slice'>) ['$114store_slice.20']
    $114store_slice.21 = call $114store_slice.20($const110.18.2, $const112.19.0, func=$114store_slice.20, args=(Var($const110.18.2, <string>:5), Var($const112.19.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$114store_slice.20', '$114store_slice.21', '$const110.18.2', '$const112.19.0']
    out0[$114store_slice.21] = $const106.16.2 ['$114store_slice.21', '$const106.16.2', 'out0']
    $116load_global.22 = global(range: <class 'range'>) ['$116load_global.22']
    $126load_global.24 = global(min: <built-in function min>) ['$126load_global.24']
    $const136.26.2 = const(int, 0)           ['$const136.26.2']
    $const138.27.4 = const(int, -1)          ['$const138.27.4']
    $140call.28 = call $126load_global.24($const136.26.2, $const138.27.4, func=$126load_global.24, args=[Var($const136.26.2, <string>:6), Var($const138.27.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_global.24', '$140call.28', '$const136.26.2', '$const138.27.4']
    $148unary_negative.29 = unary(fn=<built-in function neg>, value=$140call.28) ['$140call.28', '$148unary_negative.29']
    $const152.31.2 = const(int, 0)           ['$const152.31.2']
    $154binary_subscr.32 = getitem(value=full_shape0, index=$const152.31.2, fn=<built-in function getitem>) ['$154binary_subscr.32', '$const152.31.2', 'full_shape0']
    $158load_global.33 = global(max: <built-in function max>) ['$158load_global.33']
    $const168.35.2 = const(int, 0)           ['$const168.35.2']
    $const170.36.2 = const(int, 0)           ['$const170.36.2']
    $172call.37 = call $158load_global.33($const168.35.2, $const170.36.2, func=$158load_global.33, args=[Var($const168.35.2, <string>:6), Var($const170.36.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$158load_global.33', '$172call.37', '$const168.35.2', '$const170.36.2']
    $binop_sub180.38 = $154binary_subscr.32 - $172call.37 ['$154binary_subscr.32', '$172call.37', '$binop_sub180.38']
    $184call.39 = call $116load_global.22($148unary_negative.29, $binop_sub180.38, func=$116load_global.22, args=[Var($148unary_negative.29, <string>:6), Var($binop_sub180.38, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.22', '$148unary_negative.29', '$184call.39', '$binop_sub180.38']
    $192get_iter.40 = getiter(value=$184call.39) ['$184call.39', '$192get_iter.40']
    $phi194.0 = $192get_iter.40              ['$192get_iter.40', '$phi194.0']
    jump 194                                 []
label 194:
    $194for_iter.1 = iternext(value=$phi194.0) ['$194for_iter.1', '$phi194.0']
    $194for_iter.2 = pair_first(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.2']
    $194for_iter.3 = pair_second(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.3']
    $phi198.1 = $194for_iter.2               ['$194for_iter.2', '$phi198.1']
    branch $194for_iter.3, 198, 208          ['$194for_iter.3']
label 198:
    index00 = $phi198.1                      ['$phi198.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 194                                 []
label 208:
    $214return_value.3 = cast(value=out0)    ['$214return_value.3', 'out0']
    return $214return_value.3                ['$214return_value.3']

2025-09-26 15:03:33,051 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:03:33,051 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1C51D0>
2025-09-26 15:03:33,051 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:33,051 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:33,052 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:33,052 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:33,052 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,052 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:33,052 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,052 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:33,052 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:33,053 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:33,053 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,053 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:33,053 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:33,053 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:33,053 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:33,053 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,054 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:33,054 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:33,054 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:33,054 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:33,054 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:33,054 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,054 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:33,054 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:33,055 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:33,055 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:33,055 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:33,055 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,055 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:33,055 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:33,055 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:33,055 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:33,056 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:33,056 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:33,056 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,056 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:33,056 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,056 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:33,056 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:33,056 - DEBUG - on stmt: jump 194
2025-09-26 15:03:33,057 - DEBUG - ==== SSA block analysis pass on 194
2025-09-26 15:03:33,057 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1C51D0>
2025-09-26 15:03:33,057 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:33,057 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:33,057 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:33,057 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:33,057 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:33,057 - DEBUG - ==== SSA block analysis pass on 198
2025-09-26 15:03:33,057 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1C51D0>
2025-09-26 15:03:33,057 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:33,058 - DEBUG - on stmt: jump 208
2025-09-26 15:03:33,058 - DEBUG - ==== SSA block analysis pass on 414
2025-09-26 15:03:33,058 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1C51D0>
2025-09-26 15:03:33,058 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:33,058 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:33,058 - DEBUG - ==== SSA block analysis pass on 208
2025-09-26 15:03:33,058 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1C51D0>
2025-09-26 15:03:33,058 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:33,059 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:33,059 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:33,059 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:33,059 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:33,059 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,059 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,059 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:33,059 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:33,059 - DEBUG - ==== SSA block analysis pass on 209
2025-09-26 15:03:33,060 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1C51D0>
2025-09-26 15:03:33,060 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:33,060 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,060 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,060 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:33,060 - DEBUG - ==== SSA block analysis pass on 241
2025-09-26 15:03:33,060 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1C51D0>
2025-09-26 15:03:33,060 - DEBUG - on stmt: jump 251
2025-09-26 15:03:33,060 - DEBUG - ==== SSA block analysis pass on 253
2025-09-26 15:03:33,060 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1C51D0>
2025-09-26 15:03:33,061 - DEBUG - on stmt: jump 257
2025-09-26 15:03:33,061 - DEBUG - ==== SSA block analysis pass on 251
2025-09-26 15:03:33,061 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1C51D0>
2025-09-26 15:03:33,061 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:03:33,061 - DEBUG - on stmt: jump 257
2025-09-26 15:03:33,061 - DEBUG - ==== SSA block analysis pass on 257
2025-09-26 15:03:33,061 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1C51D0>
2025-09-26 15:03:33,061 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:33,062 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:03:33,062 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:33,062 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:33,062 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:33,062 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,062 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,063 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:33,063 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:33,063 - DEBUG - ==== SSA block analysis pass on 261
2025-09-26 15:03:33,063 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1C51D0>
2025-09-26 15:03:33,063 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:33,063 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,063 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,064 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:33,064 - DEBUG - ==== SSA block analysis pass on 289
2025-09-26 15:03:33,064 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1C51D0>
2025-09-26 15:03:33,064 - DEBUG - on stmt: jump 299
2025-09-26 15:03:33,064 - DEBUG - ==== SSA block analysis pass on 301
2025-09-26 15:03:33,064 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1C51D0>
2025-09-26 15:03:33,064 - DEBUG - on stmt: jump 305
2025-09-26 15:03:33,065 - DEBUG - ==== SSA block analysis pass on 299
2025-09-26 15:03:33,065 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1C51D0>
2025-09-26 15:03:33,065 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:33,065 - DEBUG - on stmt: jump 305
2025-09-26 15:03:33,065 - DEBUG - ==== SSA block analysis pass on 305
2025-09-26 15:03:33,065 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1C51D0>
2025-09-26 15:03:33,065 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,065 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,066 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:33,066 - DEBUG - ==== SSA block analysis pass on 309
2025-09-26 15:03:33,066 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1C51D0>
2025-09-26 15:03:33,066 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,066 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:33,066 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,066 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,067 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:33,067 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,067 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:33,067 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:33,067 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:33,067 - DEBUG - on stmt: jump 413
2025-09-26 15:03:33,067 - DEBUG - ==== SSA block analysis pass on 323
2025-09-26 15:03:33,068 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1C51D0>
2025-09-26 15:03:33,068 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,068 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:33,068 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,068 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,068 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:33,068 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,068 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:33,069 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:33,069 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:33,069 - DEBUG - on stmt: jump 413
2025-09-26 15:03:33,069 - DEBUG - ==== SSA block analysis pass on 413
2025-09-26 15:03:33,069 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1C51D0>
2025-09-26 15:03:33,069 - DEBUG - on stmt: jump 194
2025-09-26 15:03:33,069 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104store_slice.14.1': [(<numba.core.ir.Assign object at 0x000002985D198DD0>,
                                       0)],
             '$104store_slice.15.1': [(<numba.core.ir.Assign object at 0x000002985D198EF0>,
                                       0)],
             '$110pred': [(<numba.core.ir.Assign object at 0x000002985D167470>,
                           305)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x000002985D16F8F0>,
                                    309)],
             '$114store_slice.20.1': [(<numba.core.ir.Assign object at 0x000002985D199430>,
                                       0)],
             '$114store_slice.21.1': [(<numba.core.ir.Assign object at 0x000002985D199550>,
                                       0)],
             '$116load_global.22.1': [(<numba.core.ir.Assign object at 0x000002985D199670>,
                                       0)],
             '$124load_attr.1': [(<numba.core.ir.Assign object at 0x000002985D171070>,
                                  309)],
             '$126load_global.24.1': [(<numba.core.ir.Assign object at 0x000002985D199790>,
                                       0)],
             '$140call.28.1': [(<numba.core.ir.Assign object at 0x000002985D199AF0>,
                                0)],
             '$148call.4': [(<numba.core.ir.Assign object at 0x000002985D1727B0>,
                             309)],
             '$148unary_negative.29.1': [(<numba.core.ir.Assign object at 0x000002985D199C10>,
                                          0)],
             '$154binary_subscr.32.1': [(<numba.core.ir.Assign object at 0x000002985D199F10>,
                                         0)],
             '$156load_global.5': [(<numba.core.ir.Assign object at 0x000002985D173EF0>,
                                    309)],
             '$158load_global.33.1': [(<numba.core.ir.Assign object at 0x000002985D19A030>,
                                       0)],
             '$166load_attr.6': [(<numba.core.ir.Assign object at 0x000002985D175670>,
                                  309)],
             '$16unary_negative.4': [(<numba.core.ir.Assign object at 0x000002985D08BD10>,
                                      208)],
             '$172call.37.1': [(<numba.core.ir.Assign object at 0x000002985D19A390>,
                                0)],
             '$184call.39.1': [(<numba.core.ir.Assign object at 0x000002985D19A5D0>,
                                0)],
             '$190call.9': [(<numba.core.ir.Assign object at 0x000002985D176DB0>,
                             309)],
             '$192get_iter.40.1': [(<numba.core.ir.Assign object at 0x000002985D19A6F0>,
                                    0)],
             '$194for_iter.1.1': [(<numba.core.ir.Assign object at 0x000002985D199CD0>,
                                   194)],
             '$194for_iter.2.1': [(<numba.core.ir.Assign object at 0x000002985D19A810>,
                                   194)],
             '$194for_iter.3.1': [(<numba.core.ir.Assign object at 0x000002985D19A930>,
                                   194)],
             '$198compare_op.10': [(<numba.core.ir.Assign object at 0x000002985D178530>,
                                    309)],
             '$202return_value.11': [(<numba.core.ir.Assign object at 0x000002985D179C70>,
                                      309)],
             '$204load_global.0': [(<numba.core.ir.Assign object at 0x000002985D182150>,
                                    323)],
             '$214load_attr.1': [(<numba.core.ir.Assign object at 0x000002985D183890>,
                                  323)],
             '$214return_value.3.1': [(<numba.core.ir.Assign object at 0x000002985D19AF30>,
                                       414)],
             '$238call.4': [(<numba.core.ir.Assign object at 0x000002985D185010>,
                             323)],
             '$246load_global.5': [(<numba.core.ir.Assign object at 0x000002985D186750>,
                                    323)],
             '$24compare_op.6': [(<numba.core.ir.Assign object at 0x000002985CE2CEF0>,
                                  208)],
             '$256load_attr.6': [(<numba.core.ir.Assign object at 0x000002985D187E90>,
                                  323)],
             '$280call.9': [(<numba.core.ir.Assign object at 0x000002985D189610>,
                             323)],
             '$288compare_op.10': [(<numba.core.ir.Assign object at 0x000002985D18AD50>,
                                    323)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x000002985D198050>,
                                     0)],
             '$28pred': [(<numba.core.ir.Assign object at 0x000002985CF97CB0>,
                          208)],
             '$292return_value.11': [(<numba.core.ir.Assign object at 0x000002985D18C4D0>,
                                      323)],
             '$34compare_op.2': [(<numba.core.ir.Assign object at 0x000002985CFC8E90>,
                                  209)],
             '$38load_attr.3.1': [(<numba.core.ir.Assign object at 0x000002985D198170>,
                                   0)],
             '$38pred': [(<numba.core.ir.Assign object at 0x000002985CFB00B0>,
                          209)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x000002985D198350>,
                                     0)],
             '$64unary_negative.4': [(<numba.core.ir.Assign object at 0x000002985D14EC30>,
                                      257)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x000002985D198470>,
                                   0)],
             '$72compare_op.6': [(<numba.core.ir.Assign object at 0x000002985D1503B0>,
                                  257)],
             '$76pred': [(<numba.core.ir.Assign object at 0x000002985D153230>,
                          257)],
             '$82compare_op.2': [(<numba.core.ir.Assign object at 0x000002985D158DD0>,
                                  261)],
             '$86pred': [(<numba.core.ir.Assign object at 0x000002985D15BC50>,
                          261)],
             '$binop_sub180.38.1': [(<numba.core.ir.Assign object at 0x000002985D19A4B0>,
                                     0)],
             '$bool110': [(<numba.core.ir.Assign object at 0x000002985D165D30>,
                           305)],
             '$bool28': [(<numba.core.ir.Assign object at 0x000002985CF96330>,
                          208)],
             '$bool38': [(<numba.core.ir.Assign object at 0x000002985CFB3170>,
                          209)],
             '$bool76': [(<numba.core.ir.Assign object at 0x000002985D151AF0>,
                          257)],
             '$bool86': [(<numba.core.ir.Assign object at 0x000002985D15A510>,
                          261)],
             '$const100.12.0.1': [(<numba.core.ir.Assign object at 0x000002985D198B90>,
                                   0)],
             '$const102.13.3.1': [(<numba.core.ir.Assign object at 0x000002985D198CB0>,
                                   0)],
             '$const106.16.2.1': [(<numba.core.ir.Assign object at 0x000002985D199010>,
                                   0)],
             '$const110.18.2.1': [(<numba.core.ir.Assign object at 0x000002985D1991F0>,
                                   0)],
             '$const112.19.0.1': [(<numba.core.ir.Assign object at 0x000002985D199310>,
                                   0)],
             '$const136.26.2.1': [(<numba.core.ir.Assign object at 0x000002985D1998B0>,
                                   0)],
             '$const138.27.4.1': [(<numba.core.ir.Assign object at 0x000002985D1999D0>,
                                   0)],
             '$const152.31.2.1': [(<numba.core.ir.Assign object at 0x000002985D199DF0>,
                                   0)],
             '$const168.35.2.1': [(<numba.core.ir.Assign object at 0x000002985D19A150>,
                                   0)],
             '$const170.36.2.1': [(<numba.core.ir.Assign object at 0x000002985D19A270>,
                                   0)],
             '$const54.1.2': [(<numba.core.ir.Assign object at 0x000002985D14BD70>,
                               257)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x000002985CDD0770>,
                              208)],
             '$const90.8.1.1': [(<numba.core.ir.Assign object at 0x000002985D1986B0>,
                                 0)],
             '$const96.10.2.1': [(<numba.core.ir.Assign object at 0x000002985D1989B0>,
                                  0)],
             '$const_dtype.1': [(<numba.core.ir.Assign object at 0x000002985D198590>,
                                 0)],
             '$phi194.0.1': [(<numba.core.ir.Assign object at 0x000002985D18FEF0>,
                              0)],
             '$phi198.1.1': [(<numba.core.ir.Assign object at 0x000002985D19A9F0>,
                              194)],
             '$phi32.0': [(<numba.core.ir.Assign object at 0x000002985CF96AB0>,
                           208)],
             '$phi80.0': [(<numba.core.ir.Assign object at 0x000002985D1549B0>,
                           257)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x000002985D18FE30>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x000002985D19AB10>,
                          198)],
             'out0': [(<numba.core.ir.Assign object at 0x000002985D1987D0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x000002985CDD06B0>,
                                208),
                               (<numba.core.ir.Assign object at 0x000002985D18F2F0>,
                                257)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002985D18FB30>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002985D18FA10>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x000002985D102990>, 208),
                    (<numba.core.ir.Assign object at 0x000002985D148F50>, 251)],
             'x1': [(<numba.core.ir.Assign object at 0x000002985D18F3B0>, 257),
                    (<numba.core.ir.Assign object at 0x000002985D162ED0>, 299)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002985D18FC50>,
                           0)]})
2025-09-26 15:03:33,079 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002985D1C51D0>
2025-09-26 15:03:33,079 - DEBUG - Fix SSA violator on var stencil_index
2025-09-26 15:03:33,079 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:33,080 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,080 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:33,080 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:33,080 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:33,080 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:33,080 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,080 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:33,080 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,080 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:33,081 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:33,081 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:33,081 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,081 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:33,081 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:33,081 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:33,081 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:33,082 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,082 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:33,082 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:33,082 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:33,082 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:33,082 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:33,082 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,082 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:33,083 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:33,083 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:33,083 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:33,083 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:33,083 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,083 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:33,083 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:33,083 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:33,083 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:33,084 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:33,084 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:33,084 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,084 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:33,084 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,084 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:33,084 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:33,084 - DEBUG - on stmt: jump 194
2025-09-26 15:03:33,085 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:33,085 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,085 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:33,085 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:33,085 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:33,085 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:33,085 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:33,085 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:33,085 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,086 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:33,086 - DEBUG - on stmt: jump 208
2025-09-26 15:03:33,086 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:33,086 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,086 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:33,086 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:33,086 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:33,087 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,087 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:33,087 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:33,087 - DEBUG - first assign: stencil_index
2025-09-26 15:03:33,087 - DEBUG - replaced with: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:33,087 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:33,088 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:33,088 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:33,088 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,088 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,088 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:33,088 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:33,089 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:33,089 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,089 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:33,089 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,089 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,089 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:33,089 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:33,090 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,090 - DEBUG - on stmt: jump 251
2025-09-26 15:03:33,090 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:33,090 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,090 - DEBUG - on stmt: jump 257
2025-09-26 15:03:33,090 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:33,090 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,091 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:03:33,091 - DEBUG - on stmt: jump 257
2025-09-26 15:03:33,091 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:33,091 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,091 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:33,091 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:03:33,091 - DEBUG - replaced with: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:33,091 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:33,092 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:33,092 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:33,092 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,092 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,092 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:33,092 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:33,092 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:33,093 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,093 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:33,093 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,093 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,093 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:33,093 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:33,093 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,093 - DEBUG - on stmt: jump 299
2025-09-26 15:03:33,093 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:33,093 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,094 - DEBUG - on stmt: jump 305
2025-09-26 15:03:33,094 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:33,094 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,094 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:33,094 - DEBUG - on stmt: jump 305
2025-09-26 15:03:33,094 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:33,094 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,094 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,094 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,094 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:33,095 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:33,095 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,095 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,095 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:33,095 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,095 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,095 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:33,095 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,095 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:33,096 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:33,096 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:33,096 - DEBUG - on stmt: jump 413
2025-09-26 15:03:33,096 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:33,096 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,096 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,096 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:33,096 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,097 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,097 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:33,097 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,097 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:33,097 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:33,097 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:33,097 - DEBUG - on stmt: jump 413
2025-09-26 15:03:33,097 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:33,098 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,098 - DEBUG - on stmt: jump 194
2025-09-26 15:03:33,098 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002985D1C0590>],
             257: [<numba.core.ir.Assign object at 0x000002985D1C0830>]})
2025-09-26 15:03:33,098 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:33,098 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,098 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:33,098 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:33,098 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:33,099 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:33,099 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,099 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:33,099 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,099 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:33,099 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:33,099 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:33,099 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,100 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:33,100 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:33,100 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:33,100 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:33,100 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,100 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:33,100 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:33,100 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:33,100 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:33,100 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:33,101 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,101 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:33,101 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:33,101 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:33,101 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:33,101 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:33,101 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,101 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:33,102 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:33,102 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:33,102 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:33,102 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:33,102 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:33,102 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,103 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:33,103 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,103 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:33,103 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:33,103 - DEBUG - on stmt: jump 194
2025-09-26 15:03:33,103 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:33,103 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,104 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:33,104 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:33,104 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:33,104 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:33,104 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:33,104 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:33,104 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,104 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:33,104 - DEBUG - on stmt: jump 208
2025-09-26 15:03:33,105 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:33,105 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,105 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:33,105 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:33,105 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:33,105 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,106 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:33,106 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:33,106 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:33,106 - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:33,106 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:33,106 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:33,106 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,106 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,107 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:33,107 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:33,107 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:33,107 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,107 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:33,107 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,107 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,107 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:33,108 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:33,108 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,108 - DEBUG - on stmt: jump 251
2025-09-26 15:03:33,108 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:33,108 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,108 - DEBUG - on stmt: jump 257
2025-09-26 15:03:33,108 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:33,108 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,108 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:03:33,108 - DEBUG - on stmt: jump 257
2025-09-26 15:03:33,109 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:33,109 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,109 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:33,109 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:33,109 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:33,109 - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:33,109 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:33,109 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:33,109 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:33,110 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,110 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,110 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:33,110 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:33,110 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:33,110 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,110 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:33,110 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,110 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,111 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:33,111 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:33,111 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,111 - DEBUG - on stmt: jump 299
2025-09-26 15:03:33,111 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:33,111 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,111 - DEBUG - on stmt: jump 305
2025-09-26 15:03:33,111 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:33,111 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,112 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:33,112 - DEBUG - on stmt: jump 305
2025-09-26 15:03:33,112 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:33,112 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,112 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,112 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,112 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:33,112 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:33,113 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,113 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,113 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:33,113 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,113 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,113 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:33,113 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,113 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:33,113 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:33,114 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:33,114 - DEBUG - on stmt: jump 413
2025-09-26 15:03:33,114 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:33,114 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,114 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,114 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:33,114 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,114 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,114 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:33,115 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,115 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:33,115 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:33,115 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:33,115 - DEBUG - on stmt: jump 413
2025-09-26 15:03:33,115 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:33,115 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CDCA2B0>
2025-09-26 15:03:33,115 - DEBUG - on stmt: jump 194
2025-09-26 15:03:33,115 - DEBUG - Fix SSA violator on var x0
2025-09-26 15:03:33,116 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:33,116 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D132210>
2025-09-26 15:03:33,116 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:33,116 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:33,116 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:33,116 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:33,116 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,117 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:33,117 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,117 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:33,117 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:33,117 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:33,117 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,117 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:33,118 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:33,118 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:33,118 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:33,118 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,118 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:33,118 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:33,119 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:33,119 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:33,119 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:33,119 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,119 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:33,119 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:33,119 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:33,119 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:33,120 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:33,120 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,120 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:33,120 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:33,120 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:33,120 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:33,120 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:33,120 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:33,120 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,121 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:33,121 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,121 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:33,121 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:33,121 - DEBUG - on stmt: jump 194
2025-09-26 15:03:33,121 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:33,121 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D132210>
2025-09-26 15:03:33,121 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:33,122 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:33,122 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:33,122 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:33,122 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:33,122 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:33,122 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D132210>
2025-09-26 15:03:33,122 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:33,122 - DEBUG - on stmt: jump 208
2025-09-26 15:03:33,122 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:33,123 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D132210>
2025-09-26 15:03:33,123 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:33,123 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:33,123 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:33,123 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D132210>
2025-09-26 15:03:33,123 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:33,123 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:33,123 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:33,123 - DEBUG - first assign: x0
2025-09-26 15:03:33,123 - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:33,124 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:33,124 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:33,124 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,124 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,124 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:33,124 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:33,124 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:33,124 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D132210>
2025-09-26 15:03:33,124 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:33,125 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,125 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,125 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:33,125 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:33,125 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D132210>
2025-09-26 15:03:33,125 - DEBUG - on stmt: jump 251
2025-09-26 15:03:33,125 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:33,125 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D132210>
2025-09-26 15:03:33,125 - DEBUG - on stmt: jump 257
2025-09-26 15:03:33,125 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:33,126 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D132210>
2025-09-26 15:03:33,126 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:03:33,126 - DEBUG - replaced with: x0.1 = const(int, 0)
2025-09-26 15:03:33,126 - DEBUG - on stmt: jump 257
2025-09-26 15:03:33,126 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:33,126 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D132210>
2025-09-26 15:03:33,126 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:33,126 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:33,126 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:33,127 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:33,127 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:33,127 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,127 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,127 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:33,127 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:33,127 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:33,127 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D132210>
2025-09-26 15:03:33,127 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:33,128 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,128 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,128 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:33,128 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:33,128 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D132210>
2025-09-26 15:03:33,128 - DEBUG - on stmt: jump 299
2025-09-26 15:03:33,128 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:33,128 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D132210>
2025-09-26 15:03:33,128 - DEBUG - on stmt: jump 305
2025-09-26 15:03:33,128 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:33,129 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D132210>
2025-09-26 15:03:33,129 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:33,129 - DEBUG - on stmt: jump 305
2025-09-26 15:03:33,129 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:33,129 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D132210>
2025-09-26 15:03:33,129 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,129 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,130 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:33,130 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:33,130 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D132210>
2025-09-26 15:03:33,130 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,130 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:33,130 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,130 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,131 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:33,131 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,131 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:33,131 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:33,131 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:33,131 - DEBUG - on stmt: jump 413
2025-09-26 15:03:33,131 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:33,132 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D132210>
2025-09-26 15:03:33,132 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,132 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:33,132 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,132 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,132 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:33,132 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,133 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:33,133 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:33,133 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:33,133 - DEBUG - on stmt: jump 413
2025-09-26 15:03:33,133 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:33,133 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D132210>
2025-09-26 15:03:33,133 - DEBUG - on stmt: jump 194
2025-09-26 15:03:33,133 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002985D1C0950>],
             251: [<numba.core.ir.Assign object at 0x000002985D1C0650>]})
2025-09-26 15:03:33,134 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:33,134 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131F90>
2025-09-26 15:03:33,134 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:33,134 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:33,134 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:33,134 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:33,134 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,134 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:33,135 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,135 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:33,135 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:33,135 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:33,135 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,135 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:33,135 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:33,135 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:33,135 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:33,136 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,136 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:33,136 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:33,136 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:33,136 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:33,136 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:33,136 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,137 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:33,137 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:33,137 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:33,137 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:33,137 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:33,137 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,137 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:33,137 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:33,138 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:33,138 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:33,138 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:33,138 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:33,138 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,138 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:33,138 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,139 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:33,139 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:33,139 - DEBUG - on stmt: jump 194
2025-09-26 15:03:33,139 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:33,139 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131F90>
2025-09-26 15:03:33,139 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:33,139 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:33,139 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:33,139 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:33,140 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:33,140 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:33,140 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131F90>
2025-09-26 15:03:33,140 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:33,140 - DEBUG - on stmt: jump 208
2025-09-26 15:03:33,140 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:33,140 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131F90>
2025-09-26 15:03:33,140 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:33,140 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:33,140 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:33,141 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131F90>
2025-09-26 15:03:33,141 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:33,141 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:33,141 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:33,141 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:33,141 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:33,141 - DEBUG - find_def var='x0' stmt=$24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:33,141 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,141 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,142 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:33,142 - DEBUG - find_def var='x0' stmt=$phi32.0 = x0
2025-09-26 15:03:33,142 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:33,142 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:33,142 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131F90>
2025-09-26 15:03:33,142 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:33,143 - DEBUG - find_def var='x0' stmt=$34compare_op.2 = x0 <= threshold
2025-09-26 15:03:33,143 - DEBUG - find_def_from_top label 209
2025-09-26 15:03:33,143 - DEBUG - idom 208 from label 209
2025-09-26 15:03:33,143 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:03:33,143 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,143 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,143 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:33,144 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:33,144 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131F90>
2025-09-26 15:03:33,144 - DEBUG - on stmt: jump 251
2025-09-26 15:03:33,144 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:33,144 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131F90>
2025-09-26 15:03:33,144 - DEBUG - on stmt: jump 257
2025-09-26 15:03:33,144 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:33,145 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131F90>
2025-09-26 15:03:33,145 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:03:33,145 - DEBUG - on stmt: jump 257
2025-09-26 15:03:33,145 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:33,145 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131F90>
2025-09-26 15:03:33,145 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:33,145 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:33,146 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:33,146 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:33,146 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:33,146 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,146 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,146 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:33,146 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:33,147 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:33,147 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131F90>
2025-09-26 15:03:33,147 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:33,147 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,147 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,147 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:33,147 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:33,147 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131F90>
2025-09-26 15:03:33,148 - DEBUG - on stmt: jump 299
2025-09-26 15:03:33,148 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:33,148 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131F90>
2025-09-26 15:03:33,148 - DEBUG - on stmt: jump 305
2025-09-26 15:03:33,148 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:33,148 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131F90>
2025-09-26 15:03:33,148 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:33,148 - DEBUG - on stmt: jump 305
2025-09-26 15:03:33,148 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:33,149 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131F90>
2025-09-26 15:03:33,149 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,149 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,149 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:33,149 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:33,149 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131F90>
2025-09-26 15:03:33,149 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,149 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:33,149 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,150 - DEBUG - find_def var='x0' stmt=$148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,150 - DEBUG - find_def_from_top label 309
2025-09-26 15:03:33,150 - DEBUG - idom 305 from label 309
2025-09-26 15:03:33,150 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:03:33,150 - DEBUG - find_def_from_top label 305
2025-09-26 15:03:33,150 - DEBUG - idom 257 from label 305
2025-09-26 15:03:33,150 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:33,150 - DEBUG - find_def_from_top label 257
2025-09-26 15:03:33,150 - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 257
2025-09-26 15:03:33,150 - DEBUG - find_def_from_bottom label 209
2025-09-26 15:03:33,151 - DEBUG - find_def_from_top label 209
2025-09-26 15:03:33,151 - DEBUG - idom 208 from label 209
2025-09-26 15:03:33,151 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:03:33,151 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:33,151 - DEBUG - find_def_from_bottom label 251
2025-09-26 15:03:33,151 - DEBUG - incoming_def x0.1 = const(int, 0)
2025-09-26 15:03:33,151 - DEBUG - find_def_from_bottom label 253
2025-09-26 15:03:33,151 - DEBUG - find_def_from_top label 253
2025-09-26 15:03:33,151 - DEBUG - idom 208 from label 253
2025-09-26 15:03:33,152 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:03:33,152 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:33,152 - DEBUG - replaced with: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,152 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,152 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:33,152 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,153 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:33,153 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:33,153 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:33,153 - DEBUG - on stmt: jump 413
2025-09-26 15:03:33,153 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:33,153 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131F90>
2025-09-26 15:03:33,153 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,153 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:33,154 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,154 - DEBUG - find_def var='x0' stmt=$238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,154 - DEBUG - find_def_from_top label 323
2025-09-26 15:03:33,154 - DEBUG - idom 305 from label 323
2025-09-26 15:03:33,154 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:03:33,154 - DEBUG - find_def_from_top label 305
2025-09-26 15:03:33,154 - DEBUG - idom 257 from label 305
2025-09-26 15:03:33,154 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:33,154 - DEBUG - replaced with: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,155 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,155 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:33,155 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,155 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:33,155 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:33,155 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:33,155 - DEBUG - on stmt: jump 413
2025-09-26 15:03:33,155 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:33,156 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131F90>
2025-09-26 15:03:33,156 - DEBUG - on stmt: jump 194
2025-09-26 15:03:33,156 - DEBUG - Fix SSA violator on var x1
2025-09-26 15:03:33,156 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:33,156 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D131E50>
2025-09-26 15:03:33,156 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:33,157 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:33,157 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:33,157 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:33,157 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,157 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:33,157 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,157 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:33,158 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:33,158 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:33,158 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,158 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:33,158 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:33,158 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:33,158 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:33,159 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,159 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:33,159 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:33,159 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:33,159 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:33,159 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:33,159 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,160 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:33,160 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:33,160 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:33,160 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:33,160 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:33,160 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,160 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:33,160 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:33,161 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:33,161 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:33,161 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:33,161 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:33,161 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,161 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:33,161 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,162 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:33,162 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:33,162 - DEBUG - on stmt: jump 194
2025-09-26 15:03:33,162 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:33,162 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D131E50>
2025-09-26 15:03:33,162 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:33,162 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:33,162 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:33,163 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:33,163 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:33,163 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:33,163 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D131E50>
2025-09-26 15:03:33,163 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:33,163 - DEBUG - on stmt: jump 208
2025-09-26 15:03:33,163 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:33,163 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D131E50>
2025-09-26 15:03:33,163 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:33,164 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:33,164 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:33,164 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D131E50>
2025-09-26 15:03:33,164 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:33,164 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:33,164 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:33,164 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:33,164 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:33,165 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,165 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,165 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:33,165 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:33,165 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:33,165 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D131E50>
2025-09-26 15:03:33,165 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:33,165 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,166 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,166 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:33,166 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:33,166 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D131E50>
2025-09-26 15:03:33,166 - DEBUG - on stmt: jump 251
2025-09-26 15:03:33,166 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:33,166 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D131E50>
2025-09-26 15:03:33,166 - DEBUG - on stmt: jump 257
2025-09-26 15:03:33,166 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:33,167 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D131E50>
2025-09-26 15:03:33,167 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:03:33,167 - DEBUG - on stmt: jump 257
2025-09-26 15:03:33,167 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:33,167 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D131E50>
2025-09-26 15:03:33,167 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:03:33,168 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:33,168 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:33,168 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:33,168 - DEBUG - first assign: x1
2025-09-26 15:03:33,168 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:33,168 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:33,168 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:33,168 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,168 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,169 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:33,169 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:33,169 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:33,169 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D131E50>
2025-09-26 15:03:33,169 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:33,169 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,170 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,170 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:33,170 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:33,170 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D131E50>
2025-09-26 15:03:33,170 - DEBUG - on stmt: jump 299
2025-09-26 15:03:33,170 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:33,171 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D131E50>
2025-09-26 15:03:33,171 - DEBUG - on stmt: jump 305
2025-09-26 15:03:33,171 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:33,171 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D131E50>
2025-09-26 15:03:33,171 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:33,171 - DEBUG - replaced with: x1.1 = const(int, 0)
2025-09-26 15:03:33,171 - DEBUG - on stmt: jump 305
2025-09-26 15:03:33,171 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:33,172 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D131E50>
2025-09-26 15:03:33,172 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,172 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,172 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:33,172 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:33,173 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D131E50>
2025-09-26 15:03:33,173 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,173 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:33,173 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,173 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,173 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:33,173 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,174 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:33,174 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:33,174 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:33,174 - DEBUG - on stmt: jump 413
2025-09-26 15:03:33,174 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:33,174 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D131E50>
2025-09-26 15:03:33,174 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,174 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:33,175 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,175 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,175 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:33,175 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,176 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:33,176 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:33,176 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:33,176 - DEBUG - on stmt: jump 413
2025-09-26 15:03:33,176 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:33,176 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D131E50>
2025-09-26 15:03:33,176 - DEBUG - on stmt: jump 194
2025-09-26 15:03:33,176 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {257: [<numba.core.ir.Assign object at 0x000002985D1C0A70>],
             299: [<numba.core.ir.Assign object at 0x000002985D1C0A10>]})
2025-09-26 15:03:33,177 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:33,177 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131E50>
2025-09-26 15:03:33,177 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:33,177 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:33,177 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:33,177 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:33,178 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,178 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:33,178 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,178 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:33,178 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:33,178 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:33,179 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,179 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:33,179 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:33,179 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:33,179 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:33,179 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,179 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:33,180 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:33,180 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:33,180 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:33,180 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:33,180 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,180 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:33,180 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:33,180 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:33,180 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:33,181 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:33,181 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,181 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:33,181 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:33,181 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:33,181 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:33,181 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:33,181 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:33,182 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,182 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:33,182 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,182 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:33,182 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:33,183 - DEBUG - on stmt: jump 194
2025-09-26 15:03:33,183 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:33,183 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131E50>
2025-09-26 15:03:33,183 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:33,183 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:33,183 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:33,184 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:33,184 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:33,184 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:33,184 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131E50>
2025-09-26 15:03:33,184 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:33,184 - DEBUG - on stmt: jump 208
2025-09-26 15:03:33,184 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:33,185 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131E50>
2025-09-26 15:03:33,185 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:33,185 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:33,185 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:33,185 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131E50>
2025-09-26 15:03:33,185 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:33,186 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:33,186 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:33,186 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:33,186 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:33,186 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,187 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,187 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:33,187 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:33,187 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:33,187 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131E50>
2025-09-26 15:03:33,187 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:33,187 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,188 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,188 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:33,188 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:33,188 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131E50>
2025-09-26 15:03:33,188 - DEBUG - on stmt: jump 251
2025-09-26 15:03:33,188 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:33,188 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131E50>
2025-09-26 15:03:33,188 - DEBUG - on stmt: jump 257
2025-09-26 15:03:33,189 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:33,189 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131E50>
2025-09-26 15:03:33,189 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:03:33,189 - DEBUG - on stmt: jump 257
2025-09-26 15:03:33,189 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:33,189 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131E50>
2025-09-26 15:03:33,189 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:03:33,189 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:33,189 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:33,190 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:33,190 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:33,190 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:33,190 - DEBUG - find_def var='x1' stmt=$72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:33,190 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,190 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,190 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:33,190 - DEBUG - find_def var='x1' stmt=$phi80.0 = x1
2025-09-26 15:03:33,190 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:33,191 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:33,191 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131E50>
2025-09-26 15:03:33,191 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:33,191 - DEBUG - find_def var='x1' stmt=$82compare_op.2 = x1 <= threshold
2025-09-26 15:03:33,191 - DEBUG - find_def_from_top label 261
2025-09-26 15:03:33,191 - DEBUG - idom 257 from label 261
2025-09-26 15:03:33,191 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:33,191 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,191 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,192 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:33,192 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:33,192 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131E50>
2025-09-26 15:03:33,192 - DEBUG - on stmt: jump 299
2025-09-26 15:03:33,192 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:33,192 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131E50>
2025-09-26 15:03:33,192 - DEBUG - on stmt: jump 305
2025-09-26 15:03:33,193 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:33,193 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131E50>
2025-09-26 15:03:33,193 - DEBUG - on stmt: x1.1 = const(int, 0)
2025-09-26 15:03:33,193 - DEBUG - on stmt: jump 305
2025-09-26 15:03:33,193 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:33,193 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131E50>
2025-09-26 15:03:33,193 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:33,193 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,193 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:33,193 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:33,194 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131E50>
2025-09-26 15:03:33,194 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,194 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:33,194 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,194 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,194 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:33,194 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,194 - DEBUG - find_def var='x1' stmt=$190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,195 - DEBUG - find_def_from_top label 309
2025-09-26 15:03:33,195 - DEBUG - idom 305 from label 309
2025-09-26 15:03:33,195 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:03:33,195 - DEBUG - find_def_from_top label 305
2025-09-26 15:03:33,195 - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 305
2025-09-26 15:03:33,195 - DEBUG - find_def_from_bottom label 299
2025-09-26 15:03:33,195 - DEBUG - incoming_def x1.1 = const(int, 0)
2025-09-26 15:03:33,195 - DEBUG - find_def_from_bottom label 301
2025-09-26 15:03:33,195 - DEBUG - find_def_from_top label 301
2025-09-26 15:03:33,196 - DEBUG - idom 257 from label 301
2025-09-26 15:03:33,196 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:33,196 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:33,196 - DEBUG - find_def_from_bottom label 261
2025-09-26 15:03:33,196 - DEBUG - find_def_from_top label 261
2025-09-26 15:03:33,196 - DEBUG - idom 257 from label 261
2025-09-26 15:03:33,196 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:33,196 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:33,197 - DEBUG - replaced with: $190call.9 = call $166load_attr.6(x1.2, func=$166load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,197 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:33,197 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:33,197 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:33,197 - DEBUG - on stmt: jump 413
2025-09-26 15:03:33,198 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:33,198 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131E50>
2025-09-26 15:03:33,198 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,198 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:33,198 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,198 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:33,198 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:33,199 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,199 - DEBUG - find_def var='x1' stmt=$280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,199 - DEBUG - find_def_from_top label 323
2025-09-26 15:03:33,199 - DEBUG - idom 305 from label 323
2025-09-26 15:03:33,199 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:03:33,199 - DEBUG - replaced with: $280call.9 = call $256load_attr.6(x1.2, func=$256load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:33,199 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:33,200 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:33,200 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:33,200 - DEBUG - on stmt: jump 413
2025-09-26 15:03:33,200 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:33,200 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D131E50>
2025-09-26 15:03:33,200 - DEBUG - on stmt: jump 194
2025-09-26 15:03:33,214 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с librosa: 'function' object has no attribute 'get_call_template'
2025-09-26 15:03:33,220 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 15:03:33,220 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 15:03:33,221 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\ЛЮБОВЬ.mp3'>)))], 'idempotency_key': 'stainless-python-retry-bb28845b-bfae-4487-b9db-03cfe66ef9e0', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:03:33,222 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:33,222 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:33,223 - DEBUG - send_request_headers.complete
2025-09-26 15:03:33,223 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:33,228 - DEBUG - send_request_body.complete
2025-09-26 15:03:33,228 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:37,360 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:37 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'981'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'993'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_534d1ac2f7e74d11a47070c9175b6e87'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529e64dc948d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:37,360 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:37,361 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:37,361 - DEBUG - receive_response_body.complete
2025-09-26 15:03:37,361 - DEBUG - response_closed.started
2025-09-26 15:03:37,361 - DEBUG - response_closed.complete
2025-09-26 15:03:37,362 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:37 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '981', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '993', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_534d1ac2f7e74d11a47070c9175b6e87', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529e64dc948d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:37,362 - DEBUG - request_id: req_534d1ac2f7e74d11a47070c9175b6e87
2025-09-26 15:03:37,362 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'На снова играет сабвуфер, мы глупо назвали любовь.'
2025-09-26 15:03:37,362 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:03:37,363 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'На снова играет сабвуфер, мы глупо назвали любовь.'
2025-09-26 15:03:37,363 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: 'На снова играет сабвуфер, мы глупо назвали любовь.' (длина: 50)
2025-09-26 15:03:37,363 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 4 - музыкальный промпт
2025-09-26 15:03:37,364 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\ЛЮБОВЬ.mp3'>)))], 'idempotency_key': 'stainless-python-retry-a28c1808-4f1e-4514-8950-7cc3c4941dfa', 'json_data': {'model': 'gpt-4o-transcribe', 'prompt': 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.', 'response_format': 'text'}}
2025-09-26 15:03:37,364 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:37,365 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:37,365 - DEBUG - send_request_headers.complete
2025-09-26 15:03:37,365 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:37,370 - DEBUG - send_request_body.complete
2025-09-26 15:03:37,370 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:41,072 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:41 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1008'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1025'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_6ccfa1fbfaaf4a50856fcb6e4af15df8'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529e7ebc7c8d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:41,073 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:41,073 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:41,073 - DEBUG - receive_response_body.complete
2025-09-26 15:03:41,074 - DEBUG - response_closed.started
2025-09-26 15:03:41,074 - DEBUG - response_closed.complete
2025-09-26 15:03:41,074 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:41 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1008', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1025', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_6ccfa1fbfaaf4a50856fcb6e4af15df8', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529e7ebc7c8d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:41,074 - DEBUG - request_id: req_6ccfa1fbfaaf4a50856fcb6e4af15df8
2025-09-26 15:03:41,075 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'На снова играется музыка, мы группа название люблю.'
2025-09-26 15:03:41,075 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.'
2025-09-26 15:03:41,075 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'На снова играется музыка, мы группа название люблю.'
2025-09-26 15:03:41,075 - DEBUG - ТРАНСКРИПЦИЯ: Результат музыкального промпта: 'На снова играется музыка, мы группа название люблю.' (длина: 51)
2025-09-26 15:03:41,075 - DEBUG - ТРАНСКРИПЦИЯ: Выбран результат музыкального промпта
2025-09-26 15:03:41,076 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 5 - английский язык с музыкальным промптом
2025-09-26 15:03:41,076 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\ЛЮБОВЬ.mp3'>)))], 'idempotency_key': 'stainless-python-retry-170a4919-9039-47bd-ad91-33d176dca71f', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'en', 'prompt': 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.', 'response_format': 'text'}}
2025-09-26 15:03:41,077 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:41,077 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:41,078 - DEBUG - send_request_headers.complete
2025-09-26 15:03:41,078 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:41,083 - DEBUG - send_request_body.complete
2025-09-26 15:03:41,083 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:45,236 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:45 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1239'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1266'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_c85ec4ec4154463ba0807e2b962a4b1e'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529e95e9538d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:45,237 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:45,237 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:45,238 - DEBUG - receive_response_body.complete
2025-09-26 15:03:45,238 - DEBUG - response_closed.started
2025-09-26 15:03:45,238 - DEBUG - response_closed.complete
2025-09-26 15:03:45,238 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:45 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1239', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1266', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_c85ec4ec4154463ba0807e2b962a4b1e', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529e95e9538d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:45,239 - DEBUG - request_id: req_c85ec4ec4154463ba0807e2b962a4b1e
2025-09-26 15:03:45,239 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'На столбои играет вся мугл. Мы группа называем любовь.'
2025-09-26 15:03:45,239 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.'
2025-09-26 15:03:45,239 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'На столбои играет вся мугл. Мы группа называем любовь.'
2025-09-26 15:03:45,240 - DEBUG - ТРАНСКРИПЦИЯ: Результат английского музыкального промпта: 'На столбои играет вся мугл. Мы группа называем любовь.' (длина: 54)
2025-09-26 15:03:45,240 - DEBUG - ТРАНСКРИПЦИЯ: Выбран результат английского музыкального промпта
2025-09-26 15:03:45,240 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'На столбои играет вся мугл. Мы группа называем любовь.'
2025-09-26 15:03:45,240 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:03:45,241 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'На столбои играет вся мугл. Мы группа называем любовь.'
2025-09-26 15:03:45,241 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\ЛЮБОВЬ.mp3'>)))], 'idempotency_key': 'stainless-python-retry-0120eae1-8245-4055-b021-847ef344744b', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:03:45,242 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:45,243 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:45,243 - DEBUG - send_request_headers.complete
2025-09-26 15:03:45,243 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:45,249 - DEBUG - send_request_body.complete
2025-09-26 15:03:45,250 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:49,104 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:49 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'929'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'947'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_2cfc16f7f6a54e288006fdc1d023c0ca'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529eaff9d88d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:49,104 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:49,104 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:49,105 - DEBUG - receive_response_body.complete
2025-09-26 15:03:49,105 - DEBUG - response_closed.started
2025-09-26 15:03:49,105 - DEBUG - response_closed.complete
2025-09-26 15:03:49,105 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:49 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '929', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '947', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_2cfc16f7f6a54e288006fdc1d023c0ca', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529eaff9d88d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:49,106 - DEBUG - request_id: req_2cfc16f7f6a54e288006fdc1d023c0ca
2025-09-26 15:03:49,106 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'На сново играется море, мы глубо дыханием любовь.'
2025-09-26 15:03:49,106 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:03:49,106 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'На сново играется море, мы глубо дыханием любовь.'
2025-09-26 15:03:49,107 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-16bafc4f-f20b-4bf1-becd-1fae03aafce8', 'json_data': {'messages': [{'role': 'system', 'content': 'Ты — специализированная система для анализа аудиозаписей.\nТвоя единственная задача — классифицировать входной аудиофайл в одну из категорий: музыка, речь, шум.\n\nВАЖНО: Ты анализируешь РЕЗУЛЬТАТ ТРАНСКРИПЦИИ аудиофайла, а не сам аудиофайл. Это означает, что:\n- Если в аудио была музыка с вокалом, то в транскрипции будут слова песни\n- Если в аудио была речь, то в транскрипции будет связный текст\n- Если в аудио был шум, то в транскрипции будет мало слов или галлюцинации\n\nКатегории классификации:\n\nМузыка (music):\n- Это песня, музыкальная композиция с вокалом\n- Характерные признаки в транскрипции:\n  * Повторяющиеся фразы или слова (припев)\n  * Рифмы и ритмические паттерны\n  * Музыкальные звуки: "ла-ла-ла", "на-на-на", "о-о-о", "а-а-а"\n  * Эмоциональные восклицания: "Ауф!", "Ой!", "Ах!"\n  * Короткие фразы без логической связи\n  * Слова, которые звучат как песня, а не как обычная речь\n  * Повторяющиеся слова или фразы (припев песни)\n  * Ритмические паттерны в тексте\n\nРечь (speech):\n- Это обычная речь, разговор, диалог\n- Характерные признаки в транскрипции:\n  * Связные предложения с логической структурой\n  * Обычные слова и фразы\n  * Знаки препинания: точки, запятые, восклицательные знаки\n  * Логическая последовательность мыслей\n  * Отсутствие повторяющихся музыкальных паттернов\n  * Естественная речь без ритма\n\nШум (noise):\n- Это неречевые звуки, шум, техника, плач ребенка\n- Характерные признаки в транскрипции:\n  * Очень короткие или бессмысленные фрагменты\n  * Отсутствие связной речи\n  * Случайные слова или звуки\n  * Описания звуков: "[Music]", "[звук]", "[шум]"\n  * Повторяющиеся гласные: "ааа", "ууу", "ооо" (детский плач)\n  * Бессмысленные фразы: "Всем новичкам, всем новичкам"\n  * Короткие бессвязные слова\n\nПравила классификации:\n1. Если транскрипция содержит связную речь с логической структурой → speech\n2. Если транскрипция содержит повторяющиеся фразы, рифмы, музыкальные звуки → music\n3. Если транскрипция короткая, бессвязная или содержит описания звуков → noise\n4. При сомнениях между music и speech: если есть повторения или музыкальные звуки → music\n5. Детский плач (ааа, ууу, ооо) → noise\n6. Белый шум с бессмысленными словами → noise\n\nВАЖНЫЕ ПРИМЕРЫ:\n- "Скажи мне, не говори мне, что ты гонишь" → music (песня с повторениями)\n- "Привет, как дела?" → speech (обычная речь)\n- "Ааааааа" → noise (детский плач)\n- "Всем новичкам, всем новичкам" → noise (белый шум)\n- "Find me, find me, You can find" → music (песня с припевом)\n\nФормат ответа:\nОтвечай только в формате JSON, без лишнего текста:\n{\n  "classification": "music | speech | noise",\n  "confidence": 0.0-1.0,\n  "reasoning": "Краткое объяснение выбора: какие признаки были решающими"\n}\n\nОграничения:\n- Не добавляй ничего, кроме JSON\n- Не предлагай альтернативных категорий\n- Всегда возвращай одно значение в поле "classification"\n- Уровень уверенности (confidence) должен отражать баланс признаков:\n  * 0.9–1.0 → очень высокая уверенность\n  * 0.6–0.89 → умеренная уверенность\n  * <0.6 → низкая уверенность, признаки неоднозначны'}, {'role': 'user', 'content': 'Проанализируй следующий транскрипт аудио и классифицируй его:\n\nНа сново играется море, мы глубо дыханием любовь.'}], 'model': 'gpt-4o-mini', 'max_tokens': 200, 'temperature': 0.1}}
2025-09-26 15:03:49,108 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-26 15:03:49,108 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:49,109 - DEBUG - send_request_headers.complete
2025-09-26 15:03:49,109 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:49,109 - DEBUG - send_request_body.complete
2025-09-26 15:03:49,109 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:52,018 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1719'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1985'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'198668'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'399ms'), (b'x-request-id', b'req_cc0037967c2d4038b25c9904dd553bf9'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529ec81fd98d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:52,019 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 15:03:52,019 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:52,038 - DEBUG - receive_response_body.complete
2025-09-26 15:03:52,038 - DEBUG - response_closed.started
2025-09-26 15:03:52,038 - DEBUG - response_closed.complete
2025-09-26 15:03:52,039 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:51 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1719', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1985', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '198668', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '399ms', 'x-request-id': 'req_cc0037967c2d4038b25c9904dd553bf9', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529ec81fd98d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:52,039 - DEBUG - request_id: req_cc0037967c2d4038b25c9904dd553bf9
2025-09-26 15:03:52,040 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\ЛЮБОВЬ_vocals.mp3
2025-09-26 15:03:52,041 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 2, 'overlap': 0.25, 'jobs': 4}
2025-09-26 15:03:52,041 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла: examples\ЛЮБОВЬ_vocals.mp3
2025-09-26 15:03:52,041 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 15:03:52,041 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 15:03:52,041 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\ЛЮБОВЬ_vocals.mp3
2025-09-26 15:03:52,634 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 15:03:52,635 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\ЛЮБОВЬ_vocals.mp3
2025-09-26 15:03:52,692 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	RESUME(arg=0, lineno=1137)
           4	LOAD_FAST(arg=0, lineno=1140)
           6	LOAD_CONST(arg=1, lineno=1140)
           8	BINARY_SUBSCR(arg=None, lineno=1140)
          12	STORE_FAST(arg=3, lineno=1140)
          14	LOAD_FAST(arg=1, lineno=1141)
          16	UNARY_NEGATIVE(arg=None, lineno=1141)
          18	LOAD_FAST(arg=3, lineno=1141)
          20	SWAP(arg=2, lineno=1141)
          22	COPY(arg=2, lineno=1141)
          24	COMPARE_OP(arg=58, lineno=1141)
          28	POP_JUMP_IF_FALSE(arg=6, lineno=1141)
          32	LOAD_FAST(arg=1, lineno=1141)
          34	COMPARE_OP(arg=58, lineno=1141)
          38	POP_JUMP_IF_FALSE(arg=5, lineno=1141)
          42	JUMP_FORWARD(arg=2, lineno=1141)
>         44	POP_TOP(arg=None, lineno=1141)
          46	JUMP_FORWARD(arg=2, lineno=1141)
>         48	LOAD_CONST(arg=1, lineno=1142)
          50	STORE_FAST(arg=3, lineno=1142)
>         52	LOAD_FAST(arg=0, lineno=1144)
          54	LOAD_CONST(arg=2, lineno=1144)
          56	BINARY_SUBSCR(arg=None, lineno=1144)
          60	STORE_FAST(arg=4, lineno=1144)
          62	LOAD_FAST(arg=1, lineno=1145)
          64	UNARY_NEGATIVE(arg=None, lineno=1145)
          66	LOAD_FAST(arg=4, lineno=1145)
          68	SWAP(arg=2, lineno=1145)
          70	COPY(arg=2, lineno=1145)
          72	COMPARE_OP(arg=58, lineno=1145)
          76	POP_JUMP_IF_FALSE(arg=6, lineno=1145)
          80	LOAD_FAST(arg=1, lineno=1145)
          82	COMPARE_OP(arg=58, lineno=1145)
          86	POP_JUMP_IF_FALSE(arg=5, lineno=1145)
          90	JUMP_FORWARD(arg=2, lineno=1145)
>         92	POP_TOP(arg=None, lineno=1145)
          94	JUMP_FORWARD(arg=2, lineno=1145)
>         96	LOAD_CONST(arg=1, lineno=1146)
          98	STORE_FAST(arg=4, lineno=1146)
>        100	LOAD_FAST(arg=2, lineno=1148)
         102	TO_BOOL(arg=None, lineno=1148)
         110	POP_JUMP_IF_FALSE(arg=45, lineno=1148)
         114	LOAD_GLOBAL(arg=0, lineno=1149)
         124	LOAD_ATTR(arg=2, lineno=1149)
         144	PUSH_NULL(arg=None, lineno=1149)
         146	LOAD_FAST(arg=3, lineno=1149)
         148	CALL(arg=1, lineno=1149)
         156	LOAD_GLOBAL(arg=0, lineno=1149)
         166	LOAD_ATTR(arg=2, lineno=1149)
         186	PUSH_NULL(arg=None, lineno=1149)
         188	LOAD_FAST(arg=4, lineno=1149)
         190	CALL(arg=1, lineno=1149)
         198	COMPARE_OP(arg=103, lineno=1149)
         202	RETURN_VALUE(arg=None, lineno=1149)
>        204	LOAD_GLOBAL(arg=0, lineno=1151)
         214	LOAD_ATTR(arg=4, lineno=1151)
         234	PUSH_NULL(arg=None, lineno=1151)
         236	LOAD_FAST(arg=3, lineno=1151)
         238	CALL(arg=1, lineno=1151)
         246	LOAD_GLOBAL(arg=0, lineno=1151)
         256	LOAD_ATTR(arg=4, lineno=1151)
         276	PUSH_NULL(arg=None, lineno=1151)
         278	LOAD_FAST(arg=4, lineno=1151)
         280	CALL(arg=1, lineno=1151)
         288	COMPARE_OP(arg=103, lineno=1151)
         292	RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:03:52,693 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:03:52,694 - DEBUG - stack: []
2025-09-26 15:03:52,694 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:03:52,694 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-09-26 15:03:52,694 - DEBUG - stack []
2025-09-26 15:03:52,694 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1137)
2025-09-26 15:03:52,695 - DEBUG - stack []
2025-09-26 15:03:52,695 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1140)
2025-09-26 15:03:52,695 - DEBUG - stack []
2025-09-26 15:03:52,695 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1140)
2025-09-26 15:03:52,695 - DEBUG - stack ['$x4.0']
2025-09-26 15:03:52,695 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-09-26 15:03:52,696 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-09-26 15:03:52,696 - DEBUG - dispatch pc=12, inst=STORE_FAST(arg=3, lineno=1140)
2025-09-26 15:03:52,696 - DEBUG - stack ['$8binary_subscr.2']
2025-09-26 15:03:52,696 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:03:52,696 - DEBUG - stack []
2025-09-26 15:03:52,696 - DEBUG - dispatch pc=16, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-09-26 15:03:52,697 - DEBUG - stack ['$threshold14.3']
2025-09-26 15:03:52,697 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=1141)
2025-09-26 15:03:52,697 - DEBUG - stack ['$16unary_negative.4']
2025-09-26 15:03:52,697 - DEBUG - dispatch pc=20, inst=SWAP(arg=2, lineno=1141)
2025-09-26 15:03:52,697 - DEBUG - stack ['$16unary_negative.4', '$x018.5']
2025-09-26 15:03:52,697 - DEBUG - dispatch pc=22, inst=COPY(arg=2, lineno=1141)
2025-09-26 15:03:52,698 - DEBUG - stack ['$x018.5', '$16unary_negative.4']
2025-09-26 15:03:52,698 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:03:52,698 - DEBUG - stack ['$x018.5', '$16unary_negative.4', '$x018.5']
2025-09-26 15:03:52,698 - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1141)
2025-09-26 15:03:52,698 - DEBUG - stack ['$x018.5', '$24compare_op.6']
2025-09-26 15:03:52,698 - DEBUG - end state. edges=[Edge(pc=32, stack=('$x018.5',), blockstack=(), npush=0), Edge(pc=44, stack=('$x018.5',), blockstack=(), npush=0)]
2025-09-26 15:03:52,699 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=44 nstack_initial=1)])
2025-09-26 15:03:52,699 - DEBUG - stack: ['$phi32.0']
2025-09-26 15:03:52,699 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-09-26 15:03:52,699 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:03:52,699 - DEBUG - stack ['$phi32.0']
2025-09-26 15:03:52,699 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:03:52,699 - DEBUG - stack ['$phi32.0', '$threshold32.1']
2025-09-26 15:03:52,700 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1141)
2025-09-26 15:03:52,700 - DEBUG - stack ['$34compare_op.2']
2025-09-26 15:03:52,700 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:52,700 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=1), State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:03:52,700 - DEBUG - stack: ['$phi44.0']
2025-09-26 15:03:52,700 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=1)
2025-09-26 15:03:52,700 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=1141)
2025-09-26 15:03:52,701 - DEBUG - stack ['$phi44.0']
2025-09-26 15:03:52,701 - DEBUG - dispatch pc=46, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:03:52,701 - DEBUG - stack []
2025-09-26 15:03:52,701 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:52,701 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:03:52,701 - DEBUG - stack: []
2025-09-26 15:03:52,701 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-09-26 15:03:52,701 - DEBUG - dispatch pc=42, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:03:52,701 - DEBUG - stack []
2025-09-26 15:03:52,702 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:52,702 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2025-09-26 15:03:52,702 - DEBUG - stack: []
2025-09-26 15:03:52,702 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-09-26 15:03:52,702 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1144)
2025-09-26 15:03:52,702 - DEBUG - stack []
2025-09-26 15:03:52,702 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=1144)
2025-09-26 15:03:52,702 - DEBUG - stack ['$x52.0']
2025-09-26 15:03:52,703 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-09-26 15:03:52,703 - DEBUG - stack ['$x52.0', '$const54.1.2']
2025-09-26 15:03:52,703 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=4, lineno=1144)
2025-09-26 15:03:52,703 - DEBUG - stack ['$56binary_subscr.2']
2025-09-26 15:03:52,703 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:03:52,703 - DEBUG - stack []
2025-09-26 15:03:52,704 - DEBUG - dispatch pc=64, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-09-26 15:03:52,704 - DEBUG - stack ['$threshold62.3']
2025-09-26 15:03:52,704 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=4, lineno=1145)
2025-09-26 15:03:52,704 - DEBUG - stack ['$64unary_negative.4']
2025-09-26 15:03:52,704 - DEBUG - dispatch pc=68, inst=SWAP(arg=2, lineno=1145)
2025-09-26 15:03:52,704 - DEBUG - stack ['$64unary_negative.4', '$x166.5']
2025-09-26 15:03:52,705 - DEBUG - dispatch pc=70, inst=COPY(arg=2, lineno=1145)
2025-09-26 15:03:52,705 - DEBUG - stack ['$x166.5', '$64unary_negative.4']
2025-09-26 15:03:52,705 - DEBUG - dispatch pc=72, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:03:52,705 - DEBUG - stack ['$x166.5', '$64unary_negative.4', '$x166.5']
2025-09-26 15:03:52,706 - DEBUG - dispatch pc=76, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1145)
2025-09-26 15:03:52,706 - DEBUG - stack ['$x166.5', '$72compare_op.6']
2025-09-26 15:03:52,706 - DEBUG - end state. edges=[Edge(pc=80, stack=('$x166.5',), blockstack=(), npush=0), Edge(pc=92, stack=('$x166.5',), blockstack=(), npush=0)]
2025-09-26 15:03:52,706 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:03:52,706 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:03:52,707 - DEBUG - stack: []
2025-09-26 15:03:52,707 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-09-26 15:03:52,707 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1142)
2025-09-26 15:03:52,707 - DEBUG - stack []
2025-09-26 15:03:52,708 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=3, lineno=1142)
2025-09-26 15:03:52,708 - DEBUG - stack ['$const48.0.1']
2025-09-26 15:03:52,708 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:52,708 - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:03:52,708 - DEBUG - stack: ['$phi80.0']
2025-09-26 15:03:52,708 - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-09-26 15:03:52,708 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:03:52,709 - DEBUG - stack ['$phi80.0']
2025-09-26 15:03:52,709 - DEBUG - dispatch pc=82, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:03:52,709 - DEBUG - stack ['$phi80.0', '$threshold80.1']
2025-09-26 15:03:52,709 - DEBUG - dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1145)
2025-09-26 15:03:52,709 - DEBUG - stack ['$82compare_op.2']
2025-09-26 15:03:52,709 - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:52,710 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:52,710 - DEBUG - stack: ['$phi92.0']
2025-09-26 15:03:52,710 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=1)
2025-09-26 15:03:52,710 - DEBUG - dispatch pc=92, inst=POP_TOP(arg=None, lineno=1145)
2025-09-26 15:03:52,710 - DEBUG - stack ['$phi92.0']
2025-09-26 15:03:52,710 - DEBUG - dispatch pc=94, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:03:52,711 - DEBUG - stack []
2025-09-26 15:03:52,711 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:52,711 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:52,711 - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:52,711 - DEBUG - stack: []
2025-09-26 15:03:52,711 - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-09-26 15:03:52,712 - DEBUG - dispatch pc=90, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:03:52,712 - DEBUG - stack []
2025-09-26 15:03:52,712 - DEBUG - end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:52,712 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-09-26 15:03:52,712 - DEBUG - stack: []
2025-09-26 15:03:52,713 - DEBUG - state.pc_initial: State(pc_initial=100 nstack_initial=0)
2025-09-26 15:03:52,713 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=2, lineno=1148)
2025-09-26 15:03:52,713 - DEBUG - stack []
2025-09-26 15:03:52,713 - DEBUG - dispatch pc=102, inst=TO_BOOL(arg=None, lineno=1148)
2025-09-26 15:03:52,713 - DEBUG - stack ['$zero_pos100.0']
2025-09-26 15:03:52,713 - DEBUG - dispatch pc=110, inst=POP_JUMP_IF_FALSE(arg=45, lineno=1148)
2025-09-26 15:03:52,714 - DEBUG - stack ['$102to_bool.1']
2025-09-26 15:03:52,714 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=204, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:52,714 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:03:52,714 - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:03:52,714 - DEBUG - stack: []
2025-09-26 15:03:52,715 - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2025-09-26 15:03:52,715 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=1, lineno=1146)
2025-09-26 15:03:52,715 - DEBUG - stack []
2025-09-26 15:03:52,715 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=4, lineno=1146)
2025-09-26 15:03:52,715 - DEBUG - stack ['$const96.0.1']
2025-09-26 15:03:52,715 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:03:52,716 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:52,716 - DEBUG - stack: []
2025-09-26 15:03:52,716 - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2025-09-26 15:03:52,716 - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:03:52,716 - DEBUG - stack []
2025-09-26 15:03:52,716 - DEBUG - dispatch pc=124, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:03:52,717 - DEBUG - stack ['$114load_global.0']
2025-09-26 15:03:52,717 - DEBUG - dispatch pc=144, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:03:52,717 - DEBUG - stack ['$124load_attr.1']
2025-09-26 15:03:52,717 - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=3, lineno=1149)
2025-09-26 15:03:52,717 - DEBUG - stack ['$124load_attr.1', '$null$144.2']
2025-09-26 15:03:52,717 - DEBUG - dispatch pc=148, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:03:52,717 - DEBUG - stack ['$124load_attr.1', '$null$144.2', '$x0146.3']
2025-09-26 15:03:52,718 - DEBUG - dispatch pc=156, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:03:52,718 - DEBUG - stack ['$148call.4']
2025-09-26 15:03:52,718 - DEBUG - dispatch pc=166, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:03:52,718 - DEBUG - stack ['$148call.4', '$156load_global.5']
2025-09-26 15:03:52,718 - DEBUG - dispatch pc=186, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:03:52,718 - DEBUG - stack ['$148call.4', '$166load_attr.6']
2025-09-26 15:03:52,719 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=4, lineno=1149)
2025-09-26 15:03:52,719 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7']
2025-09-26 15:03:52,719 - DEBUG - dispatch pc=190, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:03:52,719 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7', '$x1188.8']
2025-09-26 15:03:52,719 - DEBUG - dispatch pc=198, inst=COMPARE_OP(arg=103, lineno=1149)
2025-09-26 15:03:52,719 - DEBUG - stack ['$148call.4', '$190call.9']
2025-09-26 15:03:52,719 - DEBUG - dispatch pc=202, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-09-26 15:03:52,719 - DEBUG - stack ['$198compare_op.10']
2025-09-26 15:03:52,720 - DEBUG - end state. edges=[]
2025-09-26 15:03:52,720 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:52,720 - DEBUG - stack: []
2025-09-26 15:03:52,720 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=0)
2025-09-26 15:03:52,720 - DEBUG - dispatch pc=204, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:03:52,720 - DEBUG - stack []
2025-09-26 15:03:52,720 - DEBUG - dispatch pc=214, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:03:52,720 - DEBUG - stack ['$204load_global.0']
2025-09-26 15:03:52,721 - DEBUG - dispatch pc=234, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:03:52,721 - DEBUG - stack ['$214load_attr.1']
2025-09-26 15:03:52,721 - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=3, lineno=1151)
2025-09-26 15:03:52,721 - DEBUG - stack ['$214load_attr.1', '$null$234.2']
2025-09-26 15:03:52,721 - DEBUG - dispatch pc=238, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:03:52,721 - DEBUG - stack ['$214load_attr.1', '$null$234.2', '$x0236.3']
2025-09-26 15:03:52,721 - DEBUG - dispatch pc=246, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:03:52,721 - DEBUG - stack ['$238call.4']
2025-09-26 15:03:52,722 - DEBUG - dispatch pc=256, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:03:52,722 - DEBUG - stack ['$238call.4', '$246load_global.5']
2025-09-26 15:03:52,722 - DEBUG - dispatch pc=276, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:03:52,722 - DEBUG - stack ['$238call.4', '$256load_attr.6']
2025-09-26 15:03:52,722 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=4, lineno=1151)
2025-09-26 15:03:52,722 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7']
2025-09-26 15:03:52,723 - DEBUG - dispatch pc=280, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:03:52,723 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7', '$x1278.8']
2025-09-26 15:03:52,723 - DEBUG - dispatch pc=288, inst=COMPARE_OP(arg=103, lineno=1151)
2025-09-26 15:03:52,723 - DEBUG - stack ['$238call.4', '$280call.9']
2025-09-26 15:03:52,723 - DEBUG - dispatch pc=292, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:03:52,723 - DEBUG - stack ['$288compare_op.10']
2025-09-26 15:03:52,723 - DEBUG - end state. edges=[]
2025-09-26 15:03:52,724 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:03:52,724 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:03:52,724 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=1): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=204 nstack_initial=0): set()})
2025-09-26 15:03:52,725 - DEBUG - defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi44.0': State(pc_initial=0 nstack_initial=0),
 '$phi80.0': State(pc_initial=52 nstack_initial=0),
 '$phi92.0': State(pc_initial=52 nstack_initial=0)}
2025-09-26 15:03:52,725 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:03:52,725 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:03:52,726 - DEBUG - keep phismap: {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
 '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}}
2025-09-26 15:03:52,726 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$x018.5'},
             State(pc_initial=52 nstack_initial=0): {'$phi80.0': '$x166.5'}})
2025-09-26 15:03:52,726 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:03:52,727 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'value': '$8binary_subscr.2'}), (14, {'res': '$threshold14.3'}), (16, {'value': '$threshold14.3', 'res': '$16unary_negative.4'}), (18, {'res': '$x018.5'}), (24, {'lhs': '$16unary_negative.4', 'rhs': '$x018.5', 'res': '$24compare_op.6'}), (28, {'pred': '$24compare_op.6'})), outgoing_phis={'$phi32.0': '$x018.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$x018.5',), 44: ('$x018.5',)})
2025-09-26 15:03:52,727 - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'res': '$threshold32.1'}), (34, {'lhs': '$phi32.0', 'rhs': '$threshold32.1', 'res': '$34compare_op.2'}), (38, {'pred': '$34compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 52: ()})
2025-09-26 15:03:52,727 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ()})
2025-09-26 15:03:52,727 - DEBUG - block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((46, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:03:52,728 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$const48.0.1'}), (50, {'value': '$const48.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:03:52,728 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$x52.0'}), (54, {'res': '$const54.1.2'}), (56, {'index': '$const54.1.2', 'target': '$x52.0', 'res': '$56binary_subscr.2'}), (60, {'value': '$56binary_subscr.2'}), (62, {'res': '$threshold62.3'}), (64, {'value': '$threshold62.3', 'res': '$64unary_negative.4'}), (66, {'res': '$x166.5'}), (72, {'lhs': '$64unary_negative.4', 'rhs': '$x166.5', 'res': '$72compare_op.6'}), (76, {'pred': '$72compare_op.6'})), outgoing_phis={'$phi80.0': '$x166.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$x166.5',), 92: ('$x166.5',)})
2025-09-26 15:03:52,728 - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$threshold80.1'}), (82, {'lhs': '$phi80.0', 'rhs': '$threshold80.1', 'res': '$82compare_op.2'}), (86, {'pred': '$82compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 100: ()})
2025-09-26 15:03:52,728 - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
2025-09-26 15:03:52,729 - DEBUG - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((94, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:03:52,729 - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$const96.0.1'}), (98, {'value': '$const96.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:03:52,729 - DEBUG - block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$zero_pos100.0'}), (102, {'val': '$zero_pos100.0', 'res': '$102to_bool.1'}), (110, {'pred': '$102to_bool.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 204: ()})
2025-09-26 15:03:52,729 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'idx': 0, 'res': '$114load_global.0'}), (124, {'item': '$114load_global.0', 'res': '$124load_attr.1'}), (144, {}), (146, {'res': '$x0146.3'}), (148, {'func': '$124load_attr.1', 'args': ['$x0146.3'], 'kw_names': None, 'res': '$148call.4'}), (156, {'idx': 0, 'res': '$156load_global.5'}), (166, {'item': '$156load_global.5', 'res': '$166load_attr.6'}), (186, {}), (188, {'res': '$x1188.8'}), (190, {'func': '$166load_attr.6', 'args': ['$x1188.8'], 'kw_names': None, 'res': '$190call.9'}), (198, {'lhs': '$148call.4', 'rhs': '$190call.9', 'res': '$198compare_op.10'}), (202, {'retval': '$198compare_op.10', 'castval': '$202return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:03:52,729 - DEBUG - block_infos State(pc_initial=204 nstack_initial=0):
AdaptBlockInfo(insts=((204, {'idx': 0, 'res': '$204load_global.0'}), (214, {'item': '$204load_global.0', 'res': '$214load_attr.1'}), (234, {}), (236, {'res': '$x0236.3'}), (238, {'func': '$214load_attr.1', 'args': ['$x0236.3'], 'kw_names': None, 'res': '$238call.4'}), (246, {'idx': 0, 'res': '$246load_global.5'}), (256, {'item': '$246load_global.5', 'res': '$256load_attr.6'}), (276, {}), (278, {'res': '$x1278.8'}), (280, {'func': '$256load_attr.6', 'args': ['$x1278.8'], 'kw_names': None, 'res': '$280call.9'}), (288, {'lhs': '$238call.4', 'rhs': '$280call.9', 'res': '$288compare_op.10'}), (292, {'retval': '$288compare_op.10', 'castval': '$292return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:03:52,730 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    x0 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$const6.1.1', 'x', 'x0']
    $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$16unary_negative.4', 'threshold']
    $24compare_op.6 = $16unary_negative.4 <= x0 ['$16unary_negative.4', '$24compare_op.6', 'x0']
    $bool28 = global(bool: <class 'bool'>)   ['$bool28']
    $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.6', '$28pred', '$bool28']
    $phi32.0 = x0                            ['$phi32.0', 'x0']
    branch $28pred, 32, 44                   ['$28pred']
label 32:
    $34compare_op.2 = $phi32.0 <= threshold  ['$34compare_op.2', '$phi32.0', 'threshold']
    $bool38 = global(bool: <class 'bool'>)   ['$bool38']
    $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.2', '$38pred', '$bool38']
    branch $38pred, 42, 52                   ['$38pred']
label 42:
    jump 48                                  []
label 44:
    jump 52                                  []
label 48:
    x0 = const(int, 0)                       ['x0']
    jump 52                                  []
label 52:
    $const54.1.2 = const(int, -1)            ['$const54.1.2']
    x1 = getitem(value=x, index=$const54.1.2, fn=<built-in function getitem>) ['$const54.1.2', 'x', 'x1']
    $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$64unary_negative.4', 'threshold']
    $72compare_op.6 = $64unary_negative.4 <= x1 ['$64unary_negative.4', '$72compare_op.6', 'x1']
    $bool76 = global(bool: <class 'bool'>)   ['$bool76']
    $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$72compare_op.6', '$76pred', '$bool76']
    $phi80.0 = x1                            ['$phi80.0', 'x1']
    branch $76pred, 80, 92                   ['$76pred']
label 80:
    $82compare_op.2 = $phi80.0 <= threshold  ['$82compare_op.2', '$phi80.0', 'threshold']
    $bool86 = global(bool: <class 'bool'>)   ['$bool86']
    $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$82compare_op.2', '$86pred', '$bool86']
    branch $86pred, 90, 100                  ['$86pred']
label 90:
    jump 96                                  []
label 92:
    jump 100                                 []
label 96:
    x1 = const(int, 0)                       ['x1']
    jump 100                                 []
label 100:
    $bool110 = global(bool: <class 'bool'>)  ['$bool110']
    $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$110pred', '$bool110', 'zero_pos']
    branch $110pred, 114, 204                ['$110pred']
label 114:
    $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$114load_global.0']
    $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit) ['$114load_global.0', '$124load_attr.1']
    $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$124load_attr.1', '$148call.4', 'x0']
    $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$156load_global.5']
    $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit) ['$156load_global.5', '$166load_attr.6']
    $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.6', '$190call.9', 'x1']
    $198compare_op.10 = $148call.4 != $190call.9 ['$148call.4', '$190call.9', '$198compare_op.10']
    $202return_value.11 = cast(value=$198compare_op.10) ['$198compare_op.10', '$202return_value.11']
    return $202return_value.11               ['$202return_value.11']
label 204:
    $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$204load_global.0']
    $214load_attr.1 = getattr(value=$204load_global.0, attr=sign) ['$204load_global.0', '$214load_attr.1']
    $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.1', '$238call.4', 'x0']
    $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$246load_global.5']
    $256load_attr.6 = getattr(value=$246load_global.5, attr=sign) ['$246load_global.5', '$256load_attr.6']
    $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$256load_attr.6', '$280call.9', 'x1']
    $288compare_op.10 = $238call.4 != $280call.9 ['$238call.4', '$280call.9', '$288compare_op.10']
    $292return_value.11 = cast(value=$288compare_op.10) ['$288compare_op.10', '$292return_value.11']
    return $292return_value.11               ['$292return_value.11']

2025-09-26 15:03:52,737 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1154)
           2	RESUME(arg=0, lineno=1154)
           4	LOAD_GLOBAL(arg=1, lineno=1170)
          14	LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
          16	LOAD_FAST(arg=2, lineno=1170)
          18	CALL(arg=3, lineno=1170)
          26	LOAD_FAST(arg=3, lineno=1170)
          28	LOAD_CONST(arg=1, lineno=1170)
          30	LOAD_CONST(arg=1, lineno=1170)
          32	STORE_SLICE(arg=None, lineno=1170)
          34	RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:03:52,737 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:03:52,738 - DEBUG - stack: []
2025-09-26 15:03:52,738 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:03:52,738 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1154)
2025-09-26 15:03:52,738 - DEBUG - stack []
2025-09-26 15:03:52,738 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1154)
2025-09-26 15:03:52,738 - DEBUG - stack []
2025-09-26 15:03:52,739 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1170)
2025-09-26 15:03:52,739 - DEBUG - stack []
2025-09-26 15:03:52,739 - DEBUG - dispatch pc=14, inst=LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
2025-09-26 15:03:52,739 - DEBUG - stack ['$4load_global.0', '$null$4.1']
2025-09-26 15:03:52,739 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=1170)
2025-09-26 15:03:52,739 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3']
2025-09-26 15:03:52,740 - DEBUG - dispatch pc=18, inst=CALL(arg=3, lineno=1170)
2025-09-26 15:03:52,740 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3', '$zero_pos16.4']
2025-09-26 15:03:52,740 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=3, lineno=1170)
2025-09-26 15:03:52,740 - DEBUG - stack ['$18call.5']
2025-09-26 15:03:52,740 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:03:52,740 - DEBUG - stack ['$18call.5', '$y26.6']
2025-09-26 15:03:52,740 - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:03:52,741 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1']
2025-09-26 15:03:52,741 - DEBUG - dispatch pc=32, inst=STORE_SLICE(arg=None, lineno=1170)
2025-09-26 15:03:52,741 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1', '$const30.8.1']
2025-09-26 15:03:52,741 - DEBUG - dispatch pc=34, inst=RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:03:52,741 - DEBUG - stack []
2025-09-26 15:03:52,741 - DEBUG - end state. edges=[]
2025-09-26 15:03:52,742 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:03:52,742 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-09-26 15:03:52,742 - DEBUG - defmap: {}
2025-09-26 15:03:52,742 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:03:52,742 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:03:52,742 - DEBUG - keep phismap: {}
2025-09-26 15:03:52,742 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-09-26 15:03:52,743 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:03:52,743 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res1': '$x14.2', 'res2': '$threshold14.3'}), (16, {'res': '$zero_pos16.4'}), (18, {'func': '$4load_global.0', 'args': ['$x14.2', '$threshold14.3', '$zero_pos16.4'], 'kw_names': None, 'res': '$18call.5'}), (26, {'res': '$y26.6'}), (28, {'res': '$const28.7.1'}), (30, {'res': '$const30.8.1'}), (32, {'start': '$const28.7.1', 'end': '$const30.8.1', 'container': '$y26.6', 'value': '$18call.5', 'res': '$32store_slice.10', 'slicevar': '$32store_slice.9'}), (34, {'retval': '$const34.11', 'castval': '$34return_const.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:03:52,743 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002985CEA9590>) ['$4load_global.0']
    $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const28.7.1 = const(NoneType, None)     ['$const28.7.1']
    $const30.8.1 = const(NoneType, None)     ['$const30.8.1']
    $32store_slice.9 = global(slice: <class 'slice'>) ['$32store_slice.9']
    $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$32store_slice.10', '$32store_slice.9', '$const28.7.1', '$const30.8.1']
    y[$32store_slice.10] = $18call.5         ['$18call.5', '$32store_slice.10', 'y']
    $const34.11 = const(NoneType, None)      ['$const34.11']
    $34return_const.12 = cast(value=$const34.11) ['$34return_const.12', '$const34.11']
    return $34return_const.12                ['$34return_const.12']

2025-09-26 15:03:52,747 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:03:52,747 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1265B0>
2025-09-26 15:03:52,748 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:52,748 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:52,748 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:52,748 - DEBUG - on stmt: y = arg(3, name=y)
2025-09-26 15:03:52,748 - DEBUG - on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002985CEA9590>)
2025-09-26 15:03:52,748 - DEBUG - on stmt: $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,749 - DEBUG - on stmt: $const28.7.1 = const(NoneType, None)
2025-09-26 15:03:52,749 - DEBUG - on stmt: $const30.8.1 = const(NoneType, None)
2025-09-26 15:03:52,749 - DEBUG - on stmt: $32store_slice.9 = global(slice: <class 'slice'>)
2025-09-26 15:03:52,749 - DEBUG - on stmt: $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,749 - DEBUG - on stmt: y[slice(None, None, None)] = $18call.5
2025-09-26 15:03:52,750 - DEBUG - on stmt: $const34.11 = const(NoneType, None)
2025-09-26 15:03:52,750 - DEBUG - on stmt: $34return_const.12 = cast(value=$const34.11)
2025-09-26 15:03:52,750 - DEBUG - on stmt: return $34return_const.12
2025-09-26 15:03:52,750 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.5': [(<numba.core.ir.Assign object at 0x000002985CF0ABD0>,
                            0)],
             '$32store_slice.10': [(<numba.core.ir.Assign object at 0x000002985CF0BDD0>,
                                    0)],
             '$32store_slice.9': [(<numba.core.ir.Assign object at 0x000002985CF0BBF0>,
                                   0)],
             '$34return_const.12': [(<numba.core.ir.Assign object at 0x000002985CF0A3F0>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000002985D18F830>,
                                  0)],
             '$const28.7.1': [(<numba.core.ir.Assign object at 0x000002985CF09D90>,
                               0)],
             '$const30.8.1': [(<numba.core.ir.Assign object at 0x000002985CF0B650>,
                               0)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x000002985CF09D30>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002985D18C350>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002985D18F230>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000002985D18FEF0>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002985D18FFB0>,
                           0)]})
2025-09-26 15:03:52,751 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002985D1265B0>
2025-09-26 15:03:52,798 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=3, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=3, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	LOAD_CONST(arg=1, lineno=3)
          92	CALL_KW(arg=2, lineno=3)
          94	STORE_FAST(arg=4, lineno=3)
          96	LOAD_CONST(arg=2, lineno=4)
          98	LOAD_FAST(arg=4, lineno=4)
         100	LOAD_CONST(arg=0, lineno=4)
         102	LOAD_CONST(arg=3, lineno=4)
         104	STORE_SLICE(arg=None, lineno=4)
         106	LOAD_CONST(arg=2, lineno=5)
         108	LOAD_FAST(arg=4, lineno=5)
         110	LOAD_CONST(arg=2, lineno=5)
         112	LOAD_CONST(arg=0, lineno=5)
         114	STORE_SLICE(arg=None, lineno=5)
         116	LOAD_GLOBAL(arg=9, lineno=6)
         126	LOAD_GLOBAL(arg=11, lineno=6)
         136	LOAD_CONST(arg=2, lineno=6)
         138	LOAD_CONST(arg=4, lineno=6)
         140	CALL(arg=2, lineno=6)
         148	UNARY_NEGATIVE(arg=None, lineno=6)
         150	LOAD_FAST(arg=3, lineno=6)
         152	LOAD_CONST(arg=2, lineno=6)
         154	BINARY_SUBSCR(arg=None, lineno=6)
         158	LOAD_GLOBAL(arg=13, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	LOAD_CONST(arg=2, lineno=6)
         172	CALL(arg=2, lineno=6)
         180	BINARY_OP(arg=10, lineno=6)
         184	CALL(arg=2, lineno=6)
         192	GET_ITER(arg=None, lineno=6)
>        194	FOR_ITER(arg=5, lineno=6)
         198	STORE_FAST(arg=5, lineno=6)
         200	LOAD_CONST(arg=2, lineno=7)
         202	STORE_FAST(arg=6, lineno=7)
         204	JUMP_BACKWARD(arg=7, lineno=7)
>        208	END_FOR(arg=None, lineno=6)
         210	POP_TOP(arg=None, lineno=6)
         212	LOAD_FAST(arg=4, lineno=8)
         214	RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:03:52,799 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:03:52,799 - DEBUG - stack: []
2025-09-26 15:03:52,799 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:03:52,799 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-09-26 15:03:52,799 - DEBUG - stack []
2025-09-26 15:03:52,799 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2025-09-26 15:03:52,800 - DEBUG - stack []
2025-09-26 15:03:52,800 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2025-09-26 15:03:52,800 - DEBUG - stack []
2025-09-26 15:03:52,800 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2025-09-26 15:03:52,800 - DEBUG - stack ['$x4.0']
2025-09-26 15:03:52,800 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=3, lineno=2)
2025-09-26 15:03:52,800 - DEBUG - stack ['$6load_attr.1']
2025-09-26 15:03:52,800 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:03:52,801 - DEBUG - stack []
2025-09-26 15:03:52,801 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2025-09-26 15:03:52,801 - DEBUG - stack ['$28load_global.2']
2025-09-26 15:03:52,801 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=3, lineno=3)
2025-09-26 15:03:52,801 - DEBUG - stack ['$38load_attr.3', '$null$38.4']
2025-09-26 15:03:52,801 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:03:52,801 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5']
2025-09-26 15:03:52,801 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2025-09-26 15:03:52,801 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$60load_global.6']
2025-09-26 15:03:52,802 - DEBUG - dispatch pc=90, inst=LOAD_CONST(arg=1, lineno=3)
2025-09-26 15:03:52,802 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7']
2025-09-26 15:03:52,802 - DEBUG - dispatch pc=92, inst=CALL_KW(arg=2, lineno=3)
2025-09-26 15:03:52,802 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7', '$const90.8.1']
2025-09-26 15:03:52,802 - DEBUG - dispatch pc=94, inst=STORE_FAST(arg=4, lineno=3)
2025-09-26 15:03:52,803 - DEBUG - stack ['$92call_kw.9']
2025-09-26 15:03:52,803 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=2, lineno=4)
2025-09-26 15:03:52,803 - DEBUG - stack []
2025-09-26 15:03:52,803 - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=4)
2025-09-26 15:03:52,803 - DEBUG - stack ['$const96.10.2']
2025-09-26 15:03:52,804 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=0, lineno=4)
2025-09-26 15:03:52,804 - DEBUG - stack ['$const96.10.2', '$out098.11']
2025-09-26 15:03:52,804 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=3, lineno=4)
2025-09-26 15:03:52,804 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0']
2025-09-26 15:03:52,804 - DEBUG - dispatch pc=104, inst=STORE_SLICE(arg=None, lineno=4)
2025-09-26 15:03:52,805 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0', '$const102.13.3']
2025-09-26 15:03:52,805 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:03:52,805 - DEBUG - stack []
2025-09-26 15:03:52,805 - DEBUG - dispatch pc=108, inst=LOAD_FAST(arg=4, lineno=5)
2025-09-26 15:03:52,805 - DEBUG - stack ['$const106.16.2']
2025-09-26 15:03:52,805 - DEBUG - dispatch pc=110, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:03:52,806 - DEBUG - stack ['$const106.16.2', '$out0108.17']
2025-09-26 15:03:52,806 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=0, lineno=5)
2025-09-26 15:03:52,806 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2']
2025-09-26 15:03:52,806 - DEBUG - dispatch pc=114, inst=STORE_SLICE(arg=None, lineno=5)
2025-09-26 15:03:52,806 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2', '$const112.19.0']
2025-09-26 15:03:52,806 - DEBUG - dispatch pc=116, inst=LOAD_GLOBAL(arg=9, lineno=6)
2025-09-26 15:03:52,807 - DEBUG - stack []
2025-09-26 15:03:52,807 - DEBUG - dispatch pc=126, inst=LOAD_GLOBAL(arg=11, lineno=6)
2025-09-26 15:03:52,807 - DEBUG - stack ['$116load_global.22', '$null$116.23']
2025-09-26 15:03:52,807 - DEBUG - dispatch pc=136, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:03:52,807 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25']
2025-09-26 15:03:52,807 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=4, lineno=6)
2025-09-26 15:03:52,808 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2']
2025-09-26 15:03:52,808 - DEBUG - dispatch pc=140, inst=CALL(arg=2, lineno=6)
2025-09-26 15:03:52,808 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2', '$const138.27.4']
2025-09-26 15:03:52,808 - DEBUG - dispatch pc=148, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-09-26 15:03:52,808 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$140call.28']
2025-09-26 15:03:52,808 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=3, lineno=6)
2025-09-26 15:03:52,809 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29']
2025-09-26 15:03:52,809 - DEBUG - dispatch pc=152, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:03:52,809 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30']
2025-09-26 15:03:52,809 - DEBUG - dispatch pc=154, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-09-26 15:03:52,809 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30', '$const152.31.2']
2025-09-26 15:03:52,809 - DEBUG - dispatch pc=158, inst=LOAD_GLOBAL(arg=13, lineno=6)
2025-09-26 15:03:52,809 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32']
2025-09-26 15:03:52,810 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:03:52,810 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34']
2025-09-26 15:03:52,810 - DEBUG - dispatch pc=170, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:03:52,810 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2']
2025-09-26 15:03:52,810 - DEBUG - dispatch pc=172, inst=CALL(arg=2, lineno=6)
2025-09-26 15:03:52,811 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2', '$const170.36.2']
2025-09-26 15:03:52,811 - DEBUG - dispatch pc=180, inst=BINARY_OP(arg=10, lineno=6)
2025-09-26 15:03:52,811 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$172call.37']
2025-09-26 15:03:52,811 - DEBUG - dispatch pc=184, inst=CALL(arg=2, lineno=6)
2025-09-26 15:03:52,811 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$binop_sub180.38']
2025-09-26 15:03:52,811 - DEBUG - dispatch pc=192, inst=GET_ITER(arg=None, lineno=6)
2025-09-26 15:03:52,812 - DEBUG - stack ['$184call.39']
2025-09-26 15:03:52,812 - DEBUG - end state. edges=[Edge(pc=194, stack=('$192get_iter.40',), blockstack=(), npush=0)]
2025-09-26 15:03:52,812 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:03:52,812 - DEBUG - stack: ['$phi194.0']
2025-09-26 15:03:52,812 - DEBUG - state.pc_initial: State(pc_initial=194 nstack_initial=1)
2025-09-26 15:03:52,812 - DEBUG - dispatch pc=194, inst=FOR_ITER(arg=5, lineno=6)
2025-09-26 15:03:52,812 - DEBUG - stack ['$phi194.0']
2025-09-26 15:03:52,813 - DEBUG - end state. edges=[Edge(pc=208, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0), Edge(pc=198, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0)]
2025-09-26 15:03:52,813 - DEBUG - pending: deque([State(pc_initial=208 nstack_initial=2), State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:03:52,813 - DEBUG - stack: ['$phi208.0', '$phi208.1']
2025-09-26 15:03:52,813 - DEBUG - state.pc_initial: State(pc_initial=208 nstack_initial=2)
2025-09-26 15:03:52,813 - DEBUG - dispatch pc=208, inst=END_FOR(arg=None, lineno=6)
2025-09-26 15:03:52,813 - DEBUG - stack ['$phi208.0', '$phi208.1']
2025-09-26 15:03:52,813 - DEBUG - dispatch pc=210, inst=POP_TOP(arg=None, lineno=6)
2025-09-26 15:03:52,814 - DEBUG - stack ['$phi208.0']
2025-09-26 15:03:52,814 - DEBUG - dispatch pc=212, inst=LOAD_FAST(arg=4, lineno=8)
2025-09-26 15:03:52,814 - DEBUG - stack []
2025-09-26 15:03:52,814 - DEBUG - dispatch pc=214, inst=RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:03:52,814 - DEBUG - stack ['$out0212.2']
2025-09-26 15:03:52,814 - DEBUG - end state. edges=[]
2025-09-26 15:03:52,815 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:03:52,815 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2025-09-26 15:03:52,815 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2025-09-26 15:03:52,815 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=5, lineno=6)
2025-09-26 15:03:52,815 - DEBUG - stack ['$phi198.0', '$phi198.1']
2025-09-26 15:03:52,815 - DEBUG - dispatch pc=200, inst=LOAD_CONST(arg=2, lineno=7)
2025-09-26 15:03:52,815 - DEBUG - stack ['$phi198.0']
2025-09-26 15:03:52,816 - DEBUG - dispatch pc=202, inst=STORE_FAST(arg=6, lineno=7)
2025-09-26 15:03:52,816 - DEBUG - stack ['$phi198.0', '$const200.2.2']
2025-09-26 15:03:52,816 - DEBUG - dispatch pc=204, inst=JUMP_BACKWARD(arg=7, lineno=7)
2025-09-26 15:03:52,816 - DEBUG - stack ['$phi198.0']
2025-09-26 15:03:52,816 - DEBUG - end state. edges=[Edge(pc=194, stack=('$phi198.0',), blockstack=(), npush=0)]
2025-09-26 15:03:52,817 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:03:52,817 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:03:52,817 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=194 nstack_initial=1): {'$phi194.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=208 nstack_initial=2): set()})
2025-09-26 15:03:52,817 - DEBUG - defmap: {'$phi194.0': State(pc_initial=0 nstack_initial=0),
 '$phi198.1': State(pc_initial=194 nstack_initial=1),
 '$phi208.1': State(pc_initial=194 nstack_initial=1)}
2025-09-26 15:03:52,817 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi198.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:03:52,818 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:03:52,819 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:03:52,819 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:03:52,820 - DEBUG - keep phismap: {'$phi194.0': {('$192get_iter.40', State(pc_initial=0 nstack_initial=0))},
 '$phi198.1': {('$194for_iter.2', State(pc_initial=194 nstack_initial=1))}}
2025-09-26 15:03:52,820 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi194.0': '$192get_iter.40'},
             State(pc_initial=194 nstack_initial=1): {'$phi198.1': '$194for_iter.2'}})
2025-09-26 15:03:52,821 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:03:52,821 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.3'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (90, {'res': '$const90.8.1'}), (92, {'func': '$38load_attr.3', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': '$const90.8.1', 'res': '$92call_kw.9'}), (94, {'value': '$92call_kw.9'}), (96, {'res': '$const96.10.2'}), (98, {'res': '$out098.11'}), (100, {'res': '$const100.12.0'}), (102, {'res': '$const102.13.3'}), (104, {'start': '$const100.12.0', 'end': '$const102.13.3', 'container': '$out098.11', 'value': '$const96.10.2', 'res': '$104store_slice.15', 'slicevar': '$104store_slice.14'}), (106, {'res': '$const106.16.2'}), (108, {'res': '$out0108.17'}), (110, {'res': '$const110.18.2'}), (112, {'res': '$const112.19.0'}), (114, {'start': '$const110.18.2', 'end': '$const112.19.0', 'container': '$out0108.17', 'value': '$const106.16.2', 'res': '$114store_slice.21', 'slicevar': '$114store_slice.20'}), (116, {'idx': 4, 'res': '$116load_global.22'}), (126, {'idx': 5, 'res': '$126load_global.24'}), (136, {'res': '$const136.26.2'}), (138, {'res': '$const138.27.4'}), (140, {'func': '$126load_global.24', 'args': ['$const136.26.2', '$const138.27.4'], 'kw_names': None, 'res': '$140call.28'}), (148, {'value': '$140call.28', 'res': '$148unary_negative.29'}), (150, {'res': '$full_shape0150.30'}), (152, {'res': '$const152.31.2'}), (154, {'index': '$const152.31.2', 'target': '$full_shape0150.30', 'res': '$154binary_subscr.32'}), (158, {'idx': 6, 'res': '$158load_global.33'}), (168, {'res': '$const168.35.2'}), (170, {'res': '$const170.36.2'}), (172, {'func': '$158load_global.33', 'args': ['$const168.35.2', '$const170.36.2'], 'kw_names': None, 'res': '$172call.37'}), (180, {'op': '-', 'lhs': '$154binary_subscr.32', 'rhs': '$172call.37', 'res': '$binop_sub180.38'}), (184, {'func': '$116load_global.22', 'args': ['$148unary_negative.29', '$binop_sub180.38'], 'kw_names': None, 'res': '$184call.39'}), (192, {'value': '$184call.39', 'res': '$192get_iter.40'})), outgoing_phis={'$phi194.0': '$192get_iter.40'}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$192get_iter.40',)})
2025-09-26 15:03:52,821 - DEBUG - block_infos State(pc_initial=194 nstack_initial=1):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.0', 'pair': '$194for_iter.1', 'indval': '$194for_iter.2', 'pred': '$194for_iter.3'}),), outgoing_phis={'$phi198.1': '$194for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={208: ('$phi194.0', '$194for_iter.2'), 198: ('$phi194.0', '$194for_iter.2')})
2025-09-26 15:03:52,821 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$const200.2.2'}), (202, {'value': '$const200.2.2'}), (204, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$phi198.0',)})
2025-09-26 15:03:52,822 - DEBUG - block_infos State(pc_initial=208 nstack_initial=2):
AdaptBlockInfo(insts=((212, {'res': '$out0212.2'}), (214, {'retval': '$out0212.2', 'castval': '$214return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:03:52,823 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$28load_global.2']
    $38load_attr.3 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.3']
    $60load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool) ['$60load_global.6', '$70load_attr.7']
    $const_dtype = const(str, dtype)         ['$const_dtype']
    $const90.8.1 = build_tuple(items=[Var($const_dtype, <string>:3)]) ['$const90.8.1', '$const_dtype']
    out0 = call $38load_attr.3(full_shape0, func=$38load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.3', '$70load_attr.7', 'full_shape0', 'out0']
    $const96.10.2 = const(int, 0)            ['$const96.10.2']
    $const100.12.0 = const(NoneType, None)   ['$const100.12.0']
    $const102.13.3 = const(int, 1)           ['$const102.13.3']
    $104store_slice.14 = global(slice: <class 'slice'>) ['$104store_slice.14']
    $104store_slice.15 = call $104store_slice.14($const100.12.0, $const102.13.3, func=$104store_slice.14, args=(Var($const100.12.0, <string>:4), Var($const102.13.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$104store_slice.14', '$104store_slice.15', '$const100.12.0', '$const102.13.3']
    out0[$104store_slice.15] = $const96.10.2 ['$104store_slice.15', '$const96.10.2', 'out0']
    $const106.16.2 = const(int, 0)           ['$const106.16.2']
    $const110.18.2 = const(int, 0)           ['$const110.18.2']
    $const112.19.0 = const(NoneType, None)   ['$const112.19.0']
    $114store_slice.20 = global(slice: <class 'slice'>) ['$114store_slice.20']
    $114store_slice.21 = call $114store_slice.20($const110.18.2, $const112.19.0, func=$114store_slice.20, args=(Var($const110.18.2, <string>:5), Var($const112.19.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$114store_slice.20', '$114store_slice.21', '$const110.18.2', '$const112.19.0']
    out0[$114store_slice.21] = $const106.16.2 ['$114store_slice.21', '$const106.16.2', 'out0']
    $116load_global.22 = global(range: <class 'range'>) ['$116load_global.22']
    $126load_global.24 = global(min: <built-in function min>) ['$126load_global.24']
    $const136.26.2 = const(int, 0)           ['$const136.26.2']
    $const138.27.4 = const(int, -1)          ['$const138.27.4']
    $140call.28 = call $126load_global.24($const136.26.2, $const138.27.4, func=$126load_global.24, args=[Var($const136.26.2, <string>:6), Var($const138.27.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_global.24', '$140call.28', '$const136.26.2', '$const138.27.4']
    $148unary_negative.29 = unary(fn=<built-in function neg>, value=$140call.28) ['$140call.28', '$148unary_negative.29']
    $const152.31.2 = const(int, 0)           ['$const152.31.2']
    $154binary_subscr.32 = getitem(value=full_shape0, index=$const152.31.2, fn=<built-in function getitem>) ['$154binary_subscr.32', '$const152.31.2', 'full_shape0']
    $158load_global.33 = global(max: <built-in function max>) ['$158load_global.33']
    $const168.35.2 = const(int, 0)           ['$const168.35.2']
    $const170.36.2 = const(int, 0)           ['$const170.36.2']
    $172call.37 = call $158load_global.33($const168.35.2, $const170.36.2, func=$158load_global.33, args=[Var($const168.35.2, <string>:6), Var($const170.36.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$158load_global.33', '$172call.37', '$const168.35.2', '$const170.36.2']
    $binop_sub180.38 = $154binary_subscr.32 - $172call.37 ['$154binary_subscr.32', '$172call.37', '$binop_sub180.38']
    $184call.39 = call $116load_global.22($148unary_negative.29, $binop_sub180.38, func=$116load_global.22, args=[Var($148unary_negative.29, <string>:6), Var($binop_sub180.38, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.22', '$148unary_negative.29', '$184call.39', '$binop_sub180.38']
    $192get_iter.40 = getiter(value=$184call.39) ['$184call.39', '$192get_iter.40']
    $phi194.0 = $192get_iter.40              ['$192get_iter.40', '$phi194.0']
    jump 194                                 []
label 194:
    $194for_iter.1 = iternext(value=$phi194.0) ['$194for_iter.1', '$phi194.0']
    $194for_iter.2 = pair_first(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.2']
    $194for_iter.3 = pair_second(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.3']
    $phi198.1 = $194for_iter.2               ['$194for_iter.2', '$phi198.1']
    branch $194for_iter.3, 198, 208          ['$194for_iter.3']
label 198:
    index00 = $phi198.1                      ['$phi198.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 194                                 []
label 208:
    $214return_value.3 = cast(value=out0)    ['$214return_value.3', 'out0']
    return $214return_value.3                ['$214return_value.3']

2025-09-26 15:03:52,849 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:03:52,849 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CCD4F50>
2025-09-26 15:03:52,849 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:52,850 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:52,850 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:52,850 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:52,850 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,850 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:52,850 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,850 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:52,851 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:52,851 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:52,851 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,851 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:52,851 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:52,851 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:52,851 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:52,851 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,851 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:52,852 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:52,852 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:52,852 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:52,852 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:52,852 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,852 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:52,852 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:52,852 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:52,853 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:52,853 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:52,853 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,853 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:52,853 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:52,853 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:52,853 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:52,853 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:52,854 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:52,854 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,854 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:52,854 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,854 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:52,854 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:52,854 - DEBUG - on stmt: jump 194
2025-09-26 15:03:52,855 - DEBUG - ==== SSA block analysis pass on 194
2025-09-26 15:03:52,855 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CCD4F50>
2025-09-26 15:03:52,855 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:52,855 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:52,855 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:52,855 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:52,855 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:52,856 - DEBUG - ==== SSA block analysis pass on 198
2025-09-26 15:03:52,856 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CCD4F50>
2025-09-26 15:03:52,856 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:52,856 - DEBUG - on stmt: jump 208
2025-09-26 15:03:52,856 - DEBUG - ==== SSA block analysis pass on 414
2025-09-26 15:03:52,856 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CCD4F50>
2025-09-26 15:03:52,856 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:52,857 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:52,857 - DEBUG - ==== SSA block analysis pass on 208
2025-09-26 15:03:52,857 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CCD4F50>
2025-09-26 15:03:52,857 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:52,857 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:52,857 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:52,857 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:52,858 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:52,858 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,858 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,858 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:52,858 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:52,858 - DEBUG - ==== SSA block analysis pass on 209
2025-09-26 15:03:52,858 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CCD4F50>
2025-09-26 15:03:52,859 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:52,859 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,859 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,859 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:52,859 - DEBUG - ==== SSA block analysis pass on 241
2025-09-26 15:03:52,859 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CCD4F50>
2025-09-26 15:03:52,859 - DEBUG - on stmt: jump 251
2025-09-26 15:03:52,860 - DEBUG - ==== SSA block analysis pass on 253
2025-09-26 15:03:52,860 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CCD4F50>
2025-09-26 15:03:52,860 - DEBUG - on stmt: jump 257
2025-09-26 15:03:52,860 - DEBUG - ==== SSA block analysis pass on 251
2025-09-26 15:03:52,860 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CCD4F50>
2025-09-26 15:03:52,860 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:03:52,860 - DEBUG - on stmt: jump 257
2025-09-26 15:03:52,860 - DEBUG - ==== SSA block analysis pass on 257
2025-09-26 15:03:52,861 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CCD4F50>
2025-09-26 15:03:52,861 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:52,861 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:03:52,861 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:52,861 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:52,861 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:52,861 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,861 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,861 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:52,862 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:52,862 - DEBUG - ==== SSA block analysis pass on 261
2025-09-26 15:03:52,862 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CCD4F50>
2025-09-26 15:03:52,862 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:52,862 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,862 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,862 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:52,862 - DEBUG - ==== SSA block analysis pass on 289
2025-09-26 15:03:52,862 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CCD4F50>
2025-09-26 15:03:52,863 - DEBUG - on stmt: jump 299
2025-09-26 15:03:52,863 - DEBUG - ==== SSA block analysis pass on 301
2025-09-26 15:03:52,863 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CCD4F50>
2025-09-26 15:03:52,863 - DEBUG - on stmt: jump 305
2025-09-26 15:03:52,863 - DEBUG - ==== SSA block analysis pass on 299
2025-09-26 15:03:52,863 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CCD4F50>
2025-09-26 15:03:52,863 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:52,863 - DEBUG - on stmt: jump 305
2025-09-26 15:03:52,863 - DEBUG - ==== SSA block analysis pass on 305
2025-09-26 15:03:52,864 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CCD4F50>
2025-09-26 15:03:52,864 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,864 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,864 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:52,864 - DEBUG - ==== SSA block analysis pass on 309
2025-09-26 15:03:52,864 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CCD4F50>
2025-09-26 15:03:52,864 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,864 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:52,865 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,865 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,865 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:52,865 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,865 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:52,865 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:52,865 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:52,865 - DEBUG - on stmt: jump 413
2025-09-26 15:03:52,866 - DEBUG - ==== SSA block analysis pass on 323
2025-09-26 15:03:52,866 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CCD4F50>
2025-09-26 15:03:52,866 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,866 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:52,866 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,866 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,866 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:52,866 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,866 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:52,867 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:52,867 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:52,867 - DEBUG - on stmt: jump 413
2025-09-26 15:03:52,867 - DEBUG - ==== SSA block analysis pass on 413
2025-09-26 15:03:52,867 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CCD4F50>
2025-09-26 15:03:52,867 - DEBUG - on stmt: jump 194
2025-09-26 15:03:52,867 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104store_slice.14.1': [(<numba.core.ir.Assign object at 0x000002985D1998B0>,
                                       0)],
             '$104store_slice.15.1': [(<numba.core.ir.Assign object at 0x000002985D199910>,
                                       0)],
             '$110pred': [(<numba.core.ir.Assign object at 0x000002985D14C050>,
                           305)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x000002985D14A570>,
                                    309)],
             '$114store_slice.20.1': [(<numba.core.ir.Assign object at 0x000002985D19A1B0>,
                                       0)],
             '$114store_slice.21.1': [(<numba.core.ir.Assign object at 0x000002985D19A4B0>,
                                       0)],
             '$116load_global.22.1': [(<numba.core.ir.Assign object at 0x000002985D19A510>,
                                       0)],
             '$124load_attr.1': [(<numba.core.ir.Assign object at 0x000002985D14BB90>,
                                  309)],
             '$126load_global.24.1': [(<numba.core.ir.Assign object at 0x000002985D19ACF0>,
                                       0)],
             '$140call.28.1': [(<numba.core.ir.Assign object at 0x000002985D19B830>,
                                0)],
             '$148call.4': [(<numba.core.ir.Assign object at 0x000002985D148C50>,
                             309)],
             '$148unary_negative.29.1': [(<numba.core.ir.Assign object at 0x000002985D19B710>,
                                          0)],
             '$154binary_subscr.32.1': [(<numba.core.ir.Assign object at 0x000002985D19B410>,
                                         0)],
             '$156load_global.5': [(<numba.core.ir.Assign object at 0x000002985D13C950>,
                                    309)],
             '$158load_global.33.1': [(<numba.core.ir.Assign object at 0x000002985D19B2F0>,
                                       0)],
             '$166load_attr.6': [(<numba.core.ir.Assign object at 0x000002985D13E9F0>,
                                  309)],
             '$16unary_negative.4': [(<numba.core.ir.Assign object at 0x000002985CDD3230>,
                                      208)],
             '$172call.37.1': [(<numba.core.ir.Assign object at 0x000002985D19AED0>,
                                0)],
             '$184call.39.1': [(<numba.core.ir.Assign object at 0x000002985D19A7B0>,
                                0)],
             '$190call.9': [(<numba.core.ir.Assign object at 0x000002985D13D1F0>,
                             309)],
             '$192get_iter.40.1': [(<numba.core.ir.Assign object at 0x000002985D19A570>,
                                    0)],
             '$194for_iter.1.1': [(<numba.core.ir.Assign object at 0x000002985D19B650>,
                                   194)],
             '$194for_iter.2.1': [(<numba.core.ir.Assign object at 0x000002985D19A210>,
                                   194)],
             '$194for_iter.3.1': [(<numba.core.ir.Assign object at 0x000002985D199EB0>,
                                   194)],
             '$198compare_op.10': [(<numba.core.ir.Assign object at 0x000002985D15B170>,
                                    309)],
             '$202return_value.11': [(<numba.core.ir.Assign object at 0x000002985D1598B0>,
                                      309)],
             '$204load_global.0': [(<numba.core.ir.Assign object at 0x000002985D15FD70>,
                                    323)],
             '$214load_attr.1': [(<numba.core.ir.Assign object at 0x000002985D153F50>,
                                  323)],
             '$214return_value.3.1': [(<numba.core.ir.Assign object at 0x000002985D198D70>,
                                       414)],
             '$238call.4': [(<numba.core.ir.Assign object at 0x000002985D152690>,
                             323)],
             '$246load_global.5': [(<numba.core.ir.Assign object at 0x000002985D150DD0>,
                                    323)],
             '$24compare_op.6': [(<numba.core.ir.Assign object at 0x000002985CFC9A90>,
                                  208)],
             '$256load_attr.6': [(<numba.core.ir.Assign object at 0x000002985D156E70>,
                                  323)],
             '$280call.9': [(<numba.core.ir.Assign object at 0x000002985D1556D0>,
                             323)],
             '$288compare_op.10': [(<numba.core.ir.Assign object at 0x000002985D157E30>,
                                    323)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x000002985D19BCB0>,
                                     0)],
             '$28pred': [(<numba.core.ir.Assign object at 0x000002985D0E7350>,
                          208)],
             '$292return_value.11': [(<numba.core.ir.Assign object at 0x000002985D1B5010>,
                                      323)],
             '$34compare_op.2': [(<numba.core.ir.Assign object at 0x000002985D0A4A10>,
                                  209)],
             '$38load_attr.3.1': [(<numba.core.ir.Assign object at 0x000002985D1987D0>,
                                   0)],
             '$38pred': [(<numba.core.ir.Assign object at 0x000002985CFB2E70>,
                          209)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x000002985D19BE30>,
                                     0)],
             '$64unary_negative.4': [(<numba.core.ir.Assign object at 0x000002985D13B770>,
                                      257)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x000002985D19BE90>,
                                   0)],
             '$72compare_op.6': [(<numba.core.ir.Assign object at 0x000002985D16DBB0>,
                                  257)],
             '$76pred': [(<numba.core.ir.Assign object at 0x000002985D16E510>,
                          257)],
             '$82compare_op.2': [(<numba.core.ir.Assign object at 0x000002985D177E90>,
                                  261)],
             '$86pred': [(<numba.core.ir.Assign object at 0x000002985D17BBF0>,
                          261)],
             '$binop_sub180.38.1': [(<numba.core.ir.Assign object at 0x000002985D19ABD0>,
                                     0)],
             '$bool110': [(<numba.core.ir.Assign object at 0x000002985D14D8B0>,
                           305)],
             '$bool28': [(<numba.core.ir.Assign object at 0x000002985CFC9910>,
                          208)],
             '$bool38': [(<numba.core.ir.Assign object at 0x000002985CFB0D10>,
                          209)],
             '$bool76': [(<numba.core.ir.Assign object at 0x000002985D16C410>,
                          257)],
             '$bool86': [(<numba.core.ir.Assign object at 0x000002985D1765D0>,
                          261)],
             '$const100.12.0.1': [(<numba.core.ir.Assign object at 0x000002985D199550>,
                                   0)],
             '$const102.13.3.1': [(<numba.core.ir.Assign object at 0x000002985D1995B0>,
                                   0)],
             '$const106.16.2.1': [(<numba.core.ir.Assign object at 0x000002985D199C10>,
                                   0)],
             '$const110.18.2.1': [(<numba.core.ir.Assign object at 0x000002985D199E50>,
                                   0)],
             '$const112.19.0.1': [(<numba.core.ir.Assign object at 0x000002985D19A150>,
                                   0)],
             '$const136.26.2.1': [(<numba.core.ir.Assign object at 0x000002985D19AFF0>,
                                   0)],
             '$const138.27.4.1': [(<numba.core.ir.Assign object at 0x000002985D19B950>,
                                   0)],
             '$const152.31.2.1': [(<numba.core.ir.Assign object at 0x000002985D19B530>,
                                   0)],
             '$const168.35.2.1': [(<numba.core.ir.Assign object at 0x000002985D19B1D0>,
                                   0)],
             '$const170.36.2.1': [(<numba.core.ir.Assign object at 0x000002985D19B0B0>,
                                   0)],
             '$const54.1.2': [(<numba.core.ir.Assign object at 0x000002985D1388F0>,
                               257)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x000002985CFC4AD0>,
                              208)],
             '$const90.8.1.1': [(<numba.core.ir.Assign object at 0x000002985D19BF50>,
                                 0)],
             '$const96.10.2.1': [(<numba.core.ir.Assign object at 0x000002985D199130>,
                                  0)],
             '$const_dtype.1': [(<numba.core.ir.Assign object at 0x000002985D19BEF0>,
                                 0)],
             '$phi194.0.1': [(<numba.core.ir.Assign object at 0x000002985D19BC50>,
                              0)],
             '$phi198.1.1': [(<numba.core.ir.Assign object at 0x000002985D199C70>,
                              194)],
             '$phi32.0': [(<numba.core.ir.Assign object at 0x000002985D0AB2F0>,
                           208)],
             '$phi80.0': [(<numba.core.ir.Assign object at 0x000002985D173D10>,
                           257)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x000002985D19BBF0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x000002985D199970>,
                          198)],
             'out0': [(<numba.core.ir.Assign object at 0x000002985D19BFB0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x000002985CF95370>,
                                208),
                               (<numba.core.ir.Assign object at 0x000002985D1B7E30>,
                                257)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002985D1980B0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002985D19BA10>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x000002985CF94CB0>, 208),
                    (<numba.core.ir.Assign object at 0x000002985D115A90>, 251)],
             'x1': [(<numba.core.ir.Assign object at 0x000002985D1B7EF0>, 257),
                    (<numba.core.ir.Assign object at 0x000002985D1606B0>, 299)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002985D19BB30>,
                           0)]})
2025-09-26 15:03:52,877 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002985CCD4110>
2025-09-26 15:03:52,877 - DEBUG - Fix SSA violator on var stencil_index
2025-09-26 15:03:52,877 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:52,877 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE109E0>
2025-09-26 15:03:52,877 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:52,878 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:52,878 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:52,878 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:52,878 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,878 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:52,878 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,878 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:52,878 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:52,878 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:52,879 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,879 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:52,879 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:52,879 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:52,879 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:52,879 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,879 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:52,879 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:52,879 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:52,880 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:52,880 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:52,880 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,880 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:52,880 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:52,880 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:52,880 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:52,880 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:52,880 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,881 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:52,881 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:52,881 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:52,881 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:52,881 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:52,881 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:52,881 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,881 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:52,882 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,882 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:52,882 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:52,882 - DEBUG - on stmt: jump 194
2025-09-26 15:03:52,882 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:52,882 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE109E0>
2025-09-26 15:03:52,883 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:52,883 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:52,883 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:52,883 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:52,883 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:52,883 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:52,883 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE109E0>
2025-09-26 15:03:52,883 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:52,884 - DEBUG - on stmt: jump 208
2025-09-26 15:03:52,884 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:52,884 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE109E0>
2025-09-26 15:03:52,884 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:52,884 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:52,884 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:52,884 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE109E0>
2025-09-26 15:03:52,884 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:52,885 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:52,885 - DEBUG - first assign: stencil_index
2025-09-26 15:03:52,885 - DEBUG - replaced with: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:52,885 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:52,885 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:52,885 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:52,885 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,886 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,886 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:52,886 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:52,886 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:52,886 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE109E0>
2025-09-26 15:03:52,886 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:52,886 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,886 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,887 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:52,887 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:52,887 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE109E0>
2025-09-26 15:03:52,887 - DEBUG - on stmt: jump 251
2025-09-26 15:03:52,887 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:52,887 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE109E0>
2025-09-26 15:03:52,887 - DEBUG - on stmt: jump 257
2025-09-26 15:03:52,887 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:52,887 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE109E0>
2025-09-26 15:03:52,887 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:03:52,888 - DEBUG - on stmt: jump 257
2025-09-26 15:03:52,888 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:52,888 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE109E0>
2025-09-26 15:03:52,888 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:52,888 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:03:52,888 - DEBUG - replaced with: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:52,888 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:52,888 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:52,888 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:52,888 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,889 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,889 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:52,889 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:52,889 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:52,889 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE109E0>
2025-09-26 15:03:52,889 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:52,889 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,889 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,889 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:52,890 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:52,890 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE109E0>
2025-09-26 15:03:52,890 - DEBUG - on stmt: jump 299
2025-09-26 15:03:52,890 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:52,890 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE109E0>
2025-09-26 15:03:52,890 - DEBUG - on stmt: jump 305
2025-09-26 15:03:52,890 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:52,890 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE109E0>
2025-09-26 15:03:52,890 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:52,891 - DEBUG - on stmt: jump 305
2025-09-26 15:03:52,891 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:52,891 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE109E0>
2025-09-26 15:03:52,891 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,891 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,891 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:52,891 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:52,891 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE109E0>
2025-09-26 15:03:52,891 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,892 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:52,892 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,892 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,892 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:52,892 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,892 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:52,892 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:52,892 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:52,892 - DEBUG - on stmt: jump 413
2025-09-26 15:03:52,893 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:52,893 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE109E0>
2025-09-26 15:03:52,893 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,893 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:52,893 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,893 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,893 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:52,893 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,893 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:52,894 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:52,894 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:52,894 - DEBUG - on stmt: jump 413
2025-09-26 15:03:52,894 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:52,894 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CE109E0>
2025-09-26 15:03:52,894 - DEBUG - on stmt: jump 194
2025-09-26 15:03:52,894 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002985D1E50D0>],
             257: [<numba.core.ir.Assign object at 0x000002985D1E5370>]})
2025-09-26 15:03:52,894 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:52,894 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE109E0>
2025-09-26 15:03:52,895 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:52,895 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:52,895 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:52,895 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:52,895 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,895 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:52,895 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,895 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:52,896 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:52,896 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:52,896 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,896 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:52,896 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:52,896 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:52,897 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:52,897 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,897 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:52,897 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:52,897 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:52,897 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:52,897 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:52,897 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,898 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:52,898 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:52,898 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:52,898 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:52,898 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:52,898 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,899 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:52,899 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:52,899 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:52,899 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:52,899 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:52,899 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:52,899 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,900 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:52,900 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,900 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:52,900 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:52,900 - DEBUG - on stmt: jump 194
2025-09-26 15:03:52,900 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:52,900 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE109E0>
2025-09-26 15:03:52,900 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:52,901 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:52,901 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:52,901 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:52,901 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:52,901 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:52,901 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE109E0>
2025-09-26 15:03:52,901 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:52,901 - DEBUG - on stmt: jump 208
2025-09-26 15:03:52,902 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:52,902 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE109E0>
2025-09-26 15:03:52,902 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:52,902 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:52,902 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:52,902 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE109E0>
2025-09-26 15:03:52,902 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:52,902 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:52,902 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:52,903 - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:52,903 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:52,903 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:52,903 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,903 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,903 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:52,903 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:52,903 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:52,903 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE109E0>
2025-09-26 15:03:52,904 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:52,904 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,904 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,904 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:52,904 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:52,904 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE109E0>
2025-09-26 15:03:52,904 - DEBUG - on stmt: jump 251
2025-09-26 15:03:52,904 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:52,904 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE109E0>
2025-09-26 15:03:52,904 - DEBUG - on stmt: jump 257
2025-09-26 15:03:52,905 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:52,905 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE109E0>
2025-09-26 15:03:52,905 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:03:52,905 - DEBUG - on stmt: jump 257
2025-09-26 15:03:52,905 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:52,905 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE109E0>
2025-09-26 15:03:52,905 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:52,905 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:52,905 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:52,906 - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:52,906 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:52,906 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:52,906 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:52,906 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,906 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,906 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:52,906 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:52,907 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:52,907 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE109E0>
2025-09-26 15:03:52,907 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:52,907 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,907 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,907 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:52,907 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:52,907 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE109E0>
2025-09-26 15:03:52,907 - DEBUG - on stmt: jump 299
2025-09-26 15:03:52,908 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:52,908 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE109E0>
2025-09-26 15:03:52,908 - DEBUG - on stmt: jump 305
2025-09-26 15:03:52,908 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:52,908 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE109E0>
2025-09-26 15:03:52,908 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:52,908 - DEBUG - on stmt: jump 305
2025-09-26 15:03:52,908 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:52,908 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE109E0>
2025-09-26 15:03:52,909 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,909 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,909 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:52,909 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:52,909 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE109E0>
2025-09-26 15:03:52,909 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,909 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:52,910 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,910 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,910 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:52,910 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,910 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:52,910 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:52,910 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:52,911 - DEBUG - on stmt: jump 413
2025-09-26 15:03:52,911 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:52,911 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE109E0>
2025-09-26 15:03:52,911 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,911 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:52,911 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,911 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,912 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:52,912 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,912 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:52,912 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:52,912 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:52,912 - DEBUG - on stmt: jump 413
2025-09-26 15:03:52,912 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:52,913 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CE109E0>
2025-09-26 15:03:52,913 - DEBUG - on stmt: jump 194
2025-09-26 15:03:52,913 - DEBUG - Fix SSA violator on var x0
2025-09-26 15:03:52,913 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:52,913 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,913 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:52,913 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:52,913 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:52,914 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:52,914 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,914 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:52,914 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,914 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:52,914 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:52,914 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:52,914 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,915 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:52,915 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:52,915 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:52,915 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:52,915 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,915 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:52,915 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:52,915 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:52,916 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:52,916 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:52,916 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,916 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:52,916 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:52,916 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:52,916 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:52,916 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:52,916 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,917 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:52,917 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:52,917 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:52,917 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:52,917 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:52,917 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:52,917 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,917 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:52,918 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,918 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:52,918 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:52,918 - DEBUG - on stmt: jump 194
2025-09-26 15:03:52,918 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:52,918 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,918 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:52,918 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:52,918 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:52,919 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:52,919 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:52,919 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:52,919 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,919 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:52,919 - DEBUG - on stmt: jump 208
2025-09-26 15:03:52,919 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:52,919 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,919 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:52,919 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:52,920 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:52,920 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,920 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:52,920 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:52,920 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:52,920 - DEBUG - first assign: x0
2025-09-26 15:03:52,920 - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:52,920 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:52,921 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:52,921 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,921 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,921 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:52,921 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:52,921 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:52,921 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,921 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:52,921 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,922 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,922 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:52,922 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:52,922 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,922 - DEBUG - on stmt: jump 251
2025-09-26 15:03:52,922 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:52,922 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,922 - DEBUG - on stmt: jump 257
2025-09-26 15:03:52,923 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:52,923 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,923 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:03:52,923 - DEBUG - replaced with: x0.1 = const(int, 0)
2025-09-26 15:03:52,923 - DEBUG - on stmt: jump 257
2025-09-26 15:03:52,923 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:52,923 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,923 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:52,924 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:52,924 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:52,924 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:52,924 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:52,924 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,924 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,924 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:52,925 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:52,925 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:52,925 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,925 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:52,925 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,925 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,925 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:52,925 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:52,926 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,926 - DEBUG - on stmt: jump 299
2025-09-26 15:03:52,926 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:52,926 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,926 - DEBUG - on stmt: jump 305
2025-09-26 15:03:52,926 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:52,926 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,926 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:52,927 - DEBUG - on stmt: jump 305
2025-09-26 15:03:52,927 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:52,927 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,927 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,927 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,927 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:52,927 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:52,927 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,927 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,927 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:52,928 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,928 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,928 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:52,928 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,928 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:52,928 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:52,928 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:52,928 - DEBUG - on stmt: jump 413
2025-09-26 15:03:52,928 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:52,929 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,929 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,929 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:52,929 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,929 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,929 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:52,929 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,929 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:52,930 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:52,930 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:52,930 - DEBUG - on stmt: jump 413
2025-09-26 15:03:52,930 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:52,930 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,930 - DEBUG - on stmt: jump 194
2025-09-26 15:03:52,930 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002985D1E5490>],
             251: [<numba.core.ir.Assign object at 0x000002985D1E5190>]})
2025-09-26 15:03:52,931 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:52,931 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,931 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:52,931 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:52,931 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:52,931 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:52,931 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,931 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:52,931 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,932 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:52,932 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:52,932 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:52,932 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,932 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:52,932 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:52,932 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:52,932 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:52,932 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,933 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:52,933 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:52,933 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:52,933 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:52,933 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:52,933 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,933 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:52,933 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:52,933 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:52,934 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:52,934 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:52,934 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,934 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:52,934 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:52,934 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:52,934 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:52,934 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:52,934 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:52,934 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,935 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:52,935 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,935 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:52,935 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:52,935 - DEBUG - on stmt: jump 194
2025-09-26 15:03:52,935 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:52,936 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,936 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:52,936 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:52,936 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:52,936 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:52,936 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:52,936 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:52,936 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,937 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:52,937 - DEBUG - on stmt: jump 208
2025-09-26 15:03:52,937 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:52,937 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,937 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:52,937 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:52,937 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:52,937 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,937 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:52,938 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:52,938 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:52,938 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:52,938 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:52,938 - DEBUG - find_def var='x0' stmt=$24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:52,938 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,938 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,938 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:52,938 - DEBUG - find_def var='x0' stmt=$phi32.0 = x0
2025-09-26 15:03:52,939 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:52,939 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:52,939 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,939 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:52,939 - DEBUG - find_def var='x0' stmt=$34compare_op.2 = x0 <= threshold
2025-09-26 15:03:52,939 - DEBUG - find_def_from_top label 209
2025-09-26 15:03:52,939 - DEBUG - idom 208 from label 209
2025-09-26 15:03:52,939 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:03:52,939 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,940 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,940 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:52,940 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:52,940 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,940 - DEBUG - on stmt: jump 251
2025-09-26 15:03:52,940 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:52,940 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,940 - DEBUG - on stmt: jump 257
2025-09-26 15:03:52,941 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:52,941 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,941 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:03:52,941 - DEBUG - on stmt: jump 257
2025-09-26 15:03:52,941 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:52,941 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,941 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:52,941 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:52,941 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:52,941 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:52,942 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:52,942 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,942 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,942 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:52,942 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:52,942 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:52,942 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,942 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:52,942 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,943 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,943 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:52,943 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:52,943 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,943 - DEBUG - on stmt: jump 299
2025-09-26 15:03:52,943 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:52,943 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,943 - DEBUG - on stmt: jump 305
2025-09-26 15:03:52,943 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:52,944 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,944 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:52,944 - DEBUG - on stmt: jump 305
2025-09-26 15:03:52,944 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:52,944 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,944 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,944 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,945 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:52,945 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:52,945 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,945 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,945 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:52,945 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,946 - DEBUG - find_def var='x0' stmt=$148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,946 - DEBUG - find_def_from_top label 309
2025-09-26 15:03:52,946 - DEBUG - idom 305 from label 309
2025-09-26 15:03:52,946 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:03:52,946 - DEBUG - find_def_from_top label 305
2025-09-26 15:03:52,947 - DEBUG - idom 257 from label 305
2025-09-26 15:03:52,947 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:52,947 - DEBUG - find_def_from_top label 257
2025-09-26 15:03:52,947 - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 257
2025-09-26 15:03:52,947 - DEBUG - find_def_from_bottom label 209
2025-09-26 15:03:52,947 - DEBUG - find_def_from_top label 209
2025-09-26 15:03:52,948 - DEBUG - idom 208 from label 209
2025-09-26 15:03:52,948 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:03:52,948 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:52,948 - DEBUG - find_def_from_bottom label 251
2025-09-26 15:03:52,948 - DEBUG - incoming_def x0.1 = const(int, 0)
2025-09-26 15:03:52,948 - DEBUG - find_def_from_bottom label 253
2025-09-26 15:03:52,948 - DEBUG - find_def_from_top label 253
2025-09-26 15:03:52,949 - DEBUG - idom 208 from label 253
2025-09-26 15:03:52,949 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:03:52,949 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:52,949 - DEBUG - replaced with: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,949 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,949 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:52,949 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,950 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:52,950 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:52,950 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:52,950 - DEBUG - on stmt: jump 413
2025-09-26 15:03:52,950 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:52,950 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,950 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,951 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:52,951 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,951 - DEBUG - find_def var='x0' stmt=$238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,951 - DEBUG - find_def_from_top label 323
2025-09-26 15:03:52,951 - DEBUG - idom 305 from label 323
2025-09-26 15:03:52,951 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:03:52,951 - DEBUG - find_def_from_top label 305
2025-09-26 15:03:52,951 - DEBUG - idom 257 from label 305
2025-09-26 15:03:52,951 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:52,952 - DEBUG - replaced with: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,952 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,952 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:52,952 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,952 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:52,952 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:52,952 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:52,953 - DEBUG - on stmt: jump 413
2025-09-26 15:03:52,953 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:52,953 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,953 - DEBUG - on stmt: jump 194
2025-09-26 15:03:52,953 - DEBUG - Fix SSA violator on var x1
2025-09-26 15:03:52,953 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:52,953 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,953 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:52,953 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:52,953 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:52,954 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:52,954 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,954 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:52,954 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,954 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:52,954 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:52,954 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:52,954 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,955 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:52,955 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:52,955 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:52,955 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:52,955 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,955 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:52,955 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:52,955 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:52,956 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:52,956 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:52,956 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,956 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:52,956 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:52,956 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:52,956 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:52,956 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:52,956 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,956 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:52,957 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:52,957 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:52,957 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:52,957 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:52,957 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:52,957 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,958 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:52,958 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,958 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:52,958 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:52,958 - DEBUG - on stmt: jump 194
2025-09-26 15:03:52,958 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:52,958 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,958 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:52,959 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:52,959 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:52,959 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:52,959 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:52,959 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:52,959 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,959 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:52,959 - DEBUG - on stmt: jump 208
2025-09-26 15:03:52,959 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:52,960 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,960 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:52,960 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:52,960 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:52,960 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,960 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:52,960 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:52,960 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:52,961 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:52,961 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:52,961 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,961 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,961 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:52,961 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:52,961 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:52,962 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,962 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:52,962 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,962 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,962 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:52,962 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:52,962 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,962 - DEBUG - on stmt: jump 251
2025-09-26 15:03:52,963 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:52,963 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,963 - DEBUG - on stmt: jump 257
2025-09-26 15:03:52,963 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:52,963 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,963 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:03:52,963 - DEBUG - on stmt: jump 257
2025-09-26 15:03:52,963 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:52,963 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,964 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:03:52,964 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:52,964 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:52,964 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:52,964 - DEBUG - first assign: x1
2025-09-26 15:03:52,964 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:52,964 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:52,965 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:52,965 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,965 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,965 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:52,965 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:52,965 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:52,965 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,966 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:52,966 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,966 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,966 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:52,966 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:52,966 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,966 - DEBUG - on stmt: jump 299
2025-09-26 15:03:52,966 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:52,966 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,967 - DEBUG - on stmt: jump 305
2025-09-26 15:03:52,967 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:52,967 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,967 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:03:52,967 - DEBUG - replaced with: x1.1 = const(int, 0)
2025-09-26 15:03:52,967 - DEBUG - on stmt: jump 305
2025-09-26 15:03:52,967 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:52,967 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,967 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,967 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,968 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:52,968 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:52,968 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,968 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,968 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:52,968 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,968 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,968 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:52,968 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,969 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:52,969 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:52,969 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:52,969 - DEBUG - on stmt: jump 413
2025-09-26 15:03:52,969 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:52,969 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,969 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,969 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:52,969 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,969 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,970 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:52,970 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,970 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:52,970 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:52,970 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:52,970 - DEBUG - on stmt: jump 413
2025-09-26 15:03:52,970 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:52,970 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,971 - DEBUG - on stmt: jump 194
2025-09-26 15:03:52,971 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {257: [<numba.core.ir.Assign object at 0x000002985D1E55B0>],
             299: [<numba.core.ir.Assign object at 0x000002985D1E5550>]})
2025-09-26 15:03:52,971 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:03:52,971 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,971 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:03:52,971 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:03:52,971 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:03:52,971 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:03:52,972 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,972 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:03:52,972 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,972 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:03:52,972 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:03:52,972 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:03:52,972 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,972 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:03:52,972 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:03:52,973 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:03:52,973 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:52,973 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,973 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:03:52,973 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:03:52,973 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:03:52,973 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:03:52,973 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:03:52,973 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,974 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:03:52,974 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:03:52,974 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:03:52,974 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:03:52,974 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:03:52,974 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,974 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:03:52,974 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:03:52,974 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:03:52,975 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:03:52,975 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:03:52,975 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:03:52,975 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,975 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:03:52,975 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,975 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:03:52,976 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:03:52,976 - DEBUG - on stmt: jump 194
2025-09-26 15:03:52,976 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:03:52,976 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,976 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:03:52,976 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:03:52,976 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:03:52,977 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:03:52,977 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:03:52,977 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:03:52,977 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,977 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:03:52,977 - DEBUG - on stmt: jump 208
2025-09-26 15:03:52,977 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:03:52,977 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,977 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:03:52,978 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:03:52,978 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:03:52,978 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,978 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:03:52,978 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:03:52,978 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:03:52,978 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:52,979 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:03:52,979 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,979 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,979 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:03:52,979 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:03:52,979 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:03:52,979 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,979 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:03:52,980 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,980 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,980 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:03:52,980 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:03:52,980 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,980 - DEBUG - on stmt: jump 251
2025-09-26 15:03:52,980 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:03:52,980 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,981 - DEBUG - on stmt: jump 257
2025-09-26 15:03:52,981 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:03:52,981 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,981 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:03:52,981 - DEBUG - on stmt: jump 257
2025-09-26 15:03:52,981 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:03:52,981 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,981 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:03:52,981 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:03:52,982 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:03:52,982 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:52,982 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:03:52,982 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:52,982 - DEBUG - find_def var='x1' stmt=$72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:03:52,982 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,982 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,982 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:03:52,982 - DEBUG - find_def var='x1' stmt=$phi80.0 = x1
2025-09-26 15:03:52,983 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:03:52,983 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:03:52,983 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,983 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:03:52,983 - DEBUG - find_def var='x1' stmt=$82compare_op.2 = x1 <= threshold
2025-09-26 15:03:52,983 - DEBUG - find_def_from_top label 261
2025-09-26 15:03:52,983 - DEBUG - idom 257 from label 261
2025-09-26 15:03:52,983 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:52,983 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,984 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,984 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:03:52,984 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:03:52,984 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,984 - DEBUG - on stmt: jump 299
2025-09-26 15:03:52,984 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:03:52,984 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,984 - DEBUG - on stmt: jump 305
2025-09-26 15:03:52,984 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:03:52,984 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,985 - DEBUG - on stmt: x1.1 = const(int, 0)
2025-09-26 15:03:52,985 - DEBUG - on stmt: jump 305
2025-09-26 15:03:52,985 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:03:52,985 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,985 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:03:52,985 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,985 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:03:52,985 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:03:52,985 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,986 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,986 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:03:52,986 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,986 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,986 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:03:52,986 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,986 - DEBUG - find_def var='x1' stmt=$190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,987 - DEBUG - find_def_from_top label 309
2025-09-26 15:03:52,987 - DEBUG - idom 305 from label 309
2025-09-26 15:03:52,987 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:03:52,987 - DEBUG - find_def_from_top label 305
2025-09-26 15:03:52,987 - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 305
2025-09-26 15:03:52,987 - DEBUG - find_def_from_bottom label 299
2025-09-26 15:03:52,987 - DEBUG - incoming_def x1.1 = const(int, 0)
2025-09-26 15:03:52,987 - DEBUG - find_def_from_bottom label 301
2025-09-26 15:03:52,987 - DEBUG - find_def_from_top label 301
2025-09-26 15:03:52,987 - DEBUG - idom 257 from label 301
2025-09-26 15:03:52,988 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:52,988 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:52,988 - DEBUG - find_def_from_bottom label 261
2025-09-26 15:03:52,988 - DEBUG - find_def_from_top label 261
2025-09-26 15:03:52,988 - DEBUG - idom 257 from label 261
2025-09-26 15:03:52,988 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:03:52,988 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:03:52,988 - DEBUG - replaced with: $190call.9 = call $166load_attr.6(x1.2, func=$166load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,989 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:03:52,989 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:03:52,989 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:03:52,989 - DEBUG - on stmt: jump 413
2025-09-26 15:03:52,989 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:03:52,989 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,989 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,990 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:03:52,990 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,990 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:03:52,990 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:03:52,990 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,990 - DEBUG - find_def var='x1' stmt=$280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,990 - DEBUG - find_def_from_top label 323
2025-09-26 15:03:52,991 - DEBUG - idom 305 from label 323
2025-09-26 15:03:52,991 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:03:52,991 - DEBUG - replaced with: $280call.9 = call $256load_attr.6(x1.2, func=$256load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:03:52,991 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:03:52,991 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:03:52,991 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:03:52,992 - DEBUG - on stmt: jump 413
2025-09-26 15:03:52,992 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:03:52,992 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCD1BD0>
2025-09-26 15:03:52,992 - DEBUG - on stmt: jump 194
2025-09-26 15:03:53,006 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с librosa: 'function' object has no attribute 'get_call_template'
2025-09-26 15:03:53,010 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 15:03:53,010 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 15:03:53,011 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\ЛЮБОВЬ_vocals.mp3'>)))], 'idempotency_key': 'stainless-python-retry-6c537562-3798-4f11-aad0-bdfaee837493', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:03:53,012 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:53,012 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:53,012 - DEBUG - send_request_headers.complete
2025-09-26 15:03:53,012 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:53,015 - DEBUG - send_request_body.complete
2025-09-26 15:03:53,015 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:55,600 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:55 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1304'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1316'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_a199760b4c5c4e53955f0038b5ace46a'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529ee08ef18d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:55,601 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:55,601 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:55,601 - DEBUG - receive_response_body.complete
2025-09-26 15:03:55,601 - DEBUG - response_closed.started
2025-09-26 15:03:55,601 - DEBUG - response_closed.complete
2025-09-26 15:03:55,602 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:55 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1304', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1316', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_a199760b4c5c4e53955f0038b5ace46a', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529ee08ef18d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:55,602 - DEBUG - request_id: req_a199760b4c5c4e53955f0038b5ace46a
2025-09-26 15:03:55,603 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Мы снова играем с тобой в игру по названию любовь. Мы снова играем с тобой в игру по названию любовь. Мы снова играем с тобой в игру по названию любовь. Мы снова играем с тобой...'
2025-09-26 15:03:55,603 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:03:55,603 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Мы снова играем с тобой в игру по названию любовь. Мы снова играем с тобой в игру по названию любовь. Мы снова играем с тобой в игру по названию любовь. Мы снова играем с тобой...'
2025-09-26 15:03:55,603 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: 'Мы снова играем с тобой в игру по названию любовь. Мы снова играем с тобой в игру по названию любовь. Мы снова играем с тобой в игру по названию любовь. Мы снова играем с тобой...' (длина: 179)
2025-09-26 15:03:55,604 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Мы снова играем с тобой в игру по названию любовь. Мы снова играем с тобой в игру по названию любовь. Мы снова играем с тобой в игру по названию любовь. Мы снова играем с тобой...'
2025-09-26 15:03:55,604 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:03:55,604 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Мы снова играем с тобой в игру по названию любовь. Мы снова играем с тобой в игру по названию любовь. Мы снова играем с тобой в игру по названию любовь. Мы снова играем с тобой...'
2025-09-26 15:03:55,605 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\ЛЮБОВЬ_vocals.mp3'>)))], 'idempotency_key': 'stainless-python-retry-d37f2e54-690b-4426-b2b7-e98c738abee4', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:03:55,605 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:03:55,606 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:55,606 - DEBUG - send_request_headers.complete
2025-09-26 15:03:55,606 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:55,609 - DEBUG - send_request_body.complete
2025-09-26 15:03:55,609 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:58,153 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:58 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1148'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1159'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_e7c534d594f14335bc605c0b5ec52c77'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529ef0baa88d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:58,154 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:03:58,154 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:58,154 - DEBUG - receive_response_body.complete
2025-09-26 15:03:58,155 - DEBUG - response_closed.started
2025-09-26 15:03:58,155 - DEBUG - response_closed.complete
2025-09-26 15:03:58,155 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:58 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1148', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1159', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_e7c534d594f14335bc605c0b5ec52c77', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529ef0baa88d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:58,155 - DEBUG - request_id: req_e7c534d594f14335bc605c0b5ec52c77
2025-09-26 15:03:58,156 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Мы снова играем с тобой в игру под названием любовь. Мы снова играем с тобой в игру под названием любовь. Мы снова играем с тобой в игру под названием любовь. Мы снова играем с тобой...'
2025-09-26 15:03:58,156 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:03:58,156 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Мы снова играем с тобой в игру под названием любовь. Мы снова играем с тобой в игру под названием любовь. Мы снова играем с тобой в игру под названием любовь. Мы снова играем с тобой...'
2025-09-26 15:03:58,157 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-860da6f0-5dba-4190-a6df-cfa6d2c2496b', 'json_data': {'messages': [{'role': 'system', 'content': 'Ты — специализированная система для анализа аудиозаписей.\nТвоя единственная задача — классифицировать входной аудиофайл в одну из категорий: музыка, речь, шум.\n\nВАЖНО: Ты анализируешь РЕЗУЛЬТАТ ТРАНСКРИПЦИИ аудиофайла, а не сам аудиофайл. Это означает, что:\n- Если в аудио была музыка с вокалом, то в транскрипции будут слова песни\n- Если в аудио была речь, то в транскрипции будет связный текст\n- Если в аудио был шум, то в транскрипции будет мало слов или галлюцинации\n\nКатегории классификации:\n\nМузыка (music):\n- Это песня, музыкальная композиция с вокалом\n- Характерные признаки в транскрипции:\n  * Повторяющиеся фразы или слова (припев)\n  * Рифмы и ритмические паттерны\n  * Музыкальные звуки: "ла-ла-ла", "на-на-на", "о-о-о", "а-а-а"\n  * Эмоциональные восклицания: "Ауф!", "Ой!", "Ах!"\n  * Короткие фразы без логической связи\n  * Слова, которые звучат как песня, а не как обычная речь\n  * Повторяющиеся слова или фразы (припев песни)\n  * Ритмические паттерны в тексте\n\nРечь (speech):\n- Это обычная речь, разговор, диалог\n- Характерные признаки в транскрипции:\n  * Связные предложения с логической структурой\n  * Обычные слова и фразы\n  * Знаки препинания: точки, запятые, восклицательные знаки\n  * Логическая последовательность мыслей\n  * Отсутствие повторяющихся музыкальных паттернов\n  * Естественная речь без ритма\n\nШум (noise):\n- Это неречевые звуки, шум, техника, плач ребенка\n- Характерные признаки в транскрипции:\n  * Очень короткие или бессмысленные фрагменты\n  * Отсутствие связной речи\n  * Случайные слова или звуки\n  * Описания звуков: "[Music]", "[звук]", "[шум]"\n  * Повторяющиеся гласные: "ааа", "ууу", "ооо" (детский плач)\n  * Бессмысленные фразы: "Всем новичкам, всем новичкам"\n  * Короткие бессвязные слова\n\nПравила классификации:\n1. Если транскрипция содержит связную речь с логической структурой → speech\n2. Если транскрипция содержит повторяющиеся фразы, рифмы, музыкальные звуки → music\n3. Если транскрипция короткая, бессвязная или содержит описания звуков → noise\n4. При сомнениях между music и speech: если есть повторения или музыкальные звуки → music\n5. Детский плач (ааа, ууу, ооо) → noise\n6. Белый шум с бессмысленными словами → noise\n\nВАЖНЫЕ ПРИМЕРЫ:\n- "Скажи мне, не говори мне, что ты гонишь" → music (песня с повторениями)\n- "Привет, как дела?" → speech (обычная речь)\n- "Ааааааа" → noise (детский плач)\n- "Всем новичкам, всем новичкам" → noise (белый шум)\n- "Find me, find me, You can find" → music (песня с припевом)\n\nФормат ответа:\nОтвечай только в формате JSON, без лишнего текста:\n{\n  "classification": "music | speech | noise",\n  "confidence": 0.0-1.0,\n  "reasoning": "Краткое объяснение выбора: какие признаки были решающими"\n}\n\nОграничения:\n- Не добавляй ничего, кроме JSON\n- Не предлагай альтернативных категорий\n- Всегда возвращай одно значение в поле "classification"\n- Уровень уверенности (confidence) должен отражать баланс признаков:\n  * 0.9–1.0 → очень высокая уверенность\n  * 0.6–0.89 → умеренная уверенность\n  * <0.6 → низкая уверенность, признаки неоднозначны'}, {'role': 'user', 'content': 'Проанализируй следующий транскрипт аудио и классифицируй его:\n\nМы снова играем с тобой в игру под названием любовь. Мы снова играем с тобой в игру под названием любовь. Мы снова играем с тобой в игру под названием любовь. Мы снова играем с тобой...'}], 'model': 'gpt-4o-mini', 'max_tokens': 200, 'temperature': 0.1}}
2025-09-26 15:03:58,158 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-26 15:03:58,158 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:03:58,159 - DEBUG - send_request_headers.complete
2025-09-26 15:03:58,159 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:03:58,159 - DEBUG - send_request_body.complete
2025-09-26 15:03:58,159 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:03:59,502 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:03:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1063'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1076'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9998'), (b'x-ratelimit-remaining-tokens', b'198607'), (b'x-ratelimit-reset-requests', b'9.108s'), (b'x-ratelimit-reset-tokens', b'417ms'), (b'x-request-id', b'req_ca7dfa09cae94944b1d78a5636630a75'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529f00a81a8d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:03:59,502 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 15:03:59,503 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:03:59,505 - DEBUG - receive_response_body.complete
2025-09-26 15:03:59,505 - DEBUG - response_closed.started
2025-09-26 15:03:59,506 - DEBUG - response_closed.complete
2025-09-26 15:03:59,506 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:03:59 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1063', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1076', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9998', 'x-ratelimit-remaining-tokens': '198607', 'x-ratelimit-reset-requests': '9.108s', 'x-ratelimit-reset-tokens': '417ms', 'x-request-id': 'req_ca7dfa09cae94944b1d78a5636630a75', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529f00a81a8d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:03:59,506 - DEBUG - request_id: req_ca7dfa09cae94944b1d78a5636630a75
2025-09-26 15:03:59,508 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\ПОЗВОНИ МНЕ.mp3
2025-09-26 15:03:59,508 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 2, 'overlap': 0.25, 'jobs': 4}
2025-09-26 15:03:59,508 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла: examples\ПОЗВОНИ МНЕ.mp3
2025-09-26 15:03:59,508 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 15:03:59,509 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 15:03:59,509 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\ПОЗВОНИ МНЕ.mp3
2025-09-26 15:04:00,054 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 15:04:00,055 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\ПОЗВОНИ МНЕ.mp3
2025-09-26 15:04:00,117 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	RESUME(arg=0, lineno=1137)
           4	LOAD_FAST(arg=0, lineno=1140)
           6	LOAD_CONST(arg=1, lineno=1140)
           8	BINARY_SUBSCR(arg=None, lineno=1140)
          12	STORE_FAST(arg=3, lineno=1140)
          14	LOAD_FAST(arg=1, lineno=1141)
          16	UNARY_NEGATIVE(arg=None, lineno=1141)
          18	LOAD_FAST(arg=3, lineno=1141)
          20	SWAP(arg=2, lineno=1141)
          22	COPY(arg=2, lineno=1141)
          24	COMPARE_OP(arg=58, lineno=1141)
          28	POP_JUMP_IF_FALSE(arg=6, lineno=1141)
          32	LOAD_FAST(arg=1, lineno=1141)
          34	COMPARE_OP(arg=58, lineno=1141)
          38	POP_JUMP_IF_FALSE(arg=5, lineno=1141)
          42	JUMP_FORWARD(arg=2, lineno=1141)
>         44	POP_TOP(arg=None, lineno=1141)
          46	JUMP_FORWARD(arg=2, lineno=1141)
>         48	LOAD_CONST(arg=1, lineno=1142)
          50	STORE_FAST(arg=3, lineno=1142)
>         52	LOAD_FAST(arg=0, lineno=1144)
          54	LOAD_CONST(arg=2, lineno=1144)
          56	BINARY_SUBSCR(arg=None, lineno=1144)
          60	STORE_FAST(arg=4, lineno=1144)
          62	LOAD_FAST(arg=1, lineno=1145)
          64	UNARY_NEGATIVE(arg=None, lineno=1145)
          66	LOAD_FAST(arg=4, lineno=1145)
          68	SWAP(arg=2, lineno=1145)
          70	COPY(arg=2, lineno=1145)
          72	COMPARE_OP(arg=58, lineno=1145)
          76	POP_JUMP_IF_FALSE(arg=6, lineno=1145)
          80	LOAD_FAST(arg=1, lineno=1145)
          82	COMPARE_OP(arg=58, lineno=1145)
          86	POP_JUMP_IF_FALSE(arg=5, lineno=1145)
          90	JUMP_FORWARD(arg=2, lineno=1145)
>         92	POP_TOP(arg=None, lineno=1145)
          94	JUMP_FORWARD(arg=2, lineno=1145)
>         96	LOAD_CONST(arg=1, lineno=1146)
          98	STORE_FAST(arg=4, lineno=1146)
>        100	LOAD_FAST(arg=2, lineno=1148)
         102	TO_BOOL(arg=None, lineno=1148)
         110	POP_JUMP_IF_FALSE(arg=45, lineno=1148)
         114	LOAD_GLOBAL(arg=0, lineno=1149)
         124	LOAD_ATTR(arg=2, lineno=1149)
         144	PUSH_NULL(arg=None, lineno=1149)
         146	LOAD_FAST(arg=3, lineno=1149)
         148	CALL(arg=1, lineno=1149)
         156	LOAD_GLOBAL(arg=0, lineno=1149)
         166	LOAD_ATTR(arg=2, lineno=1149)
         186	PUSH_NULL(arg=None, lineno=1149)
         188	LOAD_FAST(arg=4, lineno=1149)
         190	CALL(arg=1, lineno=1149)
         198	COMPARE_OP(arg=103, lineno=1149)
         202	RETURN_VALUE(arg=None, lineno=1149)
>        204	LOAD_GLOBAL(arg=0, lineno=1151)
         214	LOAD_ATTR(arg=4, lineno=1151)
         234	PUSH_NULL(arg=None, lineno=1151)
         236	LOAD_FAST(arg=3, lineno=1151)
         238	CALL(arg=1, lineno=1151)
         246	LOAD_GLOBAL(arg=0, lineno=1151)
         256	LOAD_ATTR(arg=4, lineno=1151)
         276	PUSH_NULL(arg=None, lineno=1151)
         278	LOAD_FAST(arg=4, lineno=1151)
         280	CALL(arg=1, lineno=1151)
         288	COMPARE_OP(arg=103, lineno=1151)
         292	RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:04:00,119 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:04:00,119 - DEBUG - stack: []
2025-09-26 15:04:00,119 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:04:00,119 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-09-26 15:04:00,119 - DEBUG - stack []
2025-09-26 15:04:00,119 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1137)
2025-09-26 15:04:00,119 - DEBUG - stack []
2025-09-26 15:04:00,120 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1140)
2025-09-26 15:04:00,120 - DEBUG - stack []
2025-09-26 15:04:00,120 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1140)
2025-09-26 15:04:00,120 - DEBUG - stack ['$x4.0']
2025-09-26 15:04:00,120 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-09-26 15:04:00,120 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-09-26 15:04:00,120 - DEBUG - dispatch pc=12, inst=STORE_FAST(arg=3, lineno=1140)
2025-09-26 15:04:00,121 - DEBUG - stack ['$8binary_subscr.2']
2025-09-26 15:04:00,121 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:04:00,121 - DEBUG - stack []
2025-09-26 15:04:00,121 - DEBUG - dispatch pc=16, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-09-26 15:04:00,121 - DEBUG - stack ['$threshold14.3']
2025-09-26 15:04:00,121 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=1141)
2025-09-26 15:04:00,121 - DEBUG - stack ['$16unary_negative.4']
2025-09-26 15:04:00,121 - DEBUG - dispatch pc=20, inst=SWAP(arg=2, lineno=1141)
2025-09-26 15:04:00,122 - DEBUG - stack ['$16unary_negative.4', '$x018.5']
2025-09-26 15:04:00,122 - DEBUG - dispatch pc=22, inst=COPY(arg=2, lineno=1141)
2025-09-26 15:04:00,122 - DEBUG - stack ['$x018.5', '$16unary_negative.4']
2025-09-26 15:04:00,122 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:04:00,122 - DEBUG - stack ['$x018.5', '$16unary_negative.4', '$x018.5']
2025-09-26 15:04:00,122 - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1141)
2025-09-26 15:04:00,122 - DEBUG - stack ['$x018.5', '$24compare_op.6']
2025-09-26 15:04:00,122 - DEBUG - end state. edges=[Edge(pc=32, stack=('$x018.5',), blockstack=(), npush=0), Edge(pc=44, stack=('$x018.5',), blockstack=(), npush=0)]
2025-09-26 15:04:00,123 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=44 nstack_initial=1)])
2025-09-26 15:04:00,123 - DEBUG - stack: ['$phi32.0']
2025-09-26 15:04:00,123 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-09-26 15:04:00,123 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:04:00,123 - DEBUG - stack ['$phi32.0']
2025-09-26 15:04:00,123 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:04:00,124 - DEBUG - stack ['$phi32.0', '$threshold32.1']
2025-09-26 15:04:00,124 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1141)
2025-09-26 15:04:00,124 - DEBUG - stack ['$34compare_op.2']
2025-09-26 15:04:00,124 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:04:00,124 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=1), State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:04:00,124 - DEBUG - stack: ['$phi44.0']
2025-09-26 15:04:00,125 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=1)
2025-09-26 15:04:00,125 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=1141)
2025-09-26 15:04:00,125 - DEBUG - stack ['$phi44.0']
2025-09-26 15:04:00,125 - DEBUG - dispatch pc=46, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:04:00,125 - DEBUG - stack []
2025-09-26 15:04:00,125 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:04:00,126 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:04:00,126 - DEBUG - stack: []
2025-09-26 15:04:00,126 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-09-26 15:04:00,126 - DEBUG - dispatch pc=42, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:04:00,126 - DEBUG - stack []
2025-09-26 15:04:00,126 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0)]
2025-09-26 15:04:00,126 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2025-09-26 15:04:00,127 - DEBUG - stack: []
2025-09-26 15:04:00,127 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-09-26 15:04:00,127 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1144)
2025-09-26 15:04:00,127 - DEBUG - stack []
2025-09-26 15:04:00,127 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=1144)
2025-09-26 15:04:00,127 - DEBUG - stack ['$x52.0']
2025-09-26 15:04:00,127 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-09-26 15:04:00,128 - DEBUG - stack ['$x52.0', '$const54.1.2']
2025-09-26 15:04:00,128 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=4, lineno=1144)
2025-09-26 15:04:00,128 - DEBUG - stack ['$56binary_subscr.2']
2025-09-26 15:04:00,128 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:04:00,128 - DEBUG - stack []
2025-09-26 15:04:00,128 - DEBUG - dispatch pc=64, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-09-26 15:04:00,128 - DEBUG - stack ['$threshold62.3']
2025-09-26 15:04:00,129 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=4, lineno=1145)
2025-09-26 15:04:00,129 - DEBUG - stack ['$64unary_negative.4']
2025-09-26 15:04:00,129 - DEBUG - dispatch pc=68, inst=SWAP(arg=2, lineno=1145)
2025-09-26 15:04:00,129 - DEBUG - stack ['$64unary_negative.4', '$x166.5']
2025-09-26 15:04:00,129 - DEBUG - dispatch pc=70, inst=COPY(arg=2, lineno=1145)
2025-09-26 15:04:00,129 - DEBUG - stack ['$x166.5', '$64unary_negative.4']
2025-09-26 15:04:00,129 - DEBUG - dispatch pc=72, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:04:00,130 - DEBUG - stack ['$x166.5', '$64unary_negative.4', '$x166.5']
2025-09-26 15:04:00,130 - DEBUG - dispatch pc=76, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1145)
2025-09-26 15:04:00,130 - DEBUG - stack ['$x166.5', '$72compare_op.6']
2025-09-26 15:04:00,130 - DEBUG - end state. edges=[Edge(pc=80, stack=('$x166.5',), blockstack=(), npush=0), Edge(pc=92, stack=('$x166.5',), blockstack=(), npush=0)]
2025-09-26 15:04:00,130 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:04:00,130 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:04:00,130 - DEBUG - stack: []
2025-09-26 15:04:00,131 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-09-26 15:04:00,131 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1142)
2025-09-26 15:04:00,131 - DEBUG - stack []
2025-09-26 15:04:00,131 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=3, lineno=1142)
2025-09-26 15:04:00,131 - DEBUG - stack ['$const48.0.1']
2025-09-26 15:04:00,131 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:04:00,131 - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:04:00,132 - DEBUG - stack: ['$phi80.0']
2025-09-26 15:04:00,132 - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-09-26 15:04:00,132 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:04:00,132 - DEBUG - stack ['$phi80.0']
2025-09-26 15:04:00,132 - DEBUG - dispatch pc=82, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:04:00,132 - DEBUG - stack ['$phi80.0', '$threshold80.1']
2025-09-26 15:04:00,132 - DEBUG - dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1145)
2025-09-26 15:04:00,133 - DEBUG - stack ['$82compare_op.2']
2025-09-26 15:04:00,133 - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:04:00,133 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:04:00,133 - DEBUG - stack: ['$phi92.0']
2025-09-26 15:04:00,133 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=1)
2025-09-26 15:04:00,133 - DEBUG - dispatch pc=92, inst=POP_TOP(arg=None, lineno=1145)
2025-09-26 15:04:00,133 - DEBUG - stack ['$phi92.0']
2025-09-26 15:04:00,133 - DEBUG - dispatch pc=94, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:04:00,134 - DEBUG - stack []
2025-09-26 15:04:00,134 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:04:00,134 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:04:00,134 - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:04:00,134 - DEBUG - stack: []
2025-09-26 15:04:00,134 - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-09-26 15:04:00,134 - DEBUG - dispatch pc=90, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:04:00,134 - DEBUG - stack []
2025-09-26 15:04:00,135 - DEBUG - end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-09-26 15:04:00,135 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-09-26 15:04:00,135 - DEBUG - stack: []
2025-09-26 15:04:00,135 - DEBUG - state.pc_initial: State(pc_initial=100 nstack_initial=0)
2025-09-26 15:04:00,135 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=2, lineno=1148)
2025-09-26 15:04:00,135 - DEBUG - stack []
2025-09-26 15:04:00,135 - DEBUG - dispatch pc=102, inst=TO_BOOL(arg=None, lineno=1148)
2025-09-26 15:04:00,136 - DEBUG - stack ['$zero_pos100.0']
2025-09-26 15:04:00,136 - DEBUG - dispatch pc=110, inst=POP_JUMP_IF_FALSE(arg=45, lineno=1148)
2025-09-26 15:04:00,136 - DEBUG - stack ['$102to_bool.1']
2025-09-26 15:04:00,136 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=204, stack=(), blockstack=(), npush=0)]
2025-09-26 15:04:00,136 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:04:00,137 - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:04:00,137 - DEBUG - stack: []
2025-09-26 15:04:00,137 - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2025-09-26 15:04:00,137 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=1, lineno=1146)
2025-09-26 15:04:00,137 - DEBUG - stack []
2025-09-26 15:04:00,137 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=4, lineno=1146)
2025-09-26 15:04:00,137 - DEBUG - stack ['$const96.0.1']
2025-09-26 15:04:00,138 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:04:00,138 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:04:00,138 - DEBUG - stack: []
2025-09-26 15:04:00,138 - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2025-09-26 15:04:00,138 - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:04:00,138 - DEBUG - stack []
2025-09-26 15:04:00,138 - DEBUG - dispatch pc=124, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:04:00,139 - DEBUG - stack ['$114load_global.0']
2025-09-26 15:04:00,139 - DEBUG - dispatch pc=144, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:04:00,139 - DEBUG - stack ['$124load_attr.1']
2025-09-26 15:04:00,139 - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=3, lineno=1149)
2025-09-26 15:04:00,139 - DEBUG - stack ['$124load_attr.1', '$null$144.2']
2025-09-26 15:04:00,139 - DEBUG - dispatch pc=148, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:04:00,140 - DEBUG - stack ['$124load_attr.1', '$null$144.2', '$x0146.3']
2025-09-26 15:04:00,140 - DEBUG - dispatch pc=156, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:04:00,140 - DEBUG - stack ['$148call.4']
2025-09-26 15:04:00,140 - DEBUG - dispatch pc=166, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:04:00,140 - DEBUG - stack ['$148call.4', '$156load_global.5']
2025-09-26 15:04:00,140 - DEBUG - dispatch pc=186, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:04:00,141 - DEBUG - stack ['$148call.4', '$166load_attr.6']
2025-09-26 15:04:00,141 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=4, lineno=1149)
2025-09-26 15:04:00,141 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7']
2025-09-26 15:04:00,141 - DEBUG - dispatch pc=190, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:04:00,141 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7', '$x1188.8']
2025-09-26 15:04:00,141 - DEBUG - dispatch pc=198, inst=COMPARE_OP(arg=103, lineno=1149)
2025-09-26 15:04:00,141 - DEBUG - stack ['$148call.4', '$190call.9']
2025-09-26 15:04:00,141 - DEBUG - dispatch pc=202, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-09-26 15:04:00,142 - DEBUG - stack ['$198compare_op.10']
2025-09-26 15:04:00,142 - DEBUG - end state. edges=[]
2025-09-26 15:04:00,142 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:04:00,142 - DEBUG - stack: []
2025-09-26 15:04:00,142 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=0)
2025-09-26 15:04:00,142 - DEBUG - dispatch pc=204, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:04:00,142 - DEBUG - stack []
2025-09-26 15:04:00,142 - DEBUG - dispatch pc=214, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:04:00,143 - DEBUG - stack ['$204load_global.0']
2025-09-26 15:04:00,143 - DEBUG - dispatch pc=234, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:04:00,143 - DEBUG - stack ['$214load_attr.1']
2025-09-26 15:04:00,143 - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=3, lineno=1151)
2025-09-26 15:04:00,143 - DEBUG - stack ['$214load_attr.1', '$null$234.2']
2025-09-26 15:04:00,143 - DEBUG - dispatch pc=238, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:04:00,143 - DEBUG - stack ['$214load_attr.1', '$null$234.2', '$x0236.3']
2025-09-26 15:04:00,144 - DEBUG - dispatch pc=246, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:04:00,144 - DEBUG - stack ['$238call.4']
2025-09-26 15:04:00,144 - DEBUG - dispatch pc=256, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:04:00,144 - DEBUG - stack ['$238call.4', '$246load_global.5']
2025-09-26 15:04:00,144 - DEBUG - dispatch pc=276, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:04:00,144 - DEBUG - stack ['$238call.4', '$256load_attr.6']
2025-09-26 15:04:00,144 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=4, lineno=1151)
2025-09-26 15:04:00,145 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7']
2025-09-26 15:04:00,145 - DEBUG - dispatch pc=280, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:04:00,145 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7', '$x1278.8']
2025-09-26 15:04:00,145 - DEBUG - dispatch pc=288, inst=COMPARE_OP(arg=103, lineno=1151)
2025-09-26 15:04:00,145 - DEBUG - stack ['$238call.4', '$280call.9']
2025-09-26 15:04:00,145 - DEBUG - dispatch pc=292, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:04:00,145 - DEBUG - stack ['$288compare_op.10']
2025-09-26 15:04:00,146 - DEBUG - end state. edges=[]
2025-09-26 15:04:00,146 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:04:00,146 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:04:00,146 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=1): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=204 nstack_initial=0): set()})
2025-09-26 15:04:00,147 - DEBUG - defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi44.0': State(pc_initial=0 nstack_initial=0),
 '$phi80.0': State(pc_initial=52 nstack_initial=0),
 '$phi92.0': State(pc_initial=52 nstack_initial=0)}
2025-09-26 15:04:00,147 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:04:00,147 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:04:00,147 - DEBUG - keep phismap: {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
 '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}}
2025-09-26 15:04:00,148 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$x018.5'},
             State(pc_initial=52 nstack_initial=0): {'$phi80.0': '$x166.5'}})
2025-09-26 15:04:00,148 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:04:00,148 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'value': '$8binary_subscr.2'}), (14, {'res': '$threshold14.3'}), (16, {'value': '$threshold14.3', 'res': '$16unary_negative.4'}), (18, {'res': '$x018.5'}), (24, {'lhs': '$16unary_negative.4', 'rhs': '$x018.5', 'res': '$24compare_op.6'}), (28, {'pred': '$24compare_op.6'})), outgoing_phis={'$phi32.0': '$x018.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$x018.5',), 44: ('$x018.5',)})
2025-09-26 15:04:00,148 - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'res': '$threshold32.1'}), (34, {'lhs': '$phi32.0', 'rhs': '$threshold32.1', 'res': '$34compare_op.2'}), (38, {'pred': '$34compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 52: ()})
2025-09-26 15:04:00,149 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ()})
2025-09-26 15:04:00,149 - DEBUG - block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((46, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:04:00,149 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$const48.0.1'}), (50, {'value': '$const48.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:04:00,149 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$x52.0'}), (54, {'res': '$const54.1.2'}), (56, {'index': '$const54.1.2', 'target': '$x52.0', 'res': '$56binary_subscr.2'}), (60, {'value': '$56binary_subscr.2'}), (62, {'res': '$threshold62.3'}), (64, {'value': '$threshold62.3', 'res': '$64unary_negative.4'}), (66, {'res': '$x166.5'}), (72, {'lhs': '$64unary_negative.4', 'rhs': '$x166.5', 'res': '$72compare_op.6'}), (76, {'pred': '$72compare_op.6'})), outgoing_phis={'$phi80.0': '$x166.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$x166.5',), 92: ('$x166.5',)})
2025-09-26 15:04:00,149 - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$threshold80.1'}), (82, {'lhs': '$phi80.0', 'rhs': '$threshold80.1', 'res': '$82compare_op.2'}), (86, {'pred': '$82compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 100: ()})
2025-09-26 15:04:00,150 - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
2025-09-26 15:04:00,150 - DEBUG - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((94, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:04:00,150 - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$const96.0.1'}), (98, {'value': '$const96.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:04:00,150 - DEBUG - block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$zero_pos100.0'}), (102, {'val': '$zero_pos100.0', 'res': '$102to_bool.1'}), (110, {'pred': '$102to_bool.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 204: ()})
2025-09-26 15:04:00,150 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'idx': 0, 'res': '$114load_global.0'}), (124, {'item': '$114load_global.0', 'res': '$124load_attr.1'}), (144, {}), (146, {'res': '$x0146.3'}), (148, {'func': '$124load_attr.1', 'args': ['$x0146.3'], 'kw_names': None, 'res': '$148call.4'}), (156, {'idx': 0, 'res': '$156load_global.5'}), (166, {'item': '$156load_global.5', 'res': '$166load_attr.6'}), (186, {}), (188, {'res': '$x1188.8'}), (190, {'func': '$166load_attr.6', 'args': ['$x1188.8'], 'kw_names': None, 'res': '$190call.9'}), (198, {'lhs': '$148call.4', 'rhs': '$190call.9', 'res': '$198compare_op.10'}), (202, {'retval': '$198compare_op.10', 'castval': '$202return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:04:00,151 - DEBUG - block_infos State(pc_initial=204 nstack_initial=0):
AdaptBlockInfo(insts=((204, {'idx': 0, 'res': '$204load_global.0'}), (214, {'item': '$204load_global.0', 'res': '$214load_attr.1'}), (234, {}), (236, {'res': '$x0236.3'}), (238, {'func': '$214load_attr.1', 'args': ['$x0236.3'], 'kw_names': None, 'res': '$238call.4'}), (246, {'idx': 0, 'res': '$246load_global.5'}), (256, {'item': '$246load_global.5', 'res': '$256load_attr.6'}), (276, {}), (278, {'res': '$x1278.8'}), (280, {'func': '$256load_attr.6', 'args': ['$x1278.8'], 'kw_names': None, 'res': '$280call.9'}), (288, {'lhs': '$238call.4', 'rhs': '$280call.9', 'res': '$288compare_op.10'}), (292, {'retval': '$288compare_op.10', 'castval': '$292return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:04:00,152 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    x0 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$const6.1.1', 'x', 'x0']
    $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$16unary_negative.4', 'threshold']
    $24compare_op.6 = $16unary_negative.4 <= x0 ['$16unary_negative.4', '$24compare_op.6', 'x0']
    $bool28 = global(bool: <class 'bool'>)   ['$bool28']
    $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.6', '$28pred', '$bool28']
    $phi32.0 = x0                            ['$phi32.0', 'x0']
    branch $28pred, 32, 44                   ['$28pred']
label 32:
    $34compare_op.2 = $phi32.0 <= threshold  ['$34compare_op.2', '$phi32.0', 'threshold']
    $bool38 = global(bool: <class 'bool'>)   ['$bool38']
    $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.2', '$38pred', '$bool38']
    branch $38pred, 42, 52                   ['$38pred']
label 42:
    jump 48                                  []
label 44:
    jump 52                                  []
label 48:
    x0 = const(int, 0)                       ['x0']
    jump 52                                  []
label 52:
    $const54.1.2 = const(int, -1)            ['$const54.1.2']
    x1 = getitem(value=x, index=$const54.1.2, fn=<built-in function getitem>) ['$const54.1.2', 'x', 'x1']
    $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$64unary_negative.4', 'threshold']
    $72compare_op.6 = $64unary_negative.4 <= x1 ['$64unary_negative.4', '$72compare_op.6', 'x1']
    $bool76 = global(bool: <class 'bool'>)   ['$bool76']
    $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$72compare_op.6', '$76pred', '$bool76']
    $phi80.0 = x1                            ['$phi80.0', 'x1']
    branch $76pred, 80, 92                   ['$76pred']
label 80:
    $82compare_op.2 = $phi80.0 <= threshold  ['$82compare_op.2', '$phi80.0', 'threshold']
    $bool86 = global(bool: <class 'bool'>)   ['$bool86']
    $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$82compare_op.2', '$86pred', '$bool86']
    branch $86pred, 90, 100                  ['$86pred']
label 90:
    jump 96                                  []
label 92:
    jump 100                                 []
label 96:
    x1 = const(int, 0)                       ['x1']
    jump 100                                 []
label 100:
    $bool110 = global(bool: <class 'bool'>)  ['$bool110']
    $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$110pred', '$bool110', 'zero_pos']
    branch $110pred, 114, 204                ['$110pred']
label 114:
    $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$114load_global.0']
    $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit) ['$114load_global.0', '$124load_attr.1']
    $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$124load_attr.1', '$148call.4', 'x0']
    $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$156load_global.5']
    $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit) ['$156load_global.5', '$166load_attr.6']
    $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.6', '$190call.9', 'x1']
    $198compare_op.10 = $148call.4 != $190call.9 ['$148call.4', '$190call.9', '$198compare_op.10']
    $202return_value.11 = cast(value=$198compare_op.10) ['$198compare_op.10', '$202return_value.11']
    return $202return_value.11               ['$202return_value.11']
label 204:
    $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$204load_global.0']
    $214load_attr.1 = getattr(value=$204load_global.0, attr=sign) ['$204load_global.0', '$214load_attr.1']
    $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.1', '$238call.4', 'x0']
    $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$246load_global.5']
    $256load_attr.6 = getattr(value=$246load_global.5, attr=sign) ['$246load_global.5', '$256load_attr.6']
    $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$256load_attr.6', '$280call.9', 'x1']
    $288compare_op.10 = $238call.4 != $280call.9 ['$238call.4', '$280call.9', '$288compare_op.10']
    $292return_value.11 = cast(value=$288compare_op.10) ['$288compare_op.10', '$292return_value.11']
    return $292return_value.11               ['$292return_value.11']

2025-09-26 15:04:00,158 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1154)
           2	RESUME(arg=0, lineno=1154)
           4	LOAD_GLOBAL(arg=1, lineno=1170)
          14	LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
          16	LOAD_FAST(arg=2, lineno=1170)
          18	CALL(arg=3, lineno=1170)
          26	LOAD_FAST(arg=3, lineno=1170)
          28	LOAD_CONST(arg=1, lineno=1170)
          30	LOAD_CONST(arg=1, lineno=1170)
          32	STORE_SLICE(arg=None, lineno=1170)
          34	RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:04:00,158 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:04:00,158 - DEBUG - stack: []
2025-09-26 15:04:00,158 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:04:00,159 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1154)
2025-09-26 15:04:00,159 - DEBUG - stack []
2025-09-26 15:04:00,159 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1154)
2025-09-26 15:04:00,159 - DEBUG - stack []
2025-09-26 15:04:00,159 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1170)
2025-09-26 15:04:00,159 - DEBUG - stack []
2025-09-26 15:04:00,159 - DEBUG - dispatch pc=14, inst=LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
2025-09-26 15:04:00,159 - DEBUG - stack ['$4load_global.0', '$null$4.1']
2025-09-26 15:04:00,160 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=1170)
2025-09-26 15:04:00,160 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3']
2025-09-26 15:04:00,160 - DEBUG - dispatch pc=18, inst=CALL(arg=3, lineno=1170)
2025-09-26 15:04:00,160 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3', '$zero_pos16.4']
2025-09-26 15:04:00,160 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=3, lineno=1170)
2025-09-26 15:04:00,160 - DEBUG - stack ['$18call.5']
2025-09-26 15:04:00,160 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:04:00,161 - DEBUG - stack ['$18call.5', '$y26.6']
2025-09-26 15:04:00,161 - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:04:00,161 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1']
2025-09-26 15:04:00,161 - DEBUG - dispatch pc=32, inst=STORE_SLICE(arg=None, lineno=1170)
2025-09-26 15:04:00,161 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1', '$const30.8.1']
2025-09-26 15:04:00,161 - DEBUG - dispatch pc=34, inst=RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:04:00,161 - DEBUG - stack []
2025-09-26 15:04:00,161 - DEBUG - end state. edges=[]
2025-09-26 15:04:00,161 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:04:00,162 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-09-26 15:04:00,162 - DEBUG - defmap: {}
2025-09-26 15:04:00,162 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:04:00,162 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:04:00,162 - DEBUG - keep phismap: {}
2025-09-26 15:04:00,162 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-09-26 15:04:00,162 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:04:00,163 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res1': '$x14.2', 'res2': '$threshold14.3'}), (16, {'res': '$zero_pos16.4'}), (18, {'func': '$4load_global.0', 'args': ['$x14.2', '$threshold14.3', '$zero_pos16.4'], 'kw_names': None, 'res': '$18call.5'}), (26, {'res': '$y26.6'}), (28, {'res': '$const28.7.1'}), (30, {'res': '$const30.8.1'}), (32, {'start': '$const28.7.1', 'end': '$const30.8.1', 'container': '$y26.6', 'value': '$18call.5', 'res': '$32store_slice.10', 'slicevar': '$32store_slice.9'}), (34, {'retval': '$const34.11', 'castval': '$34return_const.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:04:00,163 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002985D194450>) ['$4load_global.0']
    $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const28.7.1 = const(NoneType, None)     ['$const28.7.1']
    $const30.8.1 = const(NoneType, None)     ['$const30.8.1']
    $32store_slice.9 = global(slice: <class 'slice'>) ['$32store_slice.9']
    $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$32store_slice.10', '$32store_slice.9', '$const28.7.1', '$const30.8.1']
    y[$32store_slice.10] = $18call.5         ['$18call.5', '$32store_slice.10', 'y']
    $const34.11 = const(NoneType, None)      ['$const34.11']
    $34return_const.12 = cast(value=$const34.11) ['$34return_const.12', '$const34.11']
    return $34return_const.12                ['$34return_const.12']

2025-09-26 15:04:00,168 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:04:00,168 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985CCD56D0>
2025-09-26 15:04:00,168 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:04:00,168 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:04:00,168 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:04:00,169 - DEBUG - on stmt: y = arg(3, name=y)
2025-09-26 15:04:00,169 - DEBUG - on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002985D194450>)
2025-09-26 15:04:00,169 - DEBUG - on stmt: $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,169 - DEBUG - on stmt: $const28.7.1 = const(NoneType, None)
2025-09-26 15:04:00,169 - DEBUG - on stmt: $const30.8.1 = const(NoneType, None)
2025-09-26 15:04:00,169 - DEBUG - on stmt: $32store_slice.9 = global(slice: <class 'slice'>)
2025-09-26 15:04:00,170 - DEBUG - on stmt: $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,170 - DEBUG - on stmt: y[slice(None, None, None)] = $18call.5
2025-09-26 15:04:00,170 - DEBUG - on stmt: $const34.11 = const(NoneType, None)
2025-09-26 15:04:00,170 - DEBUG - on stmt: $34return_const.12 = cast(value=$const34.11)
2025-09-26 15:04:00,170 - DEBUG - on stmt: return $34return_const.12
2025-09-26 15:04:00,170 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.5': [(<numba.core.ir.Assign object at 0x000002985D094830>,
                            0)],
             '$32store_slice.10': [(<numba.core.ir.Assign object at 0x000002985CFC9910>,
                                    0)],
             '$32store_slice.9': [(<numba.core.ir.Assign object at 0x000002985D05E990>,
                                   0)],
             '$34return_const.12': [(<numba.core.ir.Assign object at 0x000002985CFCA210>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000002985CFC6870>,
                                  0)],
             '$const28.7.1': [(<numba.core.ir.Assign object at 0x000002985D095A90>,
                               0)],
             '$const30.8.1': [(<numba.core.ir.Assign object at 0x000002985D095070>,
                               0)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x000002985CFC87D0>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002985CFC7AD0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002985CFC5CD0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000002985CFC4C50>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002985CFC4A70>,
                           0)]})
2025-09-26 15:04:00,171 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002985CCD5250>
2025-09-26 15:04:00,217 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=3, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=3, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	LOAD_CONST(arg=1, lineno=3)
          92	CALL_KW(arg=2, lineno=3)
          94	STORE_FAST(arg=4, lineno=3)
          96	LOAD_CONST(arg=2, lineno=4)
          98	LOAD_FAST(arg=4, lineno=4)
         100	LOAD_CONST(arg=0, lineno=4)
         102	LOAD_CONST(arg=3, lineno=4)
         104	STORE_SLICE(arg=None, lineno=4)
         106	LOAD_CONST(arg=2, lineno=5)
         108	LOAD_FAST(arg=4, lineno=5)
         110	LOAD_CONST(arg=2, lineno=5)
         112	LOAD_CONST(arg=0, lineno=5)
         114	STORE_SLICE(arg=None, lineno=5)
         116	LOAD_GLOBAL(arg=9, lineno=6)
         126	LOAD_GLOBAL(arg=11, lineno=6)
         136	LOAD_CONST(arg=2, lineno=6)
         138	LOAD_CONST(arg=4, lineno=6)
         140	CALL(arg=2, lineno=6)
         148	UNARY_NEGATIVE(arg=None, lineno=6)
         150	LOAD_FAST(arg=3, lineno=6)
         152	LOAD_CONST(arg=2, lineno=6)
         154	BINARY_SUBSCR(arg=None, lineno=6)
         158	LOAD_GLOBAL(arg=13, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	LOAD_CONST(arg=2, lineno=6)
         172	CALL(arg=2, lineno=6)
         180	BINARY_OP(arg=10, lineno=6)
         184	CALL(arg=2, lineno=6)
         192	GET_ITER(arg=None, lineno=6)
>        194	FOR_ITER(arg=5, lineno=6)
         198	STORE_FAST(arg=5, lineno=6)
         200	LOAD_CONST(arg=2, lineno=7)
         202	STORE_FAST(arg=6, lineno=7)
         204	JUMP_BACKWARD(arg=7, lineno=7)
>        208	END_FOR(arg=None, lineno=6)
         210	POP_TOP(arg=None, lineno=6)
         212	LOAD_FAST(arg=4, lineno=8)
         214	RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:04:00,219 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:04:00,219 - DEBUG - stack: []
2025-09-26 15:04:00,219 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:04:00,219 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-09-26 15:04:00,219 - DEBUG - stack []
2025-09-26 15:04:00,219 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2025-09-26 15:04:00,220 - DEBUG - stack []
2025-09-26 15:04:00,220 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2025-09-26 15:04:00,220 - DEBUG - stack []
2025-09-26 15:04:00,220 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2025-09-26 15:04:00,220 - DEBUG - stack ['$x4.0']
2025-09-26 15:04:00,220 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=3, lineno=2)
2025-09-26 15:04:00,220 - DEBUG - stack ['$6load_attr.1']
2025-09-26 15:04:00,220 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:04:00,221 - DEBUG - stack []
2025-09-26 15:04:00,221 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2025-09-26 15:04:00,221 - DEBUG - stack ['$28load_global.2']
2025-09-26 15:04:00,221 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=3, lineno=3)
2025-09-26 15:04:00,221 - DEBUG - stack ['$38load_attr.3', '$null$38.4']
2025-09-26 15:04:00,221 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:04:00,221 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5']
2025-09-26 15:04:00,221 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2025-09-26 15:04:00,222 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$60load_global.6']
2025-09-26 15:04:00,222 - DEBUG - dispatch pc=90, inst=LOAD_CONST(arg=1, lineno=3)
2025-09-26 15:04:00,222 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7']
2025-09-26 15:04:00,222 - DEBUG - dispatch pc=92, inst=CALL_KW(arg=2, lineno=3)
2025-09-26 15:04:00,222 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7', '$const90.8.1']
2025-09-26 15:04:00,222 - DEBUG - dispatch pc=94, inst=STORE_FAST(arg=4, lineno=3)
2025-09-26 15:04:00,222 - DEBUG - stack ['$92call_kw.9']
2025-09-26 15:04:00,222 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=2, lineno=4)
2025-09-26 15:04:00,223 - DEBUG - stack []
2025-09-26 15:04:00,223 - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=4)
2025-09-26 15:04:00,223 - DEBUG - stack ['$const96.10.2']
2025-09-26 15:04:00,223 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=0, lineno=4)
2025-09-26 15:04:00,223 - DEBUG - stack ['$const96.10.2', '$out098.11']
2025-09-26 15:04:00,223 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=3, lineno=4)
2025-09-26 15:04:00,223 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0']
2025-09-26 15:04:00,224 - DEBUG - dispatch pc=104, inst=STORE_SLICE(arg=None, lineno=4)
2025-09-26 15:04:00,224 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0', '$const102.13.3']
2025-09-26 15:04:00,224 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:04:00,224 - DEBUG - stack []
2025-09-26 15:04:00,224 - DEBUG - dispatch pc=108, inst=LOAD_FAST(arg=4, lineno=5)
2025-09-26 15:04:00,224 - DEBUG - stack ['$const106.16.2']
2025-09-26 15:04:00,224 - DEBUG - dispatch pc=110, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:04:00,225 - DEBUG - stack ['$const106.16.2', '$out0108.17']
2025-09-26 15:04:00,225 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=0, lineno=5)
2025-09-26 15:04:00,225 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2']
2025-09-26 15:04:00,225 - DEBUG - dispatch pc=114, inst=STORE_SLICE(arg=None, lineno=5)
2025-09-26 15:04:00,225 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2', '$const112.19.0']
2025-09-26 15:04:00,225 - DEBUG - dispatch pc=116, inst=LOAD_GLOBAL(arg=9, lineno=6)
2025-09-26 15:04:00,225 - DEBUG - stack []
2025-09-26 15:04:00,225 - DEBUG - dispatch pc=126, inst=LOAD_GLOBAL(arg=11, lineno=6)
2025-09-26 15:04:00,226 - DEBUG - stack ['$116load_global.22', '$null$116.23']
2025-09-26 15:04:00,226 - DEBUG - dispatch pc=136, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:04:00,226 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25']
2025-09-26 15:04:00,226 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=4, lineno=6)
2025-09-26 15:04:00,226 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2']
2025-09-26 15:04:00,226 - DEBUG - dispatch pc=140, inst=CALL(arg=2, lineno=6)
2025-09-26 15:04:00,226 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2', '$const138.27.4']
2025-09-26 15:04:00,226 - DEBUG - dispatch pc=148, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-09-26 15:04:00,227 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$140call.28']
2025-09-26 15:04:00,227 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=3, lineno=6)
2025-09-26 15:04:00,227 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29']
2025-09-26 15:04:00,227 - DEBUG - dispatch pc=152, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:04:00,227 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30']
2025-09-26 15:04:00,227 - DEBUG - dispatch pc=154, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-09-26 15:04:00,227 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30', '$const152.31.2']
2025-09-26 15:04:00,228 - DEBUG - dispatch pc=158, inst=LOAD_GLOBAL(arg=13, lineno=6)
2025-09-26 15:04:00,228 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32']
2025-09-26 15:04:00,228 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:04:00,228 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34']
2025-09-26 15:04:00,228 - DEBUG - dispatch pc=170, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:04:00,228 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2']
2025-09-26 15:04:00,229 - DEBUG - dispatch pc=172, inst=CALL(arg=2, lineno=6)
2025-09-26 15:04:00,229 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2', '$const170.36.2']
2025-09-26 15:04:00,229 - DEBUG - dispatch pc=180, inst=BINARY_OP(arg=10, lineno=6)
2025-09-26 15:04:00,229 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$172call.37']
2025-09-26 15:04:00,229 - DEBUG - dispatch pc=184, inst=CALL(arg=2, lineno=6)
2025-09-26 15:04:00,229 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$binop_sub180.38']
2025-09-26 15:04:00,230 - DEBUG - dispatch pc=192, inst=GET_ITER(arg=None, lineno=6)
2025-09-26 15:04:00,230 - DEBUG - stack ['$184call.39']
2025-09-26 15:04:00,230 - DEBUG - end state. edges=[Edge(pc=194, stack=('$192get_iter.40',), blockstack=(), npush=0)]
2025-09-26 15:04:00,230 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:04:00,230 - DEBUG - stack: ['$phi194.0']
2025-09-26 15:04:00,231 - DEBUG - state.pc_initial: State(pc_initial=194 nstack_initial=1)
2025-09-26 15:04:00,231 - DEBUG - dispatch pc=194, inst=FOR_ITER(arg=5, lineno=6)
2025-09-26 15:04:00,231 - DEBUG - stack ['$phi194.0']
2025-09-26 15:04:00,231 - DEBUG - end state. edges=[Edge(pc=208, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0), Edge(pc=198, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0)]
2025-09-26 15:04:00,231 - DEBUG - pending: deque([State(pc_initial=208 nstack_initial=2), State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:04:00,231 - DEBUG - stack: ['$phi208.0', '$phi208.1']
2025-09-26 15:04:00,232 - DEBUG - state.pc_initial: State(pc_initial=208 nstack_initial=2)
2025-09-26 15:04:00,232 - DEBUG - dispatch pc=208, inst=END_FOR(arg=None, lineno=6)
2025-09-26 15:04:00,232 - DEBUG - stack ['$phi208.0', '$phi208.1']
2025-09-26 15:04:00,232 - DEBUG - dispatch pc=210, inst=POP_TOP(arg=None, lineno=6)
2025-09-26 15:04:00,232 - DEBUG - stack ['$phi208.0']
2025-09-26 15:04:00,232 - DEBUG - dispatch pc=212, inst=LOAD_FAST(arg=4, lineno=8)
2025-09-26 15:04:00,233 - DEBUG - stack []
2025-09-26 15:04:00,233 - DEBUG - dispatch pc=214, inst=RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:04:00,233 - DEBUG - stack ['$out0212.2']
2025-09-26 15:04:00,233 - DEBUG - end state. edges=[]
2025-09-26 15:04:00,233 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:04:00,233 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2025-09-26 15:04:00,234 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2025-09-26 15:04:00,234 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=5, lineno=6)
2025-09-26 15:04:00,234 - DEBUG - stack ['$phi198.0', '$phi198.1']
2025-09-26 15:04:00,234 - DEBUG - dispatch pc=200, inst=LOAD_CONST(arg=2, lineno=7)
2025-09-26 15:04:00,234 - DEBUG - stack ['$phi198.0']
2025-09-26 15:04:00,234 - DEBUG - dispatch pc=202, inst=STORE_FAST(arg=6, lineno=7)
2025-09-26 15:04:00,235 - DEBUG - stack ['$phi198.0', '$const200.2.2']
2025-09-26 15:04:00,235 - DEBUG - dispatch pc=204, inst=JUMP_BACKWARD(arg=7, lineno=7)
2025-09-26 15:04:00,235 - DEBUG - stack ['$phi198.0']
2025-09-26 15:04:00,235 - DEBUG - end state. edges=[Edge(pc=194, stack=('$phi198.0',), blockstack=(), npush=0)]
2025-09-26 15:04:00,235 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:04:00,236 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:04:00,236 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=194 nstack_initial=1): {'$phi194.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=208 nstack_initial=2): set()})
2025-09-26 15:04:00,236 - DEBUG - defmap: {'$phi194.0': State(pc_initial=0 nstack_initial=0),
 '$phi198.1': State(pc_initial=194 nstack_initial=1),
 '$phi208.1': State(pc_initial=194 nstack_initial=1)}
2025-09-26 15:04:00,236 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi198.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:04:00,237 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:04:00,238 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:04:00,238 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:04:00,239 - DEBUG - keep phismap: {'$phi194.0': {('$192get_iter.40', State(pc_initial=0 nstack_initial=0))},
 '$phi198.1': {('$194for_iter.2', State(pc_initial=194 nstack_initial=1))}}
2025-09-26 15:04:00,239 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi194.0': '$192get_iter.40'},
             State(pc_initial=194 nstack_initial=1): {'$phi198.1': '$194for_iter.2'}})
2025-09-26 15:04:00,240 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:04:00,240 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.3'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (90, {'res': '$const90.8.1'}), (92, {'func': '$38load_attr.3', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': '$const90.8.1', 'res': '$92call_kw.9'}), (94, {'value': '$92call_kw.9'}), (96, {'res': '$const96.10.2'}), (98, {'res': '$out098.11'}), (100, {'res': '$const100.12.0'}), (102, {'res': '$const102.13.3'}), (104, {'start': '$const100.12.0', 'end': '$const102.13.3', 'container': '$out098.11', 'value': '$const96.10.2', 'res': '$104store_slice.15', 'slicevar': '$104store_slice.14'}), (106, {'res': '$const106.16.2'}), (108, {'res': '$out0108.17'}), (110, {'res': '$const110.18.2'}), (112, {'res': '$const112.19.0'}), (114, {'start': '$const110.18.2', 'end': '$const112.19.0', 'container': '$out0108.17', 'value': '$const106.16.2', 'res': '$114store_slice.21', 'slicevar': '$114store_slice.20'}), (116, {'idx': 4, 'res': '$116load_global.22'}), (126, {'idx': 5, 'res': '$126load_global.24'}), (136, {'res': '$const136.26.2'}), (138, {'res': '$const138.27.4'}), (140, {'func': '$126load_global.24', 'args': ['$const136.26.2', '$const138.27.4'], 'kw_names': None, 'res': '$140call.28'}), (148, {'value': '$140call.28', 'res': '$148unary_negative.29'}), (150, {'res': '$full_shape0150.30'}), (152, {'res': '$const152.31.2'}), (154, {'index': '$const152.31.2', 'target': '$full_shape0150.30', 'res': '$154binary_subscr.32'}), (158, {'idx': 6, 'res': '$158load_global.33'}), (168, {'res': '$const168.35.2'}), (170, {'res': '$const170.36.2'}), (172, {'func': '$158load_global.33', 'args': ['$const168.35.2', '$const170.36.2'], 'kw_names': None, 'res': '$172call.37'}), (180, {'op': '-', 'lhs': '$154binary_subscr.32', 'rhs': '$172call.37', 'res': '$binop_sub180.38'}), (184, {'func': '$116load_global.22', 'args': ['$148unary_negative.29', '$binop_sub180.38'], 'kw_names': None, 'res': '$184call.39'}), (192, {'value': '$184call.39', 'res': '$192get_iter.40'})), outgoing_phis={'$phi194.0': '$192get_iter.40'}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$192get_iter.40',)})
2025-09-26 15:04:00,240 - DEBUG - block_infos State(pc_initial=194 nstack_initial=1):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.0', 'pair': '$194for_iter.1', 'indval': '$194for_iter.2', 'pred': '$194for_iter.3'}),), outgoing_phis={'$phi198.1': '$194for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={208: ('$phi194.0', '$194for_iter.2'), 198: ('$phi194.0', '$194for_iter.2')})
2025-09-26 15:04:00,241 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$const200.2.2'}), (202, {'value': '$const200.2.2'}), (204, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$phi198.0',)})
2025-09-26 15:04:00,241 - DEBUG - block_infos State(pc_initial=208 nstack_initial=2):
AdaptBlockInfo(insts=((212, {'res': '$out0212.2'}), (214, {'retval': '$out0212.2', 'castval': '$214return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:04:00,241 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$28load_global.2']
    $38load_attr.3 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.3']
    $60load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool) ['$60load_global.6', '$70load_attr.7']
    $const_dtype = const(str, dtype)         ['$const_dtype']
    $const90.8.1 = build_tuple(items=[Var($const_dtype, <string>:3)]) ['$const90.8.1', '$const_dtype']
    out0 = call $38load_attr.3(full_shape0, func=$38load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.3', '$70load_attr.7', 'full_shape0', 'out0']
    $const96.10.2 = const(int, 0)            ['$const96.10.2']
    $const100.12.0 = const(NoneType, None)   ['$const100.12.0']
    $const102.13.3 = const(int, 1)           ['$const102.13.3']
    $104store_slice.14 = global(slice: <class 'slice'>) ['$104store_slice.14']
    $104store_slice.15 = call $104store_slice.14($const100.12.0, $const102.13.3, func=$104store_slice.14, args=(Var($const100.12.0, <string>:4), Var($const102.13.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$104store_slice.14', '$104store_slice.15', '$const100.12.0', '$const102.13.3']
    out0[$104store_slice.15] = $const96.10.2 ['$104store_slice.15', '$const96.10.2', 'out0']
    $const106.16.2 = const(int, 0)           ['$const106.16.2']
    $const110.18.2 = const(int, 0)           ['$const110.18.2']
    $const112.19.0 = const(NoneType, None)   ['$const112.19.0']
    $114store_slice.20 = global(slice: <class 'slice'>) ['$114store_slice.20']
    $114store_slice.21 = call $114store_slice.20($const110.18.2, $const112.19.0, func=$114store_slice.20, args=(Var($const110.18.2, <string>:5), Var($const112.19.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$114store_slice.20', '$114store_slice.21', '$const110.18.2', '$const112.19.0']
    out0[$114store_slice.21] = $const106.16.2 ['$114store_slice.21', '$const106.16.2', 'out0']
    $116load_global.22 = global(range: <class 'range'>) ['$116load_global.22']
    $126load_global.24 = global(min: <built-in function min>) ['$126load_global.24']
    $const136.26.2 = const(int, 0)           ['$const136.26.2']
    $const138.27.4 = const(int, -1)          ['$const138.27.4']
    $140call.28 = call $126load_global.24($const136.26.2, $const138.27.4, func=$126load_global.24, args=[Var($const136.26.2, <string>:6), Var($const138.27.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_global.24', '$140call.28', '$const136.26.2', '$const138.27.4']
    $148unary_negative.29 = unary(fn=<built-in function neg>, value=$140call.28) ['$140call.28', '$148unary_negative.29']
    $const152.31.2 = const(int, 0)           ['$const152.31.2']
    $154binary_subscr.32 = getitem(value=full_shape0, index=$const152.31.2, fn=<built-in function getitem>) ['$154binary_subscr.32', '$const152.31.2', 'full_shape0']
    $158load_global.33 = global(max: <built-in function max>) ['$158load_global.33']
    $const168.35.2 = const(int, 0)           ['$const168.35.2']
    $const170.36.2 = const(int, 0)           ['$const170.36.2']
    $172call.37 = call $158load_global.33($const168.35.2, $const170.36.2, func=$158load_global.33, args=[Var($const168.35.2, <string>:6), Var($const170.36.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$158load_global.33', '$172call.37', '$const168.35.2', '$const170.36.2']
    $binop_sub180.38 = $154binary_subscr.32 - $172call.37 ['$154binary_subscr.32', '$172call.37', '$binop_sub180.38']
    $184call.39 = call $116load_global.22($148unary_negative.29, $binop_sub180.38, func=$116load_global.22, args=[Var($148unary_negative.29, <string>:6), Var($binop_sub180.38, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.22', '$148unary_negative.29', '$184call.39', '$binop_sub180.38']
    $192get_iter.40 = getiter(value=$184call.39) ['$184call.39', '$192get_iter.40']
    $phi194.0 = $192get_iter.40              ['$192get_iter.40', '$phi194.0']
    jump 194                                 []
label 194:
    $194for_iter.1 = iternext(value=$phi194.0) ['$194for_iter.1', '$phi194.0']
    $194for_iter.2 = pair_first(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.2']
    $194for_iter.3 = pair_second(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.3']
    $phi198.1 = $194for_iter.2               ['$194for_iter.2', '$phi198.1']
    branch $194for_iter.3, 198, 208          ['$194for_iter.3']
label 198:
    index00 = $phi198.1                      ['$phi198.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 194                                 []
label 208:
    $214return_value.3 = cast(value=out0)    ['$214return_value.3', 'out0']
    return $214return_value.3                ['$214return_value.3']

2025-09-26 15:04:00,267 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:04:00,267 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1881B0>
2025-09-26 15:04:00,267 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:04:00,267 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:04:00,268 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:04:00,268 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:04:00,268 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,268 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:04:00,268 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,268 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:04:00,268 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:04:00,268 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:04:00,268 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,269 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:04:00,269 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:04:00,269 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:04:00,269 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:00,269 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,269 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:04:00,269 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:04:00,270 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:04:00,270 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:04:00,270 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:00,270 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,270 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:04:00,270 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:04:00,270 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:04:00,271 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:04:00,271 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:04:00,271 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,271 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:04:00,271 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:04:00,271 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:04:00,271 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:04:00,271 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:04:00,272 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:04:00,272 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,272 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:04:00,272 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,272 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:04:00,272 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:04:00,272 - DEBUG - on stmt: jump 194
2025-09-26 15:04:00,273 - DEBUG - ==== SSA block analysis pass on 194
2025-09-26 15:04:00,273 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1881B0>
2025-09-26 15:04:00,273 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:04:00,273 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:04:00,273 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:04:00,273 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:04:00,273 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:04:00,273 - DEBUG - ==== SSA block analysis pass on 198
2025-09-26 15:04:00,274 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1881B0>
2025-09-26 15:04:00,274 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:04:00,274 - DEBUG - on stmt: jump 208
2025-09-26 15:04:00,274 - DEBUG - ==== SSA block analysis pass on 414
2025-09-26 15:04:00,274 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1881B0>
2025-09-26 15:04:00,274 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:04:00,274 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:04:00,274 - DEBUG - ==== SSA block analysis pass on 208
2025-09-26 15:04:00,274 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1881B0>
2025-09-26 15:04:00,274 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:04:00,275 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:04:00,275 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:00,275 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:00,275 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:04:00,275 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,275 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,275 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:04:00,275 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:04:00,275 - DEBUG - ==== SSA block analysis pass on 209
2025-09-26 15:04:00,276 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1881B0>
2025-09-26 15:04:00,276 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:04:00,276 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,276 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,276 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:04:00,276 - DEBUG - ==== SSA block analysis pass on 241
2025-09-26 15:04:00,276 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1881B0>
2025-09-26 15:04:00,276 - DEBUG - on stmt: jump 251
2025-09-26 15:04:00,276 - DEBUG - ==== SSA block analysis pass on 253
2025-09-26 15:04:00,277 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1881B0>
2025-09-26 15:04:00,277 - DEBUG - on stmt: jump 257
2025-09-26 15:04:00,277 - DEBUG - ==== SSA block analysis pass on 251
2025-09-26 15:04:00,277 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1881B0>
2025-09-26 15:04:00,277 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:04:00,277 - DEBUG - on stmt: jump 257
2025-09-26 15:04:00,277 - DEBUG - ==== SSA block analysis pass on 257
2025-09-26 15:04:00,277 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1881B0>
2025-09-26 15:04:00,277 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:04:00,278 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:04:00,278 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:00,278 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:00,278 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:04:00,278 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,278 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,278 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:04:00,279 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:04:00,279 - DEBUG - ==== SSA block analysis pass on 261
2025-09-26 15:04:00,279 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1881B0>
2025-09-26 15:04:00,279 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:04:00,279 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,279 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,279 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:04:00,279 - DEBUG - ==== SSA block analysis pass on 289
2025-09-26 15:04:00,279 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1881B0>
2025-09-26 15:04:00,279 - DEBUG - on stmt: jump 299
2025-09-26 15:04:00,280 - DEBUG - ==== SSA block analysis pass on 301
2025-09-26 15:04:00,280 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1881B0>
2025-09-26 15:04:00,280 - DEBUG - on stmt: jump 305
2025-09-26 15:04:00,280 - DEBUG - ==== SSA block analysis pass on 299
2025-09-26 15:04:00,280 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1881B0>
2025-09-26 15:04:00,280 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:04:00,280 - DEBUG - on stmt: jump 305
2025-09-26 15:04:00,280 - DEBUG - ==== SSA block analysis pass on 305
2025-09-26 15:04:00,280 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1881B0>
2025-09-26 15:04:00,280 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,281 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,281 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:04:00,281 - DEBUG - ==== SSA block analysis pass on 309
2025-09-26 15:04:00,281 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1881B0>
2025-09-26 15:04:00,281 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,281 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:04:00,281 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,281 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,281 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:04:00,282 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,282 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:04:00,282 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:04:00,282 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:04:00,282 - DEBUG - on stmt: jump 413
2025-09-26 15:04:00,282 - DEBUG - ==== SSA block analysis pass on 323
2025-09-26 15:04:00,282 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1881B0>
2025-09-26 15:04:00,283 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,283 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:04:00,283 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,283 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,283 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:04:00,283 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,284 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:04:00,284 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:04:00,284 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:04:00,284 - DEBUG - on stmt: jump 413
2025-09-26 15:04:00,284 - DEBUG - ==== SSA block analysis pass on 413
2025-09-26 15:04:00,284 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1881B0>
2025-09-26 15:04:00,284 - DEBUG - on stmt: jump 194
2025-09-26 15:04:00,284 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104store_slice.14.1': [(<numba.core.ir.Assign object at 0x000002985D1FE5D0>,
                                       0)],
             '$104store_slice.15.1': [(<numba.core.ir.Assign object at 0x000002985D1FE6F0>,
                                       0)],
             '$110pred': [(<numba.core.ir.Assign object at 0x000002985D179A30>,
                           305)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x000002985D16F050>,
                                    309)],
             '$114store_slice.20.1': [(<numba.core.ir.Assign object at 0x000002985D1FEC30>,
                                       0)],
             '$114store_slice.21.1': [(<numba.core.ir.Assign object at 0x000002985D1FED50>,
                                       0)],
             '$116load_global.22.1': [(<numba.core.ir.Assign object at 0x000002985D1FEE70>,
                                       0)],
             '$124load_attr.1': [(<numba.core.ir.Assign object at 0x000002985D16D0D0>,
                                  309)],
             '$126load_global.24.1': [(<numba.core.ir.Assign object at 0x000002985D1FEF90>,
                                       0)],
             '$140call.28.1': [(<numba.core.ir.Assign object at 0x000002985D1FF2F0>,
                                0)],
             '$148call.4': [(<numba.core.ir.Assign object at 0x000002985D16E210>,
                             309)],
             '$148unary_negative.29.1': [(<numba.core.ir.Assign object at 0x000002985D1FF410>,
                                          0)],
             '$154binary_subscr.32.1': [(<numba.core.ir.Assign object at 0x000002985D1FF710>,
                                         0)],
             '$156load_global.5': [(<numba.core.ir.Assign object at 0x000002985D172570>,
                                    309)],
             '$158load_global.33.1': [(<numba.core.ir.Assign object at 0x000002985D1FF830>,
                                       0)],
             '$166load_attr.6': [(<numba.core.ir.Assign object at 0x000002985D173E90>,
                                  309)],
             '$16unary_negative.4': [(<numba.core.ir.Assign object at 0x000002985D1034D0>,
                                      208)],
             '$172call.37.1': [(<numba.core.ir.Assign object at 0x000002985D1FFB90>,
                                0)],
             '$184call.39.1': [(<numba.core.ir.Assign object at 0x000002985D1FFDD0>,
                                0)],
             '$190call.9': [(<numba.core.ir.Assign object at 0x000002985D1DC4D0>,
                             309)],
             '$192get_iter.40.1': [(<numba.core.ir.Assign object at 0x000002985D1FFEF0>,
                                    0)],
             '$194for_iter.1.1': [(<numba.core.ir.Assign object at 0x000002985D1FF4D0>,
                                   194)],
             '$194for_iter.2.1': [(<numba.core.ir.Assign object at 0x000002985D1F8050>,
                                   194)],
             '$194for_iter.3.1': [(<numba.core.ir.Assign object at 0x000002985D1F8170>,
                                   194)],
             '$198compare_op.10': [(<numba.core.ir.Assign object at 0x000002985D1DDC10>,
                                    309)],
             '$202return_value.11': [(<numba.core.ir.Assign object at 0x000002985D1DF350>,
                                      309)],
             '$204load_global.0': [(<numba.core.ir.Assign object at 0x000002985D1CF830>,
                                    323)],
             '$214load_attr.1': [(<numba.core.ir.Assign object at 0x000002985D1C4EF0>,
                                  323)],
             '$214return_value.3.1': [(<numba.core.ir.Assign object at 0x000002985D1F8770>,
                                       414)],
             '$238call.4': [(<numba.core.ir.Assign object at 0x000002985D1C4050>,
                             323)],
             '$246load_global.5': [(<numba.core.ir.Assign object at 0x000002985D1C7050>,
                                    323)],
             '$24compare_op.6': [(<numba.core.ir.Assign object at 0x000002985D101CD0>,
                                  208)],
             '$256load_attr.6': [(<numba.core.ir.Assign object at 0x000002985D1D95B0>,
                                  323)],
             '$280call.9': [(<numba.core.ir.Assign object at 0x000002985D1DACF0>,
                             323)],
             '$288compare_op.10': [(<numba.core.ir.Assign object at 0x000002985D1D4470>,
                                    323)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x000002985D1FD850>,
                                     0)],
             '$28pred': [(<numba.core.ir.Assign object at 0x000002985CF95550>,
                          208)],
             '$292return_value.11': [(<numba.core.ir.Assign object at 0x000002985D1D5BB0>,
                                      323)],
             '$34compare_op.2': [(<numba.core.ir.Assign object at 0x000002985D1A0230>,
                                  209)],
             '$38load_attr.3.1': [(<numba.core.ir.Assign object at 0x000002985D1FD970>,
                                   0)],
             '$38pred': [(<numba.core.ir.Assign object at 0x000002985D1A0FB0>,
                          209)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x000002985D1FDB50>,
                                     0)],
             '$64unary_negative.4': [(<numba.core.ir.Assign object at 0x000002985D1AF830>,
                                      257)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x000002985D1FDC70>,
                                   0)],
             '$72compare_op.6': [(<numba.core.ir.Assign object at 0x000002985D1AF530>,
                                  257)],
             '$76pred': [(<numba.core.ir.Assign object at 0x000002985D1B77D0>,
                          257)],
             '$82compare_op.2': [(<numba.core.ir.Assign object at 0x000002985D14D250>,
                                  261)],
             '$86pred': [(<numba.core.ir.Assign object at 0x000002985D166B10>,
                          261)],
             '$binop_sub180.38.1': [(<numba.core.ir.Assign object at 0x000002985D1FFCB0>,
                                     0)],
             '$bool110': [(<numba.core.ir.Assign object at 0x000002985D1749B0>,
                           305)],
             '$bool28': [(<numba.core.ir.Assign object at 0x000002985CF0BFB0>,
                          208)],
             '$bool38': [(<numba.core.ir.Assign object at 0x000002985D1A30B0>,
                          209)],
             '$bool76': [(<numba.core.ir.Assign object at 0x000002985D1AD130>,
                          257)],
             '$bool86': [(<numba.core.ir.Assign object at 0x000002985D14ED50>,
                          261)],
             '$const100.12.0.1': [(<numba.core.ir.Assign object at 0x000002985D1FE390>,
                                   0)],
             '$const102.13.3.1': [(<numba.core.ir.Assign object at 0x000002985D1FE4B0>,
                                   0)],
             '$const106.16.2.1': [(<numba.core.ir.Assign object at 0x000002985D1FE810>,
                                   0)],
             '$const110.18.2.1': [(<numba.core.ir.Assign object at 0x000002985D1FE9F0>,
                                   0)],
             '$const112.19.0.1': [(<numba.core.ir.Assign object at 0x000002985D1FEB10>,
                                   0)],
             '$const136.26.2.1': [(<numba.core.ir.Assign object at 0x000002985D1FF0B0>,
                                   0)],
             '$const138.27.4.1': [(<numba.core.ir.Assign object at 0x000002985D1FF1D0>,
                                   0)],
             '$const152.31.2.1': [(<numba.core.ir.Assign object at 0x000002985D1FF5F0>,
                                   0)],
             '$const168.35.2.1': [(<numba.core.ir.Assign object at 0x000002985D1FF950>,
                                   0)],
             '$const170.36.2.1': [(<numba.core.ir.Assign object at 0x000002985D1FFA70>,
                                   0)],
             '$const54.1.2': [(<numba.core.ir.Assign object at 0x000002985D145490>,
                               257)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x000002985CFB05F0>,
                              208)],
             '$const90.8.1.1': [(<numba.core.ir.Assign object at 0x000002985D1FDEB0>,
                                 0)],
             '$const96.10.2.1': [(<numba.core.ir.Assign object at 0x000002985D1FE1B0>,
                                  0)],
             '$const_dtype.1': [(<numba.core.ir.Assign object at 0x000002985D1FDD90>,
                                 0)],
             '$phi194.0.1': [(<numba.core.ir.Assign object at 0x000002985D1FD730>,
                              0)],
             '$phi198.1.1': [(<numba.core.ir.Assign object at 0x000002985D1F8230>,
                              194)],
             '$phi32.0': [(<numba.core.ir.Assign object at 0x000002985CF95F70>,
                           208)],
             '$phi80.0': [(<numba.core.ir.Assign object at 0x000002985D1B5F70>,
                           257)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x000002985D1FD670>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x000002985D1F8350>,
                          198)],
             'out0': [(<numba.core.ir.Assign object at 0x000002985D1FDFD0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x000002985CFB3D10>,
                                208),
                               (<numba.core.ir.Assign object at 0x000002985D1FCA10>,
                                257)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002985D1FD370>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002985D1FD250>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x000002985CFB0590>, 208),
                    (<numba.core.ir.Assign object at 0x000002985D1E5010>, 251)],
             'x1': [(<numba.core.ir.Assign object at 0x000002985D1FCAD0>, 257),
                    (<numba.core.ir.Assign object at 0x000002985D175970>, 299)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002985D1FD490>,
                           0)]})
2025-09-26 15:04:00,294 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002985D1881B0>
2025-09-26 15:04:00,294 - DEBUG - Fix SSA violator on var stencil_index
2025-09-26 15:04:00,294 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:04:00,294 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,294 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:04:00,294 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:04:00,294 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:04:00,295 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:04:00,295 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,295 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:04:00,295 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,295 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:04:00,295 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:04:00,295 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:04:00,295 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,295 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:04:00,296 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:04:00,296 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:04:00,296 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:00,296 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,296 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:04:00,296 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:04:00,296 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:04:00,297 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:04:00,297 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:00,297 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,297 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:04:00,297 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:04:00,297 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:04:00,298 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:04:00,298 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:04:00,298 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,298 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:04:00,298 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:04:00,298 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:04:00,298 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:04:00,298 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:04:00,299 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:04:00,299 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,299 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:04:00,299 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,299 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:04:00,299 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:04:00,299 - DEBUG - on stmt: jump 194
2025-09-26 15:04:00,300 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:04:00,300 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,300 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:04:00,300 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:04:00,300 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:04:00,300 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:04:00,300 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:04:00,300 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:04:00,300 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,301 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:04:00,301 - DEBUG - on stmt: jump 208
2025-09-26 15:04:00,301 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:04:00,301 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,301 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:04:00,301 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:04:00,301 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:04:00,301 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,301 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:04:00,301 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:04:00,302 - DEBUG - first assign: stencil_index
2025-09-26 15:04:00,302 - DEBUG - replaced with: stencil_index = $const6.1.1 + index00
2025-09-26 15:04:00,302 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:00,302 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:00,302 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:04:00,302 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,302 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,302 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:04:00,303 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:04:00,303 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:04:00,303 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,303 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:04:00,303 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,303 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,303 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:04:00,303 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:04:00,303 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,304 - DEBUG - on stmt: jump 251
2025-09-26 15:04:00,304 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:04:00,304 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,304 - DEBUG - on stmt: jump 257
2025-09-26 15:04:00,304 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:04:00,304 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,304 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:04:00,304 - DEBUG - on stmt: jump 257
2025-09-26 15:04:00,304 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:04:00,304 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,305 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:04:00,305 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:04:00,305 - DEBUG - replaced with: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:04:00,305 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:00,305 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:00,305 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:04:00,305 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,305 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,305 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:04:00,306 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:04:00,306 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:04:00,306 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,306 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:04:00,306 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,306 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,306 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:04:00,306 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:04:00,306 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,307 - DEBUG - on stmt: jump 299
2025-09-26 15:04:00,307 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:04:00,307 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,307 - DEBUG - on stmt: jump 305
2025-09-26 15:04:00,307 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:04:00,307 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,307 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:04:00,307 - DEBUG - on stmt: jump 305
2025-09-26 15:04:00,307 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:04:00,307 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,308 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,308 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,308 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:04:00,308 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:04:00,308 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,308 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,308 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:04:00,308 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,308 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,309 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:04:00,309 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,309 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:04:00,309 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:04:00,309 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:04:00,309 - DEBUG - on stmt: jump 413
2025-09-26 15:04:00,309 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:04:00,310 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,310 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,310 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:04:00,310 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,310 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,310 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:04:00,311 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,311 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:04:00,311 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:04:00,311 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:04:00,311 - DEBUG - on stmt: jump 413
2025-09-26 15:04:00,311 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:04:00,311 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,311 - DEBUG - on stmt: jump 194
2025-09-26 15:04:00,312 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002985D21DCD0>],
             257: [<numba.core.ir.Assign object at 0x000002985D21DF70>]})
2025-09-26 15:04:00,312 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:04:00,312 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,312 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:04:00,312 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:04:00,312 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:04:00,313 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:04:00,313 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,313 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:04:00,313 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,313 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:04:00,313 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:04:00,313 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:04:00,313 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,314 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:04:00,314 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:04:00,314 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:04:00,314 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:00,314 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,314 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:04:00,314 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:04:00,314 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:04:00,314 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:04:00,315 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:00,315 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,315 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:04:00,315 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:04:00,315 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:04:00,315 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:04:00,315 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:04:00,315 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,315 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:04:00,316 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:04:00,316 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:04:00,316 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:04:00,316 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:04:00,316 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:04:00,316 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,316 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:04:00,316 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,316 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:04:00,317 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:04:00,317 - DEBUG - on stmt: jump 194
2025-09-26 15:04:00,317 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:04:00,317 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,317 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:04:00,317 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:04:00,317 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:04:00,317 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:04:00,318 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:04:00,318 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:04:00,318 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,318 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:04:00,318 - DEBUG - on stmt: jump 208
2025-09-26 15:04:00,318 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:04:00,318 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,318 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:04:00,319 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:04:00,319 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:04:00,319 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,319 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:04:00,319 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:04:00,319 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:00,319 - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:00,319 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:00,319 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:04:00,320 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,320 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,320 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:04:00,320 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:04:00,320 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:04:00,320 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,320 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:04:00,320 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,320 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,320 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:04:00,321 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:04:00,321 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,321 - DEBUG - on stmt: jump 251
2025-09-26 15:04:00,321 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:04:00,321 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,321 - DEBUG - on stmt: jump 257
2025-09-26 15:04:00,321 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:04:00,321 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,321 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:04:00,321 - DEBUG - on stmt: jump 257
2025-09-26 15:04:00,322 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:04:00,322 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,322 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:04:00,322 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:04:00,322 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:00,322 - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:00,323 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:04:00,323 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:00,323 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:04:00,323 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,323 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,323 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:04:00,324 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:04:00,324 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:04:00,324 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,324 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:04:00,324 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,324 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,325 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:04:00,325 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:04:00,325 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,325 - DEBUG - on stmt: jump 299
2025-09-26 15:04:00,325 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:04:00,325 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,325 - DEBUG - on stmt: jump 305
2025-09-26 15:04:00,325 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:04:00,326 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,326 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:04:00,326 - DEBUG - on stmt: jump 305
2025-09-26 15:04:00,326 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:04:00,326 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,326 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,327 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,327 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:04:00,327 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:04:00,327 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,327 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,327 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:04:00,327 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,327 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,328 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:04:00,328 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,328 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:04:00,328 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:04:00,328 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:04:00,328 - DEBUG - on stmt: jump 413
2025-09-26 15:04:00,328 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:04:00,329 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,329 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,329 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:04:00,329 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,329 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,329 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:04:00,329 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,329 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:04:00,329 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:04:00,330 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:04:00,330 - DEBUG - on stmt: jump 413
2025-09-26 15:04:00,330 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:04:00,330 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,330 - DEBUG - on stmt: jump 194
2025-09-26 15:04:00,330 - DEBUG - Fix SSA violator on var x0
2025-09-26 15:04:00,330 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:04:00,330 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,330 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:04:00,330 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:04:00,331 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:04:00,331 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:04:00,331 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,331 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:04:00,331 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,331 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:04:00,331 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:04:00,331 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:04:00,331 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,332 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:04:00,332 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:04:00,332 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:04:00,332 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:00,332 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,332 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:04:00,332 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:04:00,332 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:04:00,333 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:04:00,333 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:00,333 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,333 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:04:00,333 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:04:00,333 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:04:00,333 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:04:00,333 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:04:00,334 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,334 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:04:00,334 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:04:00,334 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:04:00,334 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:04:00,334 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:04:00,334 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:04:00,334 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,334 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:04:00,335 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,335 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:04:00,335 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:04:00,335 - DEBUG - on stmt: jump 194
2025-09-26 15:04:00,335 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:04:00,335 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,335 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:04:00,335 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:04:00,335 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:04:00,336 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:04:00,336 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:04:00,336 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:04:00,336 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,336 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:04:00,336 - DEBUG - on stmt: jump 208
2025-09-26 15:04:00,336 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:04:00,336 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,337 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:04:00,337 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:04:00,337 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:04:00,337 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,337 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:04:00,337 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:04:00,337 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:00,337 - DEBUG - first assign: x0
2025-09-26 15:04:00,338 - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:00,338 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:00,338 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:04:00,338 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,338 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,338 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:04:00,338 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:04:00,339 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:04:00,339 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,339 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:04:00,339 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,339 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,339 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:04:00,339 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:04:00,339 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,340 - DEBUG - on stmt: jump 251
2025-09-26 15:04:00,340 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:04:00,340 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,340 - DEBUG - on stmt: jump 257
2025-09-26 15:04:00,340 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:04:00,340 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,340 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:04:00,340 - DEBUG - replaced with: x0.1 = const(int, 0)
2025-09-26 15:04:00,340 - DEBUG - on stmt: jump 257
2025-09-26 15:04:00,341 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:04:00,341 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,341 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:04:00,341 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:04:00,341 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:04:00,341 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:00,341 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:04:00,341 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,341 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,342 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:04:00,342 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:04:00,342 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:04:00,342 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,342 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:04:00,342 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,342 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,342 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:04:00,342 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:04:00,343 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,343 - DEBUG - on stmt: jump 299
2025-09-26 15:04:00,343 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:04:00,343 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,343 - DEBUG - on stmt: jump 305
2025-09-26 15:04:00,343 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:04:00,343 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,343 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:04:00,343 - DEBUG - on stmt: jump 305
2025-09-26 15:04:00,343 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:04:00,344 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,344 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,344 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,344 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:04:00,344 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:04:00,344 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,344 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,344 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:04:00,344 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,345 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,345 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:04:00,345 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,345 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:04:00,345 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:04:00,345 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:04:00,345 - DEBUG - on stmt: jump 413
2025-09-26 15:04:00,345 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:04:00,345 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,346 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,346 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:04:00,346 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,346 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,346 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:04:00,346 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,346 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:04:00,346 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:04:00,346 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:04:00,346 - DEBUG - on stmt: jump 413
2025-09-26 15:04:00,347 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:04:00,347 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1F01A0>
2025-09-26 15:04:00,347 - DEBUG - on stmt: jump 194
2025-09-26 15:04:00,347 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002985D21E090>],
             251: [<numba.core.ir.Assign object at 0x000002985D21DD90>]})
2025-09-26 15:04:00,347 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:04:00,347 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,347 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:04:00,348 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:04:00,348 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:04:00,348 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:04:00,348 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,348 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:04:00,348 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,348 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:04:00,348 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:04:00,348 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:04:00,349 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,349 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:04:00,349 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:04:00,349 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:04:00,349 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:00,349 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,349 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:04:00,350 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:04:00,350 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:04:00,350 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:04:00,350 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:00,350 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,350 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:04:00,350 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:04:00,351 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:04:00,351 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:04:00,351 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:04:00,351 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,351 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:04:00,351 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:04:00,351 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:04:00,351 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:04:00,351 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:04:00,352 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:04:00,352 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,352 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:04:00,352 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,352 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:04:00,353 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:04:00,353 - DEBUG - on stmt: jump 194
2025-09-26 15:04:00,353 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:04:00,353 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,353 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:04:00,353 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:04:00,353 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:04:00,353 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:04:00,354 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:04:00,354 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:04:00,354 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,354 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:04:00,354 - DEBUG - on stmt: jump 208
2025-09-26 15:04:00,354 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:04:00,354 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,354 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:04:00,354 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:04:00,354 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:04:00,355 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,355 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:04:00,355 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:04:00,355 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:00,355 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:00,355 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:04:00,355 - DEBUG - find_def var='x0' stmt=$24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:04:00,355 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,355 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,356 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:04:00,356 - DEBUG - find_def var='x0' stmt=$phi32.0 = x0
2025-09-26 15:04:00,356 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:04:00,356 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:04:00,356 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,356 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:04:00,356 - DEBUG - find_def var='x0' stmt=$34compare_op.2 = x0 <= threshold
2025-09-26 15:04:00,356 - DEBUG - find_def_from_top label 209
2025-09-26 15:04:00,356 - DEBUG - idom 208 from label 209
2025-09-26 15:04:00,356 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:04:00,357 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,357 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,357 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:04:00,357 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:04:00,357 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,357 - DEBUG - on stmt: jump 251
2025-09-26 15:04:00,357 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:04:00,357 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,357 - DEBUG - on stmt: jump 257
2025-09-26 15:04:00,358 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:04:00,358 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,358 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:04:00,358 - DEBUG - on stmt: jump 257
2025-09-26 15:04:00,358 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:04:00,358 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,358 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:04:00,358 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:04:00,358 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:04:00,359 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:00,359 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:04:00,359 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,359 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,359 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:04:00,359 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:04:00,359 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:04:00,359 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,359 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:04:00,359 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,360 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,360 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:04:00,360 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:04:00,360 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,360 - DEBUG - on stmt: jump 299
2025-09-26 15:04:00,360 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:04:00,360 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,360 - DEBUG - on stmt: jump 305
2025-09-26 15:04:00,360 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:04:00,360 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,361 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:04:00,361 - DEBUG - on stmt: jump 305
2025-09-26 15:04:00,361 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:04:00,361 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,361 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,361 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,361 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:04:00,361 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:04:00,361 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,361 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,362 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:04:00,362 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,362 - DEBUG - find_def var='x0' stmt=$148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,362 - DEBUG - find_def_from_top label 309
2025-09-26 15:04:00,362 - DEBUG - idom 305 from label 309
2025-09-26 15:04:00,362 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:04:00,362 - DEBUG - find_def_from_top label 305
2025-09-26 15:04:00,362 - DEBUG - idom 257 from label 305
2025-09-26 15:04:00,363 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:04:00,363 - DEBUG - find_def_from_top label 257
2025-09-26 15:04:00,363 - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 257
2025-09-26 15:04:00,363 - DEBUG - find_def_from_bottom label 209
2025-09-26 15:04:00,363 - DEBUG - find_def_from_top label 209
2025-09-26 15:04:00,363 - DEBUG - idom 208 from label 209
2025-09-26 15:04:00,363 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:04:00,363 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:00,364 - DEBUG - find_def_from_bottom label 251
2025-09-26 15:04:00,364 - DEBUG - incoming_def x0.1 = const(int, 0)
2025-09-26 15:04:00,364 - DEBUG - find_def_from_bottom label 253
2025-09-26 15:04:00,364 - DEBUG - find_def_from_top label 253
2025-09-26 15:04:00,364 - DEBUG - idom 208 from label 253
2025-09-26 15:04:00,364 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:04:00,364 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:00,364 - DEBUG - replaced with: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,365 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,365 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:04:00,365 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,365 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:04:00,365 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:04:00,365 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:04:00,365 - DEBUG - on stmt: jump 413
2025-09-26 15:04:00,366 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:04:00,366 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,366 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,366 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:04:00,366 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,366 - DEBUG - find_def var='x0' stmt=$238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,366 - DEBUG - find_def_from_top label 323
2025-09-26 15:04:00,366 - DEBUG - idom 305 from label 323
2025-09-26 15:04:00,367 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:04:00,367 - DEBUG - find_def_from_top label 305
2025-09-26 15:04:00,367 - DEBUG - idom 257 from label 305
2025-09-26 15:04:00,367 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:04:00,367 - DEBUG - replaced with: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,367 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,367 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:04:00,367 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,368 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:04:00,368 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:04:00,368 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:04:00,368 - DEBUG - on stmt: jump 413
2025-09-26 15:04:00,368 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:04:00,368 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1F01A0>
2025-09-26 15:04:00,368 - DEBUG - on stmt: jump 194
2025-09-26 15:04:00,368 - DEBUG - Fix SSA violator on var x1
2025-09-26 15:04:00,369 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:04:00,369 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D21DAF0>
2025-09-26 15:04:00,369 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:04:00,369 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:04:00,369 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:04:00,369 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:04:00,369 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,369 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:04:00,369 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,370 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:04:00,370 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:04:00,370 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:04:00,370 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,370 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:04:00,370 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:04:00,370 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:04:00,370 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:00,370 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,371 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:04:00,371 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:04:00,371 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:04:00,371 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:04:00,371 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:00,371 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,371 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:04:00,371 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:04:00,371 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:04:00,372 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:04:00,372 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:04:00,372 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,372 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:04:00,372 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:04:00,372 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:04:00,372 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:04:00,372 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:04:00,373 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:04:00,373 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,373 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:04:00,373 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,373 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:04:00,373 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:04:00,373 - DEBUG - on stmt: jump 194
2025-09-26 15:04:00,373 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:04:00,374 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D21DAF0>
2025-09-26 15:04:00,374 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:04:00,374 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:04:00,374 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:04:00,374 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:04:00,374 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:04:00,374 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:04:00,374 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D21DAF0>
2025-09-26 15:04:00,374 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:04:00,374 - DEBUG - on stmt: jump 208
2025-09-26 15:04:00,375 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:04:00,375 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D21DAF0>
2025-09-26 15:04:00,375 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:04:00,375 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:04:00,375 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:04:00,375 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D21DAF0>
2025-09-26 15:04:00,375 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:04:00,375 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:04:00,375 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:00,375 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:00,376 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:04:00,376 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,376 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,376 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:04:00,376 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:04:00,376 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:04:00,376 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D21DAF0>
2025-09-26 15:04:00,377 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:04:00,377 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,377 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,377 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:04:00,377 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:04:00,377 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D21DAF0>
2025-09-26 15:04:00,377 - DEBUG - on stmt: jump 251
2025-09-26 15:04:00,378 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:04:00,378 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D21DAF0>
2025-09-26 15:04:00,378 - DEBUG - on stmt: jump 257
2025-09-26 15:04:00,378 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:04:00,378 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D21DAF0>
2025-09-26 15:04:00,378 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:04:00,378 - DEBUG - on stmt: jump 257
2025-09-26 15:04:00,379 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:04:00,379 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D21DAF0>
2025-09-26 15:04:00,379 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:04:00,379 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:04:00,379 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:04:00,379 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:04:00,379 - DEBUG - first assign: x1
2025-09-26 15:04:00,379 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:04:00,380 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:00,380 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:04:00,380 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,380 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,380 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:04:00,380 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:04:00,380 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:04:00,380 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D21DAF0>
2025-09-26 15:04:00,380 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:04:00,380 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,381 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,381 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:04:00,381 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:04:00,381 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D21DAF0>
2025-09-26 15:04:00,381 - DEBUG - on stmt: jump 299
2025-09-26 15:04:00,381 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:04:00,381 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D21DAF0>
2025-09-26 15:04:00,381 - DEBUG - on stmt: jump 305
2025-09-26 15:04:00,381 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:04:00,382 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D21DAF0>
2025-09-26 15:04:00,382 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:04:00,382 - DEBUG - replaced with: x1.1 = const(int, 0)
2025-09-26 15:04:00,382 - DEBUG - on stmt: jump 305
2025-09-26 15:04:00,382 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:04:00,382 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D21DAF0>
2025-09-26 15:04:00,382 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,382 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,382 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:04:00,383 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:04:00,383 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D21DAF0>
2025-09-26 15:04:00,383 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,383 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:04:00,383 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,383 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,384 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:04:00,384 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,384 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:04:00,384 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:04:00,384 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:04:00,384 - DEBUG - on stmt: jump 413
2025-09-26 15:04:00,384 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:04:00,384 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D21DAF0>
2025-09-26 15:04:00,384 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,385 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:04:00,385 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,385 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,385 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:04:00,385 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,385 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:04:00,385 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:04:00,385 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:04:00,386 - DEBUG - on stmt: jump 413
2025-09-26 15:04:00,386 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:04:00,386 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D21DAF0>
2025-09-26 15:04:00,386 - DEBUG - on stmt: jump 194
2025-09-26 15:04:00,386 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {257: [<numba.core.ir.Assign object at 0x000002985D21DEB0>],
             299: [<numba.core.ir.Assign object at 0x000002985D21EF30>]})
2025-09-26 15:04:00,386 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:04:00,386 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D21EED0>
2025-09-26 15:04:00,386 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:04:00,386 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:04:00,387 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:04:00,387 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:04:00,387 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,387 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:04:00,387 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,387 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:04:00,387 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:04:00,387 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:04:00,388 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,388 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:04:00,388 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:04:00,388 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:04:00,388 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:00,388 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,388 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:04:00,388 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:04:00,389 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:04:00,389 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:04:00,389 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:00,389 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,389 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:04:00,389 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:04:00,389 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:04:00,389 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:04:00,390 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:04:00,390 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,390 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:04:00,390 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:04:00,390 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:04:00,390 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:04:00,390 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:04:00,391 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:04:00,391 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,391 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:04:00,391 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,391 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:04:00,391 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:04:00,391 - DEBUG - on stmt: jump 194
2025-09-26 15:04:00,392 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:04:00,392 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D21EED0>
2025-09-26 15:04:00,392 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:04:00,392 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:04:00,392 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:04:00,393 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:04:00,393 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:04:00,393 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:04:00,393 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D21EED0>
2025-09-26 15:04:00,393 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:04:00,393 - DEBUG - on stmt: jump 208
2025-09-26 15:04:00,393 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:04:00,393 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D21EED0>
2025-09-26 15:04:00,394 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:04:00,394 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:04:00,394 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:04:00,394 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D21EED0>
2025-09-26 15:04:00,394 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:04:00,394 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:04:00,394 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:00,394 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:00,394 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:04:00,395 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,395 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,395 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:04:00,395 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:04:00,395 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:04:00,395 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D21EED0>
2025-09-26 15:04:00,395 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:04:00,395 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,395 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,396 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:04:00,396 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:04:00,396 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D21EED0>
2025-09-26 15:04:00,396 - DEBUG - on stmt: jump 251
2025-09-26 15:04:00,396 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:04:00,396 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D21EED0>
2025-09-26 15:04:00,396 - DEBUG - on stmt: jump 257
2025-09-26 15:04:00,396 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:04:00,396 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D21EED0>
2025-09-26 15:04:00,396 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:04:00,397 - DEBUG - on stmt: jump 257
2025-09-26 15:04:00,397 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:04:00,397 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D21EED0>
2025-09-26 15:04:00,397 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:04:00,397 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:04:00,397 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:04:00,397 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:04:00,397 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:00,398 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:04:00,398 - DEBUG - find_def var='x1' stmt=$72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:04:00,398 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,398 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,398 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:04:00,398 - DEBUG - find_def var='x1' stmt=$phi80.0 = x1
2025-09-26 15:04:00,398 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:04:00,398 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:04:00,398 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D21EED0>
2025-09-26 15:04:00,399 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:04:00,399 - DEBUG - find_def var='x1' stmt=$82compare_op.2 = x1 <= threshold
2025-09-26 15:04:00,399 - DEBUG - find_def_from_top label 261
2025-09-26 15:04:00,399 - DEBUG - idom 257 from label 261
2025-09-26 15:04:00,399 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:04:00,399 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,399 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,399 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:04:00,399 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:04:00,400 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D21EED0>
2025-09-26 15:04:00,400 - DEBUG - on stmt: jump 299
2025-09-26 15:04:00,400 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:04:00,400 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D21EED0>
2025-09-26 15:04:00,400 - DEBUG - on stmt: jump 305
2025-09-26 15:04:00,400 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:04:00,400 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D21EED0>
2025-09-26 15:04:00,400 - DEBUG - on stmt: x1.1 = const(int, 0)
2025-09-26 15:04:00,400 - DEBUG - on stmt: jump 305
2025-09-26 15:04:00,400 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:04:00,401 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D21EED0>
2025-09-26 15:04:00,401 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:04:00,401 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,401 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:04:00,401 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:04:00,401 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D21EED0>
2025-09-26 15:04:00,401 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,401 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:04:00,401 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,402 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,402 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:04:00,402 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,402 - DEBUG - find_def var='x1' stmt=$190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,402 - DEBUG - find_def_from_top label 309
2025-09-26 15:04:00,402 - DEBUG - idom 305 from label 309
2025-09-26 15:04:00,402 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:04:00,403 - DEBUG - find_def_from_top label 305
2025-09-26 15:04:00,403 - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 305
2025-09-26 15:04:00,403 - DEBUG - find_def_from_bottom label 299
2025-09-26 15:04:00,403 - DEBUG - incoming_def x1.1 = const(int, 0)
2025-09-26 15:04:00,403 - DEBUG - find_def_from_bottom label 301
2025-09-26 15:04:00,403 - DEBUG - find_def_from_top label 301
2025-09-26 15:04:00,403 - DEBUG - idom 257 from label 301
2025-09-26 15:04:00,404 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:04:00,404 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:04:00,404 - DEBUG - find_def_from_bottom label 261
2025-09-26 15:04:00,404 - DEBUG - find_def_from_top label 261
2025-09-26 15:04:00,404 - DEBUG - idom 257 from label 261
2025-09-26 15:04:00,404 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:04:00,404 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:04:00,405 - DEBUG - replaced with: $190call.9 = call $166load_attr.6(x1.2, func=$166load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,405 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:04:00,405 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:04:00,405 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:04:00,405 - DEBUG - on stmt: jump 413
2025-09-26 15:04:00,405 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:04:00,405 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D21EED0>
2025-09-26 15:04:00,406 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,406 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:04:00,406 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,406 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:00,406 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:04:00,406 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,406 - DEBUG - find_def var='x1' stmt=$280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,406 - DEBUG - find_def_from_top label 323
2025-09-26 15:04:00,407 - DEBUG - idom 305 from label 323
2025-09-26 15:04:00,407 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:04:00,407 - DEBUG - replaced with: $280call.9 = call $256load_attr.6(x1.2, func=$256load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:00,407 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:04:00,407 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:04:00,407 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:04:00,407 - DEBUG - on stmt: jump 413
2025-09-26 15:04:00,407 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:04:00,408 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D21EED0>
2025-09-26 15:04:00,408 - DEBUG - on stmt: jump 194
2025-09-26 15:04:00,422 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с librosa: 'function' object has no attribute 'get_call_template'
2025-09-26 15:04:00,428 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 15:04:00,428 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 15:04:00,429 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\ПОЗВОНИ МНЕ.mp3'>)))], 'idempotency_key': 'stainless-python-retry-5bc795a4-0f99-44a9-95fe-bf7184cf7eaa', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:04:00,430 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:04:00,430 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:04:00,431 - DEBUG - send_request_headers.complete
2025-09-26 15:04:00,431 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:04:00,434 - DEBUG - send_request_body.complete
2025-09-26 15:04:00,434 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:04:03,035 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:04:03 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1214'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1227'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_87af8c0c00c145cfb0a3173fff9cf023'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529f0ee8d18d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:04:03,036 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:04:03,036 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:04:03,036 - DEBUG - receive_response_body.complete
2025-09-26 15:04:03,036 - DEBUG - response_closed.started
2025-09-26 15:04:03,037 - DEBUG - response_closed.complete
2025-09-26 15:04:03,037 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:04:03 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1214', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1227', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_87af8c0c00c145cfb0a3173fff9cf023', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529f0ee8d18d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:04:03,037 - DEBUG - request_id: req_87af8c0c00c145cfb0a3173fff9cf023
2025-09-26 15:04:03,038 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Скажи мне, не говори не, что ты гонишь, снова мозг мне выносишь. Скажи мне, не говори не, что ты гонишь, снова мозг мне выносишь.'
2025-09-26 15:04:03,038 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:04:03,038 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Скажи мне, не говори не, что ты гонишь, снова мозг мне выносишь. Скажи мне, не говори не, что ты гонишь, снова мозг мне выносишь.'
2025-09-26 15:04:03,038 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: 'Скажи мне, не говори не, что ты гонишь, снова мозг мне выносишь. Скажи мне, не говори не, что ты гонишь, снова мозг мне выносишь.' (длина: 129)
2025-09-26 15:04:03,039 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Скажи мне, не говори не, что ты гонишь, снова мозг мне выносишь. Скажи мне, не говори не, что ты гонишь, снова мозг мне выносишь.'
2025-09-26 15:04:03,039 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:04:03,039 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Скажи мне, не говори не, что ты гонишь, снова мозг мне выносишь. Скажи мне, не говори не, что ты гонишь, снова мозг мне выносишь.'
2025-09-26 15:04:03,040 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\ПОЗВОНИ МНЕ.mp3'>)))], 'idempotency_key': 'stainless-python-retry-2811e566-878a-4346-8ba1-4384dd6ea10d', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:04:03,041 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:04:03,041 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:04:03,041 - DEBUG - send_request_headers.complete
2025-09-26 15:04:03,041 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:04:03,044 - DEBUG - send_request_body.complete
2025-09-26 15:04:03,044 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:04:05,909 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:04:05 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1554'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1571'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_43fb0592fa8146559149cff96a8b3352'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529f1f3bd28d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:04:05,910 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:04:05,910 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:04:05,910 - DEBUG - receive_response_body.complete
2025-09-26 15:04:05,910 - DEBUG - response_closed.started
2025-09-26 15:04:05,911 - DEBUG - response_closed.complete
2025-09-26 15:04:05,911 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:04:05 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1554', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1571', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_43fb0592fa8146559149cff96a8b3352', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529f1f3bd28d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:04:05,911 - DEBUG - request_id: req_43fb0592fa8146559149cff96a8b3352
2025-09-26 15:04:05,912 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Посмотри мне, не говори мне. Че ты гогонишь, снова мозг мне выносишь? Посмотри мне, не говори мне. Че ты гогонишь, снова мозг мне выносишь?'
2025-09-26 15:04:05,912 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:04:05,912 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Посмотри мне, не говори мне. Че ты гогонишь, снова мозг мне выносишь? Посмотри мне, не говори мне. Че ты гогонишь, снова мозг мне выносишь?'
2025-09-26 15:04:05,913 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e0c8d9a8-10ce-4bba-a7c3-eeb074b97af7', 'json_data': {'messages': [{'role': 'system', 'content': 'Ты — специализированная система для анализа аудиозаписей.\nТвоя единственная задача — классифицировать входной аудиофайл в одну из категорий: музыка, речь, шум.\n\nВАЖНО: Ты анализируешь РЕЗУЛЬТАТ ТРАНСКРИПЦИИ аудиофайла, а не сам аудиофайл. Это означает, что:\n- Если в аудио была музыка с вокалом, то в транскрипции будут слова песни\n- Если в аудио была речь, то в транскрипции будет связный текст\n- Если в аудио был шум, то в транскрипции будет мало слов или галлюцинации\n\nКатегории классификации:\n\nМузыка (music):\n- Это песня, музыкальная композиция с вокалом\n- Характерные признаки в транскрипции:\n  * Повторяющиеся фразы или слова (припев)\n  * Рифмы и ритмические паттерны\n  * Музыкальные звуки: "ла-ла-ла", "на-на-на", "о-о-о", "а-а-а"\n  * Эмоциональные восклицания: "Ауф!", "Ой!", "Ах!"\n  * Короткие фразы без логической связи\n  * Слова, которые звучат как песня, а не как обычная речь\n  * Повторяющиеся слова или фразы (припев песни)\n  * Ритмические паттерны в тексте\n\nРечь (speech):\n- Это обычная речь, разговор, диалог\n- Характерные признаки в транскрипции:\n  * Связные предложения с логической структурой\n  * Обычные слова и фразы\n  * Знаки препинания: точки, запятые, восклицательные знаки\n  * Логическая последовательность мыслей\n  * Отсутствие повторяющихся музыкальных паттернов\n  * Естественная речь без ритма\n\nШум (noise):\n- Это неречевые звуки, шум, техника, плач ребенка\n- Характерные признаки в транскрипции:\n  * Очень короткие или бессмысленные фрагменты\n  * Отсутствие связной речи\n  * Случайные слова или звуки\n  * Описания звуков: "[Music]", "[звук]", "[шум]"\n  * Повторяющиеся гласные: "ааа", "ууу", "ооо" (детский плач)\n  * Бессмысленные фразы: "Всем новичкам, всем новичкам"\n  * Короткие бессвязные слова\n\nПравила классификации:\n1. Если транскрипция содержит связную речь с логической структурой → speech\n2. Если транскрипция содержит повторяющиеся фразы, рифмы, музыкальные звуки → music\n3. Если транскрипция короткая, бессвязная или содержит описания звуков → noise\n4. При сомнениях между music и speech: если есть повторения или музыкальные звуки → music\n5. Детский плач (ааа, ууу, ооо) → noise\n6. Белый шум с бессмысленными словами → noise\n\nВАЖНЫЕ ПРИМЕРЫ:\n- "Скажи мне, не говори мне, что ты гонишь" → music (песня с повторениями)\n- "Привет, как дела?" → speech (обычная речь)\n- "Ааааааа" → noise (детский плач)\n- "Всем новичкам, всем новичкам" → noise (белый шум)\n- "Find me, find me, You can find" → music (песня с припевом)\n\nФормат ответа:\nОтвечай только в формате JSON, без лишнего текста:\n{\n  "classification": "music | speech | noise",\n  "confidence": 0.0-1.0,\n  "reasoning": "Краткое объяснение выбора: какие признаки были решающими"\n}\n\nОграничения:\n- Не добавляй ничего, кроме JSON\n- Не предлагай альтернативных категорий\n- Всегда возвращай одно значение в поле "classification"\n- Уровень уверенности (confidence) должен отражать баланс признаков:\n  * 0.9–1.0 → очень высокая уверенность\n  * 0.6–0.89 → умеренная уверенность\n  * <0.6 → низкая уверенность, признаки неоднозначны'}, {'role': 'user', 'content': 'Проанализируй следующий транскрипт аудио и классифицируй его:\n\nПосмотри мне, не говори мне. Че ты гогонишь, снова мозг мне выносишь? Посмотри мне, не говори мне. Че ты гогонишь, снова мозг мне выносишь?'}], 'model': 'gpt-4o-mini', 'max_tokens': 200, 'temperature': 0.1}}
2025-09-26 15:04:05,914 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-26 15:04:05,915 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:04:05,915 - DEBUG - send_request_headers.complete
2025-09-26 15:04:05,915 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:04:05,916 - DEBUG - send_request_body.complete
2025-09-26 15:04:05,916 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:04:07,494 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:04:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1310'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1324'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9998'), (b'x-ratelimit-remaining-tokens', b'198629'), (b'x-ratelimit-reset-requests', b'10.007s'), (b'x-ratelimit-reset-tokens', b'411ms'), (b'x-request-id', b'req_9fcd0ad203124f658bcd5d514bc1a57e'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529f312a058d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:04:07,495 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 15:04:07,495 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:04:07,497 - DEBUG - receive_response_body.complete
2025-09-26 15:04:07,497 - DEBUG - response_closed.started
2025-09-26 15:04:07,498 - DEBUG - response_closed.complete
2025-09-26 15:04:07,498 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:04:07 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1310', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1324', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9998', 'x-ratelimit-remaining-tokens': '198629', 'x-ratelimit-reset-requests': '10.007s', 'x-ratelimit-reset-tokens': '411ms', 'x-request-id': 'req_9fcd0ad203124f658bcd5d514bc1a57e', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529f312a058d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:04:07,498 - DEBUG - request_id: req_9fcd0ad203124f658bcd5d514bc1a57e
2025-09-26 15:04:07,500 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\РИНГТОН.mp3
2025-09-26 15:04:07,500 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 2, 'overlap': 0.25, 'jobs': 4}
2025-09-26 15:04:07,500 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла: examples\РИНГТОН.mp3
2025-09-26 15:04:07,500 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 15:04:07,501 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 15:04:07,501 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\РИНГТОН.mp3
2025-09-26 15:04:08,089 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 15:04:08,089 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\РИНГТОН.mp3
2025-09-26 15:04:08,144 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	RESUME(arg=0, lineno=1137)
           4	LOAD_FAST(arg=0, lineno=1140)
           6	LOAD_CONST(arg=1, lineno=1140)
           8	BINARY_SUBSCR(arg=None, lineno=1140)
          12	STORE_FAST(arg=3, lineno=1140)
          14	LOAD_FAST(arg=1, lineno=1141)
          16	UNARY_NEGATIVE(arg=None, lineno=1141)
          18	LOAD_FAST(arg=3, lineno=1141)
          20	SWAP(arg=2, lineno=1141)
          22	COPY(arg=2, lineno=1141)
          24	COMPARE_OP(arg=58, lineno=1141)
          28	POP_JUMP_IF_FALSE(arg=6, lineno=1141)
          32	LOAD_FAST(arg=1, lineno=1141)
          34	COMPARE_OP(arg=58, lineno=1141)
          38	POP_JUMP_IF_FALSE(arg=5, lineno=1141)
          42	JUMP_FORWARD(arg=2, lineno=1141)
>         44	POP_TOP(arg=None, lineno=1141)
          46	JUMP_FORWARD(arg=2, lineno=1141)
>         48	LOAD_CONST(arg=1, lineno=1142)
          50	STORE_FAST(arg=3, lineno=1142)
>         52	LOAD_FAST(arg=0, lineno=1144)
          54	LOAD_CONST(arg=2, lineno=1144)
          56	BINARY_SUBSCR(arg=None, lineno=1144)
          60	STORE_FAST(arg=4, lineno=1144)
          62	LOAD_FAST(arg=1, lineno=1145)
          64	UNARY_NEGATIVE(arg=None, lineno=1145)
          66	LOAD_FAST(arg=4, lineno=1145)
          68	SWAP(arg=2, lineno=1145)
          70	COPY(arg=2, lineno=1145)
          72	COMPARE_OP(arg=58, lineno=1145)
          76	POP_JUMP_IF_FALSE(arg=6, lineno=1145)
          80	LOAD_FAST(arg=1, lineno=1145)
          82	COMPARE_OP(arg=58, lineno=1145)
          86	POP_JUMP_IF_FALSE(arg=5, lineno=1145)
          90	JUMP_FORWARD(arg=2, lineno=1145)
>         92	POP_TOP(arg=None, lineno=1145)
          94	JUMP_FORWARD(arg=2, lineno=1145)
>         96	LOAD_CONST(arg=1, lineno=1146)
          98	STORE_FAST(arg=4, lineno=1146)
>        100	LOAD_FAST(arg=2, lineno=1148)
         102	TO_BOOL(arg=None, lineno=1148)
         110	POP_JUMP_IF_FALSE(arg=45, lineno=1148)
         114	LOAD_GLOBAL(arg=0, lineno=1149)
         124	LOAD_ATTR(arg=2, lineno=1149)
         144	PUSH_NULL(arg=None, lineno=1149)
         146	LOAD_FAST(arg=3, lineno=1149)
         148	CALL(arg=1, lineno=1149)
         156	LOAD_GLOBAL(arg=0, lineno=1149)
         166	LOAD_ATTR(arg=2, lineno=1149)
         186	PUSH_NULL(arg=None, lineno=1149)
         188	LOAD_FAST(arg=4, lineno=1149)
         190	CALL(arg=1, lineno=1149)
         198	COMPARE_OP(arg=103, lineno=1149)
         202	RETURN_VALUE(arg=None, lineno=1149)
>        204	LOAD_GLOBAL(arg=0, lineno=1151)
         214	LOAD_ATTR(arg=4, lineno=1151)
         234	PUSH_NULL(arg=None, lineno=1151)
         236	LOAD_FAST(arg=3, lineno=1151)
         238	CALL(arg=1, lineno=1151)
         246	LOAD_GLOBAL(arg=0, lineno=1151)
         256	LOAD_ATTR(arg=4, lineno=1151)
         276	PUSH_NULL(arg=None, lineno=1151)
         278	LOAD_FAST(arg=4, lineno=1151)
         280	CALL(arg=1, lineno=1151)
         288	COMPARE_OP(arg=103, lineno=1151)
         292	RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:04:08,145 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:04:08,145 - DEBUG - stack: []
2025-09-26 15:04:08,145 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:04:08,145 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-09-26 15:04:08,146 - DEBUG - stack []
2025-09-26 15:04:08,146 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1137)
2025-09-26 15:04:08,146 - DEBUG - stack []
2025-09-26 15:04:08,146 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1140)
2025-09-26 15:04:08,146 - DEBUG - stack []
2025-09-26 15:04:08,147 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1140)
2025-09-26 15:04:08,147 - DEBUG - stack ['$x4.0']
2025-09-26 15:04:08,147 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-09-26 15:04:08,147 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-09-26 15:04:08,147 - DEBUG - dispatch pc=12, inst=STORE_FAST(arg=3, lineno=1140)
2025-09-26 15:04:08,147 - DEBUG - stack ['$8binary_subscr.2']
2025-09-26 15:04:08,148 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:04:08,148 - DEBUG - stack []
2025-09-26 15:04:08,148 - DEBUG - dispatch pc=16, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-09-26 15:04:08,148 - DEBUG - stack ['$threshold14.3']
2025-09-26 15:04:08,148 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=1141)
2025-09-26 15:04:08,148 - DEBUG - stack ['$16unary_negative.4']
2025-09-26 15:04:08,148 - DEBUG - dispatch pc=20, inst=SWAP(arg=2, lineno=1141)
2025-09-26 15:04:08,148 - DEBUG - stack ['$16unary_negative.4', '$x018.5']
2025-09-26 15:04:08,149 - DEBUG - dispatch pc=22, inst=COPY(arg=2, lineno=1141)
2025-09-26 15:04:08,149 - DEBUG - stack ['$x018.5', '$16unary_negative.4']
2025-09-26 15:04:08,149 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:04:08,149 - DEBUG - stack ['$x018.5', '$16unary_negative.4', '$x018.5']
2025-09-26 15:04:08,149 - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1141)
2025-09-26 15:04:08,149 - DEBUG - stack ['$x018.5', '$24compare_op.6']
2025-09-26 15:04:08,150 - DEBUG - end state. edges=[Edge(pc=32, stack=('$x018.5',), blockstack=(), npush=0), Edge(pc=44, stack=('$x018.5',), blockstack=(), npush=0)]
2025-09-26 15:04:08,150 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=44 nstack_initial=1)])
2025-09-26 15:04:08,150 - DEBUG - stack: ['$phi32.0']
2025-09-26 15:04:08,150 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-09-26 15:04:08,150 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:04:08,151 - DEBUG - stack ['$phi32.0']
2025-09-26 15:04:08,151 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:04:08,151 - DEBUG - stack ['$phi32.0', '$threshold32.1']
2025-09-26 15:04:08,151 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1141)
2025-09-26 15:04:08,151 - DEBUG - stack ['$34compare_op.2']
2025-09-26 15:04:08,151 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:04:08,152 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=1), State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:04:08,152 - DEBUG - stack: ['$phi44.0']
2025-09-26 15:04:08,152 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=1)
2025-09-26 15:04:08,152 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=1141)
2025-09-26 15:04:08,152 - DEBUG - stack ['$phi44.0']
2025-09-26 15:04:08,152 - DEBUG - dispatch pc=46, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:04:08,152 - DEBUG - stack []
2025-09-26 15:04:08,153 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:04:08,153 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:04:08,153 - DEBUG - stack: []
2025-09-26 15:04:08,153 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-09-26 15:04:08,153 - DEBUG - dispatch pc=42, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:04:08,153 - DEBUG - stack []
2025-09-26 15:04:08,153 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0)]
2025-09-26 15:04:08,154 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2025-09-26 15:04:08,154 - DEBUG - stack: []
2025-09-26 15:04:08,154 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-09-26 15:04:08,154 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1144)
2025-09-26 15:04:08,154 - DEBUG - stack []
2025-09-26 15:04:08,155 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=1144)
2025-09-26 15:04:08,155 - DEBUG - stack ['$x52.0']
2025-09-26 15:04:08,155 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-09-26 15:04:08,155 - DEBUG - stack ['$x52.0', '$const54.1.2']
2025-09-26 15:04:08,155 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=4, lineno=1144)
2025-09-26 15:04:08,155 - DEBUG - stack ['$56binary_subscr.2']
2025-09-26 15:04:08,156 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:04:08,156 - DEBUG - stack []
2025-09-26 15:04:08,156 - DEBUG - dispatch pc=64, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-09-26 15:04:08,156 - DEBUG - stack ['$threshold62.3']
2025-09-26 15:04:08,156 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=4, lineno=1145)
2025-09-26 15:04:08,157 - DEBUG - stack ['$64unary_negative.4']
2025-09-26 15:04:08,157 - DEBUG - dispatch pc=68, inst=SWAP(arg=2, lineno=1145)
2025-09-26 15:04:08,157 - DEBUG - stack ['$64unary_negative.4', '$x166.5']
2025-09-26 15:04:08,157 - DEBUG - dispatch pc=70, inst=COPY(arg=2, lineno=1145)
2025-09-26 15:04:08,157 - DEBUG - stack ['$x166.5', '$64unary_negative.4']
2025-09-26 15:04:08,157 - DEBUG - dispatch pc=72, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:04:08,157 - DEBUG - stack ['$x166.5', '$64unary_negative.4', '$x166.5']
2025-09-26 15:04:08,157 - DEBUG - dispatch pc=76, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1145)
2025-09-26 15:04:08,157 - DEBUG - stack ['$x166.5', '$72compare_op.6']
2025-09-26 15:04:08,158 - DEBUG - end state. edges=[Edge(pc=80, stack=('$x166.5',), blockstack=(), npush=0), Edge(pc=92, stack=('$x166.5',), blockstack=(), npush=0)]
2025-09-26 15:04:08,158 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:04:08,158 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:04:08,158 - DEBUG - stack: []
2025-09-26 15:04:08,158 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-09-26 15:04:08,158 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1142)
2025-09-26 15:04:08,158 - DEBUG - stack []
2025-09-26 15:04:08,159 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=3, lineno=1142)
2025-09-26 15:04:08,159 - DEBUG - stack ['$const48.0.1']
2025-09-26 15:04:08,159 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:04:08,159 - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:04:08,159 - DEBUG - stack: ['$phi80.0']
2025-09-26 15:04:08,159 - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-09-26 15:04:08,159 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:04:08,159 - DEBUG - stack ['$phi80.0']
2025-09-26 15:04:08,160 - DEBUG - dispatch pc=82, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:04:08,160 - DEBUG - stack ['$phi80.0', '$threshold80.1']
2025-09-26 15:04:08,160 - DEBUG - dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1145)
2025-09-26 15:04:08,160 - DEBUG - stack ['$82compare_op.2']
2025-09-26 15:04:08,160 - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:04:08,160 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:04:08,160 - DEBUG - stack: ['$phi92.0']
2025-09-26 15:04:08,161 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=1)
2025-09-26 15:04:08,161 - DEBUG - dispatch pc=92, inst=POP_TOP(arg=None, lineno=1145)
2025-09-26 15:04:08,161 - DEBUG - stack ['$phi92.0']
2025-09-26 15:04:08,161 - DEBUG - dispatch pc=94, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:04:08,161 - DEBUG - stack []
2025-09-26 15:04:08,161 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:04:08,161 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:04:08,161 - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:04:08,162 - DEBUG - stack: []
2025-09-26 15:04:08,162 - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-09-26 15:04:08,162 - DEBUG - dispatch pc=90, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:04:08,162 - DEBUG - stack []
2025-09-26 15:04:08,162 - DEBUG - end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-09-26 15:04:08,162 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-09-26 15:04:08,162 - DEBUG - stack: []
2025-09-26 15:04:08,163 - DEBUG - state.pc_initial: State(pc_initial=100 nstack_initial=0)
2025-09-26 15:04:08,163 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=2, lineno=1148)
2025-09-26 15:04:08,163 - DEBUG - stack []
2025-09-26 15:04:08,163 - DEBUG - dispatch pc=102, inst=TO_BOOL(arg=None, lineno=1148)
2025-09-26 15:04:08,163 - DEBUG - stack ['$zero_pos100.0']
2025-09-26 15:04:08,163 - DEBUG - dispatch pc=110, inst=POP_JUMP_IF_FALSE(arg=45, lineno=1148)
2025-09-26 15:04:08,163 - DEBUG - stack ['$102to_bool.1']
2025-09-26 15:04:08,164 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=204, stack=(), blockstack=(), npush=0)]
2025-09-26 15:04:08,164 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:04:08,164 - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:04:08,164 - DEBUG - stack: []
2025-09-26 15:04:08,164 - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2025-09-26 15:04:08,164 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=1, lineno=1146)
2025-09-26 15:04:08,165 - DEBUG - stack []
2025-09-26 15:04:08,165 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=4, lineno=1146)
2025-09-26 15:04:08,165 - DEBUG - stack ['$const96.0.1']
2025-09-26 15:04:08,165 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:04:08,165 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:04:08,165 - DEBUG - stack: []
2025-09-26 15:04:08,166 - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2025-09-26 15:04:08,166 - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:04:08,166 - DEBUG - stack []
2025-09-26 15:04:08,166 - DEBUG - dispatch pc=124, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:04:08,166 - DEBUG - stack ['$114load_global.0']
2025-09-26 15:04:08,166 - DEBUG - dispatch pc=144, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:04:08,167 - DEBUG - stack ['$124load_attr.1']
2025-09-26 15:04:08,167 - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=3, lineno=1149)
2025-09-26 15:04:08,167 - DEBUG - stack ['$124load_attr.1', '$null$144.2']
2025-09-26 15:04:08,167 - DEBUG - dispatch pc=148, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:04:08,167 - DEBUG - stack ['$124load_attr.1', '$null$144.2', '$x0146.3']
2025-09-26 15:04:08,167 - DEBUG - dispatch pc=156, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:04:08,167 - DEBUG - stack ['$148call.4']
2025-09-26 15:04:08,168 - DEBUG - dispatch pc=166, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:04:08,168 - DEBUG - stack ['$148call.4', '$156load_global.5']
2025-09-26 15:04:08,168 - DEBUG - dispatch pc=186, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:04:08,168 - DEBUG - stack ['$148call.4', '$166load_attr.6']
2025-09-26 15:04:08,168 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=4, lineno=1149)
2025-09-26 15:04:08,168 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7']
2025-09-26 15:04:08,168 - DEBUG - dispatch pc=190, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:04:08,168 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7', '$x1188.8']
2025-09-26 15:04:08,169 - DEBUG - dispatch pc=198, inst=COMPARE_OP(arg=103, lineno=1149)
2025-09-26 15:04:08,169 - DEBUG - stack ['$148call.4', '$190call.9']
2025-09-26 15:04:08,169 - DEBUG - dispatch pc=202, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-09-26 15:04:08,169 - DEBUG - stack ['$198compare_op.10']
2025-09-26 15:04:08,169 - DEBUG - end state. edges=[]
2025-09-26 15:04:08,169 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:04:08,169 - DEBUG - stack: []
2025-09-26 15:04:08,170 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=0)
2025-09-26 15:04:08,170 - DEBUG - dispatch pc=204, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:04:08,170 - DEBUG - stack []
2025-09-26 15:04:08,170 - DEBUG - dispatch pc=214, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:04:08,170 - DEBUG - stack ['$204load_global.0']
2025-09-26 15:04:08,170 - DEBUG - dispatch pc=234, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:04:08,170 - DEBUG - stack ['$214load_attr.1']
2025-09-26 15:04:08,171 - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=3, lineno=1151)
2025-09-26 15:04:08,171 - DEBUG - stack ['$214load_attr.1', '$null$234.2']
2025-09-26 15:04:08,171 - DEBUG - dispatch pc=238, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:04:08,171 - DEBUG - stack ['$214load_attr.1', '$null$234.2', '$x0236.3']
2025-09-26 15:04:08,171 - DEBUG - dispatch pc=246, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:04:08,171 - DEBUG - stack ['$238call.4']
2025-09-26 15:04:08,171 - DEBUG - dispatch pc=256, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:04:08,171 - DEBUG - stack ['$238call.4', '$246load_global.5']
2025-09-26 15:04:08,172 - DEBUG - dispatch pc=276, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:04:08,172 - DEBUG - stack ['$238call.4', '$256load_attr.6']
2025-09-26 15:04:08,172 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=4, lineno=1151)
2025-09-26 15:04:08,172 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7']
2025-09-26 15:04:08,172 - DEBUG - dispatch pc=280, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:04:08,172 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7', '$x1278.8']
2025-09-26 15:04:08,172 - DEBUG - dispatch pc=288, inst=COMPARE_OP(arg=103, lineno=1151)
2025-09-26 15:04:08,172 - DEBUG - stack ['$238call.4', '$280call.9']
2025-09-26 15:04:08,173 - DEBUG - dispatch pc=292, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:04:08,173 - DEBUG - stack ['$288compare_op.10']
2025-09-26 15:04:08,173 - DEBUG - end state. edges=[]
2025-09-26 15:04:08,173 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:04:08,173 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:04:08,173 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=1): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=204 nstack_initial=0): set()})
2025-09-26 15:04:08,174 - DEBUG - defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi44.0': State(pc_initial=0 nstack_initial=0),
 '$phi80.0': State(pc_initial=52 nstack_initial=0),
 '$phi92.0': State(pc_initial=52 nstack_initial=0)}
2025-09-26 15:04:08,174 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:04:08,174 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:04:08,174 - DEBUG - keep phismap: {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
 '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}}
2025-09-26 15:04:08,175 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$x018.5'},
             State(pc_initial=52 nstack_initial=0): {'$phi80.0': '$x166.5'}})
2025-09-26 15:04:08,175 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:04:08,175 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'value': '$8binary_subscr.2'}), (14, {'res': '$threshold14.3'}), (16, {'value': '$threshold14.3', 'res': '$16unary_negative.4'}), (18, {'res': '$x018.5'}), (24, {'lhs': '$16unary_negative.4', 'rhs': '$x018.5', 'res': '$24compare_op.6'}), (28, {'pred': '$24compare_op.6'})), outgoing_phis={'$phi32.0': '$x018.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$x018.5',), 44: ('$x018.5',)})
2025-09-26 15:04:08,176 - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'res': '$threshold32.1'}), (34, {'lhs': '$phi32.0', 'rhs': '$threshold32.1', 'res': '$34compare_op.2'}), (38, {'pred': '$34compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 52: ()})
2025-09-26 15:04:08,176 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ()})
2025-09-26 15:04:08,176 - DEBUG - block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((46, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:04:08,176 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$const48.0.1'}), (50, {'value': '$const48.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:04:08,176 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$x52.0'}), (54, {'res': '$const54.1.2'}), (56, {'index': '$const54.1.2', 'target': '$x52.0', 'res': '$56binary_subscr.2'}), (60, {'value': '$56binary_subscr.2'}), (62, {'res': '$threshold62.3'}), (64, {'value': '$threshold62.3', 'res': '$64unary_negative.4'}), (66, {'res': '$x166.5'}), (72, {'lhs': '$64unary_negative.4', 'rhs': '$x166.5', 'res': '$72compare_op.6'}), (76, {'pred': '$72compare_op.6'})), outgoing_phis={'$phi80.0': '$x166.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$x166.5',), 92: ('$x166.5',)})
2025-09-26 15:04:08,177 - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$threshold80.1'}), (82, {'lhs': '$phi80.0', 'rhs': '$threshold80.1', 'res': '$82compare_op.2'}), (86, {'pred': '$82compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 100: ()})
2025-09-26 15:04:08,177 - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
2025-09-26 15:04:08,177 - DEBUG - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((94, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:04:08,177 - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$const96.0.1'}), (98, {'value': '$const96.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:04:08,178 - DEBUG - block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$zero_pos100.0'}), (102, {'val': '$zero_pos100.0', 'res': '$102to_bool.1'}), (110, {'pred': '$102to_bool.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 204: ()})
2025-09-26 15:04:08,178 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'idx': 0, 'res': '$114load_global.0'}), (124, {'item': '$114load_global.0', 'res': '$124load_attr.1'}), (144, {}), (146, {'res': '$x0146.3'}), (148, {'func': '$124load_attr.1', 'args': ['$x0146.3'], 'kw_names': None, 'res': '$148call.4'}), (156, {'idx': 0, 'res': '$156load_global.5'}), (166, {'item': '$156load_global.5', 'res': '$166load_attr.6'}), (186, {}), (188, {'res': '$x1188.8'}), (190, {'func': '$166load_attr.6', 'args': ['$x1188.8'], 'kw_names': None, 'res': '$190call.9'}), (198, {'lhs': '$148call.4', 'rhs': '$190call.9', 'res': '$198compare_op.10'}), (202, {'retval': '$198compare_op.10', 'castval': '$202return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:04:08,178 - DEBUG - block_infos State(pc_initial=204 nstack_initial=0):
AdaptBlockInfo(insts=((204, {'idx': 0, 'res': '$204load_global.0'}), (214, {'item': '$204load_global.0', 'res': '$214load_attr.1'}), (234, {}), (236, {'res': '$x0236.3'}), (238, {'func': '$214load_attr.1', 'args': ['$x0236.3'], 'kw_names': None, 'res': '$238call.4'}), (246, {'idx': 0, 'res': '$246load_global.5'}), (256, {'item': '$246load_global.5', 'res': '$256load_attr.6'}), (276, {}), (278, {'res': '$x1278.8'}), (280, {'func': '$256load_attr.6', 'args': ['$x1278.8'], 'kw_names': None, 'res': '$280call.9'}), (288, {'lhs': '$238call.4', 'rhs': '$280call.9', 'res': '$288compare_op.10'}), (292, {'retval': '$288compare_op.10', 'castval': '$292return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:04:08,179 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    x0 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$const6.1.1', 'x', 'x0']
    $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$16unary_negative.4', 'threshold']
    $24compare_op.6 = $16unary_negative.4 <= x0 ['$16unary_negative.4', '$24compare_op.6', 'x0']
    $bool28 = global(bool: <class 'bool'>)   ['$bool28']
    $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.6', '$28pred', '$bool28']
    $phi32.0 = x0                            ['$phi32.0', 'x0']
    branch $28pred, 32, 44                   ['$28pred']
label 32:
    $34compare_op.2 = $phi32.0 <= threshold  ['$34compare_op.2', '$phi32.0', 'threshold']
    $bool38 = global(bool: <class 'bool'>)   ['$bool38']
    $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.2', '$38pred', '$bool38']
    branch $38pred, 42, 52                   ['$38pred']
label 42:
    jump 48                                  []
label 44:
    jump 52                                  []
label 48:
    x0 = const(int, 0)                       ['x0']
    jump 52                                  []
label 52:
    $const54.1.2 = const(int, -1)            ['$const54.1.2']
    x1 = getitem(value=x, index=$const54.1.2, fn=<built-in function getitem>) ['$const54.1.2', 'x', 'x1']
    $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$64unary_negative.4', 'threshold']
    $72compare_op.6 = $64unary_negative.4 <= x1 ['$64unary_negative.4', '$72compare_op.6', 'x1']
    $bool76 = global(bool: <class 'bool'>)   ['$bool76']
    $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$72compare_op.6', '$76pred', '$bool76']
    $phi80.0 = x1                            ['$phi80.0', 'x1']
    branch $76pred, 80, 92                   ['$76pred']
label 80:
    $82compare_op.2 = $phi80.0 <= threshold  ['$82compare_op.2', '$phi80.0', 'threshold']
    $bool86 = global(bool: <class 'bool'>)   ['$bool86']
    $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$82compare_op.2', '$86pred', '$bool86']
    branch $86pred, 90, 100                  ['$86pred']
label 90:
    jump 96                                  []
label 92:
    jump 100                                 []
label 96:
    x1 = const(int, 0)                       ['x1']
    jump 100                                 []
label 100:
    $bool110 = global(bool: <class 'bool'>)  ['$bool110']
    $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$110pred', '$bool110', 'zero_pos']
    branch $110pred, 114, 204                ['$110pred']
label 114:
    $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$114load_global.0']
    $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit) ['$114load_global.0', '$124load_attr.1']
    $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$124load_attr.1', '$148call.4', 'x0']
    $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$156load_global.5']
    $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit) ['$156load_global.5', '$166load_attr.6']
    $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.6', '$190call.9', 'x1']
    $198compare_op.10 = $148call.4 != $190call.9 ['$148call.4', '$190call.9', '$198compare_op.10']
    $202return_value.11 = cast(value=$198compare_op.10) ['$198compare_op.10', '$202return_value.11']
    return $202return_value.11               ['$202return_value.11']
label 204:
    $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$204load_global.0']
    $214load_attr.1 = getattr(value=$204load_global.0, attr=sign) ['$204load_global.0', '$214load_attr.1']
    $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.1', '$238call.4', 'x0']
    $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$246load_global.5']
    $256load_attr.6 = getattr(value=$246load_global.5, attr=sign) ['$246load_global.5', '$256load_attr.6']
    $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$256load_attr.6', '$280call.9', 'x1']
    $288compare_op.10 = $238call.4 != $280call.9 ['$238call.4', '$280call.9', '$288compare_op.10']
    $292return_value.11 = cast(value=$288compare_op.10) ['$288compare_op.10', '$292return_value.11']
    return $292return_value.11               ['$292return_value.11']

2025-09-26 15:04:08,186 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1154)
           2	RESUME(arg=0, lineno=1154)
           4	LOAD_GLOBAL(arg=1, lineno=1170)
          14	LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
          16	LOAD_FAST(arg=2, lineno=1170)
          18	CALL(arg=3, lineno=1170)
          26	LOAD_FAST(arg=3, lineno=1170)
          28	LOAD_CONST(arg=1, lineno=1170)
          30	LOAD_CONST(arg=1, lineno=1170)
          32	STORE_SLICE(arg=None, lineno=1170)
          34	RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:04:08,186 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:04:08,186 - DEBUG - stack: []
2025-09-26 15:04:08,186 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:04:08,186 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1154)
2025-09-26 15:04:08,187 - DEBUG - stack []
2025-09-26 15:04:08,187 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1154)
2025-09-26 15:04:08,187 - DEBUG - stack []
2025-09-26 15:04:08,187 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1170)
2025-09-26 15:04:08,187 - DEBUG - stack []
2025-09-26 15:04:08,187 - DEBUG - dispatch pc=14, inst=LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
2025-09-26 15:04:08,187 - DEBUG - stack ['$4load_global.0', '$null$4.1']
2025-09-26 15:04:08,188 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=1170)
2025-09-26 15:04:08,188 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3']
2025-09-26 15:04:08,188 - DEBUG - dispatch pc=18, inst=CALL(arg=3, lineno=1170)
2025-09-26 15:04:08,188 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3', '$zero_pos16.4']
2025-09-26 15:04:08,188 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=3, lineno=1170)
2025-09-26 15:04:08,188 - DEBUG - stack ['$18call.5']
2025-09-26 15:04:08,188 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:04:08,188 - DEBUG - stack ['$18call.5', '$y26.6']
2025-09-26 15:04:08,189 - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:04:08,189 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1']
2025-09-26 15:04:08,189 - DEBUG - dispatch pc=32, inst=STORE_SLICE(arg=None, lineno=1170)
2025-09-26 15:04:08,189 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1', '$const30.8.1']
2025-09-26 15:04:08,189 - DEBUG - dispatch pc=34, inst=RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:04:08,189 - DEBUG - stack []
2025-09-26 15:04:08,190 - DEBUG - end state. edges=[]
2025-09-26 15:04:08,190 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:04:08,190 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-09-26 15:04:08,190 - DEBUG - defmap: {}
2025-09-26 15:04:08,190 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:04:08,190 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:04:08,190 - DEBUG - keep phismap: {}
2025-09-26 15:04:08,191 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-09-26 15:04:08,191 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:04:08,191 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res1': '$x14.2', 'res2': '$threshold14.3'}), (16, {'res': '$zero_pos16.4'}), (18, {'func': '$4load_global.0', 'args': ['$x14.2', '$threshold14.3', '$zero_pos16.4'], 'kw_names': None, 'res': '$18call.5'}), (26, {'res': '$y26.6'}), (28, {'res': '$const28.7.1'}), (30, {'res': '$const30.8.1'}), (32, {'start': '$const28.7.1', 'end': '$const30.8.1', 'container': '$y26.6', 'value': '$18call.5', 'res': '$32store_slice.10', 'slicevar': '$32store_slice.9'}), (34, {'retval': '$const34.11', 'castval': '$34return_const.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:04:08,191 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002985D197450>) ['$4load_global.0']
    $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const28.7.1 = const(NoneType, None)     ['$const28.7.1']
    $const30.8.1 = const(NoneType, None)     ['$const30.8.1']
    $32store_slice.9 = global(slice: <class 'slice'>) ['$32store_slice.9']
    $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$32store_slice.10', '$32store_slice.9', '$const28.7.1', '$const30.8.1']
    y[$32store_slice.10] = $18call.5         ['$18call.5', '$32store_slice.10', 'y']
    $const34.11 = const(NoneType, None)      ['$const34.11']
    $34return_const.12 = cast(value=$const34.11) ['$34return_const.12', '$const34.11']
    return $34return_const.12                ['$34return_const.12']

2025-09-26 15:04:08,196 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:04:08,196 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D1889F0>
2025-09-26 15:04:08,196 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:04:08,196 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:04:08,197 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:04:08,197 - DEBUG - on stmt: y = arg(3, name=y)
2025-09-26 15:04:08,197 - DEBUG - on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002985D197450>)
2025-09-26 15:04:08,197 - DEBUG - on stmt: $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,197 - DEBUG - on stmt: $const28.7.1 = const(NoneType, None)
2025-09-26 15:04:08,198 - DEBUG - on stmt: $const30.8.1 = const(NoneType, None)
2025-09-26 15:04:08,198 - DEBUG - on stmt: $32store_slice.9 = global(slice: <class 'slice'>)
2025-09-26 15:04:08,198 - DEBUG - on stmt: $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,198 - DEBUG - on stmt: y[slice(None, None, None)] = $18call.5
2025-09-26 15:04:08,198 - DEBUG - on stmt: $const34.11 = const(NoneType, None)
2025-09-26 15:04:08,198 - DEBUG - on stmt: $34return_const.12 = cast(value=$const34.11)
2025-09-26 15:04:08,198 - DEBUG - on stmt: return $34return_const.12
2025-09-26 15:04:08,199 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.5': [(<numba.core.ir.Assign object at 0x000002985D245130>,
                            0)],
             '$32store_slice.10': [(<numba.core.ir.Assign object at 0x000002985D245670>,
                                    0)],
             '$32store_slice.9': [(<numba.core.ir.Assign object at 0x000002985D245550>,
                                   0)],
             '$34return_const.12': [(<numba.core.ir.Assign object at 0x000002985D2458B0>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000002985CFC97F0>,
                                  0)],
             '$const28.7.1': [(<numba.core.ir.Assign object at 0x000002985D245310>,
                               0)],
             '$const30.8.1': [(<numba.core.ir.Assign object at 0x000002985D245430>,
                               0)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x000002985D245790>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002985CFCACF0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002985D14ECF0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000002985CFCAF30>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002985CFCB2F0>,
                           0)]})
2025-09-26 15:04:08,200 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002985D1889F0>
2025-09-26 15:04:08,249 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=3, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=3, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	LOAD_CONST(arg=1, lineno=3)
          92	CALL_KW(arg=2, lineno=3)
          94	STORE_FAST(arg=4, lineno=3)
          96	LOAD_CONST(arg=2, lineno=4)
          98	LOAD_FAST(arg=4, lineno=4)
         100	LOAD_CONST(arg=0, lineno=4)
         102	LOAD_CONST(arg=3, lineno=4)
         104	STORE_SLICE(arg=None, lineno=4)
         106	LOAD_CONST(arg=2, lineno=5)
         108	LOAD_FAST(arg=4, lineno=5)
         110	LOAD_CONST(arg=2, lineno=5)
         112	LOAD_CONST(arg=0, lineno=5)
         114	STORE_SLICE(arg=None, lineno=5)
         116	LOAD_GLOBAL(arg=9, lineno=6)
         126	LOAD_GLOBAL(arg=11, lineno=6)
         136	LOAD_CONST(arg=2, lineno=6)
         138	LOAD_CONST(arg=4, lineno=6)
         140	CALL(arg=2, lineno=6)
         148	UNARY_NEGATIVE(arg=None, lineno=6)
         150	LOAD_FAST(arg=3, lineno=6)
         152	LOAD_CONST(arg=2, lineno=6)
         154	BINARY_SUBSCR(arg=None, lineno=6)
         158	LOAD_GLOBAL(arg=13, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	LOAD_CONST(arg=2, lineno=6)
         172	CALL(arg=2, lineno=6)
         180	BINARY_OP(arg=10, lineno=6)
         184	CALL(arg=2, lineno=6)
         192	GET_ITER(arg=None, lineno=6)
>        194	FOR_ITER(arg=5, lineno=6)
         198	STORE_FAST(arg=5, lineno=6)
         200	LOAD_CONST(arg=2, lineno=7)
         202	STORE_FAST(arg=6, lineno=7)
         204	JUMP_BACKWARD(arg=7, lineno=7)
>        208	END_FOR(arg=None, lineno=6)
         210	POP_TOP(arg=None, lineno=6)
         212	LOAD_FAST(arg=4, lineno=8)
         214	RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:04:08,250 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:04:08,250 - DEBUG - stack: []
2025-09-26 15:04:08,250 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:04:08,250 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-09-26 15:04:08,250 - DEBUG - stack []
2025-09-26 15:04:08,251 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2025-09-26 15:04:08,251 - DEBUG - stack []
2025-09-26 15:04:08,251 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2025-09-26 15:04:08,251 - DEBUG - stack []
2025-09-26 15:04:08,251 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2025-09-26 15:04:08,251 - DEBUG - stack ['$x4.0']
2025-09-26 15:04:08,251 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=3, lineno=2)
2025-09-26 15:04:08,252 - DEBUG - stack ['$6load_attr.1']
2025-09-26 15:04:08,252 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:04:08,252 - DEBUG - stack []
2025-09-26 15:04:08,252 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2025-09-26 15:04:08,252 - DEBUG - stack ['$28load_global.2']
2025-09-26 15:04:08,252 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=3, lineno=3)
2025-09-26 15:04:08,252 - DEBUG - stack ['$38load_attr.3', '$null$38.4']
2025-09-26 15:04:08,253 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:04:08,253 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5']
2025-09-26 15:04:08,253 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2025-09-26 15:04:08,253 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$60load_global.6']
2025-09-26 15:04:08,253 - DEBUG - dispatch pc=90, inst=LOAD_CONST(arg=1, lineno=3)
2025-09-26 15:04:08,253 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7']
2025-09-26 15:04:08,253 - DEBUG - dispatch pc=92, inst=CALL_KW(arg=2, lineno=3)
2025-09-26 15:04:08,254 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7', '$const90.8.1']
2025-09-26 15:04:08,254 - DEBUG - dispatch pc=94, inst=STORE_FAST(arg=4, lineno=3)
2025-09-26 15:04:08,254 - DEBUG - stack ['$92call_kw.9']
2025-09-26 15:04:08,254 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=2, lineno=4)
2025-09-26 15:04:08,254 - DEBUG - stack []
2025-09-26 15:04:08,254 - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=4)
2025-09-26 15:04:08,254 - DEBUG - stack ['$const96.10.2']
2025-09-26 15:04:08,255 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=0, lineno=4)
2025-09-26 15:04:08,255 - DEBUG - stack ['$const96.10.2', '$out098.11']
2025-09-26 15:04:08,255 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=3, lineno=4)
2025-09-26 15:04:08,255 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0']
2025-09-26 15:04:08,255 - DEBUG - dispatch pc=104, inst=STORE_SLICE(arg=None, lineno=4)
2025-09-26 15:04:08,255 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0', '$const102.13.3']
2025-09-26 15:04:08,256 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:04:08,256 - DEBUG - stack []
2025-09-26 15:04:08,256 - DEBUG - dispatch pc=108, inst=LOAD_FAST(arg=4, lineno=5)
2025-09-26 15:04:08,256 - DEBUG - stack ['$const106.16.2']
2025-09-26 15:04:08,256 - DEBUG - dispatch pc=110, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:04:08,257 - DEBUG - stack ['$const106.16.2', '$out0108.17']
2025-09-26 15:04:08,257 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=0, lineno=5)
2025-09-26 15:04:08,257 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2']
2025-09-26 15:04:08,257 - DEBUG - dispatch pc=114, inst=STORE_SLICE(arg=None, lineno=5)
2025-09-26 15:04:08,257 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2', '$const112.19.0']
2025-09-26 15:04:08,257 - DEBUG - dispatch pc=116, inst=LOAD_GLOBAL(arg=9, lineno=6)
2025-09-26 15:04:08,257 - DEBUG - stack []
2025-09-26 15:04:08,258 - DEBUG - dispatch pc=126, inst=LOAD_GLOBAL(arg=11, lineno=6)
2025-09-26 15:04:08,258 - DEBUG - stack ['$116load_global.22', '$null$116.23']
2025-09-26 15:04:08,258 - DEBUG - dispatch pc=136, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:04:08,258 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25']
2025-09-26 15:04:08,258 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=4, lineno=6)
2025-09-26 15:04:08,258 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2']
2025-09-26 15:04:08,258 - DEBUG - dispatch pc=140, inst=CALL(arg=2, lineno=6)
2025-09-26 15:04:08,259 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2', '$const138.27.4']
2025-09-26 15:04:08,259 - DEBUG - dispatch pc=148, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-09-26 15:04:08,259 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$140call.28']
2025-09-26 15:04:08,259 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=3, lineno=6)
2025-09-26 15:04:08,259 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29']
2025-09-26 15:04:08,260 - DEBUG - dispatch pc=152, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:04:08,260 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30']
2025-09-26 15:04:08,260 - DEBUG - dispatch pc=154, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-09-26 15:04:08,260 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30', '$const152.31.2']
2025-09-26 15:04:08,260 - DEBUG - dispatch pc=158, inst=LOAD_GLOBAL(arg=13, lineno=6)
2025-09-26 15:04:08,260 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32']
2025-09-26 15:04:08,261 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:04:08,261 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34']
2025-09-26 15:04:08,261 - DEBUG - dispatch pc=170, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:04:08,261 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2']
2025-09-26 15:04:08,261 - DEBUG - dispatch pc=172, inst=CALL(arg=2, lineno=6)
2025-09-26 15:04:08,262 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2', '$const170.36.2']
2025-09-26 15:04:08,262 - DEBUG - dispatch pc=180, inst=BINARY_OP(arg=10, lineno=6)
2025-09-26 15:04:08,262 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$172call.37']
2025-09-26 15:04:08,262 - DEBUG - dispatch pc=184, inst=CALL(arg=2, lineno=6)
2025-09-26 15:04:08,262 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$binop_sub180.38']
2025-09-26 15:04:08,262 - DEBUG - dispatch pc=192, inst=GET_ITER(arg=None, lineno=6)
2025-09-26 15:04:08,263 - DEBUG - stack ['$184call.39']
2025-09-26 15:04:08,263 - DEBUG - end state. edges=[Edge(pc=194, stack=('$192get_iter.40',), blockstack=(), npush=0)]
2025-09-26 15:04:08,263 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:04:08,263 - DEBUG - stack: ['$phi194.0']
2025-09-26 15:04:08,263 - DEBUG - state.pc_initial: State(pc_initial=194 nstack_initial=1)
2025-09-26 15:04:08,263 - DEBUG - dispatch pc=194, inst=FOR_ITER(arg=5, lineno=6)
2025-09-26 15:04:08,263 - DEBUG - stack ['$phi194.0']
2025-09-26 15:04:08,264 - DEBUG - end state. edges=[Edge(pc=208, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0), Edge(pc=198, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0)]
2025-09-26 15:04:08,264 - DEBUG - pending: deque([State(pc_initial=208 nstack_initial=2), State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:04:08,264 - DEBUG - stack: ['$phi208.0', '$phi208.1']
2025-09-26 15:04:08,264 - DEBUG - state.pc_initial: State(pc_initial=208 nstack_initial=2)
2025-09-26 15:04:08,264 - DEBUG - dispatch pc=208, inst=END_FOR(arg=None, lineno=6)
2025-09-26 15:04:08,264 - DEBUG - stack ['$phi208.0', '$phi208.1']
2025-09-26 15:04:08,265 - DEBUG - dispatch pc=210, inst=POP_TOP(arg=None, lineno=6)
2025-09-26 15:04:08,265 - DEBUG - stack ['$phi208.0']
2025-09-26 15:04:08,265 - DEBUG - dispatch pc=212, inst=LOAD_FAST(arg=4, lineno=8)
2025-09-26 15:04:08,265 - DEBUG - stack []
2025-09-26 15:04:08,265 - DEBUG - dispatch pc=214, inst=RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:04:08,265 - DEBUG - stack ['$out0212.2']
2025-09-26 15:04:08,266 - DEBUG - end state. edges=[]
2025-09-26 15:04:08,266 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:04:08,266 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2025-09-26 15:04:08,266 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2025-09-26 15:04:08,266 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=5, lineno=6)
2025-09-26 15:04:08,266 - DEBUG - stack ['$phi198.0', '$phi198.1']
2025-09-26 15:04:08,266 - DEBUG - dispatch pc=200, inst=LOAD_CONST(arg=2, lineno=7)
2025-09-26 15:04:08,267 - DEBUG - stack ['$phi198.0']
2025-09-26 15:04:08,267 - DEBUG - dispatch pc=202, inst=STORE_FAST(arg=6, lineno=7)
2025-09-26 15:04:08,267 - DEBUG - stack ['$phi198.0', '$const200.2.2']
2025-09-26 15:04:08,267 - DEBUG - dispatch pc=204, inst=JUMP_BACKWARD(arg=7, lineno=7)
2025-09-26 15:04:08,267 - DEBUG - stack ['$phi198.0']
2025-09-26 15:04:08,267 - DEBUG - end state. edges=[Edge(pc=194, stack=('$phi198.0',), blockstack=(), npush=0)]
2025-09-26 15:04:08,267 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:04:08,268 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:04:08,268 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=194 nstack_initial=1): {'$phi194.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=208 nstack_initial=2): set()})
2025-09-26 15:04:08,268 - DEBUG - defmap: {'$phi194.0': State(pc_initial=0 nstack_initial=0),
 '$phi198.1': State(pc_initial=194 nstack_initial=1),
 '$phi208.1': State(pc_initial=194 nstack_initial=1)}
2025-09-26 15:04:08,268 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi198.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:04:08,269 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:04:08,270 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:04:08,270 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:04:08,271 - DEBUG - keep phismap: {'$phi194.0': {('$192get_iter.40', State(pc_initial=0 nstack_initial=0))},
 '$phi198.1': {('$194for_iter.2', State(pc_initial=194 nstack_initial=1))}}
2025-09-26 15:04:08,271 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi194.0': '$192get_iter.40'},
             State(pc_initial=194 nstack_initial=1): {'$phi198.1': '$194for_iter.2'}})
2025-09-26 15:04:08,272 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:04:08,272 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.3'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (90, {'res': '$const90.8.1'}), (92, {'func': '$38load_attr.3', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': '$const90.8.1', 'res': '$92call_kw.9'}), (94, {'value': '$92call_kw.9'}), (96, {'res': '$const96.10.2'}), (98, {'res': '$out098.11'}), (100, {'res': '$const100.12.0'}), (102, {'res': '$const102.13.3'}), (104, {'start': '$const100.12.0', 'end': '$const102.13.3', 'container': '$out098.11', 'value': '$const96.10.2', 'res': '$104store_slice.15', 'slicevar': '$104store_slice.14'}), (106, {'res': '$const106.16.2'}), (108, {'res': '$out0108.17'}), (110, {'res': '$const110.18.2'}), (112, {'res': '$const112.19.0'}), (114, {'start': '$const110.18.2', 'end': '$const112.19.0', 'container': '$out0108.17', 'value': '$const106.16.2', 'res': '$114store_slice.21', 'slicevar': '$114store_slice.20'}), (116, {'idx': 4, 'res': '$116load_global.22'}), (126, {'idx': 5, 'res': '$126load_global.24'}), (136, {'res': '$const136.26.2'}), (138, {'res': '$const138.27.4'}), (140, {'func': '$126load_global.24', 'args': ['$const136.26.2', '$const138.27.4'], 'kw_names': None, 'res': '$140call.28'}), (148, {'value': '$140call.28', 'res': '$148unary_negative.29'}), (150, {'res': '$full_shape0150.30'}), (152, {'res': '$const152.31.2'}), (154, {'index': '$const152.31.2', 'target': '$full_shape0150.30', 'res': '$154binary_subscr.32'}), (158, {'idx': 6, 'res': '$158load_global.33'}), (168, {'res': '$const168.35.2'}), (170, {'res': '$const170.36.2'}), (172, {'func': '$158load_global.33', 'args': ['$const168.35.2', '$const170.36.2'], 'kw_names': None, 'res': '$172call.37'}), (180, {'op': '-', 'lhs': '$154binary_subscr.32', 'rhs': '$172call.37', 'res': '$binop_sub180.38'}), (184, {'func': '$116load_global.22', 'args': ['$148unary_negative.29', '$binop_sub180.38'], 'kw_names': None, 'res': '$184call.39'}), (192, {'value': '$184call.39', 'res': '$192get_iter.40'})), outgoing_phis={'$phi194.0': '$192get_iter.40'}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$192get_iter.40',)})
2025-09-26 15:04:08,273 - DEBUG - block_infos State(pc_initial=194 nstack_initial=1):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.0', 'pair': '$194for_iter.1', 'indval': '$194for_iter.2', 'pred': '$194for_iter.3'}),), outgoing_phis={'$phi198.1': '$194for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={208: ('$phi194.0', '$194for_iter.2'), 198: ('$phi194.0', '$194for_iter.2')})
2025-09-26 15:04:08,273 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$const200.2.2'}), (202, {'value': '$const200.2.2'}), (204, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$phi198.0',)})
2025-09-26 15:04:08,273 - DEBUG - block_infos State(pc_initial=208 nstack_initial=2):
AdaptBlockInfo(insts=((212, {'res': '$out0212.2'}), (214, {'retval': '$out0212.2', 'castval': '$214return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:04:08,274 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$28load_global.2']
    $38load_attr.3 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.3']
    $60load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool) ['$60load_global.6', '$70load_attr.7']
    $const_dtype = const(str, dtype)         ['$const_dtype']
    $const90.8.1 = build_tuple(items=[Var($const_dtype, <string>:3)]) ['$const90.8.1', '$const_dtype']
    out0 = call $38load_attr.3(full_shape0, func=$38load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.3', '$70load_attr.7', 'full_shape0', 'out0']
    $const96.10.2 = const(int, 0)            ['$const96.10.2']
    $const100.12.0 = const(NoneType, None)   ['$const100.12.0']
    $const102.13.3 = const(int, 1)           ['$const102.13.3']
    $104store_slice.14 = global(slice: <class 'slice'>) ['$104store_slice.14']
    $104store_slice.15 = call $104store_slice.14($const100.12.0, $const102.13.3, func=$104store_slice.14, args=(Var($const100.12.0, <string>:4), Var($const102.13.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$104store_slice.14', '$104store_slice.15', '$const100.12.0', '$const102.13.3']
    out0[$104store_slice.15] = $const96.10.2 ['$104store_slice.15', '$const96.10.2', 'out0']
    $const106.16.2 = const(int, 0)           ['$const106.16.2']
    $const110.18.2 = const(int, 0)           ['$const110.18.2']
    $const112.19.0 = const(NoneType, None)   ['$const112.19.0']
    $114store_slice.20 = global(slice: <class 'slice'>) ['$114store_slice.20']
    $114store_slice.21 = call $114store_slice.20($const110.18.2, $const112.19.0, func=$114store_slice.20, args=(Var($const110.18.2, <string>:5), Var($const112.19.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$114store_slice.20', '$114store_slice.21', '$const110.18.2', '$const112.19.0']
    out0[$114store_slice.21] = $const106.16.2 ['$114store_slice.21', '$const106.16.2', 'out0']
    $116load_global.22 = global(range: <class 'range'>) ['$116load_global.22']
    $126load_global.24 = global(min: <built-in function min>) ['$126load_global.24']
    $const136.26.2 = const(int, 0)           ['$const136.26.2']
    $const138.27.4 = const(int, -1)          ['$const138.27.4']
    $140call.28 = call $126load_global.24($const136.26.2, $const138.27.4, func=$126load_global.24, args=[Var($const136.26.2, <string>:6), Var($const138.27.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_global.24', '$140call.28', '$const136.26.2', '$const138.27.4']
    $148unary_negative.29 = unary(fn=<built-in function neg>, value=$140call.28) ['$140call.28', '$148unary_negative.29']
    $const152.31.2 = const(int, 0)           ['$const152.31.2']
    $154binary_subscr.32 = getitem(value=full_shape0, index=$const152.31.2, fn=<built-in function getitem>) ['$154binary_subscr.32', '$const152.31.2', 'full_shape0']
    $158load_global.33 = global(max: <built-in function max>) ['$158load_global.33']
    $const168.35.2 = const(int, 0)           ['$const168.35.2']
    $const170.36.2 = const(int, 0)           ['$const170.36.2']
    $172call.37 = call $158load_global.33($const168.35.2, $const170.36.2, func=$158load_global.33, args=[Var($const168.35.2, <string>:6), Var($const170.36.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$158load_global.33', '$172call.37', '$const168.35.2', '$const170.36.2']
    $binop_sub180.38 = $154binary_subscr.32 - $172call.37 ['$154binary_subscr.32', '$172call.37', '$binop_sub180.38']
    $184call.39 = call $116load_global.22($148unary_negative.29, $binop_sub180.38, func=$116load_global.22, args=[Var($148unary_negative.29, <string>:6), Var($binop_sub180.38, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.22', '$148unary_negative.29', '$184call.39', '$binop_sub180.38']
    $192get_iter.40 = getiter(value=$184call.39) ['$184call.39', '$192get_iter.40']
    $phi194.0 = $192get_iter.40              ['$192get_iter.40', '$phi194.0']
    jump 194                                 []
label 194:
    $194for_iter.1 = iternext(value=$phi194.0) ['$194for_iter.1', '$phi194.0']
    $194for_iter.2 = pair_first(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.2']
    $194for_iter.3 = pair_second(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.3']
    $phi198.1 = $194for_iter.2               ['$194for_iter.2', '$phi198.1']
    branch $194for_iter.3, 198, 208          ['$194for_iter.3']
label 198:
    index00 = $phi198.1                      ['$phi198.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 194                                 []
label 208:
    $214return_value.3 = cast(value=out0)    ['$214return_value.3', 'out0']
    return $214return_value.3                ['$214return_value.3']

2025-09-26 15:04:08,302 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:04:08,302 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D250550>
2025-09-26 15:04:08,302 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:04:08,302 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:04:08,302 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:04:08,302 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:04:08,302 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,303 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:04:08,303 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,303 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:04:08,303 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:04:08,303 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:04:08,303 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,303 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:04:08,304 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:04:08,304 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:04:08,304 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:08,304 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,304 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:04:08,304 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:04:08,304 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:04:08,304 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:04:08,304 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:08,305 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,305 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:04:08,305 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:04:08,305 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:04:08,305 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:04:08,305 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:04:08,305 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,305 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:04:08,306 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:04:08,306 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:04:08,306 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:04:08,306 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:04:08,306 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:04:08,306 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,306 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:04:08,306 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,306 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:04:08,307 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:04:08,307 - DEBUG - on stmt: jump 194
2025-09-26 15:04:08,307 - DEBUG - ==== SSA block analysis pass on 194
2025-09-26 15:04:08,307 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D250550>
2025-09-26 15:04:08,307 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:04:08,307 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:04:08,307 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:04:08,307 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:04:08,307 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:04:08,308 - DEBUG - ==== SSA block analysis pass on 198
2025-09-26 15:04:08,308 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D250550>
2025-09-26 15:04:08,308 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:04:08,308 - DEBUG - on stmt: jump 208
2025-09-26 15:04:08,308 - DEBUG - ==== SSA block analysis pass on 414
2025-09-26 15:04:08,308 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D250550>
2025-09-26 15:04:08,308 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:04:08,308 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:04:08,309 - DEBUG - ==== SSA block analysis pass on 208
2025-09-26 15:04:08,309 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D250550>
2025-09-26 15:04:08,309 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:04:08,309 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:04:08,309 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:08,309 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:08,309 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:04:08,310 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,310 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,310 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:04:08,310 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:04:08,310 - DEBUG - ==== SSA block analysis pass on 209
2025-09-26 15:04:08,310 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D250550>
2025-09-26 15:04:08,310 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:04:08,311 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,311 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,311 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:04:08,311 - DEBUG - ==== SSA block analysis pass on 241
2025-09-26 15:04:08,311 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D250550>
2025-09-26 15:04:08,311 - DEBUG - on stmt: jump 251
2025-09-26 15:04:08,311 - DEBUG - ==== SSA block analysis pass on 253
2025-09-26 15:04:08,311 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D250550>
2025-09-26 15:04:08,312 - DEBUG - on stmt: jump 257
2025-09-26 15:04:08,312 - DEBUG - ==== SSA block analysis pass on 251
2025-09-26 15:04:08,312 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D250550>
2025-09-26 15:04:08,312 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:04:08,312 - DEBUG - on stmt: jump 257
2025-09-26 15:04:08,312 - DEBUG - ==== SSA block analysis pass on 257
2025-09-26 15:04:08,312 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D250550>
2025-09-26 15:04:08,312 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:04:08,313 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:04:08,313 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:08,313 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:08,313 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:04:08,313 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,313 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,313 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:04:08,313 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:04:08,314 - DEBUG - ==== SSA block analysis pass on 261
2025-09-26 15:04:08,314 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D250550>
2025-09-26 15:04:08,314 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:04:08,314 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,314 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,314 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:04:08,314 - DEBUG - ==== SSA block analysis pass on 289
2025-09-26 15:04:08,314 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D250550>
2025-09-26 15:04:08,314 - DEBUG - on stmt: jump 299
2025-09-26 15:04:08,314 - DEBUG - ==== SSA block analysis pass on 301
2025-09-26 15:04:08,315 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D250550>
2025-09-26 15:04:08,315 - DEBUG - on stmt: jump 305
2025-09-26 15:04:08,315 - DEBUG - ==== SSA block analysis pass on 299
2025-09-26 15:04:08,315 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D250550>
2025-09-26 15:04:08,315 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:04:08,315 - DEBUG - on stmt: jump 305
2025-09-26 15:04:08,315 - DEBUG - ==== SSA block analysis pass on 305
2025-09-26 15:04:08,315 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D250550>
2025-09-26 15:04:08,315 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,315 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,316 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:04:08,316 - DEBUG - ==== SSA block analysis pass on 309
2025-09-26 15:04:08,316 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D250550>
2025-09-26 15:04:08,316 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,316 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:04:08,316 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,316 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,316 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:04:08,317 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,317 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:04:08,317 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:04:08,317 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:04:08,317 - DEBUG - on stmt: jump 413
2025-09-26 15:04:08,317 - DEBUG - ==== SSA block analysis pass on 323
2025-09-26 15:04:08,317 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D250550>
2025-09-26 15:04:08,317 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,317 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:04:08,318 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,318 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,318 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:04:08,318 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,318 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:04:08,318 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:04:08,318 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:04:08,318 - DEBUG - on stmt: jump 413
2025-09-26 15:04:08,319 - DEBUG - ==== SSA block analysis pass on 413
2025-09-26 15:04:08,319 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002985D250550>
2025-09-26 15:04:08,319 - DEBUG - on stmt: jump 194
2025-09-26 15:04:08,319 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104store_slice.14.1': [(<numba.core.ir.Assign object at 0x000002985D1B7290>,
                                       0)],
             '$104store_slice.15.1': [(<numba.core.ir.Assign object at 0x000002985D1B73B0>,
                                       0)],
             '$110pred': [(<numba.core.ir.Assign object at 0x000002985D16E270>,
                           305)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x000002985D170E90>,
                                    309)],
             '$114store_slice.20.1': [(<numba.core.ir.Assign object at 0x000002985D1B7A10>,
                                       0)],
             '$114store_slice.21.1': [(<numba.core.ir.Assign object at 0x000002985D1B7B30>,
                                       0)],
             '$116load_global.22.1': [(<numba.core.ir.Assign object at 0x000002985D1B7C50>,
                                       0)],
             '$124load_attr.1': [(<numba.core.ir.Assign object at 0x000002985D171A30>,
                                  309)],
             '$126load_global.24.1': [(<numba.core.ir.Assign object at 0x000002985D1B7D70>,
                                       0)],
             '$140call.28.1': [(<numba.core.ir.Assign object at 0x000002985D1B6750>,
                                0)],
             '$148call.4': [(<numba.core.ir.Assign object at 0x000002985D1148F0>,
                             309)],
             '$148unary_negative.29.1': [(<numba.core.ir.Assign object at 0x000002985D1CC0B0>,
                                          0)],
             '$154binary_subscr.32.1': [(<numba.core.ir.Assign object at 0x000002985D1CC3B0>,
                                         0)],
             '$156load_global.5': [(<numba.core.ir.Assign object at 0x000002985D1178F0>,
                                    309)],
             '$158load_global.33.1': [(<numba.core.ir.Assign object at 0x000002985D1CC4D0>,
                                       0)],
             '$166load_attr.6': [(<numba.core.ir.Assign object at 0x000002985D116C30>,
                                  309)],
             '$16unary_negative.4': [(<numba.core.ir.Assign object at 0x000002985D1D5730>,
                                      208)],
             '$172call.37.1': [(<numba.core.ir.Assign object at 0x000002985D1CC830>,
                                0)],
             '$184call.39.1': [(<numba.core.ir.Assign object at 0x000002985D1CCA70>,
                                0)],
             '$190call.9': [(<numba.core.ir.Assign object at 0x000002985D146FF0>,
                             309)],
             '$192get_iter.40.1': [(<numba.core.ir.Assign object at 0x000002985D1CCB90>,
                                    0)],
             '$194for_iter.1.1': [(<numba.core.ir.Assign object at 0x000002985D1CC170>,
                                   194)],
             '$194for_iter.2.1': [(<numba.core.ir.Assign object at 0x000002985D1CCCB0>,
                                   194)],
             '$194for_iter.3.1': [(<numba.core.ir.Assign object at 0x000002985D1CCDD0>,
                                   194)],
             '$198compare_op.10': [(<numba.core.ir.Assign object at 0x000002985D145790>,
                                    309)],
             '$202return_value.11': [(<numba.core.ir.Assign object at 0x000002985D1759D0>,
                                      309)],
             '$204load_global.0': [(<numba.core.ir.Assign object at 0x000002985D178650>,
                                    323)],
             '$214load_attr.1': [(<numba.core.ir.Assign object at 0x000002985D17AA50>,
                                  323)],
             '$214return_value.3.1': [(<numba.core.ir.Assign object at 0x000002985D1CD3D0>,
                                       414)],
             '$238call.4': [(<numba.core.ir.Assign object at 0x000002985D178A70>,
                             323)],
             '$246load_global.5': [(<numba.core.ir.Assign object at 0x000002985D164E90>,
                                    323)],
             '$24compare_op.6': [(<numba.core.ir.Assign object at 0x000002985D14EDB0>,
                                  208)],
             '$256load_attr.6': [(<numba.core.ir.Assign object at 0x000002985D164230>,
                                  323)],
             '$280call.9': [(<numba.core.ir.Assign object at 0x000002985D165C70>,
                             323)],
             '$288compare_op.10': [(<numba.core.ir.Assign object at 0x000002985D1AD3D0>,
                                    323)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x000002985D1B6390>,
                                     0)],
             '$28pred': [(<numba.core.ir.Assign object at 0x000002985D14CB30>,
                          208)],
             '$292return_value.11': [(<numba.core.ir.Assign object at 0x000002985D1AFAD0>,
                                      323)],
             '$34compare_op.2': [(<numba.core.ir.Assign object at 0x000002985D0A6AB0>,
                                  209)],
             '$38load_attr.3.1': [(<numba.core.ir.Assign object at 0x000002985D1B64B0>,
                                   0)],
             '$38pred': [(<numba.core.ir.Assign object at 0x000002985D101310>,
                          209)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x000002985D1B67B0>,
                                     0)],
             '$64unary_negative.4': [(<numba.core.ir.Assign object at 0x000002985D18FBF0>,
                                      257)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x000002985D1B68D0>,
                                   0)],
             '$72compare_op.6': [(<numba.core.ir.Assign object at 0x000002985D19B530>,
                                  257)],
             '$76pred': [(<numba.core.ir.Assign object at 0x000002985D198890>,
                          257)],
             '$82compare_op.2': [(<numba.core.ir.Assign object at 0x000002985CE2CE90>,
                                  261)],
             '$86pred': [(<numba.core.ir.Assign object at 0x000002985CFC5CD0>,
                          261)],
             '$binop_sub180.38.1': [(<numba.core.ir.Assign object at 0x000002985D1CC950>,
                                     0)],
             '$bool110': [(<numba.core.ir.Assign object at 0x000002985D16F0B0>,
                           305)],
             '$bool28': [(<numba.core.ir.Assign object at 0x000002985D14D6D0>,
                          208)],
             '$bool38': [(<numba.core.ir.Assign object at 0x000002985D103DD0>,
                          209)],
             '$bool76': [(<numba.core.ir.Assign object at 0x000002985D19A210>,
                          257)],
             '$bool86': [(<numba.core.ir.Assign object at 0x000002985CFC9730>,
                          261)],
             '$const100.12.0.1': [(<numba.core.ir.Assign object at 0x000002985D1B7050>,
                                   0)],
             '$const102.13.3.1': [(<numba.core.ir.Assign object at 0x000002985D1B7170>,
                                   0)],
             '$const106.16.2.1': [(<numba.core.ir.Assign object at 0x000002985D1B74D0>,
                                   0)],
             '$const110.18.2.1': [(<numba.core.ir.Assign object at 0x000002985D1B76B0>,
                                   0)],
             '$const112.19.0.1': [(<numba.core.ir.Assign object at 0x000002985D1B78F0>,
                                   0)],
             '$const136.26.2.1': [(<numba.core.ir.Assign object at 0x000002985D1B4E90>,
                                   0)],
             '$const138.27.4.1': [(<numba.core.ir.Assign object at 0x000002985D1B5010>,
                                   0)],
             '$const152.31.2.1': [(<numba.core.ir.Assign object at 0x000002985D1CC290>,
                                   0)],
             '$const168.35.2.1': [(<numba.core.ir.Assign object at 0x000002985D1CC5F0>,
                                   0)],
             '$const170.36.2.1': [(<numba.core.ir.Assign object at 0x000002985D1CC710>,
                                   0)],
             '$const54.1.2': [(<numba.core.ir.Assign object at 0x000002985D1E7050>,
                               257)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x000002985D21CE90>,
                              208)],
             '$const90.8.1.1': [(<numba.core.ir.Assign object at 0x000002985D1B6B10>,
                                 0)],
             '$const96.10.2.1': [(<numba.core.ir.Assign object at 0x000002985D1B6E70>,
                                  0)],
             '$const_dtype.1': [(<numba.core.ir.Assign object at 0x000002985D1B69F0>,
                                 0)],
             '$phi194.0.1': [(<numba.core.ir.Assign object at 0x000002985D1B6270>,
                              0)],
             '$phi198.1.1': [(<numba.core.ir.Assign object at 0x000002985D1CCE90>,
                              194)],
             '$phi32.0': [(<numba.core.ir.Assign object at 0x000002985D1FD8B0>,
                           208)],
             '$phi80.0': [(<numba.core.ir.Assign object at 0x000002985D1A2450>,
                           257)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x000002985D1B61B0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x000002985D1CCFB0>,
                          198)],
             'out0': [(<numba.core.ir.Assign object at 0x000002985D1B6C30>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x000002985D1F8B90>,
                                208),
                               (<numba.core.ir.Assign object at 0x000002985D1B5550>,
                                257)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002985D1B5DF0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002985D1B5CD0>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x000002985D1F8B30>, 208),
                    (<numba.core.ir.Assign object at 0x000002985CFB19D0>, 251)],
             'x1': [(<numba.core.ir.Assign object at 0x000002985D1B5610>, 257),
                    (<numba.core.ir.Assign object at 0x000002985CFF5310>, 299)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002985D1B5F10>,
                           0)]})
2025-09-26 15:04:08,329 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002985D250550>
2025-09-26 15:04:08,329 - DEBUG - Fix SSA violator on var stencil_index
2025-09-26 15:04:08,329 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:04:08,329 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1C67B0>
2025-09-26 15:04:08,330 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:04:08,330 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:04:08,330 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:04:08,330 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:04:08,330 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,330 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:04:08,330 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,330 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:04:08,330 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:04:08,331 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:04:08,331 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,331 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:04:08,331 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:04:08,331 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:04:08,331 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:08,331 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,331 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:04:08,331 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:04:08,332 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:04:08,332 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:04:08,332 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:08,332 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,332 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:04:08,332 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:04:08,332 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:04:08,332 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:04:08,332 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:04:08,333 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,333 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:04:08,333 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:04:08,333 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:04:08,333 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:04:08,333 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:04:08,333 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:04:08,333 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,334 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:04:08,334 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,334 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:04:08,334 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:04:08,334 - DEBUG - on stmt: jump 194
2025-09-26 15:04:08,334 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:04:08,334 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1C67B0>
2025-09-26 15:04:08,334 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:04:08,335 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:04:08,335 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:04:08,335 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:04:08,335 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:04:08,335 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:04:08,335 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1C67B0>
2025-09-26 15:04:08,335 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:04:08,335 - DEBUG - on stmt: jump 208
2025-09-26 15:04:08,335 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:04:08,335 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1C67B0>
2025-09-26 15:04:08,336 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:04:08,336 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:04:08,336 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:04:08,336 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1C67B0>
2025-09-26 15:04:08,336 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:04:08,336 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:04:08,336 - DEBUG - first assign: stencil_index
2025-09-26 15:04:08,336 - DEBUG - replaced with: stencil_index = $const6.1.1 + index00
2025-09-26 15:04:08,337 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:08,337 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:08,337 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:04:08,337 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,337 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,337 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:04:08,337 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:04:08,337 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:04:08,337 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1C67B0>
2025-09-26 15:04:08,338 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:04:08,338 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,338 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,338 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:04:08,338 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:04:08,338 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1C67B0>
2025-09-26 15:04:08,338 - DEBUG - on stmt: jump 251
2025-09-26 15:04:08,338 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:04:08,339 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1C67B0>
2025-09-26 15:04:08,339 - DEBUG - on stmt: jump 257
2025-09-26 15:04:08,339 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:04:08,339 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1C67B0>
2025-09-26 15:04:08,339 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:04:08,339 - DEBUG - on stmt: jump 257
2025-09-26 15:04:08,339 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:04:08,340 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1C67B0>
2025-09-26 15:04:08,340 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:04:08,340 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:04:08,340 - DEBUG - replaced with: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:04:08,340 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:08,340 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:08,340 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:04:08,340 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,341 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,341 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:04:08,341 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:04:08,341 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:04:08,341 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1C67B0>
2025-09-26 15:04:08,341 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:04:08,341 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,341 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,341 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:04:08,341 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:04:08,342 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1C67B0>
2025-09-26 15:04:08,342 - DEBUG - on stmt: jump 299
2025-09-26 15:04:08,342 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:04:08,342 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1C67B0>
2025-09-26 15:04:08,342 - DEBUG - on stmt: jump 305
2025-09-26 15:04:08,342 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:04:08,342 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1C67B0>
2025-09-26 15:04:08,342 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:04:08,342 - DEBUG - on stmt: jump 305
2025-09-26 15:04:08,342 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:04:08,343 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1C67B0>
2025-09-26 15:04:08,343 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,343 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,343 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:04:08,343 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:04:08,343 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1C67B0>
2025-09-26 15:04:08,343 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,343 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:04:08,343 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,344 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,344 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:04:08,344 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,344 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:04:08,344 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:04:08,344 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:04:08,344 - DEBUG - on stmt: jump 413
2025-09-26 15:04:08,344 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:04:08,344 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1C67B0>
2025-09-26 15:04:08,345 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,345 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:04:08,345 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,345 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,345 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:04:08,345 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,345 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:04:08,345 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:04:08,345 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:04:08,346 - DEBUG - on stmt: jump 413
2025-09-26 15:04:08,346 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:04:08,346 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985D1C67B0>
2025-09-26 15:04:08,346 - DEBUG - on stmt: jump 194
2025-09-26 15:04:08,346 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002985D1C69F0>],
             257: [<numba.core.ir.Assign object at 0x000002985D1C6C90>]})
2025-09-26 15:04:08,346 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:04:08,346 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1C67B0>
2025-09-26 15:04:08,346 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:04:08,347 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:04:08,347 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:04:08,347 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:04:08,347 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,347 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:04:08,347 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,347 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:04:08,347 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:04:08,347 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:04:08,348 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,348 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:04:08,348 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:04:08,348 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:04:08,348 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:08,348 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,348 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:04:08,349 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:04:08,349 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:04:08,349 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:04:08,349 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:08,349 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,349 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:04:08,349 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:04:08,350 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:04:08,350 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:04:08,350 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:04:08,350 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,350 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:04:08,350 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:04:08,350 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:04:08,350 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:04:08,351 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:04:08,351 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:04:08,351 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,351 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:04:08,351 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,352 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:04:08,352 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:04:08,352 - DEBUG - on stmt: jump 194
2025-09-26 15:04:08,352 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:04:08,352 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1C67B0>
2025-09-26 15:04:08,352 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:04:08,352 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:04:08,353 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:04:08,353 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:04:08,353 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:04:08,353 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:04:08,353 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1C67B0>
2025-09-26 15:04:08,353 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:04:08,353 - DEBUG - on stmt: jump 208
2025-09-26 15:04:08,353 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:04:08,353 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1C67B0>
2025-09-26 15:04:08,354 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:04:08,354 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:04:08,354 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:04:08,354 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1C67B0>
2025-09-26 15:04:08,354 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:04:08,354 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:04:08,354 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:08,354 - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:08,355 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:08,355 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:04:08,355 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,355 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,355 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:04:08,355 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:04:08,355 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:04:08,355 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1C67B0>
2025-09-26 15:04:08,355 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:04:08,356 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,356 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,356 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:04:08,356 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:04:08,356 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1C67B0>
2025-09-26 15:04:08,356 - DEBUG - on stmt: jump 251
2025-09-26 15:04:08,356 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:04:08,356 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1C67B0>
2025-09-26 15:04:08,356 - DEBUG - on stmt: jump 257
2025-09-26 15:04:08,356 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:04:08,357 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1C67B0>
2025-09-26 15:04:08,357 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:04:08,357 - DEBUG - on stmt: jump 257
2025-09-26 15:04:08,357 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:04:08,357 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1C67B0>
2025-09-26 15:04:08,357 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:04:08,357 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:04:08,357 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:08,357 - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:08,357 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:04:08,358 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:08,358 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:04:08,358 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,358 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,358 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:04:08,358 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:04:08,358 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:04:08,358 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1C67B0>
2025-09-26 15:04:08,359 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:04:08,359 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,359 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,359 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:04:08,359 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:04:08,359 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1C67B0>
2025-09-26 15:04:08,359 - DEBUG - on stmt: jump 299
2025-09-26 15:04:08,359 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:04:08,359 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1C67B0>
2025-09-26 15:04:08,360 - DEBUG - on stmt: jump 305
2025-09-26 15:04:08,360 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:04:08,360 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1C67B0>
2025-09-26 15:04:08,360 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:04:08,360 - DEBUG - on stmt: jump 305
2025-09-26 15:04:08,360 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:04:08,360 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1C67B0>
2025-09-26 15:04:08,360 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,360 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,360 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:04:08,361 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:04:08,361 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1C67B0>
2025-09-26 15:04:08,361 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,361 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:04:08,361 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,361 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,361 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:04:08,361 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,361 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:04:08,362 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:04:08,362 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:04:08,362 - DEBUG - on stmt: jump 413
2025-09-26 15:04:08,362 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:04:08,362 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1C67B0>
2025-09-26 15:04:08,362 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,362 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:04:08,363 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,363 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,363 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:04:08,363 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,363 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:04:08,363 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:04:08,364 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:04:08,364 - DEBUG - on stmt: jump 413
2025-09-26 15:04:08,364 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:04:08,364 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985D1C67B0>
2025-09-26 15:04:08,364 - DEBUG - on stmt: jump 194
2025-09-26 15:04:08,364 - DEBUG - Fix SSA violator on var x0
2025-09-26 15:04:08,364 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:04:08,364 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCAA210>
2025-09-26 15:04:08,365 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:04:08,365 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:04:08,365 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:04:08,365 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:04:08,365 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,365 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:04:08,365 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,366 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:04:08,366 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:04:08,366 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:04:08,366 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,366 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:04:08,366 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:04:08,366 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:04:08,366 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:08,367 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,367 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:04:08,367 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:04:08,367 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:04:08,367 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:04:08,367 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:08,367 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,367 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:04:08,368 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:04:08,368 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:04:08,368 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:04:08,368 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:04:08,368 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,368 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:04:08,368 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:04:08,368 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:04:08,369 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:04:08,369 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:04:08,369 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:04:08,369 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,369 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:04:08,369 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,369 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:04:08,369 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:04:08,369 - DEBUG - on stmt: jump 194
2025-09-26 15:04:08,370 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:04:08,370 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCAA210>
2025-09-26 15:04:08,370 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:04:08,370 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:04:08,370 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:04:08,370 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:04:08,370 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:04:08,370 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:04:08,370 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCAA210>
2025-09-26 15:04:08,371 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:04:08,371 - DEBUG - on stmt: jump 208
2025-09-26 15:04:08,371 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:04:08,371 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCAA210>
2025-09-26 15:04:08,371 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:04:08,371 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:04:08,371 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:04:08,371 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCAA210>
2025-09-26 15:04:08,371 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:04:08,372 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:04:08,372 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:08,372 - DEBUG - first assign: x0
2025-09-26 15:04:08,372 - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:08,372 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:08,372 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:04:08,372 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,372 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,372 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:04:08,373 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:04:08,373 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:04:08,373 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCAA210>
2025-09-26 15:04:08,373 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:04:08,373 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,373 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,373 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:04:08,373 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:04:08,373 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCAA210>
2025-09-26 15:04:08,374 - DEBUG - on stmt: jump 251
2025-09-26 15:04:08,374 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:04:08,374 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCAA210>
2025-09-26 15:04:08,374 - DEBUG - on stmt: jump 257
2025-09-26 15:04:08,374 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:04:08,374 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCAA210>
2025-09-26 15:04:08,374 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:04:08,374 - DEBUG - replaced with: x0.1 = const(int, 0)
2025-09-26 15:04:08,375 - DEBUG - on stmt: jump 257
2025-09-26 15:04:08,375 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:04:08,375 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCAA210>
2025-09-26 15:04:08,375 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:04:08,375 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:04:08,375 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:04:08,375 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:08,375 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:04:08,375 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,376 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,376 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:04:08,376 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:04:08,376 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:04:08,376 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCAA210>
2025-09-26 15:04:08,376 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:04:08,377 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,377 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,377 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:04:08,377 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:04:08,377 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCAA210>
2025-09-26 15:04:08,377 - DEBUG - on stmt: jump 299
2025-09-26 15:04:08,377 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:04:08,377 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCAA210>
2025-09-26 15:04:08,378 - DEBUG - on stmt: jump 305
2025-09-26 15:04:08,378 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:04:08,378 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCAA210>
2025-09-26 15:04:08,378 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:04:08,378 - DEBUG - on stmt: jump 305
2025-09-26 15:04:08,378 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:04:08,378 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCAA210>
2025-09-26 15:04:08,379 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,379 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,379 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:04:08,379 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:04:08,379 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCAA210>
2025-09-26 15:04:08,379 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,379 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:04:08,380 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,380 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,380 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:04:08,380 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,380 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:04:08,380 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:04:08,380 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:04:08,380 - DEBUG - on stmt: jump 413
2025-09-26 15:04:08,380 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:04:08,381 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCAA210>
2025-09-26 15:04:08,381 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,381 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:04:08,381 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,381 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,381 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:04:08,381 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,381 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:04:08,381 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:04:08,382 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:04:08,382 - DEBUG - on stmt: jump 413
2025-09-26 15:04:08,382 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:04:08,382 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCAA210>
2025-09-26 15:04:08,382 - DEBUG - on stmt: jump 194
2025-09-26 15:04:08,382 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002985D1C6DB0>],
             251: [<numba.core.ir.Assign object at 0x000002985D1C6AB0>]})
2025-09-26 15:04:08,382 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:04:08,382 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCAACB0>
2025-09-26 15:04:08,382 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:04:08,383 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:04:08,383 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:04:08,383 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:04:08,383 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,383 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:04:08,383 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,383 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:04:08,383 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:04:08,384 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:04:08,384 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,384 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:04:08,384 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:04:08,384 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:04:08,384 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:08,384 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,384 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:04:08,385 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:04:08,385 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:04:08,385 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:04:08,385 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:08,385 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,385 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:04:08,385 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:04:08,385 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:04:08,386 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:04:08,386 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:04:08,386 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,386 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:04:08,386 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:04:08,386 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:04:08,386 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:04:08,386 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:04:08,386 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:04:08,386 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,387 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:04:08,387 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,387 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:04:08,387 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:04:08,387 - DEBUG - on stmt: jump 194
2025-09-26 15:04:08,387 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:04:08,387 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCAACB0>
2025-09-26 15:04:08,387 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:04:08,387 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:04:08,388 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:04:08,388 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:04:08,388 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:04:08,388 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:04:08,388 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCAACB0>
2025-09-26 15:04:08,388 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:04:08,388 - DEBUG - on stmt: jump 208
2025-09-26 15:04:08,388 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:04:08,388 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCAACB0>
2025-09-26 15:04:08,389 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:04:08,389 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:04:08,389 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:04:08,389 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCAACB0>
2025-09-26 15:04:08,389 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:04:08,389 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:04:08,390 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:08,390 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:08,390 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:04:08,390 - DEBUG - find_def var='x0' stmt=$24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:04:08,390 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,390 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,391 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:04:08,391 - DEBUG - find_def var='x0' stmt=$phi32.0 = x0
2025-09-26 15:04:08,391 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:04:08,391 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:04:08,391 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCAACB0>
2025-09-26 15:04:08,391 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:04:08,391 - DEBUG - find_def var='x0' stmt=$34compare_op.2 = x0 <= threshold
2025-09-26 15:04:08,391 - DEBUG - find_def_from_top label 209
2025-09-26 15:04:08,392 - DEBUG - idom 208 from label 209
2025-09-26 15:04:08,392 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:04:08,392 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,392 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,392 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:04:08,392 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:04:08,392 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCAACB0>
2025-09-26 15:04:08,393 - DEBUG - on stmt: jump 251
2025-09-26 15:04:08,393 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:04:08,393 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCAACB0>
2025-09-26 15:04:08,393 - DEBUG - on stmt: jump 257
2025-09-26 15:04:08,393 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:04:08,393 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCAACB0>
2025-09-26 15:04:08,393 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:04:08,393 - DEBUG - on stmt: jump 257
2025-09-26 15:04:08,393 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:04:08,394 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCAACB0>
2025-09-26 15:04:08,394 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:04:08,394 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:04:08,394 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:04:08,394 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:08,394 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:04:08,394 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,394 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,395 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:04:08,395 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:04:08,395 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:04:08,395 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCAACB0>
2025-09-26 15:04:08,395 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:04:08,395 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,395 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,395 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:04:08,395 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:04:08,395 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCAACB0>
2025-09-26 15:04:08,396 - DEBUG - on stmt: jump 299
2025-09-26 15:04:08,396 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:04:08,396 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCAACB0>
2025-09-26 15:04:08,396 - DEBUG - on stmt: jump 305
2025-09-26 15:04:08,396 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:04:08,396 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCAACB0>
2025-09-26 15:04:08,396 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:04:08,396 - DEBUG - on stmt: jump 305
2025-09-26 15:04:08,396 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:04:08,396 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCAACB0>
2025-09-26 15:04:08,397 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,397 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,397 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:04:08,397 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:04:08,397 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCAACB0>
2025-09-26 15:04:08,397 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,397 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:04:08,397 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,397 - DEBUG - find_def var='x0' stmt=$148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,398 - DEBUG - find_def_from_top label 309
2025-09-26 15:04:08,398 - DEBUG - idom 305 from label 309
2025-09-26 15:04:08,398 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:04:08,398 - DEBUG - find_def_from_top label 305
2025-09-26 15:04:08,398 - DEBUG - idom 257 from label 305
2025-09-26 15:04:08,398 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:04:08,398 - DEBUG - find_def_from_top label 257
2025-09-26 15:04:08,398 - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 257
2025-09-26 15:04:08,398 - DEBUG - find_def_from_bottom label 209
2025-09-26 15:04:08,399 - DEBUG - find_def_from_top label 209
2025-09-26 15:04:08,399 - DEBUG - idom 208 from label 209
2025-09-26 15:04:08,399 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:04:08,399 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:08,399 - DEBUG - find_def_from_bottom label 251
2025-09-26 15:04:08,399 - DEBUG - incoming_def x0.1 = const(int, 0)
2025-09-26 15:04:08,399 - DEBUG - find_def_from_bottom label 253
2025-09-26 15:04:08,399 - DEBUG - find_def_from_top label 253
2025-09-26 15:04:08,399 - DEBUG - idom 208 from label 253
2025-09-26 15:04:08,399 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:04:08,400 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:08,400 - DEBUG - replaced with: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,400 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,400 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:04:08,400 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,400 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:04:08,400 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:04:08,400 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:04:08,401 - DEBUG - on stmt: jump 413
2025-09-26 15:04:08,401 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:04:08,401 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCAACB0>
2025-09-26 15:04:08,401 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,401 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:04:08,401 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,401 - DEBUG - find_def var='x0' stmt=$238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,401 - DEBUG - find_def_from_top label 323
2025-09-26 15:04:08,401 - DEBUG - idom 305 from label 323
2025-09-26 15:04:08,401 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:04:08,402 - DEBUG - find_def_from_top label 305
2025-09-26 15:04:08,402 - DEBUG - idom 257 from label 305
2025-09-26 15:04:08,402 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:04:08,402 - DEBUG - replaced with: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,402 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,402 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:04:08,403 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,403 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:04:08,403 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:04:08,403 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:04:08,403 - DEBUG - on stmt: jump 413
2025-09-26 15:04:08,403 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:04:08,403 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCAACB0>
2025-09-26 15:04:08,403 - DEBUG - on stmt: jump 194
2025-09-26 15:04:08,404 - DEBUG - Fix SSA violator on var x1
2025-09-26 15:04:08,404 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:04:08,404 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCABB60>
2025-09-26 15:04:08,404 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:04:08,404 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:04:08,404 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:04:08,404 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:04:08,404 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,404 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:04:08,405 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,405 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:04:08,405 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:04:08,405 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:04:08,405 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,405 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:04:08,405 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:04:08,406 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:04:08,406 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:08,406 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,406 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:04:08,406 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:04:08,406 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:04:08,406 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:04:08,407 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:08,407 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,407 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:04:08,407 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:04:08,407 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:04:08,407 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:04:08,407 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:04:08,407 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,408 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:04:08,408 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:04:08,408 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:04:08,408 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:04:08,408 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:04:08,408 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:04:08,408 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,409 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:04:08,409 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,409 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:04:08,409 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:04:08,409 - DEBUG - on stmt: jump 194
2025-09-26 15:04:08,409 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:04:08,409 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCABB60>
2025-09-26 15:04:08,409 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:04:08,409 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:04:08,410 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:04:08,410 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:04:08,410 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:04:08,410 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:04:08,410 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCABB60>
2025-09-26 15:04:08,410 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:04:08,410 - DEBUG - on stmt: jump 208
2025-09-26 15:04:08,410 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:04:08,410 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCABB60>
2025-09-26 15:04:08,410 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:04:08,411 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:04:08,411 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:04:08,411 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCABB60>
2025-09-26 15:04:08,411 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:04:08,411 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:04:08,411 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:08,411 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:08,411 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:04:08,411 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,412 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,412 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:04:08,412 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:04:08,412 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:04:08,412 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCABB60>
2025-09-26 15:04:08,412 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:04:08,412 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,412 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,413 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:04:08,413 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:04:08,413 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCABB60>
2025-09-26 15:04:08,413 - DEBUG - on stmt: jump 251
2025-09-26 15:04:08,413 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:04:08,413 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCABB60>
2025-09-26 15:04:08,413 - DEBUG - on stmt: jump 257
2025-09-26 15:04:08,413 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:04:08,413 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCABB60>
2025-09-26 15:04:08,413 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:04:08,414 - DEBUG - on stmt: jump 257
2025-09-26 15:04:08,414 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:04:08,414 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCABB60>
2025-09-26 15:04:08,414 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:04:08,414 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:04:08,414 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:04:08,414 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:04:08,414 - DEBUG - first assign: x1
2025-09-26 15:04:08,414 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:04:08,415 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:08,415 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:04:08,415 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,415 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,415 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:04:08,415 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:04:08,415 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:04:08,415 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCABB60>
2025-09-26 15:04:08,416 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:04:08,416 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,416 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,416 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:04:08,416 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:04:08,416 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCABB60>
2025-09-26 15:04:08,416 - DEBUG - on stmt: jump 299
2025-09-26 15:04:08,416 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:04:08,417 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCABB60>
2025-09-26 15:04:08,417 - DEBUG - on stmt: jump 305
2025-09-26 15:04:08,417 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:04:08,417 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCABB60>
2025-09-26 15:04:08,417 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:04:08,417 - DEBUG - replaced with: x1.1 = const(int, 0)
2025-09-26 15:04:08,417 - DEBUG - on stmt: jump 305
2025-09-26 15:04:08,417 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:04:08,418 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCABB60>
2025-09-26 15:04:08,418 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,418 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,418 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:04:08,418 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:04:08,418 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCABB60>
2025-09-26 15:04:08,418 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,418 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:04:08,419 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,419 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,419 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:04:08,419 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,419 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:04:08,419 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:04:08,419 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:04:08,419 - DEBUG - on stmt: jump 413
2025-09-26 15:04:08,419 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:04:08,420 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCABB60>
2025-09-26 15:04:08,420 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,420 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:04:08,420 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,420 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,420 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:04:08,420 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,421 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:04:08,421 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:04:08,421 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:04:08,421 - DEBUG - on stmt: jump 413
2025-09-26 15:04:08,421 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:04:08,421 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002985CCABB60>
2025-09-26 15:04:08,421 - DEBUG - on stmt: jump 194
2025-09-26 15:04:08,421 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {257: [<numba.core.ir.Assign object at 0x000002985D1C6ED0>],
             299: [<numba.core.ir.Assign object at 0x000002985D1C6E70>]})
2025-09-26 15:04:08,422 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:04:08,422 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCABCA0>
2025-09-26 15:04:08,422 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:04:08,422 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:04:08,422 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:04:08,422 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:04:08,422 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,422 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:04:08,423 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,423 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:04:08,423 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:04:08,423 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:04:08,423 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,423 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:04:08,423 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:04:08,424 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:04:08,424 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:08,424 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,424 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:04:08,424 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:04:08,424 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:04:08,424 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:04:08,424 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:04:08,424 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,425 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:04:08,425 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:04:08,425 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:04:08,425 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:04:08,425 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:04:08,425 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,425 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:04:08,425 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:04:08,425 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:04:08,426 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:04:08,426 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:04:08,426 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:04:08,426 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,426 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:04:08,426 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,426 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:04:08,426 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:04:08,427 - DEBUG - on stmt: jump 194
2025-09-26 15:04:08,427 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:04:08,427 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCABCA0>
2025-09-26 15:04:08,427 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:04:08,427 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:04:08,427 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:04:08,427 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:04:08,427 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:04:08,427 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:04:08,427 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCABCA0>
2025-09-26 15:04:08,428 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:04:08,428 - DEBUG - on stmt: jump 208
2025-09-26 15:04:08,428 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:04:08,428 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCABCA0>
2025-09-26 15:04:08,428 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:04:08,428 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:04:08,428 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:04:08,428 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCABCA0>
2025-09-26 15:04:08,429 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:04:08,429 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:04:08,429 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:04:08,429 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:08,429 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:04:08,429 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,429 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,430 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:04:08,430 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:04:08,430 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:04:08,430 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCABCA0>
2025-09-26 15:04:08,430 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:04:08,430 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,430 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,431 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:04:08,431 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:04:08,431 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCABCA0>
2025-09-26 15:04:08,431 - DEBUG - on stmt: jump 251
2025-09-26 15:04:08,431 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:04:08,431 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCABCA0>
2025-09-26 15:04:08,431 - DEBUG - on stmt: jump 257
2025-09-26 15:04:08,431 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:04:08,431 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCABCA0>
2025-09-26 15:04:08,431 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:04:08,432 - DEBUG - on stmt: jump 257
2025-09-26 15:04:08,432 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:04:08,432 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCABCA0>
2025-09-26 15:04:08,432 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:04:08,432 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:04:08,432 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:04:08,432 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:04:08,432 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:04:08,433 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:04:08,433 - DEBUG - find_def var='x1' stmt=$72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:04:08,433 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,433 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,433 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:04:08,433 - DEBUG - find_def var='x1' stmt=$phi80.0 = x1
2025-09-26 15:04:08,433 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:04:08,434 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:04:08,434 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCABCA0>
2025-09-26 15:04:08,434 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:04:08,434 - DEBUG - find_def var='x1' stmt=$82compare_op.2 = x1 <= threshold
2025-09-26 15:04:08,434 - DEBUG - find_def_from_top label 261
2025-09-26 15:04:08,434 - DEBUG - idom 257 from label 261
2025-09-26 15:04:08,434 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:04:08,434 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,435 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,435 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:04:08,435 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:04:08,435 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCABCA0>
2025-09-26 15:04:08,435 - DEBUG - on stmt: jump 299
2025-09-26 15:04:08,435 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:04:08,435 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCABCA0>
2025-09-26 15:04:08,435 - DEBUG - on stmt: jump 305
2025-09-26 15:04:08,436 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:04:08,436 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCABCA0>
2025-09-26 15:04:08,436 - DEBUG - on stmt: x1.1 = const(int, 0)
2025-09-26 15:04:08,436 - DEBUG - on stmt: jump 305
2025-09-26 15:04:08,436 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:04:08,436 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCABCA0>
2025-09-26 15:04:08,436 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:04:08,436 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,436 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:04:08,436 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:04:08,437 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCABCA0>
2025-09-26 15:04:08,437 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,437 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:04:08,437 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,437 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,437 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:04:08,437 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,437 - DEBUG - find_def var='x1' stmt=$190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,438 - DEBUG - find_def_from_top label 309
2025-09-26 15:04:08,438 - DEBUG - idom 305 from label 309
2025-09-26 15:04:08,438 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:04:08,438 - DEBUG - find_def_from_top label 305
2025-09-26 15:04:08,438 - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 305
2025-09-26 15:04:08,438 - DEBUG - find_def_from_bottom label 299
2025-09-26 15:04:08,438 - DEBUG - incoming_def x1.1 = const(int, 0)
2025-09-26 15:04:08,438 - DEBUG - find_def_from_bottom label 301
2025-09-26 15:04:08,438 - DEBUG - find_def_from_top label 301
2025-09-26 15:04:08,438 - DEBUG - idom 257 from label 301
2025-09-26 15:04:08,439 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:04:08,439 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:04:08,439 - DEBUG - find_def_from_bottom label 261
2025-09-26 15:04:08,439 - DEBUG - find_def_from_top label 261
2025-09-26 15:04:08,439 - DEBUG - idom 257 from label 261
2025-09-26 15:04:08,439 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:04:08,439 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:04:08,439 - DEBUG - replaced with: $190call.9 = call $166load_attr.6(x1.2, func=$166load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,439 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:04:08,440 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:04:08,440 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:04:08,440 - DEBUG - on stmt: jump 413
2025-09-26 15:04:08,440 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:04:08,440 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCABCA0>
2025-09-26 15:04:08,440 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,440 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:04:08,440 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,441 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:04:08,441 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:04:08,441 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,441 - DEBUG - find_def var='x1' stmt=$280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,441 - DEBUG - find_def_from_top label 323
2025-09-26 15:04:08,441 - DEBUG - idom 305 from label 323
2025-09-26 15:04:08,441 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:04:08,441 - DEBUG - replaced with: $280call.9 = call $256load_attr.6(x1.2, func=$256load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:04:08,441 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:04:08,442 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:04:08,442 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:04:08,442 - DEBUG - on stmt: jump 413
2025-09-26 15:04:08,442 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:04:08,442 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002985CCABCA0>
2025-09-26 15:04:08,442 - DEBUG - on stmt: jump 194
2025-09-26 15:04:08,455 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с librosa: 'function' object has no attribute 'get_call_template'
2025-09-26 15:04:08,459 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 15:04:08,460 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 15:04:08,460 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\РИНГТОН.mp3'>)))], 'idempotency_key': 'stainless-python-retry-6a9ce72e-d2d5-41ba-b037-f307b07ac334', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:04:08,461 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:04:08,461 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:04:08,461 - DEBUG - send_request_headers.complete
2025-09-26 15:04:08,462 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:04:08,465 - DEBUG - send_request_body.complete
2025-09-26 15:04:08,465 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:04:12,209 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:04:12 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1839'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1858'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_b9d01787307145ac91642cdacd26c3d5'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529f411d4a8d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:04:12,209 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:04:12,210 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:04:12,210 - DEBUG - receive_response_body.complete
2025-09-26 15:04:12,210 - DEBUG - response_closed.started
2025-09-26 15:04:12,211 - DEBUG - response_closed.complete
2025-09-26 15:04:12,211 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:04:12 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1839', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1858', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_b9d01787307145ac91642cdacd26c3d5', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529f411d4a8d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:04:12,211 - DEBUG - request_id: req_b9d01787307145ac91642cdacd26c3d5
2025-09-26 15:04:12,211 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Find me, find me, find me, find me, you can find me, find me, find me, find me, you can find me.

Tearing up downtown with the high beams, no need for a rear view when they can't catch you, I never look back, never look, look like I want to, also in a sign, kissing your tattoo, sweet like cinnamon, no need for a rear view when they can't catch you.'
2025-09-26 15:04:12,212 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:04:12,212 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Find me, find me, find me, find me, you can find me, find me, find me, find me, you can find me.

Tearing up downtown with the high beams, no need for a rear view when they can't catch you, I never look back, never look, look like I want to, also in a sign, kissing your tattoo, sweet like cinnamon, no need for a rear view when they can't catch you.'
2025-09-26 15:04:12,212 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: 'Find me, find me, find me, find me, you can find me, find me, find me, find me, you can find me.

Tearing up downtown with the high beams, no need for a rear view when they can't catch you, I never look back, never look, look like I want to, also in a sign, kissing your tattoo, sweet like cinnamon, no need for a rear view when they can't catch you.' (длина: 350)
2025-09-26 15:04:12,213 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Find me, find me, find me, find me, you can find me, find me, find me, find me, you can find me.

Tearing up downtown with the high beams, no need for a rear view when they can't catch you, I never look back, never look, look like I want to, also in a sign, kissing your tattoo, sweet like cinnamon, no need for a rear view when they can't catch you.'
2025-09-26 15:04:12,213 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:04:12,213 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Find me, find me, find me, find me, you can find me, find me, find me, find me, you can find me.

Tearing up downtown with the high beams, no need for a rear view when they can't catch you, I never look back, never look, look like I want to, also in a sign, kissing your tattoo, sweet like cinnamon, no need for a rear view when they can't catch you.'
2025-09-26 15:04:12,214 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\РИНГТОН.mp3'>)))], 'idempotency_key': 'stainless-python-retry-7c7b4508-9eb4-4d16-8c87-9730b422a83b', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:04:12,214 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:04:12,215 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:04:12,215 - DEBUG - send_request_headers.complete
2025-09-26 15:04:12,215 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:04:12,219 - DEBUG - send_request_body.complete
2025-09-26 15:04:12,219 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:04:15,841 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:04:15 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1764'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1777'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_99db0fc1b394456aa28e014689319240'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529f588a098d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:04:15,841 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:04:15,842 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:04:15,842 - DEBUG - receive_response_body.complete
2025-09-26 15:04:15,842 - DEBUG - response_closed.started
2025-09-26 15:04:15,842 - DEBUG - response_closed.complete
2025-09-26 15:04:15,843 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:04:15 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1764', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1777', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_99db0fc1b394456aa28e014689319240', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529f588a098d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:04:15,843 - DEBUG - request_id: req_99db0fc1b394456aa28e014689319240
2025-09-26 15:04:15,843 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Find me, find me, find me, you can find me, find me, find me, find me, you can find me. Tearing up downtown with the high beams, no need for rearview when they can't catch you. I never look back, never look, look like I want to, oh so innocent, kissing your tattoos, we like cinema. No need for rearview when they can't catch you.'
2025-09-26 15:04:15,844 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:04:15,844 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Find me, find me, find me, you can find me, find me, find me, find me, you can find me. Tearing up downtown with the high beams, no need for rearview when they can't catch you. I never look back, never look, look like I want to, oh so innocent, kissing your tattoos, we like cinema. No need for rearview when they can't catch you.'
2025-09-26 15:04:15,845 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-1e7dcd2e-630f-4988-9003-eaea73a7927a', 'json_data': {'messages': [{'role': 'system', 'content': 'Ты — специализированная система для анализа аудиозаписей.\nТвоя единственная задача — классифицировать входной аудиофайл в одну из категорий: музыка, речь, шум.\n\nВАЖНО: Ты анализируешь РЕЗУЛЬТАТ ТРАНСКРИПЦИИ аудиофайла, а не сам аудиофайл. Это означает, что:\n- Если в аудио была музыка с вокалом, то в транскрипции будут слова песни\n- Если в аудио была речь, то в транскрипции будет связный текст\n- Если в аудио был шум, то в транскрипции будет мало слов или галлюцинации\n\nКатегории классификации:\n\nМузыка (music):\n- Это песня, музыкальная композиция с вокалом\n- Характерные признаки в транскрипции:\n  * Повторяющиеся фразы или слова (припев)\n  * Рифмы и ритмические паттерны\n  * Музыкальные звуки: "ла-ла-ла", "на-на-на", "о-о-о", "а-а-а"\n  * Эмоциональные восклицания: "Ауф!", "Ой!", "Ах!"\n  * Короткие фразы без логической связи\n  * Слова, которые звучат как песня, а не как обычная речь\n  * Повторяющиеся слова или фразы (припев песни)\n  * Ритмические паттерны в тексте\n\nРечь (speech):\n- Это обычная речь, разговор, диалог\n- Характерные признаки в транскрипции:\n  * Связные предложения с логической структурой\n  * Обычные слова и фразы\n  * Знаки препинания: точки, запятые, восклицательные знаки\n  * Логическая последовательность мыслей\n  * Отсутствие повторяющихся музыкальных паттернов\n  * Естественная речь без ритма\n\nШум (noise):\n- Это неречевые звуки, шум, техника, плач ребенка\n- Характерные признаки в транскрипции:\n  * Очень короткие или бессмысленные фрагменты\n  * Отсутствие связной речи\n  * Случайные слова или звуки\n  * Описания звуков: "[Music]", "[звук]", "[шум]"\n  * Повторяющиеся гласные: "ааа", "ууу", "ооо" (детский плач)\n  * Бессмысленные фразы: "Всем новичкам, всем новичкам"\n  * Короткие бессвязные слова\n\nПравила классификации:\n1. Если транскрипция содержит связную речь с логической структурой → speech\n2. Если транскрипция содержит повторяющиеся фразы, рифмы, музыкальные звуки → music\n3. Если транскрипция короткая, бессвязная или содержит описания звуков → noise\n4. При сомнениях между music и speech: если есть повторения или музыкальные звуки → music\n5. Детский плач (ааа, ууу, ооо) → noise\n6. Белый шум с бессмысленными словами → noise\n\nВАЖНЫЕ ПРИМЕРЫ:\n- "Скажи мне, не говори мне, что ты гонишь" → music (песня с повторениями)\n- "Привет, как дела?" → speech (обычная речь)\n- "Ааааааа" → noise (детский плач)\n- "Всем новичкам, всем новичкам" → noise (белый шум)\n- "Find me, find me, You can find" → music (песня с припевом)\n\nФормат ответа:\nОтвечай только в формате JSON, без лишнего текста:\n{\n  "classification": "music | speech | noise",\n  "confidence": 0.0-1.0,\n  "reasoning": "Краткое объяснение выбора: какие признаки были решающими"\n}\n\nОграничения:\n- Не добавляй ничего, кроме JSON\n- Не предлагай альтернативных категорий\n- Всегда возвращай одно значение в поле "classification"\n- Уровень уверенности (confidence) должен отражать баланс признаков:\n  * 0.9–1.0 → очень высокая уверенность\n  * 0.6–0.89 → умеренная уверенность\n  * <0.6 → низкая уверенность, признаки неоднозначны'}, {'role': 'user', 'content': "Проанализируй следующий транскрипт аудио и классифицируй его:\n\nFind me, find me, find me, you can find me, find me, find me, find me, you can find me. Tearing up downtown with the high beams, no need for rearview when they can't catch you. I never look back, never look, look like I want to, oh so innocent, kissing your tattoos, we like cinema. No need for rearview when they can't catch you."}], 'model': 'gpt-4o-mini', 'max_tokens': 200, 'temperature': 0.1}}
2025-09-26 15:04:15,846 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-26 15:04:15,846 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:04:15,847 - DEBUG - send_request_headers.complete
2025-09-26 15:04:15,847 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:04:15,847 - DEBUG - send_request_body.complete
2025-09-26 15:04:15,847 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:04:19,359 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:04:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'2109'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2352'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'198608'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'417ms'), (b'x-request-id', b'req_2a63d56bcf044943b5cf20bbc1ec246f'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98529f6f3e2e8d5e-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:04:19,359 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 15:04:19,359 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:04:19,363 - DEBUG - receive_response_body.complete
2025-09-26 15:04:19,363 - DEBUG - response_closed.started
2025-09-26 15:04:19,363 - DEBUG - response_closed.complete
2025-09-26 15:04:19,363 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:04:19 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '2109', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2352', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '198608', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '417ms', 'x-request-id': 'req_2a63d56bcf044943b5cf20bbc1ec246f', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98529f6f3e2e8d5e-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:04:19,364 - DEBUG - request_id: req_2a63d56bcf044943b5cf20bbc1ec246f
