2025-09-26 15:12:21,078 - INFO - Логирование настроено. Файл лога: log\session_20250926_151221.log
2025-09-26 15:12:21,079 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\engine-on-the-spot.mp3
2025-09-26 15:12:21,079 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 2, 'overlap': 0.25, 'jobs': 4}
2025-09-26 15:12:21,079 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла: examples\engine-on-the-spot.mp3
2025-09-26 15:12:21,079 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 15:12:23,077 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 15:12:23,077 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\engine-on-the-spot.mp3
2025-09-26 15:12:23,634 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 15:12:23,637 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\engine-on-the-spot.mp3
2025-09-26 15:12:24,667 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	RESUME(arg=0, lineno=1137)
           4	LOAD_FAST(arg=0, lineno=1140)
           6	LOAD_CONST(arg=1, lineno=1140)
           8	BINARY_SUBSCR(arg=None, lineno=1140)
          12	STORE_FAST(arg=3, lineno=1140)
          14	LOAD_FAST(arg=1, lineno=1141)
          16	UNARY_NEGATIVE(arg=None, lineno=1141)
          18	LOAD_FAST(arg=3, lineno=1141)
          20	SWAP(arg=2, lineno=1141)
          22	COPY(arg=2, lineno=1141)
          24	COMPARE_OP(arg=58, lineno=1141)
          28	POP_JUMP_IF_FALSE(arg=6, lineno=1141)
          32	LOAD_FAST(arg=1, lineno=1141)
          34	COMPARE_OP(arg=58, lineno=1141)
          38	POP_JUMP_IF_FALSE(arg=5, lineno=1141)
          42	JUMP_FORWARD(arg=2, lineno=1141)
>         44	POP_TOP(arg=None, lineno=1141)
          46	JUMP_FORWARD(arg=2, lineno=1141)
>         48	LOAD_CONST(arg=1, lineno=1142)
          50	STORE_FAST(arg=3, lineno=1142)
>         52	LOAD_FAST(arg=0, lineno=1144)
          54	LOAD_CONST(arg=2, lineno=1144)
          56	BINARY_SUBSCR(arg=None, lineno=1144)
          60	STORE_FAST(arg=4, lineno=1144)
          62	LOAD_FAST(arg=1, lineno=1145)
          64	UNARY_NEGATIVE(arg=None, lineno=1145)
          66	LOAD_FAST(arg=4, lineno=1145)
          68	SWAP(arg=2, lineno=1145)
          70	COPY(arg=2, lineno=1145)
          72	COMPARE_OP(arg=58, lineno=1145)
          76	POP_JUMP_IF_FALSE(arg=6, lineno=1145)
          80	LOAD_FAST(arg=1, lineno=1145)
          82	COMPARE_OP(arg=58, lineno=1145)
          86	POP_JUMP_IF_FALSE(arg=5, lineno=1145)
          90	JUMP_FORWARD(arg=2, lineno=1145)
>         92	POP_TOP(arg=None, lineno=1145)
          94	JUMP_FORWARD(arg=2, lineno=1145)
>         96	LOAD_CONST(arg=1, lineno=1146)
          98	STORE_FAST(arg=4, lineno=1146)
>        100	LOAD_FAST(arg=2, lineno=1148)
         102	TO_BOOL(arg=None, lineno=1148)
         110	POP_JUMP_IF_FALSE(arg=45, lineno=1148)
         114	LOAD_GLOBAL(arg=0, lineno=1149)
         124	LOAD_ATTR(arg=2, lineno=1149)
         144	PUSH_NULL(arg=None, lineno=1149)
         146	LOAD_FAST(arg=3, lineno=1149)
         148	CALL(arg=1, lineno=1149)
         156	LOAD_GLOBAL(arg=0, lineno=1149)
         166	LOAD_ATTR(arg=2, lineno=1149)
         186	PUSH_NULL(arg=None, lineno=1149)
         188	LOAD_FAST(arg=4, lineno=1149)
         190	CALL(arg=1, lineno=1149)
         198	COMPARE_OP(arg=103, lineno=1149)
         202	RETURN_VALUE(arg=None, lineno=1149)
>        204	LOAD_GLOBAL(arg=0, lineno=1151)
         214	LOAD_ATTR(arg=4, lineno=1151)
         234	PUSH_NULL(arg=None, lineno=1151)
         236	LOAD_FAST(arg=3, lineno=1151)
         238	CALL(arg=1, lineno=1151)
         246	LOAD_GLOBAL(arg=0, lineno=1151)
         256	LOAD_ATTR(arg=4, lineno=1151)
         276	PUSH_NULL(arg=None, lineno=1151)
         278	LOAD_FAST(arg=4, lineno=1151)
         280	CALL(arg=1, lineno=1151)
         288	COMPARE_OP(arg=103, lineno=1151)
         292	RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:12:24,668 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:12:24,668 - DEBUG - stack: []
2025-09-26 15:12:24,669 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:12:24,669 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-09-26 15:12:24,669 - DEBUG - stack []
2025-09-26 15:12:24,669 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1137)
2025-09-26 15:12:24,670 - DEBUG - stack []
2025-09-26 15:12:24,670 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1140)
2025-09-26 15:12:24,670 - DEBUG - stack []
2025-09-26 15:12:24,670 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1140)
2025-09-26 15:12:24,670 - DEBUG - stack ['$x4.0']
2025-09-26 15:12:24,671 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-09-26 15:12:24,671 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-09-26 15:12:24,671 - DEBUG - dispatch pc=12, inst=STORE_FAST(arg=3, lineno=1140)
2025-09-26 15:12:24,671 - DEBUG - stack ['$8binary_subscr.2']
2025-09-26 15:12:24,672 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:12:24,672 - DEBUG - stack []
2025-09-26 15:12:24,672 - DEBUG - dispatch pc=16, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-09-26 15:12:24,672 - DEBUG - stack ['$threshold14.3']
2025-09-26 15:12:24,672 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=1141)
2025-09-26 15:12:24,673 - DEBUG - stack ['$16unary_negative.4']
2025-09-26 15:12:24,673 - DEBUG - dispatch pc=20, inst=SWAP(arg=2, lineno=1141)
2025-09-26 15:12:24,673 - DEBUG - stack ['$16unary_negative.4', '$x018.5']
2025-09-26 15:12:24,673 - DEBUG - dispatch pc=22, inst=COPY(arg=2, lineno=1141)
2025-09-26 15:12:24,673 - DEBUG - stack ['$x018.5', '$16unary_negative.4']
2025-09-26 15:12:24,673 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:12:24,674 - DEBUG - stack ['$x018.5', '$16unary_negative.4', '$x018.5']
2025-09-26 15:12:24,674 - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1141)
2025-09-26 15:12:24,674 - DEBUG - stack ['$x018.5', '$24compare_op.6']
2025-09-26 15:12:24,674 - DEBUG - end state. edges=[Edge(pc=32, stack=('$x018.5',), blockstack=(), npush=0), Edge(pc=44, stack=('$x018.5',), blockstack=(), npush=0)]
2025-09-26 15:12:24,674 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=44 nstack_initial=1)])
2025-09-26 15:12:24,674 - DEBUG - stack: ['$phi32.0']
2025-09-26 15:12:24,675 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-09-26 15:12:24,675 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:12:24,675 - DEBUG - stack ['$phi32.0']
2025-09-26 15:12:24,675 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:12:24,675 - DEBUG - stack ['$phi32.0', '$threshold32.1']
2025-09-26 15:12:24,675 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1141)
2025-09-26 15:12:24,675 - DEBUG - stack ['$34compare_op.2']
2025-09-26 15:12:24,676 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:12:24,676 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=1), State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:12:24,676 - DEBUG - stack: ['$phi44.0']
2025-09-26 15:12:24,676 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=1)
2025-09-26 15:12:24,676 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=1141)
2025-09-26 15:12:24,676 - DEBUG - stack ['$phi44.0']
2025-09-26 15:12:24,676 - DEBUG - dispatch pc=46, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:12:24,676 - DEBUG - stack []
2025-09-26 15:12:24,676 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:12:24,677 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:12:24,677 - DEBUG - stack: []
2025-09-26 15:12:24,677 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-09-26 15:12:24,677 - DEBUG - dispatch pc=42, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:12:24,677 - DEBUG - stack []
2025-09-26 15:12:24,677 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0)]
2025-09-26 15:12:24,677 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2025-09-26 15:12:24,677 - DEBUG - stack: []
2025-09-26 15:12:24,678 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-09-26 15:12:24,678 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1144)
2025-09-26 15:12:24,678 - DEBUG - stack []
2025-09-26 15:12:24,678 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=1144)
2025-09-26 15:12:24,678 - DEBUG - stack ['$x52.0']
2025-09-26 15:12:24,678 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-09-26 15:12:24,678 - DEBUG - stack ['$x52.0', '$const54.1.2']
2025-09-26 15:12:24,678 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=4, lineno=1144)
2025-09-26 15:12:24,678 - DEBUG - stack ['$56binary_subscr.2']
2025-09-26 15:12:24,678 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:12:24,679 - DEBUG - stack []
2025-09-26 15:12:24,679 - DEBUG - dispatch pc=64, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-09-26 15:12:24,679 - DEBUG - stack ['$threshold62.3']
2025-09-26 15:12:24,679 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=4, lineno=1145)
2025-09-26 15:12:24,679 - DEBUG - stack ['$64unary_negative.4']
2025-09-26 15:12:24,679 - DEBUG - dispatch pc=68, inst=SWAP(arg=2, lineno=1145)
2025-09-26 15:12:24,679 - DEBUG - stack ['$64unary_negative.4', '$x166.5']
2025-09-26 15:12:24,679 - DEBUG - dispatch pc=70, inst=COPY(arg=2, lineno=1145)
2025-09-26 15:12:24,679 - DEBUG - stack ['$x166.5', '$64unary_negative.4']
2025-09-26 15:12:24,679 - DEBUG - dispatch pc=72, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:12:24,680 - DEBUG - stack ['$x166.5', '$64unary_negative.4', '$x166.5']
2025-09-26 15:12:24,680 - DEBUG - dispatch pc=76, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1145)
2025-09-26 15:12:24,680 - DEBUG - stack ['$x166.5', '$72compare_op.6']
2025-09-26 15:12:24,680 - DEBUG - end state. edges=[Edge(pc=80, stack=('$x166.5',), blockstack=(), npush=0), Edge(pc=92, stack=('$x166.5',), blockstack=(), npush=0)]
2025-09-26 15:12:24,680 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:12:24,680 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:12:24,680 - DEBUG - stack: []
2025-09-26 15:12:24,680 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-09-26 15:12:24,680 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1142)
2025-09-26 15:12:24,681 - DEBUG - stack []
2025-09-26 15:12:24,681 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=3, lineno=1142)
2025-09-26 15:12:24,681 - DEBUG - stack ['$const48.0.1']
2025-09-26 15:12:24,681 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:12:24,681 - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:12:24,681 - DEBUG - stack: ['$phi80.0']
2025-09-26 15:12:24,681 - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-09-26 15:12:24,681 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:12:24,681 - DEBUG - stack ['$phi80.0']
2025-09-26 15:12:24,681 - DEBUG - dispatch pc=82, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:12:24,682 - DEBUG - stack ['$phi80.0', '$threshold80.1']
2025-09-26 15:12:24,682 - DEBUG - dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1145)
2025-09-26 15:12:24,682 - DEBUG - stack ['$82compare_op.2']
2025-09-26 15:12:24,682 - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:12:24,682 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:12:24,682 - DEBUG - stack: ['$phi92.0']
2025-09-26 15:12:24,682 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=1)
2025-09-26 15:12:24,682 - DEBUG - dispatch pc=92, inst=POP_TOP(arg=None, lineno=1145)
2025-09-26 15:12:24,683 - DEBUG - stack ['$phi92.0']
2025-09-26 15:12:24,683 - DEBUG - dispatch pc=94, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:12:24,683 - DEBUG - stack []
2025-09-26 15:12:24,683 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:12:24,683 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:12:24,683 - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:12:24,683 - DEBUG - stack: []
2025-09-26 15:12:24,683 - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-09-26 15:12:24,684 - DEBUG - dispatch pc=90, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:12:24,684 - DEBUG - stack []
2025-09-26 15:12:24,684 - DEBUG - end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-09-26 15:12:24,684 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-09-26 15:12:24,684 - DEBUG - stack: []
2025-09-26 15:12:24,684 - DEBUG - state.pc_initial: State(pc_initial=100 nstack_initial=0)
2025-09-26 15:12:24,684 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=2, lineno=1148)
2025-09-26 15:12:24,684 - DEBUG - stack []
2025-09-26 15:12:24,685 - DEBUG - dispatch pc=102, inst=TO_BOOL(arg=None, lineno=1148)
2025-09-26 15:12:24,685 - DEBUG - stack ['$zero_pos100.0']
2025-09-26 15:12:24,685 - DEBUG - dispatch pc=110, inst=POP_JUMP_IF_FALSE(arg=45, lineno=1148)
2025-09-26 15:12:24,685 - DEBUG - stack ['$102to_bool.1']
2025-09-26 15:12:24,685 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=204, stack=(), blockstack=(), npush=0)]
2025-09-26 15:12:24,685 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:12:24,686 - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:12:24,686 - DEBUG - stack: []
2025-09-26 15:12:24,686 - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2025-09-26 15:12:24,686 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=1, lineno=1146)
2025-09-26 15:12:24,686 - DEBUG - stack []
2025-09-26 15:12:24,686 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=4, lineno=1146)
2025-09-26 15:12:24,686 - DEBUG - stack ['$const96.0.1']
2025-09-26 15:12:24,686 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:12:24,687 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:12:24,687 - DEBUG - stack: []
2025-09-26 15:12:24,687 - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2025-09-26 15:12:24,687 - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:12:24,687 - DEBUG - stack []
2025-09-26 15:12:24,687 - DEBUG - dispatch pc=124, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:12:24,687 - DEBUG - stack ['$114load_global.0']
2025-09-26 15:12:24,687 - DEBUG - dispatch pc=144, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:12:24,687 - DEBUG - stack ['$124load_attr.1']
2025-09-26 15:12:24,688 - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=3, lineno=1149)
2025-09-26 15:12:24,688 - DEBUG - stack ['$124load_attr.1', '$null$144.2']
2025-09-26 15:12:24,688 - DEBUG - dispatch pc=148, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:12:24,688 - DEBUG - stack ['$124load_attr.1', '$null$144.2', '$x0146.3']
2025-09-26 15:12:24,688 - DEBUG - dispatch pc=156, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:12:24,688 - DEBUG - stack ['$148call.4']
2025-09-26 15:12:24,688 - DEBUG - dispatch pc=166, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:12:24,688 - DEBUG - stack ['$148call.4', '$156load_global.5']
2025-09-26 15:12:24,689 - DEBUG - dispatch pc=186, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:12:24,689 - DEBUG - stack ['$148call.4', '$166load_attr.6']
2025-09-26 15:12:24,689 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=4, lineno=1149)
2025-09-26 15:12:24,689 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7']
2025-09-26 15:12:24,689 - DEBUG - dispatch pc=190, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:12:24,689 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7', '$x1188.8']
2025-09-26 15:12:24,689 - DEBUG - dispatch pc=198, inst=COMPARE_OP(arg=103, lineno=1149)
2025-09-26 15:12:24,689 - DEBUG - stack ['$148call.4', '$190call.9']
2025-09-26 15:12:24,690 - DEBUG - dispatch pc=202, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-09-26 15:12:24,690 - DEBUG - stack ['$198compare_op.10']
2025-09-26 15:12:24,690 - DEBUG - end state. edges=[]
2025-09-26 15:12:24,690 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:12:24,690 - DEBUG - stack: []
2025-09-26 15:12:24,690 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=0)
2025-09-26 15:12:24,690 - DEBUG - dispatch pc=204, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:12:24,690 - DEBUG - stack []
2025-09-26 15:12:24,690 - DEBUG - dispatch pc=214, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:12:24,691 - DEBUG - stack ['$204load_global.0']
2025-09-26 15:12:24,691 - DEBUG - dispatch pc=234, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:12:24,691 - DEBUG - stack ['$214load_attr.1']
2025-09-26 15:12:24,691 - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=3, lineno=1151)
2025-09-26 15:12:24,691 - DEBUG - stack ['$214load_attr.1', '$null$234.2']
2025-09-26 15:12:24,691 - DEBUG - dispatch pc=238, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:12:24,691 - DEBUG - stack ['$214load_attr.1', '$null$234.2', '$x0236.3']
2025-09-26 15:12:24,691 - DEBUG - dispatch pc=246, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:12:24,691 - DEBUG - stack ['$238call.4']
2025-09-26 15:12:24,691 - DEBUG - dispatch pc=256, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:12:24,692 - DEBUG - stack ['$238call.4', '$246load_global.5']
2025-09-26 15:12:24,692 - DEBUG - dispatch pc=276, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:12:24,692 - DEBUG - stack ['$238call.4', '$256load_attr.6']
2025-09-26 15:12:24,692 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=4, lineno=1151)
2025-09-26 15:12:24,692 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7']
2025-09-26 15:12:24,692 - DEBUG - dispatch pc=280, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:12:24,692 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7', '$x1278.8']
2025-09-26 15:12:24,692 - DEBUG - dispatch pc=288, inst=COMPARE_OP(arg=103, lineno=1151)
2025-09-26 15:12:24,693 - DEBUG - stack ['$238call.4', '$280call.9']
2025-09-26 15:12:24,693 - DEBUG - dispatch pc=292, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:12:24,693 - DEBUG - stack ['$288compare_op.10']
2025-09-26 15:12:24,693 - DEBUG - end state. edges=[]
2025-09-26 15:12:24,693 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:12:24,693 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:12:24,693 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=1): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=204 nstack_initial=0): set()})
2025-09-26 15:12:24,694 - DEBUG - defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi44.0': State(pc_initial=0 nstack_initial=0),
 '$phi80.0': State(pc_initial=52 nstack_initial=0),
 '$phi92.0': State(pc_initial=52 nstack_initial=0)}
2025-09-26 15:12:24,694 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:12:24,694 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:12:24,694 - DEBUG - keep phismap: {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
 '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}}
2025-09-26 15:12:24,695 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$x018.5'},
             State(pc_initial=52 nstack_initial=0): {'$phi80.0': '$x166.5'}})
2025-09-26 15:12:24,695 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:12:24,695 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'value': '$8binary_subscr.2'}), (14, {'res': '$threshold14.3'}), (16, {'value': '$threshold14.3', 'res': '$16unary_negative.4'}), (18, {'res': '$x018.5'}), (24, {'lhs': '$16unary_negative.4', 'rhs': '$x018.5', 'res': '$24compare_op.6'}), (28, {'pred': '$24compare_op.6'})), outgoing_phis={'$phi32.0': '$x018.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$x018.5',), 44: ('$x018.5',)})
2025-09-26 15:12:24,695 - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'res': '$threshold32.1'}), (34, {'lhs': '$phi32.0', 'rhs': '$threshold32.1', 'res': '$34compare_op.2'}), (38, {'pred': '$34compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 52: ()})
2025-09-26 15:12:24,696 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ()})
2025-09-26 15:12:24,696 - DEBUG - block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((46, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:12:24,696 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$const48.0.1'}), (50, {'value': '$const48.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:12:24,696 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$x52.0'}), (54, {'res': '$const54.1.2'}), (56, {'index': '$const54.1.2', 'target': '$x52.0', 'res': '$56binary_subscr.2'}), (60, {'value': '$56binary_subscr.2'}), (62, {'res': '$threshold62.3'}), (64, {'value': '$threshold62.3', 'res': '$64unary_negative.4'}), (66, {'res': '$x166.5'}), (72, {'lhs': '$64unary_negative.4', 'rhs': '$x166.5', 'res': '$72compare_op.6'}), (76, {'pred': '$72compare_op.6'})), outgoing_phis={'$phi80.0': '$x166.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$x166.5',), 92: ('$x166.5',)})
2025-09-26 15:12:24,696 - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$threshold80.1'}), (82, {'lhs': '$phi80.0', 'rhs': '$threshold80.1', 'res': '$82compare_op.2'}), (86, {'pred': '$82compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 100: ()})
2025-09-26 15:12:24,697 - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
2025-09-26 15:12:24,697 - DEBUG - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((94, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:12:24,697 - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$const96.0.1'}), (98, {'value': '$const96.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:12:24,697 - DEBUG - block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$zero_pos100.0'}), (102, {'val': '$zero_pos100.0', 'res': '$102to_bool.1'}), (110, {'pred': '$102to_bool.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 204: ()})
2025-09-26 15:12:24,697 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'idx': 0, 'res': '$114load_global.0'}), (124, {'item': '$114load_global.0', 'res': '$124load_attr.1'}), (144, {}), (146, {'res': '$x0146.3'}), (148, {'func': '$124load_attr.1', 'args': ['$x0146.3'], 'kw_names': None, 'res': '$148call.4'}), (156, {'idx': 0, 'res': '$156load_global.5'}), (166, {'item': '$156load_global.5', 'res': '$166load_attr.6'}), (186, {}), (188, {'res': '$x1188.8'}), (190, {'func': '$166load_attr.6', 'args': ['$x1188.8'], 'kw_names': None, 'res': '$190call.9'}), (198, {'lhs': '$148call.4', 'rhs': '$190call.9', 'res': '$198compare_op.10'}), (202, {'retval': '$198compare_op.10', 'castval': '$202return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:12:24,697 - DEBUG - block_infos State(pc_initial=204 nstack_initial=0):
AdaptBlockInfo(insts=((204, {'idx': 0, 'res': '$204load_global.0'}), (214, {'item': '$204load_global.0', 'res': '$214load_attr.1'}), (234, {}), (236, {'res': '$x0236.3'}), (238, {'func': '$214load_attr.1', 'args': ['$x0236.3'], 'kw_names': None, 'res': '$238call.4'}), (246, {'idx': 0, 'res': '$246load_global.5'}), (256, {'item': '$246load_global.5', 'res': '$256load_attr.6'}), (276, {}), (278, {'res': '$x1278.8'}), (280, {'func': '$256load_attr.6', 'args': ['$x1278.8'], 'kw_names': None, 'res': '$280call.9'}), (288, {'lhs': '$238call.4', 'rhs': '$280call.9', 'res': '$288compare_op.10'}), (292, {'retval': '$288compare_op.10', 'castval': '$292return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:12:24,699 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    x0 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$const6.1.1', 'x', 'x0']
    $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$16unary_negative.4', 'threshold']
    $24compare_op.6 = $16unary_negative.4 <= x0 ['$16unary_negative.4', '$24compare_op.6', 'x0']
    $bool28 = global(bool: <class 'bool'>)   ['$bool28']
    $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.6', '$28pred', '$bool28']
    $phi32.0 = x0                            ['$phi32.0', 'x0']
    branch $28pred, 32, 44                   ['$28pred']
label 32:
    $34compare_op.2 = $phi32.0 <= threshold  ['$34compare_op.2', '$phi32.0', 'threshold']
    $bool38 = global(bool: <class 'bool'>)   ['$bool38']
    $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.2', '$38pred', '$bool38']
    branch $38pred, 42, 52                   ['$38pred']
label 42:
    jump 48                                  []
label 44:
    jump 52                                  []
label 48:
    x0 = const(int, 0)                       ['x0']
    jump 52                                  []
label 52:
    $const54.1.2 = const(int, -1)            ['$const54.1.2']
    x1 = getitem(value=x, index=$const54.1.2, fn=<built-in function getitem>) ['$const54.1.2', 'x', 'x1']
    $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$64unary_negative.4', 'threshold']
    $72compare_op.6 = $64unary_negative.4 <= x1 ['$64unary_negative.4', '$72compare_op.6', 'x1']
    $bool76 = global(bool: <class 'bool'>)   ['$bool76']
    $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$72compare_op.6', '$76pred', '$bool76']
    $phi80.0 = x1                            ['$phi80.0', 'x1']
    branch $76pred, 80, 92                   ['$76pred']
label 80:
    $82compare_op.2 = $phi80.0 <= threshold  ['$82compare_op.2', '$phi80.0', 'threshold']
    $bool86 = global(bool: <class 'bool'>)   ['$bool86']
    $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$82compare_op.2', '$86pred', '$bool86']
    branch $86pred, 90, 100                  ['$86pred']
label 90:
    jump 96                                  []
label 92:
    jump 100                                 []
label 96:
    x1 = const(int, 0)                       ['x1']
    jump 100                                 []
label 100:
    $bool110 = global(bool: <class 'bool'>)  ['$bool110']
    $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$110pred', '$bool110', 'zero_pos']
    branch $110pred, 114, 204                ['$110pred']
label 114:
    $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$114load_global.0']
    $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit) ['$114load_global.0', '$124load_attr.1']
    $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$124load_attr.1', '$148call.4', 'x0']
    $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$156load_global.5']
    $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit) ['$156load_global.5', '$166load_attr.6']
    $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.6', '$190call.9', 'x1']
    $198compare_op.10 = $148call.4 != $190call.9 ['$148call.4', '$190call.9', '$198compare_op.10']
    $202return_value.11 = cast(value=$198compare_op.10) ['$198compare_op.10', '$202return_value.11']
    return $202return_value.11               ['$202return_value.11']
label 204:
    $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$204load_global.0']
    $214load_attr.1 = getattr(value=$204load_global.0, attr=sign) ['$204load_global.0', '$214load_attr.1']
    $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.1', '$238call.4', 'x0']
    $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$246load_global.5']
    $256load_attr.6 = getattr(value=$246load_global.5, attr=sign) ['$246load_global.5', '$256load_attr.6']
    $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$256load_attr.6', '$280call.9', 'x1']
    $288compare_op.10 = $238call.4 != $280call.9 ['$238call.4', '$280call.9', '$288compare_op.10']
    $292return_value.11 = cast(value=$288compare_op.10) ['$288compare_op.10', '$292return_value.11']
    return $292return_value.11               ['$292return_value.11']

2025-09-26 15:12:24,869 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1154)
           2	RESUME(arg=0, lineno=1154)
           4	LOAD_GLOBAL(arg=1, lineno=1170)
          14	LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
          16	LOAD_FAST(arg=2, lineno=1170)
          18	CALL(arg=3, lineno=1170)
          26	LOAD_FAST(arg=3, lineno=1170)
          28	LOAD_CONST(arg=1, lineno=1170)
          30	LOAD_CONST(arg=1, lineno=1170)
          32	STORE_SLICE(arg=None, lineno=1170)
          34	RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:12:24,870 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:12:24,870 - DEBUG - stack: []
2025-09-26 15:12:24,870 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:12:24,870 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1154)
2025-09-26 15:12:24,870 - DEBUG - stack []
2025-09-26 15:12:24,870 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1154)
2025-09-26 15:12:24,871 - DEBUG - stack []
2025-09-26 15:12:24,871 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1170)
2025-09-26 15:12:24,871 - DEBUG - stack []
2025-09-26 15:12:24,871 - DEBUG - dispatch pc=14, inst=LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
2025-09-26 15:12:24,871 - DEBUG - stack ['$4load_global.0', '$null$4.1']
2025-09-26 15:12:24,871 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=1170)
2025-09-26 15:12:24,872 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3']
2025-09-26 15:12:24,872 - DEBUG - dispatch pc=18, inst=CALL(arg=3, lineno=1170)
2025-09-26 15:12:24,872 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3', '$zero_pos16.4']
2025-09-26 15:12:24,872 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=3, lineno=1170)
2025-09-26 15:12:24,872 - DEBUG - stack ['$18call.5']
2025-09-26 15:12:24,872 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:12:24,872 - DEBUG - stack ['$18call.5', '$y26.6']
2025-09-26 15:12:24,873 - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:12:24,873 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1']
2025-09-26 15:12:24,873 - DEBUG - dispatch pc=32, inst=STORE_SLICE(arg=None, lineno=1170)
2025-09-26 15:12:24,873 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1', '$const30.8.1']
2025-09-26 15:12:24,873 - DEBUG - dispatch pc=34, inst=RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:12:24,873 - DEBUG - stack []
2025-09-26 15:12:24,873 - DEBUG - end state. edges=[]
2025-09-26 15:12:24,873 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:12:24,873 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-09-26 15:12:24,874 - DEBUG - defmap: {}
2025-09-26 15:12:24,874 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:12:24,874 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:12:24,874 - DEBUG - keep phismap: {}
2025-09-26 15:12:24,874 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-09-26 15:12:24,874 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:12:24,874 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res1': '$x14.2', 'res2': '$threshold14.3'}), (16, {'res': '$zero_pos16.4'}), (18, {'func': '$4load_global.0', 'args': ['$x14.2', '$threshold14.3', '$zero_pos16.4'], 'kw_names': None, 'res': '$18call.5'}), (26, {'res': '$y26.6'}), (28, {'res': '$const28.7.1'}), (30, {'res': '$const30.8.1'}), (32, {'start': '$const28.7.1', 'end': '$const30.8.1', 'container': '$y26.6', 'value': '$18call.5', 'res': '$32store_slice.10', 'slicevar': '$32store_slice.9'}), (34, {'retval': '$const34.11', 'castval': '$34return_const.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:12:24,875 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002D28F212120>) ['$4load_global.0']
    $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const28.7.1 = const(NoneType, None)     ['$const28.7.1']
    $const30.8.1 = const(NoneType, None)     ['$const30.8.1']
    $32store_slice.9 = global(slice: <class 'slice'>) ['$32store_slice.9']
    $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$32store_slice.10', '$32store_slice.9', '$const28.7.1', '$const30.8.1']
    y[$32store_slice.10] = $18call.5         ['$18call.5', '$32store_slice.10', 'y']
    $const34.11 = const(NoneType, None)      ['$const34.11']
    $34return_const.12 = cast(value=$const34.11) ['$34return_const.12', '$const34.11']
    return $34return_const.12                ['$34return_const.12']

2025-09-26 15:12:24,880 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:12:24,880 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D2900B0830>
2025-09-26 15:12:24,881 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:12:24,881 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:12:24,881 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:12:24,881 - DEBUG - on stmt: y = arg(3, name=y)
2025-09-26 15:12:24,881 - DEBUG - on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002D28F212120>)
2025-09-26 15:12:24,882 - DEBUG - on stmt: $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:24,882 - DEBUG - on stmt: $const28.7.1 = const(NoneType, None)
2025-09-26 15:12:24,882 - DEBUG - on stmt: $const30.8.1 = const(NoneType, None)
2025-09-26 15:12:24,882 - DEBUG - on stmt: $32store_slice.9 = global(slice: <class 'slice'>)
2025-09-26 15:12:24,882 - DEBUG - on stmt: $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:24,883 - DEBUG - on stmt: y[slice(None, None, None)] = $18call.5
2025-09-26 15:12:24,883 - DEBUG - on stmt: $const34.11 = const(NoneType, None)
2025-09-26 15:12:24,883 - DEBUG - on stmt: $34return_const.12 = cast(value=$const34.11)
2025-09-26 15:12:24,883 - DEBUG - on stmt: return $34return_const.12
2025-09-26 15:12:24,883 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.5': [(<numba.core.ir.Assign object at 0x000002D2900A0AD0>,
                            0)],
             '$32store_slice.10': [(<numba.core.ir.Assign object at 0x000002D2900A14F0>,
                                    0)],
             '$32store_slice.9': [(<numba.core.ir.Assign object at 0x000002D2900A13D0>,
                                   0)],
             '$34return_const.12': [(<numba.core.ir.Assign object at 0x000002D2900A16D0>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000002D2900A0DD0>,
                                  0)],
             '$const28.7.1': [(<numba.core.ir.Assign object at 0x000002D2900A0950>,
                               0)],
             '$const30.8.1': [(<numba.core.ir.Assign object at 0x000002D2900A1310>,
                               0)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x000002D2900A15B0>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002D2900A1010>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002D2900A1070>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000002D2900A0D70>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002D2900A0F50>,
                           0)]})
2025-09-26 15:12:24,884 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002D2900B0980>
2025-09-26 15:12:25,015 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=3, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=3, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	LOAD_CONST(arg=1, lineno=3)
          92	CALL_KW(arg=2, lineno=3)
          94	STORE_FAST(arg=4, lineno=3)
          96	LOAD_CONST(arg=2, lineno=4)
          98	LOAD_FAST(arg=4, lineno=4)
         100	LOAD_CONST(arg=0, lineno=4)
         102	LOAD_CONST(arg=3, lineno=4)
         104	STORE_SLICE(arg=None, lineno=4)
         106	LOAD_CONST(arg=2, lineno=5)
         108	LOAD_FAST(arg=4, lineno=5)
         110	LOAD_CONST(arg=2, lineno=5)
         112	LOAD_CONST(arg=0, lineno=5)
         114	STORE_SLICE(arg=None, lineno=5)
         116	LOAD_GLOBAL(arg=9, lineno=6)
         126	LOAD_GLOBAL(arg=11, lineno=6)
         136	LOAD_CONST(arg=2, lineno=6)
         138	LOAD_CONST(arg=4, lineno=6)
         140	CALL(arg=2, lineno=6)
         148	UNARY_NEGATIVE(arg=None, lineno=6)
         150	LOAD_FAST(arg=3, lineno=6)
         152	LOAD_CONST(arg=2, lineno=6)
         154	BINARY_SUBSCR(arg=None, lineno=6)
         158	LOAD_GLOBAL(arg=13, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	LOAD_CONST(arg=2, lineno=6)
         172	CALL(arg=2, lineno=6)
         180	BINARY_OP(arg=10, lineno=6)
         184	CALL(arg=2, lineno=6)
         192	GET_ITER(arg=None, lineno=6)
>        194	FOR_ITER(arg=5, lineno=6)
         198	STORE_FAST(arg=5, lineno=6)
         200	LOAD_CONST(arg=2, lineno=7)
         202	STORE_FAST(arg=6, lineno=7)
         204	JUMP_BACKWARD(arg=7, lineno=7)
>        208	END_FOR(arg=None, lineno=6)
         210	POP_TOP(arg=None, lineno=6)
         212	LOAD_FAST(arg=4, lineno=8)
         214	RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:12:25,015 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:12:25,016 - DEBUG - stack: []
2025-09-26 15:12:25,016 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:12:25,016 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-09-26 15:12:25,016 - DEBUG - stack []
2025-09-26 15:12:25,016 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2025-09-26 15:12:25,016 - DEBUG - stack []
2025-09-26 15:12:25,016 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2025-09-26 15:12:25,016 - DEBUG - stack []
2025-09-26 15:12:25,016 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2025-09-26 15:12:25,017 - DEBUG - stack ['$x4.0']
2025-09-26 15:12:25,017 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=3, lineno=2)
2025-09-26 15:12:25,017 - DEBUG - stack ['$6load_attr.1']
2025-09-26 15:12:25,017 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:12:25,017 - DEBUG - stack []
2025-09-26 15:12:25,017 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2025-09-26 15:12:25,017 - DEBUG - stack ['$28load_global.2']
2025-09-26 15:12:25,017 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=3, lineno=3)
2025-09-26 15:12:25,017 - DEBUG - stack ['$38load_attr.3', '$null$38.4']
2025-09-26 15:12:25,018 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:12:25,018 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5']
2025-09-26 15:12:25,018 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2025-09-26 15:12:25,018 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$60load_global.6']
2025-09-26 15:12:25,018 - DEBUG - dispatch pc=90, inst=LOAD_CONST(arg=1, lineno=3)
2025-09-26 15:12:25,018 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7']
2025-09-26 15:12:25,018 - DEBUG - dispatch pc=92, inst=CALL_KW(arg=2, lineno=3)
2025-09-26 15:12:25,018 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7', '$const90.8.1']
2025-09-26 15:12:25,018 - DEBUG - dispatch pc=94, inst=STORE_FAST(arg=4, lineno=3)
2025-09-26 15:12:25,019 - DEBUG - stack ['$92call_kw.9']
2025-09-26 15:12:25,019 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=2, lineno=4)
2025-09-26 15:12:25,019 - DEBUG - stack []
2025-09-26 15:12:25,019 - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=4)
2025-09-26 15:12:25,019 - DEBUG - stack ['$const96.10.2']
2025-09-26 15:12:25,019 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=0, lineno=4)
2025-09-26 15:12:25,019 - DEBUG - stack ['$const96.10.2', '$out098.11']
2025-09-26 15:12:25,019 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=3, lineno=4)
2025-09-26 15:12:25,019 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0']
2025-09-26 15:12:25,020 - DEBUG - dispatch pc=104, inst=STORE_SLICE(arg=None, lineno=4)
2025-09-26 15:12:25,020 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0', '$const102.13.3']
2025-09-26 15:12:25,020 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:12:25,020 - DEBUG - stack []
2025-09-26 15:12:25,020 - DEBUG - dispatch pc=108, inst=LOAD_FAST(arg=4, lineno=5)
2025-09-26 15:12:25,020 - DEBUG - stack ['$const106.16.2']
2025-09-26 15:12:25,020 - DEBUG - dispatch pc=110, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:12:25,020 - DEBUG - stack ['$const106.16.2', '$out0108.17']
2025-09-26 15:12:25,020 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=0, lineno=5)
2025-09-26 15:12:25,021 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2']
2025-09-26 15:12:25,021 - DEBUG - dispatch pc=114, inst=STORE_SLICE(arg=None, lineno=5)
2025-09-26 15:12:25,021 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2', '$const112.19.0']
2025-09-26 15:12:25,021 - DEBUG - dispatch pc=116, inst=LOAD_GLOBAL(arg=9, lineno=6)
2025-09-26 15:12:25,021 - DEBUG - stack []
2025-09-26 15:12:25,021 - DEBUG - dispatch pc=126, inst=LOAD_GLOBAL(arg=11, lineno=6)
2025-09-26 15:12:25,021 - DEBUG - stack ['$116load_global.22', '$null$116.23']
2025-09-26 15:12:25,022 - DEBUG - dispatch pc=136, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:12:25,022 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25']
2025-09-26 15:12:25,022 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=4, lineno=6)
2025-09-26 15:12:25,022 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2']
2025-09-26 15:12:25,022 - DEBUG - dispatch pc=140, inst=CALL(arg=2, lineno=6)
2025-09-26 15:12:25,022 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2', '$const138.27.4']
2025-09-26 15:12:25,022 - DEBUG - dispatch pc=148, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-09-26 15:12:25,023 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$140call.28']
2025-09-26 15:12:25,023 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=3, lineno=6)
2025-09-26 15:12:25,023 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29']
2025-09-26 15:12:25,023 - DEBUG - dispatch pc=152, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:12:25,023 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30']
2025-09-26 15:12:25,023 - DEBUG - dispatch pc=154, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-09-26 15:12:25,023 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30', '$const152.31.2']
2025-09-26 15:12:25,023 - DEBUG - dispatch pc=158, inst=LOAD_GLOBAL(arg=13, lineno=6)
2025-09-26 15:12:25,023 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32']
2025-09-26 15:12:25,024 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:12:25,024 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34']
2025-09-26 15:12:25,024 - DEBUG - dispatch pc=170, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:12:25,024 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2']
2025-09-26 15:12:25,024 - DEBUG - dispatch pc=172, inst=CALL(arg=2, lineno=6)
2025-09-26 15:12:25,024 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2', '$const170.36.2']
2025-09-26 15:12:25,024 - DEBUG - dispatch pc=180, inst=BINARY_OP(arg=10, lineno=6)
2025-09-26 15:12:25,025 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$172call.37']
2025-09-26 15:12:25,025 - DEBUG - dispatch pc=184, inst=CALL(arg=2, lineno=6)
2025-09-26 15:12:25,025 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$binop_sub180.38']
2025-09-26 15:12:25,025 - DEBUG - dispatch pc=192, inst=GET_ITER(arg=None, lineno=6)
2025-09-26 15:12:25,025 - DEBUG - stack ['$184call.39']
2025-09-26 15:12:25,025 - DEBUG - end state. edges=[Edge(pc=194, stack=('$192get_iter.40',), blockstack=(), npush=0)]
2025-09-26 15:12:25,025 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:12:25,026 - DEBUG - stack: ['$phi194.0']
2025-09-26 15:12:25,026 - DEBUG - state.pc_initial: State(pc_initial=194 nstack_initial=1)
2025-09-26 15:12:25,026 - DEBUG - dispatch pc=194, inst=FOR_ITER(arg=5, lineno=6)
2025-09-26 15:12:25,026 - DEBUG - stack ['$phi194.0']
2025-09-26 15:12:25,026 - DEBUG - end state. edges=[Edge(pc=208, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0), Edge(pc=198, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0)]
2025-09-26 15:12:25,026 - DEBUG - pending: deque([State(pc_initial=208 nstack_initial=2), State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:12:25,026 - DEBUG - stack: ['$phi208.0', '$phi208.1']
2025-09-26 15:12:25,027 - DEBUG - state.pc_initial: State(pc_initial=208 nstack_initial=2)
2025-09-26 15:12:25,027 - DEBUG - dispatch pc=208, inst=END_FOR(arg=None, lineno=6)
2025-09-26 15:12:25,027 - DEBUG - stack ['$phi208.0', '$phi208.1']
2025-09-26 15:12:25,027 - DEBUG - dispatch pc=210, inst=POP_TOP(arg=None, lineno=6)
2025-09-26 15:12:25,027 - DEBUG - stack ['$phi208.0']
2025-09-26 15:12:25,027 - DEBUG - dispatch pc=212, inst=LOAD_FAST(arg=4, lineno=8)
2025-09-26 15:12:25,027 - DEBUG - stack []
2025-09-26 15:12:25,027 - DEBUG - dispatch pc=214, inst=RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:12:25,027 - DEBUG - stack ['$out0212.2']
2025-09-26 15:12:25,027 - DEBUG - end state. edges=[]
2025-09-26 15:12:25,028 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:12:25,028 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2025-09-26 15:12:25,028 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2025-09-26 15:12:25,028 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=5, lineno=6)
2025-09-26 15:12:25,028 - DEBUG - stack ['$phi198.0', '$phi198.1']
2025-09-26 15:12:25,028 - DEBUG - dispatch pc=200, inst=LOAD_CONST(arg=2, lineno=7)
2025-09-26 15:12:25,028 - DEBUG - stack ['$phi198.0']
2025-09-26 15:12:25,028 - DEBUG - dispatch pc=202, inst=STORE_FAST(arg=6, lineno=7)
2025-09-26 15:12:25,028 - DEBUG - stack ['$phi198.0', '$const200.2.2']
2025-09-26 15:12:25,029 - DEBUG - dispatch pc=204, inst=JUMP_BACKWARD(arg=7, lineno=7)
2025-09-26 15:12:25,029 - DEBUG - stack ['$phi198.0']
2025-09-26 15:12:25,029 - DEBUG - end state. edges=[Edge(pc=194, stack=('$phi198.0',), blockstack=(), npush=0)]
2025-09-26 15:12:25,029 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:12:25,029 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:12:25,029 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=194 nstack_initial=1): {'$phi194.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=208 nstack_initial=2): set()})
2025-09-26 15:12:25,029 - DEBUG - defmap: {'$phi194.0': State(pc_initial=0 nstack_initial=0),
 '$phi198.1': State(pc_initial=194 nstack_initial=1),
 '$phi208.1': State(pc_initial=194 nstack_initial=1)}
2025-09-26 15:12:25,030 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi198.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:12:25,030 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:12:25,031 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:12:25,031 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:12:25,032 - DEBUG - keep phismap: {'$phi194.0': {('$192get_iter.40', State(pc_initial=0 nstack_initial=0))},
 '$phi198.1': {('$194for_iter.2', State(pc_initial=194 nstack_initial=1))}}
2025-09-26 15:12:25,032 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi194.0': '$192get_iter.40'},
             State(pc_initial=194 nstack_initial=1): {'$phi198.1': '$194for_iter.2'}})
2025-09-26 15:12:25,032 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:12:25,032 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.3'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (90, {'res': '$const90.8.1'}), (92, {'func': '$38load_attr.3', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': '$const90.8.1', 'res': '$92call_kw.9'}), (94, {'value': '$92call_kw.9'}), (96, {'res': '$const96.10.2'}), (98, {'res': '$out098.11'}), (100, {'res': '$const100.12.0'}), (102, {'res': '$const102.13.3'}), (104, {'start': '$const100.12.0', 'end': '$const102.13.3', 'container': '$out098.11', 'value': '$const96.10.2', 'res': '$104store_slice.15', 'slicevar': '$104store_slice.14'}), (106, {'res': '$const106.16.2'}), (108, {'res': '$out0108.17'}), (110, {'res': '$const110.18.2'}), (112, {'res': '$const112.19.0'}), (114, {'start': '$const110.18.2', 'end': '$const112.19.0', 'container': '$out0108.17', 'value': '$const106.16.2', 'res': '$114store_slice.21', 'slicevar': '$114store_slice.20'}), (116, {'idx': 4, 'res': '$116load_global.22'}), (126, {'idx': 5, 'res': '$126load_global.24'}), (136, {'res': '$const136.26.2'}), (138, {'res': '$const138.27.4'}), (140, {'func': '$126load_global.24', 'args': ['$const136.26.2', '$const138.27.4'], 'kw_names': None, 'res': '$140call.28'}), (148, {'value': '$140call.28', 'res': '$148unary_negative.29'}), (150, {'res': '$full_shape0150.30'}), (152, {'res': '$const152.31.2'}), (154, {'index': '$const152.31.2', 'target': '$full_shape0150.30', 'res': '$154binary_subscr.32'}), (158, {'idx': 6, 'res': '$158load_global.33'}), (168, {'res': '$const168.35.2'}), (170, {'res': '$const170.36.2'}), (172, {'func': '$158load_global.33', 'args': ['$const168.35.2', '$const170.36.2'], 'kw_names': None, 'res': '$172call.37'}), (180, {'op': '-', 'lhs': '$154binary_subscr.32', 'rhs': '$172call.37', 'res': '$binop_sub180.38'}), (184, {'func': '$116load_global.22', 'args': ['$148unary_negative.29', '$binop_sub180.38'], 'kw_names': None, 'res': '$184call.39'}), (192, {'value': '$184call.39', 'res': '$192get_iter.40'})), outgoing_phis={'$phi194.0': '$192get_iter.40'}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$192get_iter.40',)})
2025-09-26 15:12:25,033 - DEBUG - block_infos State(pc_initial=194 nstack_initial=1):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.0', 'pair': '$194for_iter.1', 'indval': '$194for_iter.2', 'pred': '$194for_iter.3'}),), outgoing_phis={'$phi198.1': '$194for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={208: ('$phi194.0', '$194for_iter.2'), 198: ('$phi194.0', '$194for_iter.2')})
2025-09-26 15:12:25,033 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$const200.2.2'}), (202, {'value': '$const200.2.2'}), (204, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$phi198.0',)})
2025-09-26 15:12:25,033 - DEBUG - block_infos State(pc_initial=208 nstack_initial=2):
AdaptBlockInfo(insts=((212, {'res': '$out0212.2'}), (214, {'retval': '$out0212.2', 'castval': '$214return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:12:25,034 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$28load_global.2']
    $38load_attr.3 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.3']
    $60load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool) ['$60load_global.6', '$70load_attr.7']
    $const_dtype = const(str, dtype)         ['$const_dtype']
    $const90.8.1 = build_tuple(items=[Var($const_dtype, <string>:3)]) ['$const90.8.1', '$const_dtype']
    out0 = call $38load_attr.3(full_shape0, func=$38load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.3', '$70load_attr.7', 'full_shape0', 'out0']
    $const96.10.2 = const(int, 0)            ['$const96.10.2']
    $const100.12.0 = const(NoneType, None)   ['$const100.12.0']
    $const102.13.3 = const(int, 1)           ['$const102.13.3']
    $104store_slice.14 = global(slice: <class 'slice'>) ['$104store_slice.14']
    $104store_slice.15 = call $104store_slice.14($const100.12.0, $const102.13.3, func=$104store_slice.14, args=(Var($const100.12.0, <string>:4), Var($const102.13.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$104store_slice.14', '$104store_slice.15', '$const100.12.0', '$const102.13.3']
    out0[$104store_slice.15] = $const96.10.2 ['$104store_slice.15', '$const96.10.2', 'out0']
    $const106.16.2 = const(int, 0)           ['$const106.16.2']
    $const110.18.2 = const(int, 0)           ['$const110.18.2']
    $const112.19.0 = const(NoneType, None)   ['$const112.19.0']
    $114store_slice.20 = global(slice: <class 'slice'>) ['$114store_slice.20']
    $114store_slice.21 = call $114store_slice.20($const110.18.2, $const112.19.0, func=$114store_slice.20, args=(Var($const110.18.2, <string>:5), Var($const112.19.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$114store_slice.20', '$114store_slice.21', '$const110.18.2', '$const112.19.0']
    out0[$114store_slice.21] = $const106.16.2 ['$114store_slice.21', '$const106.16.2', 'out0']
    $116load_global.22 = global(range: <class 'range'>) ['$116load_global.22']
    $126load_global.24 = global(min: <built-in function min>) ['$126load_global.24']
    $const136.26.2 = const(int, 0)           ['$const136.26.2']
    $const138.27.4 = const(int, -1)          ['$const138.27.4']
    $140call.28 = call $126load_global.24($const136.26.2, $const138.27.4, func=$126load_global.24, args=[Var($const136.26.2, <string>:6), Var($const138.27.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_global.24', '$140call.28', '$const136.26.2', '$const138.27.4']
    $148unary_negative.29 = unary(fn=<built-in function neg>, value=$140call.28) ['$140call.28', '$148unary_negative.29']
    $const152.31.2 = const(int, 0)           ['$const152.31.2']
    $154binary_subscr.32 = getitem(value=full_shape0, index=$const152.31.2, fn=<built-in function getitem>) ['$154binary_subscr.32', '$const152.31.2', 'full_shape0']
    $158load_global.33 = global(max: <built-in function max>) ['$158load_global.33']
    $const168.35.2 = const(int, 0)           ['$const168.35.2']
    $const170.36.2 = const(int, 0)           ['$const170.36.2']
    $172call.37 = call $158load_global.33($const168.35.2, $const170.36.2, func=$158load_global.33, args=[Var($const168.35.2, <string>:6), Var($const170.36.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$158load_global.33', '$172call.37', '$const168.35.2', '$const170.36.2']
    $binop_sub180.38 = $154binary_subscr.32 - $172call.37 ['$154binary_subscr.32', '$172call.37', '$binop_sub180.38']
    $184call.39 = call $116load_global.22($148unary_negative.29, $binop_sub180.38, func=$116load_global.22, args=[Var($148unary_negative.29, <string>:6), Var($binop_sub180.38, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.22', '$148unary_negative.29', '$184call.39', '$binop_sub180.38']
    $192get_iter.40 = getiter(value=$184call.39) ['$184call.39', '$192get_iter.40']
    $phi194.0 = $192get_iter.40              ['$192get_iter.40', '$phi194.0']
    jump 194                                 []
label 194:
    $194for_iter.1 = iternext(value=$phi194.0) ['$194for_iter.1', '$phi194.0']
    $194for_iter.2 = pair_first(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.2']
    $194for_iter.3 = pair_second(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.3']
    $phi198.1 = $194for_iter.2               ['$194for_iter.2', '$phi198.1']
    branch $194for_iter.3, 198, 208          ['$194for_iter.3']
label 198:
    index00 = $phi198.1                      ['$phi198.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 194                                 []
label 208:
    $214return_value.3 = cast(value=out0)    ['$214return_value.3', 'out0']
    return $214return_value.3                ['$214return_value.3']

2025-09-26 15:12:25,058 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:12:25,058 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290154410>
2025-09-26 15:12:25,058 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:12:25,058 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:12:25,059 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:12:25,059 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:12:25,059 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,059 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:12:25,059 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,059 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:12:25,059 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:12:25,060 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:12:25,060 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,060 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:12:25,060 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:12:25,060 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:12:25,060 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:25,060 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,060 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:12:25,061 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:12:25,061 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:12:25,061 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:12:25,061 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:25,061 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,061 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:12:25,061 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:12:25,061 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:12:25,062 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:12:25,062 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:12:25,062 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,062 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:12:25,062 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:12:25,062 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:12:25,063 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:12:25,063 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:12:25,063 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:12:25,063 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,063 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:12:25,063 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,063 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:12:25,064 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:12:25,064 - DEBUG - on stmt: jump 194
2025-09-26 15:12:25,064 - DEBUG - ==== SSA block analysis pass on 194
2025-09-26 15:12:25,064 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290154410>
2025-09-26 15:12:25,064 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:12:25,064 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:12:25,065 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:12:25,065 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:12:25,065 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:12:25,065 - DEBUG - ==== SSA block analysis pass on 198
2025-09-26 15:12:25,065 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290154410>
2025-09-26 15:12:25,065 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:12:25,066 - DEBUG - on stmt: jump 208
2025-09-26 15:12:25,066 - DEBUG - ==== SSA block analysis pass on 414
2025-09-26 15:12:25,066 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290154410>
2025-09-26 15:12:25,066 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:12:25,066 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:12:25,066 - DEBUG - ==== SSA block analysis pass on 208
2025-09-26 15:12:25,066 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290154410>
2025-09-26 15:12:25,066 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:12:25,066 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:12:25,067 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:25,067 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:25,067 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:12:25,067 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,067 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,067 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:12:25,067 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:12:25,067 - DEBUG - ==== SSA block analysis pass on 209
2025-09-26 15:12:25,067 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290154410>
2025-09-26 15:12:25,068 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:12:25,068 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,068 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,068 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:12:25,068 - DEBUG - ==== SSA block analysis pass on 241
2025-09-26 15:12:25,068 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290154410>
2025-09-26 15:12:25,068 - DEBUG - on stmt: jump 251
2025-09-26 15:12:25,068 - DEBUG - ==== SSA block analysis pass on 253
2025-09-26 15:12:25,068 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290154410>
2025-09-26 15:12:25,069 - DEBUG - on stmt: jump 257
2025-09-26 15:12:25,069 - DEBUG - ==== SSA block analysis pass on 251
2025-09-26 15:12:25,069 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290154410>
2025-09-26 15:12:25,069 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:12:25,069 - DEBUG - on stmt: jump 257
2025-09-26 15:12:25,069 - DEBUG - ==== SSA block analysis pass on 257
2025-09-26 15:12:25,069 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290154410>
2025-09-26 15:12:25,069 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:12:25,069 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:12:25,070 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:25,070 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:25,070 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:12:25,070 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,070 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,070 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:12:25,070 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:12:25,070 - DEBUG - ==== SSA block analysis pass on 261
2025-09-26 15:12:25,070 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290154410>
2025-09-26 15:12:25,071 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:12:25,071 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,071 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,071 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:12:25,071 - DEBUG - ==== SSA block analysis pass on 289
2025-09-26 15:12:25,071 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290154410>
2025-09-26 15:12:25,071 - DEBUG - on stmt: jump 299
2025-09-26 15:12:25,071 - DEBUG - ==== SSA block analysis pass on 301
2025-09-26 15:12:25,072 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290154410>
2025-09-26 15:12:25,072 - DEBUG - on stmt: jump 305
2025-09-26 15:12:25,072 - DEBUG - ==== SSA block analysis pass on 299
2025-09-26 15:12:25,072 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290154410>
2025-09-26 15:12:25,072 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:12:25,072 - DEBUG - on stmt: jump 305
2025-09-26 15:12:25,072 - DEBUG - ==== SSA block analysis pass on 305
2025-09-26 15:12:25,072 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290154410>
2025-09-26 15:12:25,072 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,073 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,073 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:12:25,073 - DEBUG - ==== SSA block analysis pass on 309
2025-09-26 15:12:25,073 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290154410>
2025-09-26 15:12:25,073 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,073 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:12:25,073 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,073 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,074 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:12:25,074 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,074 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:12:25,074 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:12:25,074 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:12:25,074 - DEBUG - on stmt: jump 413
2025-09-26 15:12:25,074 - DEBUG - ==== SSA block analysis pass on 323
2025-09-26 15:12:25,074 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290154410>
2025-09-26 15:12:25,075 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,075 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:12:25,075 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,075 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,075 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:12:25,075 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,075 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:12:25,076 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:12:25,076 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:12:25,076 - DEBUG - on stmt: jump 413
2025-09-26 15:12:25,076 - DEBUG - ==== SSA block analysis pass on 413
2025-09-26 15:12:25,076 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290154410>
2025-09-26 15:12:25,076 - DEBUG - on stmt: jump 194
2025-09-26 15:12:25,076 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104store_slice.14.1': [(<numba.core.ir.Assign object at 0x000002D2901EC410>,
                                       0)],
             '$104store_slice.15.1': [(<numba.core.ir.Assign object at 0x000002D2901EC530>,
                                       0)],
             '$110pred': [(<numba.core.ir.Assign object at 0x000002D2901AAE10>,
                           305)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x000002D2901AF290>,
                                    309)],
             '$114store_slice.20.1': [(<numba.core.ir.Assign object at 0x000002D2901EC950>,
                                       0)],
             '$114store_slice.21.1': [(<numba.core.ir.Assign object at 0x000002D2901ECA70>,
                                       0)],
             '$116load_global.22.1': [(<numba.core.ir.Assign object at 0x000002D2901ECB90>,
                                       0)],
             '$124load_attr.1': [(<numba.core.ir.Assign object at 0x000002D2901B49B0>,
                                  309)],
             '$126load_global.24.1': [(<numba.core.ir.Assign object at 0x000002D2901ECCB0>,
                                       0)],
             '$140call.28.1': [(<numba.core.ir.Assign object at 0x000002D2901ECF50>,
                                0)],
             '$148call.4': [(<numba.core.ir.Assign object at 0x000002D2901B60F0>,
                             309)],
             '$148unary_negative.29.1': [(<numba.core.ir.Assign object at 0x000002D2901ED070>,
                                          0)],
             '$154binary_subscr.32.1': [(<numba.core.ir.Assign object at 0x000002D2901ED310>,
                                         0)],
             '$156load_global.5': [(<numba.core.ir.Assign object at 0x000002D2901B7830>,
                                    309)],
             '$158load_global.33.1': [(<numba.core.ir.Assign object at 0x000002D2901ED430>,
                                       0)],
             '$166load_attr.6': [(<numba.core.ir.Assign object at 0x000002D2901BCF50>,
                                  309)],
             '$16unary_negative.4': [(<numba.core.ir.Assign object at 0x000002D290168AD0>,
                                      208)],
             '$172call.37.1': [(<numba.core.ir.Assign object at 0x000002D2901ED730>,
                                0)],
             '$184call.39.1': [(<numba.core.ir.Assign object at 0x000002D2901ED970>,
                                0)],
             '$190call.9': [(<numba.core.ir.Assign object at 0x000002D2901BE690>,
                             309)],
             '$192get_iter.40.1': [(<numba.core.ir.Assign object at 0x000002D2901EDA90>,
                                    0)],
             '$194for_iter.1.1': [(<numba.core.ir.Assign object at 0x000002D2901EC6B0>,
                                   194)],
             '$194for_iter.2.1': [(<numba.core.ir.Assign object at 0x000002D2901EDB50>,
                                   194)],
             '$194for_iter.3.1': [(<numba.core.ir.Assign object at 0x000002D2901EDC70>,
                                   194)],
             '$198compare_op.10': [(<numba.core.ir.Assign object at 0x000002D2901BFDD0>,
                                    309)],
             '$202return_value.11': [(<numba.core.ir.Assign object at 0x000002D2901C1550>,
                                      309)],
             '$204load_global.0': [(<numba.core.ir.Assign object at 0x000002D2901C59D0>,
                                    323)],
             '$214load_attr.1': [(<numba.core.ir.Assign object at 0x000002D2901C7110>,
                                  323)],
             '$214return_value.3.1': [(<numba.core.ir.Assign object at 0x000002D2901EE210>,
                                       414)],
             '$238call.4': [(<numba.core.ir.Assign object at 0x000002D2901C8890>,
                             323)],
             '$246load_global.5': [(<numba.core.ir.Assign object at 0x000002D2901C9FD0>,
                                    323)],
             '$24compare_op.6': [(<numba.core.ir.Assign object at 0x000002D29016A210>,
                                  208)],
             '$256load_attr.6': [(<numba.core.ir.Assign object at 0x000002D2901CB710>,
                                  323)],
             '$280call.9': [(<numba.core.ir.Assign object at 0x000002D2901D0E90>,
                             323)],
             '$288compare_op.10': [(<numba.core.ir.Assign object at 0x000002D2901D25D0>,
                                    323)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x000002D2901D77D0>,
                                     0)],
             '$28pred': [(<numba.core.ir.Assign object at 0x000002D290121070>,
                          208)],
             '$292return_value.11': [(<numba.core.ir.Assign object at 0x000002D2901D3D10>,
                                      323)],
             '$34compare_op.2': [(<numba.core.ir.Assign object at 0x000002D290172C90>,
                                  209)],
             '$38load_attr.3.1': [(<numba.core.ir.Assign object at 0x000002D2901D78F0>,
                                   0)],
             '$38pred': [(<numba.core.ir.Assign object at 0x000002D290175AF0>,
                          209)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x000002D2901D7AD0>,
                                     0)],
             '$64unary_negative.4': [(<numba.core.ir.Assign object at 0x000002D290186870>,
                                      257)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x000002D2901D7BF0>,
                                   0)],
             '$72compare_op.6': [(<numba.core.ir.Assign object at 0x000002D290187FB0>,
                                  257)],
             '$76pred': [(<numba.core.ir.Assign object at 0x000002D29018AE10>,
                          257)],
             '$82compare_op.2': [(<numba.core.ir.Assign object at 0x000002D2901949B0>,
                                  261)],
             '$86pred': [(<numba.core.ir.Assign object at 0x000002D2901977D0>,
                          261)],
             '$binop_sub180.38.1': [(<numba.core.ir.Assign object at 0x000002D2901ED850>,
                                     0)],
             '$bool110': [(<numba.core.ir.Assign object at 0x000002D2901A9730>,
                           305)],
             '$bool28': [(<numba.core.ir.Assign object at 0x000002D29016B950>,
                          208)],
             '$bool38': [(<numba.core.ir.Assign object at 0x000002D290174410>,
                          209)],
             '$bool76': [(<numba.core.ir.Assign object at 0x000002D290189730>,
                          257)],
             '$bool86': [(<numba.core.ir.Assign object at 0x000002D2901960F0>,
                          261)],
             '$const100.12.0.1': [(<numba.core.ir.Assign object at 0x000002D2901EC230>,
                                   0)],
             '$const102.13.3.1': [(<numba.core.ir.Assign object at 0x000002D2901EC2F0>,
                                   0)],
             '$const106.16.2.1': [(<numba.core.ir.Assign object at 0x000002D2901EC5F0>,
                                   0)],
             '$const110.18.2.1': [(<numba.core.ir.Assign object at 0x000002D2901EC770>,
                                   0)],
             '$const112.19.0.1': [(<numba.core.ir.Assign object at 0x000002D2901EC830>,
                                   0)],
             '$const136.26.2.1': [(<numba.core.ir.Assign object at 0x000002D2901ECD70>,
                                   0)],
             '$const138.27.4.1': [(<numba.core.ir.Assign object at 0x000002D2901ECE30>,
                                   0)],
             '$const152.31.2.1': [(<numba.core.ir.Assign object at 0x000002D2901ED1F0>,
                                   0)],
             '$const168.35.2.1': [(<numba.core.ir.Assign object at 0x000002D2901ED4F0>,
                                   0)],
             '$const170.36.2.1': [(<numba.core.ir.Assign object at 0x000002D2901ED610>,
                                   0)],
             '$const54.1.2': [(<numba.core.ir.Assign object at 0x000002D29017FA10>,
                               257)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x000002D290165DF0>,
                              208)],
             '$const90.8.1.1': [(<numba.core.ir.Assign object at 0x000002D2901D7DD0>,
                                 0)],
             '$const96.10.2.1': [(<numba.core.ir.Assign object at 0x000002D2901EC0B0>,
                                  0)],
             '$const_dtype.1': [(<numba.core.ir.Assign object at 0x000002D2901D7CB0>,
                                 0)],
             '$phi194.0.1': [(<numba.core.ir.Assign object at 0x000002D2901D76B0>,
                              0)],
             '$phi198.1.1': [(<numba.core.ir.Assign object at 0x000002D2901EDD30>,
                              194)],
             '$phi32.0': [(<numba.core.ir.Assign object at 0x000002D2901227B0>,
                           208)],
             '$phi80.0': [(<numba.core.ir.Assign object at 0x000002D29018C590>,
                           257)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x000002D2901D75F0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x000002D2901EDE50>,
                          198)],
             'out0': [(<numba.core.ir.Assign object at 0x000002D2901D7EF0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x000002D290165D90>,
                                208),
                               (<numba.core.ir.Assign object at 0x000002D2901D6C30>,
                                257)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002D2901D7350>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002D2901D7290>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x000002D2901D6B70>, 208),
                    (<numba.core.ir.Assign object at 0x000002D29017CCB0>, 251)],
             'x1': [(<numba.core.ir.Assign object at 0x000002D2901D6CF0>, 257),
                    (<numba.core.ir.Assign object at 0x000002D2901A6990>, 299)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002D2901D7410>,
                           0)]})
2025-09-26 15:12:25,084 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002D290154410>
2025-09-26 15:12:25,084 - DEBUG - Fix SSA violator on var stencil_index
2025-09-26 15:12:25,085 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:12:25,085 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D2900B1400>
2025-09-26 15:12:25,085 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:12:25,085 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:12:25,085 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:12:25,085 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:12:25,085 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,085 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:12:25,085 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,086 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:12:25,086 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:12:25,086 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:12:25,086 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,086 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:12:25,086 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:12:25,086 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:12:25,086 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:25,086 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,087 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:12:25,087 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:12:25,087 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:12:25,087 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:12:25,087 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:25,087 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,087 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:12:25,087 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:12:25,088 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:12:25,088 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:12:25,088 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:12:25,088 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,088 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:12:25,088 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:12:25,088 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:12:25,088 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:12:25,089 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:12:25,089 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:12:25,089 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,089 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:12:25,089 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,089 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:12:25,089 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:12:25,089 - DEBUG - on stmt: jump 194
2025-09-26 15:12:25,089 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:12:25,090 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D2900B1400>
2025-09-26 15:12:25,090 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:12:25,090 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:12:25,090 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:12:25,090 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:12:25,090 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:12:25,090 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:12:25,090 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D2900B1400>
2025-09-26 15:12:25,091 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:12:25,091 - DEBUG - on stmt: jump 208
2025-09-26 15:12:25,091 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:12:25,091 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D2900B1400>
2025-09-26 15:12:25,091 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:12:25,091 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:12:25,091 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:12:25,092 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D2900B1400>
2025-09-26 15:12:25,092 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:12:25,092 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:12:25,092 - DEBUG - first assign: stencil_index
2025-09-26 15:12:25,092 - DEBUG - replaced with: stencil_index = $const6.1.1 + index00
2025-09-26 15:12:25,092 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:25,092 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:25,093 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:12:25,093 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,093 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,093 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:12:25,093 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:12:25,093 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:12:25,093 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D2900B1400>
2025-09-26 15:12:25,093 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:12:25,094 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,094 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,094 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:12:25,094 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:12:25,094 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D2900B1400>
2025-09-26 15:12:25,094 - DEBUG - on stmt: jump 251
2025-09-26 15:12:25,094 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:12:25,094 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D2900B1400>
2025-09-26 15:12:25,095 - DEBUG - on stmt: jump 257
2025-09-26 15:12:25,095 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:12:25,095 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D2900B1400>
2025-09-26 15:12:25,095 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:12:25,095 - DEBUG - on stmt: jump 257
2025-09-26 15:12:25,095 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:12:25,095 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D2900B1400>
2025-09-26 15:12:25,095 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:12:25,095 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:12:25,095 - DEBUG - replaced with: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:12:25,096 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:25,096 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:25,096 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:12:25,096 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,096 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,096 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:12:25,096 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:12:25,096 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:12:25,096 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D2900B1400>
2025-09-26 15:12:25,097 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:12:25,097 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,097 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,097 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:12:25,097 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:12:25,097 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D2900B1400>
2025-09-26 15:12:25,097 - DEBUG - on stmt: jump 299
2025-09-26 15:12:25,097 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:12:25,097 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D2900B1400>
2025-09-26 15:12:25,098 - DEBUG - on stmt: jump 305
2025-09-26 15:12:25,098 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:12:25,098 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D2900B1400>
2025-09-26 15:12:25,098 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:12:25,098 - DEBUG - on stmt: jump 305
2025-09-26 15:12:25,098 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:12:25,098 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D2900B1400>
2025-09-26 15:12:25,098 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,098 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,098 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:12:25,099 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:12:25,099 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D2900B1400>
2025-09-26 15:12:25,099 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,099 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:12:25,099 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,099 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,099 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:12:25,099 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,099 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:12:25,100 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:12:25,100 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:12:25,100 - DEBUG - on stmt: jump 413
2025-09-26 15:12:25,100 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:12:25,100 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D2900B1400>
2025-09-26 15:12:25,100 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,100 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:12:25,100 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,100 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,101 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:12:25,101 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,101 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:12:25,101 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:12:25,101 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:12:25,101 - DEBUG - on stmt: jump 413
2025-09-26 15:12:25,101 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:12:25,101 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D2900B1400>
2025-09-26 15:12:25,102 - DEBUG - on stmt: jump 194
2025-09-26 15:12:25,102 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002D2901F7770>],
             257: [<numba.core.ir.Assign object at 0x000002D2901F75F0>]})
2025-09-26 15:12:25,102 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:12:25,102 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D2900B1400>
2025-09-26 15:12:25,102 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:12:25,102 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:12:25,103 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:12:25,103 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:12:25,103 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,103 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:12:25,103 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,103 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:12:25,103 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:12:25,103 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:12:25,104 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,104 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:12:25,104 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:12:25,104 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:12:25,104 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:25,104 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,105 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:12:25,105 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:12:25,105 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:12:25,105 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:12:25,105 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:25,105 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,105 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:12:25,105 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:12:25,106 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:12:25,106 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:12:25,106 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:12:25,106 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,106 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:12:25,106 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:12:25,106 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:12:25,106 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:12:25,107 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:12:25,107 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:12:25,107 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,107 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:12:25,107 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,107 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:12:25,107 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:12:25,107 - DEBUG - on stmt: jump 194
2025-09-26 15:12:25,107 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:12:25,108 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D2900B1400>
2025-09-26 15:12:25,108 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:12:25,108 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:12:25,108 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:12:25,108 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:12:25,108 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:12:25,108 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:12:25,108 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D2900B1400>
2025-09-26 15:12:25,108 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:12:25,109 - DEBUG - on stmt: jump 208
2025-09-26 15:12:25,109 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:12:25,109 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D2900B1400>
2025-09-26 15:12:25,109 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:12:25,109 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:12:25,109 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:12:25,109 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D2900B1400>
2025-09-26 15:12:25,109 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:12:25,109 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:12:25,109 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:25,110 - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:25,110 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:25,110 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:12:25,110 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,110 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,110 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:12:25,110 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:12:25,110 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:12:25,111 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D2900B1400>
2025-09-26 15:12:25,111 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:12:25,111 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,111 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,111 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:12:25,111 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:12:25,111 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D2900B1400>
2025-09-26 15:12:25,111 - DEBUG - on stmt: jump 251
2025-09-26 15:12:25,111 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:12:25,112 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D2900B1400>
2025-09-26 15:12:25,112 - DEBUG - on stmt: jump 257
2025-09-26 15:12:25,112 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:12:25,112 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D2900B1400>
2025-09-26 15:12:25,112 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:12:25,112 - DEBUG - on stmt: jump 257
2025-09-26 15:12:25,112 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:12:25,112 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D2900B1400>
2025-09-26 15:12:25,112 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:12:25,113 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:12:25,113 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:25,113 - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:25,113 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:12:25,113 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:25,113 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:12:25,113 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,113 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,114 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:12:25,114 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:12:25,114 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:12:25,114 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D2900B1400>
2025-09-26 15:12:25,114 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:12:25,114 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,114 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,114 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:12:25,115 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:12:25,115 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D2900B1400>
2025-09-26 15:12:25,115 - DEBUG - on stmt: jump 299
2025-09-26 15:12:25,115 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:12:25,115 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D2900B1400>
2025-09-26 15:12:25,115 - DEBUG - on stmt: jump 305
2025-09-26 15:12:25,115 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:12:25,115 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D2900B1400>
2025-09-26 15:12:25,116 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:12:25,116 - DEBUG - on stmt: jump 305
2025-09-26 15:12:25,116 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:12:25,116 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D2900B1400>
2025-09-26 15:12:25,116 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,116 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,117 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:12:25,117 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:12:25,117 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D2900B1400>
2025-09-26 15:12:25,117 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,117 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:12:25,117 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,118 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,118 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:12:25,118 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,118 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:12:25,118 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:12:25,119 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:12:25,119 - DEBUG - on stmt: jump 413
2025-09-26 15:12:25,119 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:12:25,119 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D2900B1400>
2025-09-26 15:12:25,119 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,119 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:12:25,120 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,120 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,120 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:12:25,120 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,120 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:12:25,120 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:12:25,120 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:12:25,121 - DEBUG - on stmt: jump 413
2025-09-26 15:12:25,121 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:12:25,121 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D2900B1400>
2025-09-26 15:12:25,121 - DEBUG - on stmt: jump 194
2025-09-26 15:12:25,121 - DEBUG - Fix SSA violator on var x0
2025-09-26 15:12:25,121 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:12:25,121 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154550>
2025-09-26 15:12:25,121 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:12:25,121 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:12:25,122 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:12:25,122 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:12:25,122 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,122 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:12:25,122 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,122 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:12:25,122 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:12:25,122 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:12:25,123 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,123 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:12:25,123 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:12:25,123 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:12:25,123 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:25,123 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,123 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:12:25,123 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:12:25,124 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:12:25,124 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:12:25,124 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:25,124 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,124 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:12:25,124 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:12:25,124 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:12:25,124 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:12:25,125 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:12:25,125 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,125 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:12:25,125 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:12:25,125 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:12:25,125 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:12:25,125 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:12:25,126 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:12:25,126 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,126 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:12:25,126 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,126 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:12:25,126 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:12:25,126 - DEBUG - on stmt: jump 194
2025-09-26 15:12:25,126 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:12:25,127 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154550>
2025-09-26 15:12:25,127 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:12:25,127 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:12:25,127 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:12:25,127 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:12:25,127 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:12:25,127 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:12:25,127 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154550>
2025-09-26 15:12:25,127 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:12:25,128 - DEBUG - on stmt: jump 208
2025-09-26 15:12:25,128 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:12:25,128 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154550>
2025-09-26 15:12:25,128 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:12:25,128 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:12:25,128 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:12:25,128 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154550>
2025-09-26 15:12:25,129 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:12:25,129 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:12:25,129 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:25,129 - DEBUG - first assign: x0
2025-09-26 15:12:25,129 - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:25,129 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:25,130 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:12:25,130 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,130 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,130 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:12:25,130 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:12:25,130 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:12:25,131 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154550>
2025-09-26 15:12:25,131 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:12:25,131 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,131 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,131 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:12:25,132 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:12:25,132 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154550>
2025-09-26 15:12:25,132 - DEBUG - on stmt: jump 251
2025-09-26 15:12:25,132 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:12:25,132 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154550>
2025-09-26 15:12:25,132 - DEBUG - on stmt: jump 257
2025-09-26 15:12:25,132 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:12:25,132 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154550>
2025-09-26 15:12:25,133 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:12:25,133 - DEBUG - replaced with: x0.1 = const(int, 0)
2025-09-26 15:12:25,133 - DEBUG - on stmt: jump 257
2025-09-26 15:12:25,133 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:12:25,133 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154550>
2025-09-26 15:12:25,133 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:12:25,133 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:12:25,133 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:12:25,134 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:25,134 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:12:25,134 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,134 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,134 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:12:25,134 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:12:25,134 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:12:25,134 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154550>
2025-09-26 15:12:25,134 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:12:25,134 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,135 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,135 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:12:25,135 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:12:25,135 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154550>
2025-09-26 15:12:25,135 - DEBUG - on stmt: jump 299
2025-09-26 15:12:25,135 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:12:25,135 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154550>
2025-09-26 15:12:25,135 - DEBUG - on stmt: jump 305
2025-09-26 15:12:25,135 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:12:25,136 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154550>
2025-09-26 15:12:25,136 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:12:25,136 - DEBUG - on stmt: jump 305
2025-09-26 15:12:25,136 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:12:25,136 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154550>
2025-09-26 15:12:25,136 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,136 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,136 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:12:25,136 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:12:25,136 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154550>
2025-09-26 15:12:25,137 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,137 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:12:25,137 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,137 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,137 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:12:25,137 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,137 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:12:25,138 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:12:25,138 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:12:25,138 - DEBUG - on stmt: jump 413
2025-09-26 15:12:25,138 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:12:25,138 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154550>
2025-09-26 15:12:25,138 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,138 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:12:25,138 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,138 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,139 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:12:25,139 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,139 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:12:25,139 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:12:25,139 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:12:25,139 - DEBUG - on stmt: jump 413
2025-09-26 15:12:25,139 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:12:25,139 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154550>
2025-09-26 15:12:25,139 - DEBUG - on stmt: jump 194
2025-09-26 15:12:25,140 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002D2901F5CD0>],
             251: [<numba.core.ir.Assign object at 0x000002D2901F7890>]})
2025-09-26 15:12:25,140 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:12:25,140 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154910>
2025-09-26 15:12:25,140 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:12:25,140 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:12:25,140 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:12:25,140 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:12:25,140 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,140 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:12:25,141 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,141 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:12:25,141 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:12:25,141 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:12:25,141 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,141 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:12:25,141 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:12:25,141 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:12:25,142 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:25,142 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,142 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:12:25,142 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:12:25,142 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:12:25,142 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:12:25,142 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:25,143 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,143 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:12:25,143 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:12:25,143 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:12:25,143 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:12:25,143 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:12:25,143 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,143 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:12:25,144 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:12:25,144 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:12:25,144 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:12:25,144 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:12:25,144 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:12:25,144 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,145 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:12:25,145 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,145 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:12:25,145 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:12:25,145 - DEBUG - on stmt: jump 194
2025-09-26 15:12:25,145 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:12:25,145 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154910>
2025-09-26 15:12:25,145 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:12:25,146 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:12:25,146 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:12:25,146 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:12:25,146 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:12:25,146 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:12:25,146 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154910>
2025-09-26 15:12:25,146 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:12:25,146 - DEBUG - on stmt: jump 208
2025-09-26 15:12:25,147 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:12:25,147 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154910>
2025-09-26 15:12:25,147 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:12:25,147 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:12:25,147 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:12:25,147 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154910>
2025-09-26 15:12:25,147 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:12:25,147 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:12:25,148 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:25,148 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:25,148 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:12:25,148 - DEBUG - find_def var='x0' stmt=$24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:12:25,148 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,148 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,148 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:12:25,148 - DEBUG - find_def var='x0' stmt=$phi32.0 = x0
2025-09-26 15:12:25,149 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:12:25,149 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:12:25,149 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154910>
2025-09-26 15:12:25,149 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:12:25,149 - DEBUG - find_def var='x0' stmt=$34compare_op.2 = x0 <= threshold
2025-09-26 15:12:25,149 - DEBUG - find_def_from_top label 209
2025-09-26 15:12:25,149 - DEBUG - idom 208 from label 209
2025-09-26 15:12:25,149 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:12:25,149 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,149 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,150 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:12:25,150 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:12:25,150 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154910>
2025-09-26 15:12:25,150 - DEBUG - on stmt: jump 251
2025-09-26 15:12:25,150 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:12:25,150 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154910>
2025-09-26 15:12:25,150 - DEBUG - on stmt: jump 257
2025-09-26 15:12:25,150 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:12:25,150 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154910>
2025-09-26 15:12:25,151 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:12:25,151 - DEBUG - on stmt: jump 257
2025-09-26 15:12:25,151 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:12:25,151 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154910>
2025-09-26 15:12:25,151 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:12:25,151 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:12:25,151 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:12:25,151 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:25,151 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:12:25,152 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,152 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,152 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:12:25,152 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:12:25,152 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:12:25,152 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154910>
2025-09-26 15:12:25,152 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:12:25,152 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,153 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,153 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:12:25,153 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:12:25,153 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154910>
2025-09-26 15:12:25,153 - DEBUG - on stmt: jump 299
2025-09-26 15:12:25,153 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:12:25,153 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154910>
2025-09-26 15:12:25,153 - DEBUG - on stmt: jump 305
2025-09-26 15:12:25,153 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:12:25,154 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154910>
2025-09-26 15:12:25,154 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:12:25,154 - DEBUG - on stmt: jump 305
2025-09-26 15:12:25,154 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:12:25,154 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154910>
2025-09-26 15:12:25,154 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,154 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,154 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:12:25,155 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:12:25,155 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154910>
2025-09-26 15:12:25,155 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,155 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:12:25,155 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,155 - DEBUG - find_def var='x0' stmt=$148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,155 - DEBUG - find_def_from_top label 309
2025-09-26 15:12:25,155 - DEBUG - idom 305 from label 309
2025-09-26 15:12:25,156 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:12:25,156 - DEBUG - find_def_from_top label 305
2025-09-26 15:12:25,156 - DEBUG - idom 257 from label 305
2025-09-26 15:12:25,156 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:12:25,156 - DEBUG - find_def_from_top label 257
2025-09-26 15:12:25,156 - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 257
2025-09-26 15:12:25,156 - DEBUG - find_def_from_bottom label 209
2025-09-26 15:12:25,156 - DEBUG - find_def_from_top label 209
2025-09-26 15:12:25,157 - DEBUG - idom 208 from label 209
2025-09-26 15:12:25,157 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:12:25,157 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:25,157 - DEBUG - find_def_from_bottom label 251
2025-09-26 15:12:25,157 - DEBUG - incoming_def x0.1 = const(int, 0)
2025-09-26 15:12:25,157 - DEBUG - find_def_from_bottom label 253
2025-09-26 15:12:25,157 - DEBUG - find_def_from_top label 253
2025-09-26 15:12:25,158 - DEBUG - idom 208 from label 253
2025-09-26 15:12:25,158 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:12:25,158 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:25,158 - DEBUG - replaced with: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,158 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,158 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:12:25,158 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,159 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:12:25,159 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:12:25,159 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:12:25,159 - DEBUG - on stmt: jump 413
2025-09-26 15:12:25,159 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:12:25,159 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154910>
2025-09-26 15:12:25,159 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,159 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:12:25,160 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,160 - DEBUG - find_def var='x0' stmt=$238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,160 - DEBUG - find_def_from_top label 323
2025-09-26 15:12:25,160 - DEBUG - idom 305 from label 323
2025-09-26 15:12:25,160 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:12:25,160 - DEBUG - find_def_from_top label 305
2025-09-26 15:12:25,160 - DEBUG - idom 257 from label 305
2025-09-26 15:12:25,160 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:12:25,160 - DEBUG - replaced with: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,161 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,161 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:12:25,161 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,161 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:12:25,161 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:12:25,161 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:12:25,161 - DEBUG - on stmt: jump 413
2025-09-26 15:12:25,161 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:12:25,161 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154910>
2025-09-26 15:12:25,162 - DEBUG - on stmt: jump 194
2025-09-26 15:12:25,162 - DEBUG - Fix SSA violator on var x1
2025-09-26 15:12:25,162 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:12:25,162 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154B90>
2025-09-26 15:12:25,162 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:12:25,162 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:12:25,162 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:12:25,162 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:12:25,162 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,163 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:12:25,163 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,163 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:12:25,163 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:12:25,163 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:12:25,163 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,163 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:12:25,163 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:12:25,164 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:12:25,164 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:25,164 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,164 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:12:25,164 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:12:25,164 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:12:25,164 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:12:25,164 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:25,164 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,165 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:12:25,165 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:12:25,165 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:12:25,165 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:12:25,165 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:12:25,165 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,165 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:12:25,165 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:12:25,165 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:12:25,166 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:12:25,166 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:12:25,166 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:12:25,166 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,166 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:12:25,166 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,166 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:12:25,166 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:12:25,166 - DEBUG - on stmt: jump 194
2025-09-26 15:12:25,167 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:12:25,167 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154B90>
2025-09-26 15:12:25,167 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:12:25,167 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:12:25,167 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:12:25,167 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:12:25,167 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:12:25,167 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:12:25,167 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154B90>
2025-09-26 15:12:25,168 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:12:25,168 - DEBUG - on stmt: jump 208
2025-09-26 15:12:25,168 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:12:25,168 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154B90>
2025-09-26 15:12:25,168 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:12:25,168 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:12:25,168 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:12:25,168 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154B90>
2025-09-26 15:12:25,169 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:12:25,169 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:12:25,169 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:25,169 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:25,169 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:12:25,169 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,169 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,169 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:12:25,170 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:12:25,170 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:12:25,170 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154B90>
2025-09-26 15:12:25,170 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:12:25,170 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,170 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,170 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:12:25,171 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:12:25,171 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154B90>
2025-09-26 15:12:25,171 - DEBUG - on stmt: jump 251
2025-09-26 15:12:25,171 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:12:25,171 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154B90>
2025-09-26 15:12:25,171 - DEBUG - on stmt: jump 257
2025-09-26 15:12:25,171 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:12:25,171 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154B90>
2025-09-26 15:12:25,171 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:12:25,172 - DEBUG - on stmt: jump 257
2025-09-26 15:12:25,172 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:12:25,172 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154B90>
2025-09-26 15:12:25,172 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:12:25,172 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:12:25,172 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:12:25,172 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:12:25,173 - DEBUG - first assign: x1
2025-09-26 15:12:25,173 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:12:25,173 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:25,173 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:12:25,173 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,173 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,173 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:12:25,173 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:12:25,173 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:12:25,173 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154B90>
2025-09-26 15:12:25,174 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:12:25,174 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,174 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,174 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:12:25,174 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:12:25,174 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154B90>
2025-09-26 15:12:25,174 - DEBUG - on stmt: jump 299
2025-09-26 15:12:25,174 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:12:25,174 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154B90>
2025-09-26 15:12:25,174 - DEBUG - on stmt: jump 305
2025-09-26 15:12:25,175 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:12:25,175 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154B90>
2025-09-26 15:12:25,175 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:12:25,175 - DEBUG - replaced with: x1.1 = const(int, 0)
2025-09-26 15:12:25,175 - DEBUG - on stmt: jump 305
2025-09-26 15:12:25,175 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:12:25,175 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154B90>
2025-09-26 15:12:25,175 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,175 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,175 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:12:25,176 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:12:25,176 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154B90>
2025-09-26 15:12:25,176 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,176 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:12:25,176 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,176 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,176 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:12:25,176 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,176 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:12:25,177 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:12:25,177 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:12:25,177 - DEBUG - on stmt: jump 413
2025-09-26 15:12:25,177 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:12:25,177 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154B90>
2025-09-26 15:12:25,177 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,177 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:12:25,177 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,178 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,178 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:12:25,178 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,178 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:12:25,178 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:12:25,178 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:12:25,178 - DEBUG - on stmt: jump 413
2025-09-26 15:12:25,178 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:12:25,178 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290154B90>
2025-09-26 15:12:25,179 - DEBUG - on stmt: jump 194
2025-09-26 15:12:25,179 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {257: [<numba.core.ir.Assign object at 0x000002D2901F4EF0>],
             299: [<numba.core.ir.Assign object at 0x000002D2901F59D0>]})
2025-09-26 15:12:25,179 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:12:25,179 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154550>
2025-09-26 15:12:25,179 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:12:25,179 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:12:25,179 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:12:25,179 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:12:25,180 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,180 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:12:25,180 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,180 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:12:25,180 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:12:25,180 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:12:25,180 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,180 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:12:25,180 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:12:25,181 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:12:25,181 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:25,181 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,181 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:12:25,181 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:12:25,181 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:12:25,181 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:12:25,182 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:25,182 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,182 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:12:25,182 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:12:25,182 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:12:25,182 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:12:25,182 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:12:25,182 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,183 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:12:25,183 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:12:25,183 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:12:25,183 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:12:25,183 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:12:25,183 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:12:25,183 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,183 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:12:25,184 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,184 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:12:25,184 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:12:25,184 - DEBUG - on stmt: jump 194
2025-09-26 15:12:25,184 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:12:25,184 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154550>
2025-09-26 15:12:25,184 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:12:25,184 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:12:25,185 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:12:25,185 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:12:25,185 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:12:25,185 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:12:25,185 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154550>
2025-09-26 15:12:25,185 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:12:25,186 - DEBUG - on stmt: jump 208
2025-09-26 15:12:25,186 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:12:25,186 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154550>
2025-09-26 15:12:25,186 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:12:25,186 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:12:25,186 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:12:25,186 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154550>
2025-09-26 15:12:25,186 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:12:25,186 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:12:25,187 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:25,187 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:25,187 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:12:25,187 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,187 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,187 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:12:25,187 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:12:25,187 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:12:25,187 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154550>
2025-09-26 15:12:25,188 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:12:25,188 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,188 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,188 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:12:25,188 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:12:25,188 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154550>
2025-09-26 15:12:25,188 - DEBUG - on stmt: jump 251
2025-09-26 15:12:25,188 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:12:25,188 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154550>
2025-09-26 15:12:25,189 - DEBUG - on stmt: jump 257
2025-09-26 15:12:25,189 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:12:25,189 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154550>
2025-09-26 15:12:25,189 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:12:25,189 - DEBUG - on stmt: jump 257
2025-09-26 15:12:25,189 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:12:25,189 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154550>
2025-09-26 15:12:25,189 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:12:25,189 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:12:25,189 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:12:25,190 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:12:25,190 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:25,190 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:12:25,190 - DEBUG - find_def var='x1' stmt=$72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:12:25,190 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,190 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,190 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:12:25,190 - DEBUG - find_def var='x1' stmt=$phi80.0 = x1
2025-09-26 15:12:25,190 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:12:25,191 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:12:25,191 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154550>
2025-09-26 15:12:25,191 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:12:25,191 - DEBUG - find_def var='x1' stmt=$82compare_op.2 = x1 <= threshold
2025-09-26 15:12:25,191 - DEBUG - find_def_from_top label 261
2025-09-26 15:12:25,191 - DEBUG - idom 257 from label 261
2025-09-26 15:12:25,191 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:12:25,191 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,191 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,192 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:12:25,192 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:12:25,192 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154550>
2025-09-26 15:12:25,192 - DEBUG - on stmt: jump 299
2025-09-26 15:12:25,192 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:12:25,192 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154550>
2025-09-26 15:12:25,192 - DEBUG - on stmt: jump 305
2025-09-26 15:12:25,192 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:12:25,192 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154550>
2025-09-26 15:12:25,193 - DEBUG - on stmt: x1.1 = const(int, 0)
2025-09-26 15:12:25,193 - DEBUG - on stmt: jump 305
2025-09-26 15:12:25,193 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:12:25,193 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154550>
2025-09-26 15:12:25,193 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:12:25,193 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,193 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:12:25,193 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:12:25,193 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154550>
2025-09-26 15:12:25,194 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,194 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:12:25,194 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,194 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,194 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:12:25,194 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,194 - DEBUG - find_def var='x1' stmt=$190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,195 - DEBUG - find_def_from_top label 309
2025-09-26 15:12:25,195 - DEBUG - idom 305 from label 309
2025-09-26 15:12:25,195 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:12:25,195 - DEBUG - find_def_from_top label 305
2025-09-26 15:12:25,195 - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 305
2025-09-26 15:12:25,195 - DEBUG - find_def_from_bottom label 299
2025-09-26 15:12:25,195 - DEBUG - incoming_def x1.1 = const(int, 0)
2025-09-26 15:12:25,195 - DEBUG - find_def_from_bottom label 301
2025-09-26 15:12:25,196 - DEBUG - find_def_from_top label 301
2025-09-26 15:12:25,196 - DEBUG - idom 257 from label 301
2025-09-26 15:12:25,196 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:12:25,196 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:12:25,196 - DEBUG - find_def_from_bottom label 261
2025-09-26 15:12:25,196 - DEBUG - find_def_from_top label 261
2025-09-26 15:12:25,196 - DEBUG - idom 257 from label 261
2025-09-26 15:12:25,196 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:12:25,197 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:12:25,197 - DEBUG - replaced with: $190call.9 = call $166load_attr.6(x1.2, func=$166load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,197 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:12:25,197 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:12:25,197 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:12:25,197 - DEBUG - on stmt: jump 413
2025-09-26 15:12:25,197 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:12:25,198 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154550>
2025-09-26 15:12:25,198 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,198 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:12:25,198 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,198 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:25,198 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:12:25,199 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,199 - DEBUG - find_def var='x1' stmt=$280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,199 - DEBUG - find_def_from_top label 323
2025-09-26 15:12:25,199 - DEBUG - idom 305 from label 323
2025-09-26 15:12:25,199 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:12:25,199 - DEBUG - replaced with: $280call.9 = call $256load_attr.6(x1.2, func=$256load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:25,199 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:12:25,200 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:12:25,200 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:12:25,200 - DEBUG - on stmt: jump 413
2025-09-26 15:12:25,200 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:12:25,200 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290154550>
2025-09-26 15:12:25,200 - DEBUG - on stmt: jump 194
2025-09-26 15:12:25,214 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с librosa: 'function' object has no attribute 'get_call_template'
2025-09-26 15:12:25,220 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 15:12:25,220 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 15:12:25,740 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\engine-on-the-spot.mp3'>)))], 'idempotency_key': 'stainless-python-retry-41a3916d-bb59-43a1-8017-db0bfac499cc', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:12:25,834 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:12:25,834 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-26 15:12:25,903 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002D290520EC0>
2025-09-26 15:12:25,903 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002D29024D490> server_hostname='api.openai.com' timeout=5.0
2025-09-26 15:12:26,152 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002D2901574D0>
2025-09-26 15:12:26,153 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:12:26,154 - DEBUG - send_request_headers.complete
2025-09-26 15:12:26,154 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:12:26,156 - DEBUG - send_request_body.complete
2025-09-26 15:12:26,156 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:12:27,505 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:12:27 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'590'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'602'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_feb86bb16a4142a6a8b460883b853462'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=XNvobaAcSMNDb_Snx5tkcVoFn7dj2ND56kUBzXpTF.4-1758888747-1.0.1.1-0FWZ4nUDQN7DAo7sXkh1clXWsKIiyiYE48R9PVRgcDOdUfuaRykcYs_5ZdgHb6ZtNsH3y_vLjicf0XtTlTokaZjmn1wgdFqd8zWZOkiK4cI; path=/; expires=Fri, 26-Sep-25 12:42:27 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=P4eI7GN9jsnPz4F6UYiU7uHG4NRU6YSJnbOq1ZCHFfo-1758888747475-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9852ab67ad178d75-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:12:27,506 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:12:27,506 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:12:27,506 - DEBUG - receive_response_body.complete
2025-09-26 15:12:27,507 - DEBUG - response_closed.started
2025-09-26 15:12:27,507 - DEBUG - response_closed.complete
2025-09-26 15:12:27,507 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers([('date', 'Fri, 26 Sep 2025 12:12:27 GMT'), ('content-type', 'text/plain; charset=utf-8'), ('content-length', '1'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'yurisun'), ('openai-processing-ms', '590'), ('openai-project', 'proj_Llb21yVk5b2whxj0ZTkY3iYI'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '602'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-reset-requests', '120ms'), ('x-request-id', 'req_feb86bb16a4142a6a8b460883b853462'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=XNvobaAcSMNDb_Snx5tkcVoFn7dj2ND56kUBzXpTF.4-1758888747-1.0.1.1-0FWZ4nUDQN7DAo7sXkh1clXWsKIiyiYE48R9PVRgcDOdUfuaRykcYs_5ZdgHb6ZtNsH3y_vLjicf0XtTlTokaZjmn1wgdFqd8zWZOkiK4cI; path=/; expires=Fri, 26-Sep-25 12:42:27 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=P4eI7GN9jsnPz4F6UYiU7uHG4NRU6YSJnbOq1ZCHFfo-1758888747475-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '9852ab67ad178d75-HEL'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-09-26 15:12:27,507 - DEBUG - request_id: req_feb86bb16a4142a6a8b460883b853462
2025-09-26 15:12:27,507 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:12:27,508 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:12:27,508 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:12:27,508 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: '' (длина: 0)
2025-09-26 15:12:27,508 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 2 - альтернативный язык: en
2025-09-26 15:12:27,509 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\engine-on-the-spot.mp3'>)))], 'idempotency_key': 'stainless-python-retry-89b5cf36-3167-4a8c-8aba-5020684410e1', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'en', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:12:27,509 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:12:27,510 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:12:27,510 - DEBUG - send_request_headers.complete
2025-09-26 15:12:27,510 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:12:27,512 - DEBUG - send_request_body.complete
2025-09-26 15:12:27,512 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:12:28,720 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:12:28 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'670'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'682'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_c003f7797c3e4274a123113ffd59a4e2'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9852ab702f828d75-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:12:28,721 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:12:28,721 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:12:28,721 - DEBUG - receive_response_body.complete
2025-09-26 15:12:28,721 - DEBUG - response_closed.started
2025-09-26 15:12:28,722 - DEBUG - response_closed.complete
2025-09-26 15:12:28,722 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:12:28 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '670', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '682', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_c003f7797c3e4274a123113ffd59a4e2', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9852ab702f828d75-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:12:28,722 - DEBUG - request_id: req_c003f7797c3e4274a123113ffd59a4e2
2025-09-26 15:12:28,723 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:12:28,723 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:12:28,723 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:12:28,724 - DEBUG - ТРАНСКРИПЦИЯ: Результат 2: '' (длина: 0)
2025-09-26 15:12:28,724 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\engine-on-the-spot.mp3'>)))], 'idempotency_key': 'stainless-python-retry-9b6e9ab9-f8de-415f-b996-29cb2b38a1e7', 'json_data': {'model': 'gpt-4o-transcribe', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:12:28,725 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:12:28,725 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:12:28,726 - DEBUG - send_request_headers.complete
2025-09-26 15:12:28,726 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:12:28,727 - DEBUG - send_request_body.complete
2025-09-26 15:12:28,727 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:12:29,814 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:12:29 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'557'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'573'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_670f2b4a090f452d9db269bb05cadf59'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9852ab77b8c48d75-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:12:29,815 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:12:29,815 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:12:29,815 - DEBUG - receive_response_body.complete
2025-09-26 15:12:29,816 - DEBUG - response_closed.started
2025-09-26 15:12:29,816 - DEBUG - response_closed.complete
2025-09-26 15:12:29,816 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:12:29 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '557', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '573', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_670f2b4a090f452d9db269bb05cadf59', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9852ab77b8c48d75-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:12:29,816 - DEBUG - request_id: req_670f2b4a090f452d9db269bb05cadf59
2025-09-26 15:12:29,816 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:12:29,817 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:12:29,817 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:12:29,817 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 4 - музыкальный промпт
2025-09-26 15:12:29,817 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\engine-on-the-spot.mp3'>)))], 'idempotency_key': 'stainless-python-retry-4ea1bf06-f38f-4f6f-b577-e03886ca8a62', 'json_data': {'model': 'gpt-4o-transcribe', 'prompt': 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.', 'response_format': 'text'}}
2025-09-26 15:12:29,818 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:12:29,818 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:12:29,819 - DEBUG - send_request_headers.complete
2025-09-26 15:12:29,819 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:12:29,820 - DEBUG - send_request_body.complete
2025-09-26 15:12:29,821 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:12:30,686 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:12:30 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'375'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'387'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_20d7724591e5464694314616adce5c3f'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9852ab7e8abe8d75-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:12:30,687 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:12:30,687 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:12:30,687 - DEBUG - receive_response_body.complete
2025-09-26 15:12:30,688 - DEBUG - response_closed.started
2025-09-26 15:12:30,688 - DEBUG - response_closed.complete
2025-09-26 15:12:30,688 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:12:30 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '375', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '387', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_20d7724591e5464694314616adce5c3f', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9852ab7e8abe8d75-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:12:30,688 - DEBUG - request_id: req_20d7724591e5464694314616adce5c3f
2025-09-26 15:12:30,689 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:12:30,689 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.'
2025-09-26 15:12:30,689 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:12:30,689 - DEBUG - ТРАНСКРИПЦИЯ: Результат музыкального промпта: '' (длина: 0)
2025-09-26 15:12:30,690 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 5 - английский язык с музыкальным промптом
2025-09-26 15:12:30,690 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\engine-on-the-spot.mp3'>)))], 'idempotency_key': 'stainless-python-retry-396ab022-7c28-4789-ae99-273b7df5e6ef', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'en', 'prompt': 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.', 'response_format': 'text'}}
2025-09-26 15:12:30,691 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:12:30,691 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:12:30,692 - DEBUG - send_request_headers.complete
2025-09-26 15:12:30,692 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:12:30,694 - DEBUG - send_request_body.complete
2025-09-26 15:12:30,694 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:12:31,726 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:12:31 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'510'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'521'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_e29b8439a82b436b8fdfa26fd4632dbd'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9852ab8409b38d75-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:12:31,726 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:12:31,726 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:12:31,727 - DEBUG - receive_response_body.complete
2025-09-26 15:12:31,727 - DEBUG - response_closed.started
2025-09-26 15:12:31,727 - DEBUG - response_closed.complete
2025-09-26 15:12:31,727 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:12:31 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '510', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '521', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_e29b8439a82b436b8fdfa26fd4632dbd', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9852ab8409b38d75-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:12:31,728 - DEBUG - request_id: req_e29b8439a82b436b8fdfa26fd4632dbd
2025-09-26 15:12:31,728 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:12:31,728 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.'
2025-09-26 15:12:31,729 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:12:31,729 - DEBUG - ТРАНСКРИПЦИЯ: Результат английского музыкального промпта: '' (длина: 0)
2025-09-26 15:12:31,729 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:12:31,729 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:12:31,730 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:12:31,730 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\engine-on-the-spot.mp3'>)))], 'idempotency_key': 'stainless-python-retry-36888bcb-c2a8-4ff5-bd46-5e78c94f0540', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:12:31,731 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:12:31,732 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:12:31,732 - DEBUG - send_request_headers.complete
2025-09-26 15:12:31,732 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:12:31,734 - DEBUG - send_request_body.complete
2025-09-26 15:12:31,734 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:12:32,803 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:12:32 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'539'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'550'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_5286798a54a14cc99d9442efe187dd12'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9852ab8a89d28d75-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:12:32,803 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:12:32,803 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:12:32,804 - DEBUG - receive_response_body.complete
2025-09-26 15:12:32,804 - DEBUG - response_closed.started
2025-09-26 15:12:32,804 - DEBUG - response_closed.complete
2025-09-26 15:12:32,804 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:12:32 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '539', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '550', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_5286798a54a14cc99d9442efe187dd12', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9852ab8a89d28d75-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:12:32,804 - DEBUG - request_id: req_5286798a54a14cc99d9442efe187dd12
2025-09-26 15:12:32,805 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:12:32,805 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:12:32,805 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:12:32,906 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	RESUME(arg=0, lineno=1137)
           4	LOAD_FAST(arg=0, lineno=1140)
           6	LOAD_CONST(arg=1, lineno=1140)
           8	BINARY_SUBSCR(arg=None, lineno=1140)
          12	STORE_FAST(arg=3, lineno=1140)
          14	LOAD_FAST(arg=1, lineno=1141)
          16	UNARY_NEGATIVE(arg=None, lineno=1141)
          18	LOAD_FAST(arg=3, lineno=1141)
          20	SWAP(arg=2, lineno=1141)
          22	COPY(arg=2, lineno=1141)
          24	COMPARE_OP(arg=58, lineno=1141)
          28	POP_JUMP_IF_FALSE(arg=6, lineno=1141)
          32	LOAD_FAST(arg=1, lineno=1141)
          34	COMPARE_OP(arg=58, lineno=1141)
          38	POP_JUMP_IF_FALSE(arg=5, lineno=1141)
          42	JUMP_FORWARD(arg=2, lineno=1141)
>         44	POP_TOP(arg=None, lineno=1141)
          46	JUMP_FORWARD(arg=2, lineno=1141)
>         48	LOAD_CONST(arg=1, lineno=1142)
          50	STORE_FAST(arg=3, lineno=1142)
>         52	LOAD_FAST(arg=0, lineno=1144)
          54	LOAD_CONST(arg=2, lineno=1144)
          56	BINARY_SUBSCR(arg=None, lineno=1144)
          60	STORE_FAST(arg=4, lineno=1144)
          62	LOAD_FAST(arg=1, lineno=1145)
          64	UNARY_NEGATIVE(arg=None, lineno=1145)
          66	LOAD_FAST(arg=4, lineno=1145)
          68	SWAP(arg=2, lineno=1145)
          70	COPY(arg=2, lineno=1145)
          72	COMPARE_OP(arg=58, lineno=1145)
          76	POP_JUMP_IF_FALSE(arg=6, lineno=1145)
          80	LOAD_FAST(arg=1, lineno=1145)
          82	COMPARE_OP(arg=58, lineno=1145)
          86	POP_JUMP_IF_FALSE(arg=5, lineno=1145)
          90	JUMP_FORWARD(arg=2, lineno=1145)
>         92	POP_TOP(arg=None, lineno=1145)
          94	JUMP_FORWARD(arg=2, lineno=1145)
>         96	LOAD_CONST(arg=1, lineno=1146)
          98	STORE_FAST(arg=4, lineno=1146)
>        100	LOAD_FAST(arg=2, lineno=1148)
         102	TO_BOOL(arg=None, lineno=1148)
         110	POP_JUMP_IF_FALSE(arg=45, lineno=1148)
         114	LOAD_GLOBAL(arg=0, lineno=1149)
         124	LOAD_ATTR(arg=2, lineno=1149)
         144	PUSH_NULL(arg=None, lineno=1149)
         146	LOAD_FAST(arg=3, lineno=1149)
         148	CALL(arg=1, lineno=1149)
         156	LOAD_GLOBAL(arg=0, lineno=1149)
         166	LOAD_ATTR(arg=2, lineno=1149)
         186	PUSH_NULL(arg=None, lineno=1149)
         188	LOAD_FAST(arg=4, lineno=1149)
         190	CALL(arg=1, lineno=1149)
         198	COMPARE_OP(arg=103, lineno=1149)
         202	RETURN_VALUE(arg=None, lineno=1149)
>        204	LOAD_GLOBAL(arg=0, lineno=1151)
         214	LOAD_ATTR(arg=4, lineno=1151)
         234	PUSH_NULL(arg=None, lineno=1151)
         236	LOAD_FAST(arg=3, lineno=1151)
         238	CALL(arg=1, lineno=1151)
         246	LOAD_GLOBAL(arg=0, lineno=1151)
         256	LOAD_ATTR(arg=4, lineno=1151)
         276	PUSH_NULL(arg=None, lineno=1151)
         278	LOAD_FAST(arg=4, lineno=1151)
         280	CALL(arg=1, lineno=1151)
         288	COMPARE_OP(arg=103, lineno=1151)
         292	RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:12:32,907 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:12:32,907 - DEBUG - stack: []
2025-09-26 15:12:32,908 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:12:32,908 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-09-26 15:12:32,908 - DEBUG - stack []
2025-09-26 15:12:32,908 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1137)
2025-09-26 15:12:32,908 - DEBUG - stack []
2025-09-26 15:12:32,909 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1140)
2025-09-26 15:12:32,909 - DEBUG - stack []
2025-09-26 15:12:32,909 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1140)
2025-09-26 15:12:32,909 - DEBUG - stack ['$x4.0']
2025-09-26 15:12:32,909 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-09-26 15:12:32,910 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-09-26 15:12:32,910 - DEBUG - dispatch pc=12, inst=STORE_FAST(arg=3, lineno=1140)
2025-09-26 15:12:32,910 - DEBUG - stack ['$8binary_subscr.2']
2025-09-26 15:12:32,910 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:12:32,910 - DEBUG - stack []
2025-09-26 15:12:32,910 - DEBUG - dispatch pc=16, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-09-26 15:12:32,911 - DEBUG - stack ['$threshold14.3']
2025-09-26 15:12:32,911 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=1141)
2025-09-26 15:12:32,911 - DEBUG - stack ['$16unary_negative.4']
2025-09-26 15:12:32,911 - DEBUG - dispatch pc=20, inst=SWAP(arg=2, lineno=1141)
2025-09-26 15:12:32,911 - DEBUG - stack ['$16unary_negative.4', '$x018.5']
2025-09-26 15:12:32,911 - DEBUG - dispatch pc=22, inst=COPY(arg=2, lineno=1141)
2025-09-26 15:12:32,911 - DEBUG - stack ['$x018.5', '$16unary_negative.4']
2025-09-26 15:12:32,912 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:12:32,912 - DEBUG - stack ['$x018.5', '$16unary_negative.4', '$x018.5']
2025-09-26 15:12:32,912 - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1141)
2025-09-26 15:12:32,912 - DEBUG - stack ['$x018.5', '$24compare_op.6']
2025-09-26 15:12:32,912 - DEBUG - end state. edges=[Edge(pc=32, stack=('$x018.5',), blockstack=(), npush=0), Edge(pc=44, stack=('$x018.5',), blockstack=(), npush=0)]
2025-09-26 15:12:32,912 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=44 nstack_initial=1)])
2025-09-26 15:12:32,913 - DEBUG - stack: ['$phi32.0']
2025-09-26 15:12:32,913 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-09-26 15:12:32,913 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:12:32,913 - DEBUG - stack ['$phi32.0']
2025-09-26 15:12:32,913 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:12:32,913 - DEBUG - stack ['$phi32.0', '$threshold32.1']
2025-09-26 15:12:32,913 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1141)
2025-09-26 15:12:32,914 - DEBUG - stack ['$34compare_op.2']
2025-09-26 15:12:32,914 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:12:32,914 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=1), State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:12:32,914 - DEBUG - stack: ['$phi44.0']
2025-09-26 15:12:32,914 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=1)
2025-09-26 15:12:32,914 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=1141)
2025-09-26 15:12:32,914 - DEBUG - stack ['$phi44.0']
2025-09-26 15:12:32,914 - DEBUG - dispatch pc=46, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:12:32,915 - DEBUG - stack []
2025-09-26 15:12:32,915 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:12:32,915 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:12:32,915 - DEBUG - stack: []
2025-09-26 15:12:32,915 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-09-26 15:12:32,915 - DEBUG - dispatch pc=42, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:12:32,916 - DEBUG - stack []
2025-09-26 15:12:32,916 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0)]
2025-09-26 15:12:32,916 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2025-09-26 15:12:32,916 - DEBUG - stack: []
2025-09-26 15:12:32,916 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-09-26 15:12:32,916 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1144)
2025-09-26 15:12:32,916 - DEBUG - stack []
2025-09-26 15:12:32,917 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=1144)
2025-09-26 15:12:32,917 - DEBUG - stack ['$x52.0']
2025-09-26 15:12:32,917 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-09-26 15:12:32,917 - DEBUG - stack ['$x52.0', '$const54.1.2']
2025-09-26 15:12:32,917 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=4, lineno=1144)
2025-09-26 15:12:32,917 - DEBUG - stack ['$56binary_subscr.2']
2025-09-26 15:12:32,918 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:12:32,918 - DEBUG - stack []
2025-09-26 15:12:32,918 - DEBUG - dispatch pc=64, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-09-26 15:12:32,918 - DEBUG - stack ['$threshold62.3']
2025-09-26 15:12:32,918 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=4, lineno=1145)
2025-09-26 15:12:32,918 - DEBUG - stack ['$64unary_negative.4']
2025-09-26 15:12:32,918 - DEBUG - dispatch pc=68, inst=SWAP(arg=2, lineno=1145)
2025-09-26 15:12:32,918 - DEBUG - stack ['$64unary_negative.4', '$x166.5']
2025-09-26 15:12:32,919 - DEBUG - dispatch pc=70, inst=COPY(arg=2, lineno=1145)
2025-09-26 15:12:32,919 - DEBUG - stack ['$x166.5', '$64unary_negative.4']
2025-09-26 15:12:32,919 - DEBUG - dispatch pc=72, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:12:32,919 - DEBUG - stack ['$x166.5', '$64unary_negative.4', '$x166.5']
2025-09-26 15:12:32,919 - DEBUG - dispatch pc=76, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1145)
2025-09-26 15:12:32,919 - DEBUG - stack ['$x166.5', '$72compare_op.6']
2025-09-26 15:12:32,919 - DEBUG - end state. edges=[Edge(pc=80, stack=('$x166.5',), blockstack=(), npush=0), Edge(pc=92, stack=('$x166.5',), blockstack=(), npush=0)]
2025-09-26 15:12:32,920 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:12:32,920 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:12:32,920 - DEBUG - stack: []
2025-09-26 15:12:32,920 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-09-26 15:12:32,920 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1142)
2025-09-26 15:12:32,920 - DEBUG - stack []
2025-09-26 15:12:32,920 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=3, lineno=1142)
2025-09-26 15:12:32,920 - DEBUG - stack ['$const48.0.1']
2025-09-26 15:12:32,920 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:12:32,921 - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:12:32,921 - DEBUG - stack: ['$phi80.0']
2025-09-26 15:12:32,921 - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-09-26 15:12:32,921 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:12:32,921 - DEBUG - stack ['$phi80.0']
2025-09-26 15:12:32,921 - DEBUG - dispatch pc=82, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:12:32,921 - DEBUG - stack ['$phi80.0', '$threshold80.1']
2025-09-26 15:12:32,921 - DEBUG - dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1145)
2025-09-26 15:12:32,921 - DEBUG - stack ['$82compare_op.2']
2025-09-26 15:12:32,922 - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:12:32,922 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:12:32,922 - DEBUG - stack: ['$phi92.0']
2025-09-26 15:12:32,922 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=1)
2025-09-26 15:12:32,922 - DEBUG - dispatch pc=92, inst=POP_TOP(arg=None, lineno=1145)
2025-09-26 15:12:32,922 - DEBUG - stack ['$phi92.0']
2025-09-26 15:12:32,922 - DEBUG - dispatch pc=94, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:12:32,923 - DEBUG - stack []
2025-09-26 15:12:32,923 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:12:32,923 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:12:32,923 - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:12:32,923 - DEBUG - stack: []
2025-09-26 15:12:32,923 - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-09-26 15:12:32,923 - DEBUG - dispatch pc=90, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:12:32,923 - DEBUG - stack []
2025-09-26 15:12:32,923 - DEBUG - end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-09-26 15:12:32,924 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-09-26 15:12:32,924 - DEBUG - stack: []
2025-09-26 15:12:32,924 - DEBUG - state.pc_initial: State(pc_initial=100 nstack_initial=0)
2025-09-26 15:12:32,924 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=2, lineno=1148)
2025-09-26 15:12:32,924 - DEBUG - stack []
2025-09-26 15:12:32,924 - DEBUG - dispatch pc=102, inst=TO_BOOL(arg=None, lineno=1148)
2025-09-26 15:12:32,924 - DEBUG - stack ['$zero_pos100.0']
2025-09-26 15:12:32,924 - DEBUG - dispatch pc=110, inst=POP_JUMP_IF_FALSE(arg=45, lineno=1148)
2025-09-26 15:12:32,924 - DEBUG - stack ['$102to_bool.1']
2025-09-26 15:12:32,925 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=204, stack=(), blockstack=(), npush=0)]
2025-09-26 15:12:32,925 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:12:32,925 - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:12:32,925 - DEBUG - stack: []
2025-09-26 15:12:32,925 - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2025-09-26 15:12:32,925 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=1, lineno=1146)
2025-09-26 15:12:32,925 - DEBUG - stack []
2025-09-26 15:12:32,925 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=4, lineno=1146)
2025-09-26 15:12:32,925 - DEBUG - stack ['$const96.0.1']
2025-09-26 15:12:32,926 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:12:32,926 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:12:32,926 - DEBUG - stack: []
2025-09-26 15:12:32,926 - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2025-09-26 15:12:32,926 - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:12:32,926 - DEBUG - stack []
2025-09-26 15:12:32,926 - DEBUG - dispatch pc=124, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:12:32,926 - DEBUG - stack ['$114load_global.0']
2025-09-26 15:12:32,926 - DEBUG - dispatch pc=144, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:12:32,927 - DEBUG - stack ['$124load_attr.1']
2025-09-26 15:12:32,927 - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=3, lineno=1149)
2025-09-26 15:12:32,927 - DEBUG - stack ['$124load_attr.1', '$null$144.2']
2025-09-26 15:12:32,927 - DEBUG - dispatch pc=148, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:12:32,927 - DEBUG - stack ['$124load_attr.1', '$null$144.2', '$x0146.3']
2025-09-26 15:12:32,927 - DEBUG - dispatch pc=156, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:12:32,927 - DEBUG - stack ['$148call.4']
2025-09-26 15:12:32,927 - DEBUG - dispatch pc=166, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:12:32,927 - DEBUG - stack ['$148call.4', '$156load_global.5']
2025-09-26 15:12:32,927 - DEBUG - dispatch pc=186, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:12:32,928 - DEBUG - stack ['$148call.4', '$166load_attr.6']
2025-09-26 15:12:32,928 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=4, lineno=1149)
2025-09-26 15:12:32,928 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7']
2025-09-26 15:12:32,928 - DEBUG - dispatch pc=190, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:12:32,928 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7', '$x1188.8']
2025-09-26 15:12:32,928 - DEBUG - dispatch pc=198, inst=COMPARE_OP(arg=103, lineno=1149)
2025-09-26 15:12:32,928 - DEBUG - stack ['$148call.4', '$190call.9']
2025-09-26 15:12:32,928 - DEBUG - dispatch pc=202, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-09-26 15:12:32,929 - DEBUG - stack ['$198compare_op.10']
2025-09-26 15:12:32,929 - DEBUG - end state. edges=[]
2025-09-26 15:12:32,929 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:12:32,929 - DEBUG - stack: []
2025-09-26 15:12:32,929 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=0)
2025-09-26 15:12:32,929 - DEBUG - dispatch pc=204, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:12:32,929 - DEBUG - stack []
2025-09-26 15:12:32,929 - DEBUG - dispatch pc=214, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:12:32,929 - DEBUG - stack ['$204load_global.0']
2025-09-26 15:12:32,930 - DEBUG - dispatch pc=234, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:12:32,930 - DEBUG - stack ['$214load_attr.1']
2025-09-26 15:12:32,930 - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=3, lineno=1151)
2025-09-26 15:12:32,930 - DEBUG - stack ['$214load_attr.1', '$null$234.2']
2025-09-26 15:12:32,930 - DEBUG - dispatch pc=238, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:12:32,930 - DEBUG - stack ['$214load_attr.1', '$null$234.2', '$x0236.3']
2025-09-26 15:12:32,930 - DEBUG - dispatch pc=246, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:12:32,931 - DEBUG - stack ['$238call.4']
2025-09-26 15:12:32,931 - DEBUG - dispatch pc=256, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:12:32,931 - DEBUG - stack ['$238call.4', '$246load_global.5']
2025-09-26 15:12:32,931 - DEBUG - dispatch pc=276, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:12:32,931 - DEBUG - stack ['$238call.4', '$256load_attr.6']
2025-09-26 15:12:32,931 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=4, lineno=1151)
2025-09-26 15:12:32,931 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7']
2025-09-26 15:12:32,931 - DEBUG - dispatch pc=280, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:12:32,932 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7', '$x1278.8']
2025-09-26 15:12:32,932 - DEBUG - dispatch pc=288, inst=COMPARE_OP(arg=103, lineno=1151)
2025-09-26 15:12:32,932 - DEBUG - stack ['$238call.4', '$280call.9']
2025-09-26 15:12:32,932 - DEBUG - dispatch pc=292, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:12:32,932 - DEBUG - stack ['$288compare_op.10']
2025-09-26 15:12:32,932 - DEBUG - end state. edges=[]
2025-09-26 15:12:32,932 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:12:32,933 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:12:32,933 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=1): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=204 nstack_initial=0): set()})
2025-09-26 15:12:32,933 - DEBUG - defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi44.0': State(pc_initial=0 nstack_initial=0),
 '$phi80.0': State(pc_initial=52 nstack_initial=0),
 '$phi92.0': State(pc_initial=52 nstack_initial=0)}
2025-09-26 15:12:32,933 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:12:32,934 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:12:32,934 - DEBUG - keep phismap: {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
 '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}}
2025-09-26 15:12:32,934 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$x018.5'},
             State(pc_initial=52 nstack_initial=0): {'$phi80.0': '$x166.5'}})
2025-09-26 15:12:32,934 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:12:32,934 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'value': '$8binary_subscr.2'}), (14, {'res': '$threshold14.3'}), (16, {'value': '$threshold14.3', 'res': '$16unary_negative.4'}), (18, {'res': '$x018.5'}), (24, {'lhs': '$16unary_negative.4', 'rhs': '$x018.5', 'res': '$24compare_op.6'}), (28, {'pred': '$24compare_op.6'})), outgoing_phis={'$phi32.0': '$x018.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$x018.5',), 44: ('$x018.5',)})
2025-09-26 15:12:32,935 - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'res': '$threshold32.1'}), (34, {'lhs': '$phi32.0', 'rhs': '$threshold32.1', 'res': '$34compare_op.2'}), (38, {'pred': '$34compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 52: ()})
2025-09-26 15:12:32,935 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ()})
2025-09-26 15:12:32,935 - DEBUG - block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((46, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:12:32,935 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$const48.0.1'}), (50, {'value': '$const48.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:12:32,935 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$x52.0'}), (54, {'res': '$const54.1.2'}), (56, {'index': '$const54.1.2', 'target': '$x52.0', 'res': '$56binary_subscr.2'}), (60, {'value': '$56binary_subscr.2'}), (62, {'res': '$threshold62.3'}), (64, {'value': '$threshold62.3', 'res': '$64unary_negative.4'}), (66, {'res': '$x166.5'}), (72, {'lhs': '$64unary_negative.4', 'rhs': '$x166.5', 'res': '$72compare_op.6'}), (76, {'pred': '$72compare_op.6'})), outgoing_phis={'$phi80.0': '$x166.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$x166.5',), 92: ('$x166.5',)})
2025-09-26 15:12:32,935 - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$threshold80.1'}), (82, {'lhs': '$phi80.0', 'rhs': '$threshold80.1', 'res': '$82compare_op.2'}), (86, {'pred': '$82compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 100: ()})
2025-09-26 15:12:32,936 - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
2025-09-26 15:12:32,936 - DEBUG - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((94, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:12:32,936 - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$const96.0.1'}), (98, {'value': '$const96.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:12:32,936 - DEBUG - block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$zero_pos100.0'}), (102, {'val': '$zero_pos100.0', 'res': '$102to_bool.1'}), (110, {'pred': '$102to_bool.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 204: ()})
2025-09-26 15:12:32,936 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'idx': 0, 'res': '$114load_global.0'}), (124, {'item': '$114load_global.0', 'res': '$124load_attr.1'}), (144, {}), (146, {'res': '$x0146.3'}), (148, {'func': '$124load_attr.1', 'args': ['$x0146.3'], 'kw_names': None, 'res': '$148call.4'}), (156, {'idx': 0, 'res': '$156load_global.5'}), (166, {'item': '$156load_global.5', 'res': '$166load_attr.6'}), (186, {}), (188, {'res': '$x1188.8'}), (190, {'func': '$166load_attr.6', 'args': ['$x1188.8'], 'kw_names': None, 'res': '$190call.9'}), (198, {'lhs': '$148call.4', 'rhs': '$190call.9', 'res': '$198compare_op.10'}), (202, {'retval': '$198compare_op.10', 'castval': '$202return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:12:32,936 - DEBUG - block_infos State(pc_initial=204 nstack_initial=0):
AdaptBlockInfo(insts=((204, {'idx': 0, 'res': '$204load_global.0'}), (214, {'item': '$204load_global.0', 'res': '$214load_attr.1'}), (234, {}), (236, {'res': '$x0236.3'}), (238, {'func': '$214load_attr.1', 'args': ['$x0236.3'], 'kw_names': None, 'res': '$238call.4'}), (246, {'idx': 0, 'res': '$246load_global.5'}), (256, {'item': '$246load_global.5', 'res': '$256load_attr.6'}), (276, {}), (278, {'res': '$x1278.8'}), (280, {'func': '$256load_attr.6', 'args': ['$x1278.8'], 'kw_names': None, 'res': '$280call.9'}), (288, {'lhs': '$238call.4', 'rhs': '$280call.9', 'res': '$288compare_op.10'}), (292, {'retval': '$288compare_op.10', 'castval': '$292return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:12:32,937 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    x0 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$const6.1.1', 'x', 'x0']
    $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$16unary_negative.4', 'threshold']
    $24compare_op.6 = $16unary_negative.4 <= x0 ['$16unary_negative.4', '$24compare_op.6', 'x0']
    $bool28 = global(bool: <class 'bool'>)   ['$bool28']
    $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.6', '$28pred', '$bool28']
    $phi32.0 = x0                            ['$phi32.0', 'x0']
    branch $28pred, 32, 44                   ['$28pred']
label 32:
    $34compare_op.2 = $phi32.0 <= threshold  ['$34compare_op.2', '$phi32.0', 'threshold']
    $bool38 = global(bool: <class 'bool'>)   ['$bool38']
    $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.2', '$38pred', '$bool38']
    branch $38pred, 42, 52                   ['$38pred']
label 42:
    jump 48                                  []
label 44:
    jump 52                                  []
label 48:
    x0 = const(int, 0)                       ['x0']
    jump 52                                  []
label 52:
    $const54.1.2 = const(int, -1)            ['$const54.1.2']
    x1 = getitem(value=x, index=$const54.1.2, fn=<built-in function getitem>) ['$const54.1.2', 'x', 'x1']
    $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$64unary_negative.4', 'threshold']
    $72compare_op.6 = $64unary_negative.4 <= x1 ['$64unary_negative.4', '$72compare_op.6', 'x1']
    $bool76 = global(bool: <class 'bool'>)   ['$bool76']
    $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$72compare_op.6', '$76pred', '$bool76']
    $phi80.0 = x1                            ['$phi80.0', 'x1']
    branch $76pred, 80, 92                   ['$76pred']
label 80:
    $82compare_op.2 = $phi80.0 <= threshold  ['$82compare_op.2', '$phi80.0', 'threshold']
    $bool86 = global(bool: <class 'bool'>)   ['$bool86']
    $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$82compare_op.2', '$86pred', '$bool86']
    branch $86pred, 90, 100                  ['$86pred']
label 90:
    jump 96                                  []
label 92:
    jump 100                                 []
label 96:
    x1 = const(int, 0)                       ['x1']
    jump 100                                 []
label 100:
    $bool110 = global(bool: <class 'bool'>)  ['$bool110']
    $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$110pred', '$bool110', 'zero_pos']
    branch $110pred, 114, 204                ['$110pred']
label 114:
    $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$114load_global.0']
    $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit) ['$114load_global.0', '$124load_attr.1']
    $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$124load_attr.1', '$148call.4', 'x0']
    $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$156load_global.5']
    $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit) ['$156load_global.5', '$166load_attr.6']
    $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.6', '$190call.9', 'x1']
    $198compare_op.10 = $148call.4 != $190call.9 ['$148call.4', '$190call.9', '$198compare_op.10']
    $202return_value.11 = cast(value=$198compare_op.10) ['$198compare_op.10', '$202return_value.11']
    return $202return_value.11               ['$202return_value.11']
label 204:
    $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$204load_global.0']
    $214load_attr.1 = getattr(value=$204load_global.0, attr=sign) ['$204load_global.0', '$214load_attr.1']
    $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.1', '$238call.4', 'x0']
    $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$246load_global.5']
    $256load_attr.6 = getattr(value=$246load_global.5, attr=sign) ['$246load_global.5', '$256load_attr.6']
    $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$256load_attr.6', '$280call.9', 'x1']
    $288compare_op.10 = $238call.4 != $280call.9 ['$238call.4', '$280call.9', '$288compare_op.10']
    $292return_value.11 = cast(value=$288compare_op.10) ['$288compare_op.10', '$292return_value.11']
    return $292return_value.11               ['$292return_value.11']

2025-09-26 15:12:32,942 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1154)
           2	RESUME(arg=0, lineno=1154)
           4	LOAD_GLOBAL(arg=1, lineno=1170)
          14	LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
          16	LOAD_FAST(arg=2, lineno=1170)
          18	CALL(arg=3, lineno=1170)
          26	LOAD_FAST(arg=3, lineno=1170)
          28	LOAD_CONST(arg=1, lineno=1170)
          30	LOAD_CONST(arg=1, lineno=1170)
          32	STORE_SLICE(arg=None, lineno=1170)
          34	RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:12:32,943 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:12:32,943 - DEBUG - stack: []
2025-09-26 15:12:32,943 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:12:32,943 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1154)
2025-09-26 15:12:32,943 - DEBUG - stack []
2025-09-26 15:12:32,943 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1154)
2025-09-26 15:12:32,944 - DEBUG - stack []
2025-09-26 15:12:32,944 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1170)
2025-09-26 15:12:32,944 - DEBUG - stack []
2025-09-26 15:12:32,944 - DEBUG - dispatch pc=14, inst=LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
2025-09-26 15:12:32,944 - DEBUG - stack ['$4load_global.0', '$null$4.1']
2025-09-26 15:12:32,944 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=1170)
2025-09-26 15:12:32,944 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3']
2025-09-26 15:12:32,945 - DEBUG - dispatch pc=18, inst=CALL(arg=3, lineno=1170)
2025-09-26 15:12:32,945 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3', '$zero_pos16.4']
2025-09-26 15:12:32,945 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=3, lineno=1170)
2025-09-26 15:12:32,945 - DEBUG - stack ['$18call.5']
2025-09-26 15:12:32,945 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:12:32,945 - DEBUG - stack ['$18call.5', '$y26.6']
2025-09-26 15:12:32,945 - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:12:32,946 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1']
2025-09-26 15:12:32,946 - DEBUG - dispatch pc=32, inst=STORE_SLICE(arg=None, lineno=1170)
2025-09-26 15:12:32,946 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1', '$const30.8.1']
2025-09-26 15:12:32,946 - DEBUG - dispatch pc=34, inst=RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:12:32,946 - DEBUG - stack []
2025-09-26 15:12:32,946 - DEBUG - end state. edges=[]
2025-09-26 15:12:32,946 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:12:32,946 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-09-26 15:12:32,947 - DEBUG - defmap: {}
2025-09-26 15:12:32,947 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:12:32,947 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:12:32,947 - DEBUG - keep phismap: {}
2025-09-26 15:12:32,947 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-09-26 15:12:32,947 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:12:32,947 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res1': '$x14.2', 'res2': '$threshold14.3'}), (16, {'res': '$zero_pos16.4'}), (18, {'func': '$4load_global.0', 'args': ['$x14.2', '$threshold14.3', '$zero_pos16.4'], 'kw_names': None, 'res': '$18call.5'}), (26, {'res': '$y26.6'}), (28, {'res': '$const28.7.1'}), (30, {'res': '$const30.8.1'}), (32, {'start': '$const28.7.1', 'end': '$const30.8.1', 'container': '$y26.6', 'value': '$18call.5', 'res': '$32store_slice.10', 'slicevar': '$32store_slice.9'}), (34, {'retval': '$const34.11', 'castval': '$34return_const.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:12:32,948 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002D290157610>) ['$4load_global.0']
    $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const28.7.1 = const(NoneType, None)     ['$const28.7.1']
    $const30.8.1 = const(NoneType, None)     ['$const30.8.1']
    $32store_slice.9 = global(slice: <class 'slice'>) ['$32store_slice.9']
    $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$32store_slice.10', '$32store_slice.9', '$const28.7.1', '$const30.8.1']
    y[$32store_slice.10] = $18call.5         ['$18call.5', '$32store_slice.10', 'y']
    $const34.11 = const(NoneType, None)      ['$const34.11']
    $34return_const.12 = cast(value=$const34.11) ['$34return_const.12', '$const34.11']
    return $34return_const.12                ['$34return_const.12']

2025-09-26 15:12:32,951 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:12:32,951 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290548690>
2025-09-26 15:12:32,952 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:12:32,952 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:12:32,952 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:12:32,952 - DEBUG - on stmt: y = arg(3, name=y)
2025-09-26 15:12:32,952 - DEBUG - on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000002D290157610>)
2025-09-26 15:12:32,952 - DEBUG - on stmt: $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:32,952 - DEBUG - on stmt: $const28.7.1 = const(NoneType, None)
2025-09-26 15:12:32,953 - DEBUG - on stmt: $const30.8.1 = const(NoneType, None)
2025-09-26 15:12:32,953 - DEBUG - on stmt: $32store_slice.9 = global(slice: <class 'slice'>)
2025-09-26 15:12:32,953 - DEBUG - on stmt: $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:32,953 - DEBUG - on stmt: y[slice(None, None, None)] = $18call.5
2025-09-26 15:12:32,953 - DEBUG - on stmt: $const34.11 = const(NoneType, None)
2025-09-26 15:12:32,953 - DEBUG - on stmt: $34return_const.12 = cast(value=$const34.11)
2025-09-26 15:12:32,953 - DEBUG - on stmt: return $34return_const.12
2025-09-26 15:12:32,953 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.5': [(<numba.core.ir.Assign object at 0x000002D290594830>,
                            0)],
             '$32store_slice.10': [(<numba.core.ir.Assign object at 0x000002D290594D70>,
                                    0)],
             '$32store_slice.9': [(<numba.core.ir.Assign object at 0x000002D290594C50>,
                                   0)],
             '$34return_const.12': [(<numba.core.ir.Assign object at 0x000002D290594FB0>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000002D2905945F0>,
                                  0)],
             '$const28.7.1': [(<numba.core.ir.Assign object at 0x000002D290594A10>,
                               0)],
             '$const30.8.1': [(<numba.core.ir.Assign object at 0x000002D290594B30>,
                               0)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x000002D290594E90>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002D2901D5790>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002D2901D5310>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000002D2901D5670>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002D2901D5730>,
                           0)]})
2025-09-26 15:12:32,954 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002D290548690>
2025-09-26 15:12:32,999 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=3, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=3, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	LOAD_CONST(arg=1, lineno=3)
          92	CALL_KW(arg=2, lineno=3)
          94	STORE_FAST(arg=4, lineno=3)
          96	LOAD_CONST(arg=2, lineno=4)
          98	LOAD_FAST(arg=4, lineno=4)
         100	LOAD_CONST(arg=0, lineno=4)
         102	LOAD_CONST(arg=3, lineno=4)
         104	STORE_SLICE(arg=None, lineno=4)
         106	LOAD_CONST(arg=2, lineno=5)
         108	LOAD_FAST(arg=4, lineno=5)
         110	LOAD_CONST(arg=2, lineno=5)
         112	LOAD_CONST(arg=0, lineno=5)
         114	STORE_SLICE(arg=None, lineno=5)
         116	LOAD_GLOBAL(arg=9, lineno=6)
         126	LOAD_GLOBAL(arg=11, lineno=6)
         136	LOAD_CONST(arg=2, lineno=6)
         138	LOAD_CONST(arg=4, lineno=6)
         140	CALL(arg=2, lineno=6)
         148	UNARY_NEGATIVE(arg=None, lineno=6)
         150	LOAD_FAST(arg=3, lineno=6)
         152	LOAD_CONST(arg=2, lineno=6)
         154	BINARY_SUBSCR(arg=None, lineno=6)
         158	LOAD_GLOBAL(arg=13, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	LOAD_CONST(arg=2, lineno=6)
         172	CALL(arg=2, lineno=6)
         180	BINARY_OP(arg=10, lineno=6)
         184	CALL(arg=2, lineno=6)
         192	GET_ITER(arg=None, lineno=6)
>        194	FOR_ITER(arg=5, lineno=6)
         198	STORE_FAST(arg=5, lineno=6)
         200	LOAD_CONST(arg=2, lineno=7)
         202	STORE_FAST(arg=6, lineno=7)
         204	JUMP_BACKWARD(arg=7, lineno=7)
>        208	END_FOR(arg=None, lineno=6)
         210	POP_TOP(arg=None, lineno=6)
         212	LOAD_FAST(arg=4, lineno=8)
         214	RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:12:33,000 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:12:33,000 - DEBUG - stack: []
2025-09-26 15:12:33,000 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:12:33,000 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-09-26 15:12:33,000 - DEBUG - stack []
2025-09-26 15:12:33,000 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2025-09-26 15:12:33,000 - DEBUG - stack []
2025-09-26 15:12:33,000 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2025-09-26 15:12:33,001 - DEBUG - stack []
2025-09-26 15:12:33,001 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2025-09-26 15:12:33,001 - DEBUG - stack ['$x4.0']
2025-09-26 15:12:33,001 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=3, lineno=2)
2025-09-26 15:12:33,001 - DEBUG - stack ['$6load_attr.1']
2025-09-26 15:12:33,001 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:12:33,001 - DEBUG - stack []
2025-09-26 15:12:33,001 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2025-09-26 15:12:33,001 - DEBUG - stack ['$28load_global.2']
2025-09-26 15:12:33,001 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=3, lineno=3)
2025-09-26 15:12:33,002 - DEBUG - stack ['$38load_attr.3', '$null$38.4']
2025-09-26 15:12:33,002 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:12:33,002 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5']
2025-09-26 15:12:33,002 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2025-09-26 15:12:33,002 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$60load_global.6']
2025-09-26 15:12:33,002 - DEBUG - dispatch pc=90, inst=LOAD_CONST(arg=1, lineno=3)
2025-09-26 15:12:33,002 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7']
2025-09-26 15:12:33,002 - DEBUG - dispatch pc=92, inst=CALL_KW(arg=2, lineno=3)
2025-09-26 15:12:33,003 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7', '$const90.8.1']
2025-09-26 15:12:33,003 - DEBUG - dispatch pc=94, inst=STORE_FAST(arg=4, lineno=3)
2025-09-26 15:12:33,003 - DEBUG - stack ['$92call_kw.9']
2025-09-26 15:12:33,003 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=2, lineno=4)
2025-09-26 15:12:33,003 - DEBUG - stack []
2025-09-26 15:12:33,003 - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=4)
2025-09-26 15:12:33,003 - DEBUG - stack ['$const96.10.2']
2025-09-26 15:12:33,003 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=0, lineno=4)
2025-09-26 15:12:33,003 - DEBUG - stack ['$const96.10.2', '$out098.11']
2025-09-26 15:12:33,004 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=3, lineno=4)
2025-09-26 15:12:33,004 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0']
2025-09-26 15:12:33,004 - DEBUG - dispatch pc=104, inst=STORE_SLICE(arg=None, lineno=4)
2025-09-26 15:12:33,004 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0', '$const102.13.3']
2025-09-26 15:12:33,004 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:12:33,004 - DEBUG - stack []
2025-09-26 15:12:33,004 - DEBUG - dispatch pc=108, inst=LOAD_FAST(arg=4, lineno=5)
2025-09-26 15:12:33,004 - DEBUG - stack ['$const106.16.2']
2025-09-26 15:12:33,004 - DEBUG - dispatch pc=110, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:12:33,005 - DEBUG - stack ['$const106.16.2', '$out0108.17']
2025-09-26 15:12:33,005 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=0, lineno=5)
2025-09-26 15:12:33,005 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2']
2025-09-26 15:12:33,005 - DEBUG - dispatch pc=114, inst=STORE_SLICE(arg=None, lineno=5)
2025-09-26 15:12:33,005 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2', '$const112.19.0']
2025-09-26 15:12:33,005 - DEBUG - dispatch pc=116, inst=LOAD_GLOBAL(arg=9, lineno=6)
2025-09-26 15:12:33,006 - DEBUG - stack []
2025-09-26 15:12:33,006 - DEBUG - dispatch pc=126, inst=LOAD_GLOBAL(arg=11, lineno=6)
2025-09-26 15:12:33,006 - DEBUG - stack ['$116load_global.22', '$null$116.23']
2025-09-26 15:12:33,006 - DEBUG - dispatch pc=136, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:12:33,006 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25']
2025-09-26 15:12:33,006 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=4, lineno=6)
2025-09-26 15:12:33,006 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2']
2025-09-26 15:12:33,006 - DEBUG - dispatch pc=140, inst=CALL(arg=2, lineno=6)
2025-09-26 15:12:33,006 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2', '$const138.27.4']
2025-09-26 15:12:33,007 - DEBUG - dispatch pc=148, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-09-26 15:12:33,007 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$140call.28']
2025-09-26 15:12:33,007 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=3, lineno=6)
2025-09-26 15:12:33,007 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29']
2025-09-26 15:12:33,007 - DEBUG - dispatch pc=152, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:12:33,007 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30']
2025-09-26 15:12:33,007 - DEBUG - dispatch pc=154, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-09-26 15:12:33,007 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30', '$const152.31.2']
2025-09-26 15:12:33,008 - DEBUG - dispatch pc=158, inst=LOAD_GLOBAL(arg=13, lineno=6)
2025-09-26 15:12:33,008 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32']
2025-09-26 15:12:33,008 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:12:33,008 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34']
2025-09-26 15:12:33,008 - DEBUG - dispatch pc=170, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:12:33,008 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2']
2025-09-26 15:12:33,008 - DEBUG - dispatch pc=172, inst=CALL(arg=2, lineno=6)
2025-09-26 15:12:33,008 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2', '$const170.36.2']
2025-09-26 15:12:33,009 - DEBUG - dispatch pc=180, inst=BINARY_OP(arg=10, lineno=6)
2025-09-26 15:12:33,009 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$172call.37']
2025-09-26 15:12:33,009 - DEBUG - dispatch pc=184, inst=CALL(arg=2, lineno=6)
2025-09-26 15:12:33,009 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$binop_sub180.38']
2025-09-26 15:12:33,009 - DEBUG - dispatch pc=192, inst=GET_ITER(arg=None, lineno=6)
2025-09-26 15:12:33,009 - DEBUG - stack ['$184call.39']
2025-09-26 15:12:33,009 - DEBUG - end state. edges=[Edge(pc=194, stack=('$192get_iter.40',), blockstack=(), npush=0)]
2025-09-26 15:12:33,010 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:12:33,010 - DEBUG - stack: ['$phi194.0']
2025-09-26 15:12:33,010 - DEBUG - state.pc_initial: State(pc_initial=194 nstack_initial=1)
2025-09-26 15:12:33,010 - DEBUG - dispatch pc=194, inst=FOR_ITER(arg=5, lineno=6)
2025-09-26 15:12:33,010 - DEBUG - stack ['$phi194.0']
2025-09-26 15:12:33,010 - DEBUG - end state. edges=[Edge(pc=208, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0), Edge(pc=198, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0)]
2025-09-26 15:12:33,010 - DEBUG - pending: deque([State(pc_initial=208 nstack_initial=2), State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:12:33,011 - DEBUG - stack: ['$phi208.0', '$phi208.1']
2025-09-26 15:12:33,011 - DEBUG - state.pc_initial: State(pc_initial=208 nstack_initial=2)
2025-09-26 15:12:33,011 - DEBUG - dispatch pc=208, inst=END_FOR(arg=None, lineno=6)
2025-09-26 15:12:33,011 - DEBUG - stack ['$phi208.0', '$phi208.1']
2025-09-26 15:12:33,011 - DEBUG - dispatch pc=210, inst=POP_TOP(arg=None, lineno=6)
2025-09-26 15:12:33,011 - DEBUG - stack ['$phi208.0']
2025-09-26 15:12:33,012 - DEBUG - dispatch pc=212, inst=LOAD_FAST(arg=4, lineno=8)
2025-09-26 15:12:33,012 - DEBUG - stack []
2025-09-26 15:12:33,012 - DEBUG - dispatch pc=214, inst=RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:12:33,012 - DEBUG - stack ['$out0212.2']
2025-09-26 15:12:33,012 - DEBUG - end state. edges=[]
2025-09-26 15:12:33,012 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:12:33,012 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2025-09-26 15:12:33,012 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2025-09-26 15:12:33,013 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=5, lineno=6)
2025-09-26 15:12:33,013 - DEBUG - stack ['$phi198.0', '$phi198.1']
2025-09-26 15:12:33,013 - DEBUG - dispatch pc=200, inst=LOAD_CONST(arg=2, lineno=7)
2025-09-26 15:12:33,013 - DEBUG - stack ['$phi198.0']
2025-09-26 15:12:33,013 - DEBUG - dispatch pc=202, inst=STORE_FAST(arg=6, lineno=7)
2025-09-26 15:12:33,013 - DEBUG - stack ['$phi198.0', '$const200.2.2']
2025-09-26 15:12:33,013 - DEBUG - dispatch pc=204, inst=JUMP_BACKWARD(arg=7, lineno=7)
2025-09-26 15:12:33,013 - DEBUG - stack ['$phi198.0']
2025-09-26 15:12:33,014 - DEBUG - end state. edges=[Edge(pc=194, stack=('$phi198.0',), blockstack=(), npush=0)]
2025-09-26 15:12:33,014 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:12:33,014 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:12:33,014 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=194 nstack_initial=1): {'$phi194.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=208 nstack_initial=2): set()})
2025-09-26 15:12:33,014 - DEBUG - defmap: {'$phi194.0': State(pc_initial=0 nstack_initial=0),
 '$phi198.1': State(pc_initial=194 nstack_initial=1),
 '$phi208.1': State(pc_initial=194 nstack_initial=1)}
2025-09-26 15:12:33,014 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi198.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:12:33,015 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:12:33,016 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:12:33,016 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:12:33,016 - DEBUG - keep phismap: {'$phi194.0': {('$192get_iter.40', State(pc_initial=0 nstack_initial=0))},
 '$phi198.1': {('$194for_iter.2', State(pc_initial=194 nstack_initial=1))}}
2025-09-26 15:12:33,017 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi194.0': '$192get_iter.40'},
             State(pc_initial=194 nstack_initial=1): {'$phi198.1': '$194for_iter.2'}})
2025-09-26 15:12:33,017 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:12:33,017 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.3'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (90, {'res': '$const90.8.1'}), (92, {'func': '$38load_attr.3', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': '$const90.8.1', 'res': '$92call_kw.9'}), (94, {'value': '$92call_kw.9'}), (96, {'res': '$const96.10.2'}), (98, {'res': '$out098.11'}), (100, {'res': '$const100.12.0'}), (102, {'res': '$const102.13.3'}), (104, {'start': '$const100.12.0', 'end': '$const102.13.3', 'container': '$out098.11', 'value': '$const96.10.2', 'res': '$104store_slice.15', 'slicevar': '$104store_slice.14'}), (106, {'res': '$const106.16.2'}), (108, {'res': '$out0108.17'}), (110, {'res': '$const110.18.2'}), (112, {'res': '$const112.19.0'}), (114, {'start': '$const110.18.2', 'end': '$const112.19.0', 'container': '$out0108.17', 'value': '$const106.16.2', 'res': '$114store_slice.21', 'slicevar': '$114store_slice.20'}), (116, {'idx': 4, 'res': '$116load_global.22'}), (126, {'idx': 5, 'res': '$126load_global.24'}), (136, {'res': '$const136.26.2'}), (138, {'res': '$const138.27.4'}), (140, {'func': '$126load_global.24', 'args': ['$const136.26.2', '$const138.27.4'], 'kw_names': None, 'res': '$140call.28'}), (148, {'value': '$140call.28', 'res': '$148unary_negative.29'}), (150, {'res': '$full_shape0150.30'}), (152, {'res': '$const152.31.2'}), (154, {'index': '$const152.31.2', 'target': '$full_shape0150.30', 'res': '$154binary_subscr.32'}), (158, {'idx': 6, 'res': '$158load_global.33'}), (168, {'res': '$const168.35.2'}), (170, {'res': '$const170.36.2'}), (172, {'func': '$158load_global.33', 'args': ['$const168.35.2', '$const170.36.2'], 'kw_names': None, 'res': '$172call.37'}), (180, {'op': '-', 'lhs': '$154binary_subscr.32', 'rhs': '$172call.37', 'res': '$binop_sub180.38'}), (184, {'func': '$116load_global.22', 'args': ['$148unary_negative.29', '$binop_sub180.38'], 'kw_names': None, 'res': '$184call.39'}), (192, {'value': '$184call.39', 'res': '$192get_iter.40'})), outgoing_phis={'$phi194.0': '$192get_iter.40'}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$192get_iter.40',)})
2025-09-26 15:12:33,017 - DEBUG - block_infos State(pc_initial=194 nstack_initial=1):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.0', 'pair': '$194for_iter.1', 'indval': '$194for_iter.2', 'pred': '$194for_iter.3'}),), outgoing_phis={'$phi198.1': '$194for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={208: ('$phi194.0', '$194for_iter.2'), 198: ('$phi194.0', '$194for_iter.2')})
2025-09-26 15:12:33,018 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$const200.2.2'}), (202, {'value': '$const200.2.2'}), (204, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$phi198.0',)})
2025-09-26 15:12:33,018 - DEBUG - block_infos State(pc_initial=208 nstack_initial=2):
AdaptBlockInfo(insts=((212, {'res': '$out0212.2'}), (214, {'retval': '$out0212.2', 'castval': '$214return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:12:33,018 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$28load_global.2']
    $38load_attr.3 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.3']
    $60load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool) ['$60load_global.6', '$70load_attr.7']
    $const_dtype = const(str, dtype)         ['$const_dtype']
    $const90.8.1 = build_tuple(items=[Var($const_dtype, <string>:3)]) ['$const90.8.1', '$const_dtype']
    out0 = call $38load_attr.3(full_shape0, func=$38load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.3', '$70load_attr.7', 'full_shape0', 'out0']
    $const96.10.2 = const(int, 0)            ['$const96.10.2']
    $const100.12.0 = const(NoneType, None)   ['$const100.12.0']
    $const102.13.3 = const(int, 1)           ['$const102.13.3']
    $104store_slice.14 = global(slice: <class 'slice'>) ['$104store_slice.14']
    $104store_slice.15 = call $104store_slice.14($const100.12.0, $const102.13.3, func=$104store_slice.14, args=(Var($const100.12.0, <string>:4), Var($const102.13.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$104store_slice.14', '$104store_slice.15', '$const100.12.0', '$const102.13.3']
    out0[$104store_slice.15] = $const96.10.2 ['$104store_slice.15', '$const96.10.2', 'out0']
    $const106.16.2 = const(int, 0)           ['$const106.16.2']
    $const110.18.2 = const(int, 0)           ['$const110.18.2']
    $const112.19.0 = const(NoneType, None)   ['$const112.19.0']
    $114store_slice.20 = global(slice: <class 'slice'>) ['$114store_slice.20']
    $114store_slice.21 = call $114store_slice.20($const110.18.2, $const112.19.0, func=$114store_slice.20, args=(Var($const110.18.2, <string>:5), Var($const112.19.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$114store_slice.20', '$114store_slice.21', '$const110.18.2', '$const112.19.0']
    out0[$114store_slice.21] = $const106.16.2 ['$114store_slice.21', '$const106.16.2', 'out0']
    $116load_global.22 = global(range: <class 'range'>) ['$116load_global.22']
    $126load_global.24 = global(min: <built-in function min>) ['$126load_global.24']
    $const136.26.2 = const(int, 0)           ['$const136.26.2']
    $const138.27.4 = const(int, -1)          ['$const138.27.4']
    $140call.28 = call $126load_global.24($const136.26.2, $const138.27.4, func=$126load_global.24, args=[Var($const136.26.2, <string>:6), Var($const138.27.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_global.24', '$140call.28', '$const136.26.2', '$const138.27.4']
    $148unary_negative.29 = unary(fn=<built-in function neg>, value=$140call.28) ['$140call.28', '$148unary_negative.29']
    $const152.31.2 = const(int, 0)           ['$const152.31.2']
    $154binary_subscr.32 = getitem(value=full_shape0, index=$const152.31.2, fn=<built-in function getitem>) ['$154binary_subscr.32', '$const152.31.2', 'full_shape0']
    $158load_global.33 = global(max: <built-in function max>) ['$158load_global.33']
    $const168.35.2 = const(int, 0)           ['$const168.35.2']
    $const170.36.2 = const(int, 0)           ['$const170.36.2']
    $172call.37 = call $158load_global.33($const168.35.2, $const170.36.2, func=$158load_global.33, args=[Var($const168.35.2, <string>:6), Var($const170.36.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$158load_global.33', '$172call.37', '$const168.35.2', '$const170.36.2']
    $binop_sub180.38 = $154binary_subscr.32 - $172call.37 ['$154binary_subscr.32', '$172call.37', '$binop_sub180.38']
    $184call.39 = call $116load_global.22($148unary_negative.29, $binop_sub180.38, func=$116load_global.22, args=[Var($148unary_negative.29, <string>:6), Var($binop_sub180.38, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.22', '$148unary_negative.29', '$184call.39', '$binop_sub180.38']
    $192get_iter.40 = getiter(value=$184call.39) ['$184call.39', '$192get_iter.40']
    $phi194.0 = $192get_iter.40              ['$192get_iter.40', '$phi194.0']
    jump 194                                 []
label 194:
    $194for_iter.1 = iternext(value=$phi194.0) ['$194for_iter.1', '$phi194.0']
    $194for_iter.2 = pair_first(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.2']
    $194for_iter.3 = pair_second(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.3']
    $phi198.1 = $194for_iter.2               ['$194for_iter.2', '$phi198.1']
    branch $194for_iter.3, 198, 208          ['$194for_iter.3']
label 198:
    index00 = $phi198.1                      ['$phi198.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 194                                 []
label 208:
    $214return_value.3 = cast(value=out0)    ['$214return_value.3', 'out0']
    return $214return_value.3                ['$214return_value.3']

2025-09-26 15:12:33,045 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:12:33,045 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290143230>
2025-09-26 15:12:33,045 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:12:33,045 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:12:33,045 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:12:33,045 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:12:33,046 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,046 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:12:33,046 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,046 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:12:33,046 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:12:33,047 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:12:33,047 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,047 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:12:33,047 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:12:33,047 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:12:33,047 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:33,047 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,048 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:12:33,048 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:12:33,048 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:12:33,049 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:12:33,049 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:33,049 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,049 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:12:33,049 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:12:33,049 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:12:33,049 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:12:33,050 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:12:33,050 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,050 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:12:33,050 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:12:33,050 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:12:33,050 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:12:33,051 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:12:33,051 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:12:33,051 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,051 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:12:33,051 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,052 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:12:33,052 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:12:33,052 - DEBUG - on stmt: jump 194
2025-09-26 15:12:33,052 - DEBUG - ==== SSA block analysis pass on 194
2025-09-26 15:12:33,052 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290143230>
2025-09-26 15:12:33,052 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:12:33,053 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:12:33,053 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:12:33,053 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:12:33,053 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:12:33,053 - DEBUG - ==== SSA block analysis pass on 198
2025-09-26 15:12:33,053 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290143230>
2025-09-26 15:12:33,053 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:12:33,053 - DEBUG - on stmt: jump 208
2025-09-26 15:12:33,053 - DEBUG - ==== SSA block analysis pass on 414
2025-09-26 15:12:33,053 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290143230>
2025-09-26 15:12:33,054 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:12:33,054 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:12:33,054 - DEBUG - ==== SSA block analysis pass on 208
2025-09-26 15:12:33,054 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290143230>
2025-09-26 15:12:33,054 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:12:33,054 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:12:33,054 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:33,054 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:33,054 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:12:33,055 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,055 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,055 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:12:33,055 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:12:33,055 - DEBUG - ==== SSA block analysis pass on 209
2025-09-26 15:12:33,055 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290143230>
2025-09-26 15:12:33,055 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:12:33,055 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,056 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,056 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:12:33,056 - DEBUG - ==== SSA block analysis pass on 241
2025-09-26 15:12:33,056 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290143230>
2025-09-26 15:12:33,056 - DEBUG - on stmt: jump 251
2025-09-26 15:12:33,056 - DEBUG - ==== SSA block analysis pass on 253
2025-09-26 15:12:33,056 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290143230>
2025-09-26 15:12:33,056 - DEBUG - on stmt: jump 257
2025-09-26 15:12:33,056 - DEBUG - ==== SSA block analysis pass on 251
2025-09-26 15:12:33,057 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290143230>
2025-09-26 15:12:33,057 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:12:33,057 - DEBUG - on stmt: jump 257
2025-09-26 15:12:33,057 - DEBUG - ==== SSA block analysis pass on 257
2025-09-26 15:12:33,057 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290143230>
2025-09-26 15:12:33,057 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:12:33,057 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:12:33,057 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:33,057 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:33,058 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:12:33,058 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,058 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,058 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:12:33,058 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:12:33,058 - DEBUG - ==== SSA block analysis pass on 261
2025-09-26 15:12:33,058 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290143230>
2025-09-26 15:12:33,058 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:12:33,058 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,058 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,059 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:12:33,059 - DEBUG - ==== SSA block analysis pass on 289
2025-09-26 15:12:33,059 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290143230>
2025-09-26 15:12:33,059 - DEBUG - on stmt: jump 299
2025-09-26 15:12:33,059 - DEBUG - ==== SSA block analysis pass on 301
2025-09-26 15:12:33,059 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290143230>
2025-09-26 15:12:33,059 - DEBUG - on stmt: jump 305
2025-09-26 15:12:33,059 - DEBUG - ==== SSA block analysis pass on 299
2025-09-26 15:12:33,059 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290143230>
2025-09-26 15:12:33,060 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:12:33,060 - DEBUG - on stmt: jump 305
2025-09-26 15:12:33,060 - DEBUG - ==== SSA block analysis pass on 305
2025-09-26 15:12:33,060 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290143230>
2025-09-26 15:12:33,060 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,060 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,060 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:12:33,061 - DEBUG - ==== SSA block analysis pass on 309
2025-09-26 15:12:33,061 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290143230>
2025-09-26 15:12:33,061 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,061 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:12:33,061 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,061 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,061 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:12:33,061 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,062 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:12:33,062 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:12:33,062 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:12:33,062 - DEBUG - on stmt: jump 413
2025-09-26 15:12:33,062 - DEBUG - ==== SSA block analysis pass on 323
2025-09-26 15:12:33,062 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290143230>
2025-09-26 15:12:33,062 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,063 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:12:33,063 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,063 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,063 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:12:33,063 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,063 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:12:33,063 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:12:33,064 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:12:33,064 - DEBUG - on stmt: jump 413
2025-09-26 15:12:33,064 - DEBUG - ==== SSA block analysis pass on 413
2025-09-26 15:12:33,064 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002D290143230>
2025-09-26 15:12:33,064 - DEBUG - on stmt: jump 194
2025-09-26 15:12:33,064 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104store_slice.14.1': [(<numba.core.ir.Assign object at 0x000002D29074E510>,
                                       0)],
             '$104store_slice.15.1': [(<numba.core.ir.Assign object at 0x000002D29074E630>,
                                       0)],
             '$110pred': [(<numba.core.ir.Assign object at 0x000002D29071CB90>,
                           305)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x000002D290721010>,
                                    309)],
             '$114store_slice.20.1': [(<numba.core.ir.Assign object at 0x000002D29074EB70>,
                                       0)],
             '$114store_slice.21.1': [(<numba.core.ir.Assign object at 0x000002D29074EC90>,
                                       0)],
             '$116load_global.22.1': [(<numba.core.ir.Assign object at 0x000002D29074EDB0>,
                                       0)],
             '$124load_attr.1': [(<numba.core.ir.Assign object at 0x000002D290722750>,
                                  309)],
             '$126load_global.24.1': [(<numba.core.ir.Assign object at 0x000002D29074EED0>,
                                       0)],
             '$140call.28.1': [(<numba.core.ir.Assign object at 0x000002D29074F230>,
                                0)],
             '$148call.4': [(<numba.core.ir.Assign object at 0x000002D290723E90>,
                             309)],
             '$148unary_negative.29.1': [(<numba.core.ir.Assign object at 0x000002D29074F350>,
                                          0)],
             '$154binary_subscr.32.1': [(<numba.core.ir.Assign object at 0x000002D29074F650>,
                                         0)],
             '$156load_global.5': [(<numba.core.ir.Assign object at 0x000002D290725610>,
                                    309)],
             '$158load_global.33.1': [(<numba.core.ir.Assign object at 0x000002D29074F770>,
                                       0)],
             '$166load_attr.6': [(<numba.core.ir.Assign object at 0x000002D290726D50>,
                                  309)],
             '$16unary_negative.4': [(<numba.core.ir.Assign object at 0x000002D2905B7710>,
                                      208)],
             '$172call.37.1': [(<numba.core.ir.Assign object at 0x000002D29074FAD0>,
                                0)],
             '$184call.39.1': [(<numba.core.ir.Assign object at 0x000002D29074FD10>,
                                0)],
             '$190call.9': [(<numba.core.ir.Assign object at 0x000002D2907284D0>,
                             309)],
             '$192get_iter.40.1': [(<numba.core.ir.Assign object at 0x000002D29074FE30>,
                                    0)],
             '$194for_iter.1.1': [(<numba.core.ir.Assign object at 0x000002D29074F410>,
                                   194)],
             '$194for_iter.2.1': [(<numba.core.ir.Assign object at 0x000002D29074FF50>,
                                   194)],
             '$194for_iter.3.1': [(<numba.core.ir.Assign object at 0x000002D2907540B0>,
                                   194)],
             '$198compare_op.10': [(<numba.core.ir.Assign object at 0x000002D290729C10>,
                                    309)],
             '$202return_value.11': [(<numba.core.ir.Assign object at 0x000002D29072B350>,
                                      309)],
             '$204load_global.0': [(<numba.core.ir.Assign object at 0x000002D29072F7D0>,
                                    323)],
             '$214load_attr.1': [(<numba.core.ir.Assign object at 0x000002D290730F50>,
                                  323)],
             '$214return_value.3.1': [(<numba.core.ir.Assign object at 0x000002D2907546B0>,
                                       414)],
             '$238call.4': [(<numba.core.ir.Assign object at 0x000002D290732690>,
                             323)],
             '$246load_global.5': [(<numba.core.ir.Assign object at 0x000002D290733DD0>,
                                    323)],
             '$24compare_op.6': [(<numba.core.ir.Assign object at 0x000002D2905BCE90>,
                                  208)],
             '$256load_attr.6': [(<numba.core.ir.Assign object at 0x000002D29073D550>,
                                  323)],
             '$280call.9': [(<numba.core.ir.Assign object at 0x000002D29073EC90>,
                             323)],
             '$288compare_op.10': [(<numba.core.ir.Assign object at 0x000002D290744410>,
                                    323)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x000002D29074D790>,
                                     0)],
             '$28pred': [(<numba.core.ir.Assign object at 0x000002D2905BFD10>,
                          208)],
             '$292return_value.11': [(<numba.core.ir.Assign object at 0x000002D290745B50>,
                                      323)],
             '$34compare_op.2': [(<numba.core.ir.Assign object at 0x000002D2905C58B0>,
                                  209)],
             '$38load_attr.3.1': [(<numba.core.ir.Assign object at 0x000002D29074D8B0>,
                                   0)],
             '$38pred': [(<numba.core.ir.Assign object at 0x000002D290596330>,
                          209)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x000002D29074DA90>,
                                     0)],
             '$64unary_negative.4': [(<numba.core.ir.Assign object at 0x000002D2905D4350>,
                                      257)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x000002D29074DBB0>,
                                   0)],
             '$72compare_op.6': [(<numba.core.ir.Assign object at 0x000002D2905D5A90>,
                                  257)],
             '$76pred': [(<numba.core.ir.Assign object at 0x000002D2905DC950>,
                          257)],
             '$82compare_op.2': [(<numba.core.ir.Assign object at 0x000002D2907064B0>,
                                  261)],
             '$86pred': [(<numba.core.ir.Assign object at 0x000002D290709370>,
                          261)],
             '$binop_sub180.38.1': [(<numba.core.ir.Assign object at 0x000002D29074FBF0>,
                                     0)],
             '$bool110': [(<numba.core.ir.Assign object at 0x000002D29071B410>,
                           305)],
             '$bool28': [(<numba.core.ir.Assign object at 0x000002D2905BE5D0>,
                          208)],
             '$bool38': [(<numba.core.ir.Assign object at 0x000002D2905C6FF0>,
                          209)],
             '$bool76': [(<numba.core.ir.Assign object at 0x000002D2905D71D0>,
                          257)],
             '$bool86': [(<numba.core.ir.Assign object at 0x000002D290707BF0>,
                          261)],
             '$const100.12.0.1': [(<numba.core.ir.Assign object at 0x000002D29074E2D0>,
                                   0)],
             '$const102.13.3.1': [(<numba.core.ir.Assign object at 0x000002D29074E3F0>,
                                   0)],
             '$const106.16.2.1': [(<numba.core.ir.Assign object at 0x000002D29074E750>,
                                   0)],
             '$const110.18.2.1': [(<numba.core.ir.Assign object at 0x000002D29074E930>,
                                   0)],
             '$const112.19.0.1': [(<numba.core.ir.Assign object at 0x000002D29074EA50>,
                                   0)],
             '$const136.26.2.1': [(<numba.core.ir.Assign object at 0x000002D29074EFF0>,
                                   0)],
             '$const138.27.4.1': [(<numba.core.ir.Assign object at 0x000002D29074F110>,
                                   0)],
             '$const152.31.2.1': [(<numba.core.ir.Assign object at 0x000002D29074F530>,
                                   0)],
             '$const168.35.2.1': [(<numba.core.ir.Assign object at 0x000002D29074F890>,
                                   0)],
             '$const170.36.2.1': [(<numba.core.ir.Assign object at 0x000002D29074F9B0>,
                                   0)],
             '$const54.1.2': [(<numba.core.ir.Assign object at 0x000002D2905D1490>,
                               257)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x000002D2905B4890>,
                              208)],
             '$const90.8.1.1': [(<numba.core.ir.Assign object at 0x000002D29074DDF0>,
                                 0)],
             '$const96.10.2.1': [(<numba.core.ir.Assign object at 0x000002D29074E0F0>,
                                  0)],
             '$const_dtype.1': [(<numba.core.ir.Assign object at 0x000002D29074DCD0>,
                                 0)],
             '$phi194.0.1': [(<numba.core.ir.Assign object at 0x000002D29074D670>,
                              0)],
             '$phi198.1.1': [(<numba.core.ir.Assign object at 0x000002D290754170>,
                              194)],
             '$phi32.0': [(<numba.core.ir.Assign object at 0x000002D2905C1490>,
                           208)],
             '$phi80.0': [(<numba.core.ir.Assign object at 0x000002D2905DE090>,
                           257)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x000002D29074D5B0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x000002D290754290>,
                          198)],
             'out0': [(<numba.core.ir.Assign object at 0x000002D29074DF10>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x000002D2905B30B0>,
                                208),
                               (<numba.core.ir.Assign object at 0x000002D29074C950>,
                                257)],
             'threshold': [(<numba.core.ir.Assign object at 0x000002D29074D2B0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000002D29074D190>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x000002D2905B3110>, 208),
                    (<numba.core.ir.Assign object at 0x000002D2905CE630>, 251)],
             'x1': [(<numba.core.ir.Assign object at 0x000002D29074CA10>, 257),
                    (<numba.core.ir.Assign object at 0x000002D2907185F0>, 299)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000002D29074D3D0>,
                           0)]})
2025-09-26 15:12:33,069 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002D290143230>
2025-09-26 15:12:33,069 - DEBUG - Fix SSA violator on var stencil_index
2025-09-26 15:12:33,069 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:12:33,069 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,069 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:12:33,070 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:12:33,070 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:12:33,070 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:12:33,070 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,070 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:12:33,070 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,070 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:12:33,070 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:12:33,070 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:12:33,071 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,071 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:12:33,071 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:12:33,071 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:12:33,071 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:33,071 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,071 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:12:33,071 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:12:33,072 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:12:33,072 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:12:33,072 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:33,072 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,072 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:12:33,072 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:12:33,072 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:12:33,072 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:12:33,072 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:12:33,073 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,073 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:12:33,073 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:12:33,073 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:12:33,073 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:12:33,073 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:12:33,073 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:12:33,073 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,074 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:12:33,074 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,074 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:12:33,074 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:12:33,074 - DEBUG - on stmt: jump 194
2025-09-26 15:12:33,074 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:12:33,074 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,074 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:12:33,075 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:12:33,075 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:12:33,075 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:12:33,075 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:12:33,075 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:12:33,075 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,075 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:12:33,075 - DEBUG - on stmt: jump 208
2025-09-26 15:12:33,076 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:12:33,076 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,076 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:12:33,076 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:12:33,076 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:12:33,076 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,076 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:12:33,076 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:12:33,077 - DEBUG - first assign: stencil_index
2025-09-26 15:12:33,077 - DEBUG - replaced with: stencil_index = $const6.1.1 + index00
2025-09-26 15:12:33,077 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:33,077 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:33,077 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:12:33,077 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,077 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,077 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:12:33,078 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:12:33,078 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:12:33,078 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,078 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:12:33,078 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,078 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,078 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:12:33,079 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:12:33,079 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,079 - DEBUG - on stmt: jump 251
2025-09-26 15:12:33,079 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:12:33,079 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,079 - DEBUG - on stmt: jump 257
2025-09-26 15:12:33,079 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:12:33,079 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,079 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:12:33,079 - DEBUG - on stmt: jump 257
2025-09-26 15:12:33,080 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:12:33,080 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,080 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:12:33,080 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:12:33,080 - DEBUG - replaced with: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:12:33,080 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:33,080 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:33,080 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:12:33,080 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,081 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,081 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:12:33,081 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:12:33,081 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:12:33,081 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,081 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:12:33,081 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,081 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,081 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:12:33,082 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:12:33,082 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,082 - DEBUG - on stmt: jump 299
2025-09-26 15:12:33,082 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:12:33,082 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,082 - DEBUG - on stmt: jump 305
2025-09-26 15:12:33,082 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:12:33,082 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,082 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:12:33,083 - DEBUG - on stmt: jump 305
2025-09-26 15:12:33,083 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:12:33,083 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,083 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,083 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,083 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:12:33,083 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:12:33,083 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,083 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,084 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:12:33,084 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,084 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,084 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:12:33,084 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,084 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:12:33,084 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:12:33,084 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:12:33,084 - DEBUG - on stmt: jump 413
2025-09-26 15:12:33,085 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:12:33,085 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,085 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,085 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:12:33,085 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,085 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,085 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:12:33,085 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,085 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:12:33,086 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:12:33,086 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:12:33,086 - DEBUG - on stmt: jump 413
2025-09-26 15:12:33,086 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:12:33,086 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,086 - DEBUG - on stmt: jump 194
2025-09-26 15:12:33,086 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002D290778BF0>],
             257: [<numba.core.ir.Assign object at 0x000002D290778E90>]})
2025-09-26 15:12:33,086 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:12:33,087 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,087 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:12:33,087 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:12:33,087 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:12:33,087 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:12:33,087 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,087 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:12:33,087 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,087 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:12:33,088 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:12:33,088 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:12:33,088 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,088 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:12:33,088 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:12:33,088 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:12:33,088 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:33,089 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,089 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:12:33,089 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:12:33,089 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:12:33,089 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:12:33,089 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:33,089 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,089 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:12:33,090 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:12:33,090 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:12:33,090 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:12:33,090 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:12:33,090 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,090 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:12:33,090 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:12:33,091 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:12:33,091 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:12:33,091 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:12:33,091 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:12:33,091 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,091 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:12:33,091 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,092 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:12:33,092 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:12:33,092 - DEBUG - on stmt: jump 194
2025-09-26 15:12:33,092 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:12:33,092 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,092 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:12:33,092 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:12:33,092 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:12:33,093 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:12:33,093 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:12:33,093 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:12:33,093 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,093 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:12:33,093 - DEBUG - on stmt: jump 208
2025-09-26 15:12:33,093 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:12:33,093 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,093 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:12:33,094 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:12:33,094 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:12:33,094 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,094 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:12:33,094 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:12:33,094 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:33,094 - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:33,094 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:33,094 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:12:33,095 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,095 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,095 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:12:33,095 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:12:33,095 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:12:33,095 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,095 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:12:33,095 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,095 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,096 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:12:33,096 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:12:33,096 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,096 - DEBUG - on stmt: jump 251
2025-09-26 15:12:33,096 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:12:33,096 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,096 - DEBUG - on stmt: jump 257
2025-09-26 15:12:33,096 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:12:33,096 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,097 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:12:33,097 - DEBUG - on stmt: jump 257
2025-09-26 15:12:33,097 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:12:33,097 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,097 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:12:33,097 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:12:33,097 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:33,097 - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:33,098 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:12:33,098 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:33,098 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:12:33,098 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,098 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,098 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:12:33,098 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:12:33,098 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:12:33,098 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,099 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:12:33,099 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,099 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,099 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:12:33,099 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:12:33,099 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,099 - DEBUG - on stmt: jump 299
2025-09-26 15:12:33,099 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:12:33,099 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,100 - DEBUG - on stmt: jump 305
2025-09-26 15:12:33,100 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:12:33,100 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,100 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:12:33,100 - DEBUG - on stmt: jump 305
2025-09-26 15:12:33,100 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:12:33,100 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,100 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,100 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,100 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:12:33,101 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:12:33,101 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,101 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,101 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:12:33,101 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,101 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,101 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:12:33,101 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,102 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:12:33,102 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:12:33,102 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:12:33,102 - DEBUG - on stmt: jump 413
2025-09-26 15:12:33,102 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:12:33,102 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,102 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,102 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:12:33,103 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,103 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,103 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:12:33,103 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,103 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:12:33,103 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:12:33,104 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:12:33,104 - DEBUG - on stmt: jump 413
2025-09-26 15:12:33,104 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:12:33,104 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,104 - DEBUG - on stmt: jump 194
2025-09-26 15:12:33,104 - DEBUG - Fix SSA violator on var x0
2025-09-26 15:12:33,104 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:12:33,104 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,105 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:12:33,105 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:12:33,105 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:12:33,105 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:12:33,105 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,105 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:12:33,105 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,106 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:12:33,106 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:12:33,106 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:12:33,106 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,106 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:12:33,106 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:12:33,106 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:12:33,106 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:33,107 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,107 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:12:33,107 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:12:33,107 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:12:33,107 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:12:33,107 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:33,107 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,108 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:12:33,108 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:12:33,108 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:12:33,108 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:12:33,108 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:12:33,108 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,108 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:12:33,108 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:12:33,108 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:12:33,109 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:12:33,109 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:12:33,109 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:12:33,109 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,109 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:12:33,109 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,109 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:12:33,109 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:12:33,110 - DEBUG - on stmt: jump 194
2025-09-26 15:12:33,110 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:12:33,110 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,110 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:12:33,110 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:12:33,110 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:12:33,110 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:12:33,110 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:12:33,110 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:12:33,110 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,111 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:12:33,111 - DEBUG - on stmt: jump 208
2025-09-26 15:12:33,111 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:12:33,111 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,111 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:12:33,111 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:12:33,111 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:12:33,111 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,111 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:12:33,112 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:12:33,112 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:33,112 - DEBUG - first assign: x0
2025-09-26 15:12:33,112 - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:33,112 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:33,112 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:12:33,112 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,112 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,112 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:12:33,113 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:12:33,113 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:12:33,113 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,113 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:12:33,113 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,113 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,113 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:12:33,113 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:12:33,113 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,114 - DEBUG - on stmt: jump 251
2025-09-26 15:12:33,114 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:12:33,114 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,114 - DEBUG - on stmt: jump 257
2025-09-26 15:12:33,114 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:12:33,114 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,114 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:12:33,114 - DEBUG - replaced with: x0.1 = const(int, 0)
2025-09-26 15:12:33,114 - DEBUG - on stmt: jump 257
2025-09-26 15:12:33,115 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:12:33,115 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,115 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:12:33,115 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:12:33,115 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:12:33,115 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:33,115 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:12:33,115 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,115 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,116 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:12:33,116 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:12:33,116 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:12:33,116 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,116 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:12:33,116 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,116 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,116 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:12:33,117 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:12:33,117 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,117 - DEBUG - on stmt: jump 299
2025-09-26 15:12:33,117 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:12:33,117 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,117 - DEBUG - on stmt: jump 305
2025-09-26 15:12:33,117 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:12:33,117 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,118 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:12:33,118 - DEBUG - on stmt: jump 305
2025-09-26 15:12:33,118 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:12:33,118 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,118 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,118 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,118 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:12:33,119 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:12:33,119 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,119 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,119 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:12:33,119 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,119 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,119 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:12:33,119 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,119 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:12:33,120 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:12:33,120 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:12:33,120 - DEBUG - on stmt: jump 413
2025-09-26 15:12:33,120 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:12:33,120 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,120 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,120 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:12:33,120 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,120 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,121 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:12:33,121 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,121 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:12:33,121 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:12:33,121 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:12:33,121 - DEBUG - on stmt: jump 413
2025-09-26 15:12:33,121 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:12:33,121 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290143950>
2025-09-26 15:12:33,121 - DEBUG - on stmt: jump 194
2025-09-26 15:12:33,122 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000002D290778FB0>],
             251: [<numba.core.ir.Assign object at 0x000002D290778CB0>]})
2025-09-26 15:12:33,122 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:12:33,122 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,122 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:12:33,122 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:12:33,122 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:12:33,122 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:12:33,123 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,123 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:12:33,123 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,123 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:12:33,123 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:12:33,123 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:12:33,123 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,123 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:12:33,124 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:12:33,124 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:12:33,124 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:33,124 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,124 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:12:33,124 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:12:33,124 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:12:33,124 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:12:33,124 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:33,125 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,125 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:12:33,125 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:12:33,125 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:12:33,125 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:12:33,125 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:12:33,125 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,125 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:12:33,125 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:12:33,126 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:12:33,126 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:12:33,126 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:12:33,126 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:12:33,126 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,126 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:12:33,126 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,126 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:12:33,126 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:12:33,127 - DEBUG - on stmt: jump 194
2025-09-26 15:12:33,127 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:12:33,127 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,127 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:12:33,127 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:12:33,127 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:12:33,127 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:12:33,127 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:12:33,128 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:12:33,128 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,128 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:12:33,128 - DEBUG - on stmt: jump 208
2025-09-26 15:12:33,128 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:12:33,128 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,128 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:12:33,128 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:12:33,128 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:12:33,129 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,129 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:12:33,129 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:12:33,129 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:33,129 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:33,129 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:12:33,129 - DEBUG - find_def var='x0' stmt=$24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:12:33,129 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,129 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,130 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:12:33,130 - DEBUG - find_def var='x0' stmt=$phi32.0 = x0
2025-09-26 15:12:33,130 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:12:33,130 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:12:33,130 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,130 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:12:33,130 - DEBUG - find_def var='x0' stmt=$34compare_op.2 = x0 <= threshold
2025-09-26 15:12:33,131 - DEBUG - find_def_from_top label 209
2025-09-26 15:12:33,131 - DEBUG - idom 208 from label 209
2025-09-26 15:12:33,131 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:12:33,131 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,131 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,131 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:12:33,131 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:12:33,131 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,131 - DEBUG - on stmt: jump 251
2025-09-26 15:12:33,132 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:12:33,132 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,132 - DEBUG - on stmt: jump 257
2025-09-26 15:12:33,132 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:12:33,132 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,132 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:12:33,132 - DEBUG - on stmt: jump 257
2025-09-26 15:12:33,132 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:12:33,133 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,133 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:12:33,133 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:12:33,133 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:12:33,133 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:33,133 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:12:33,133 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,133 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,134 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:12:33,134 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:12:33,134 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:12:33,134 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,134 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:12:33,134 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,134 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,134 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:12:33,134 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:12:33,134 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,135 - DEBUG - on stmt: jump 299
2025-09-26 15:12:33,135 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:12:33,135 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,135 - DEBUG - on stmt: jump 305
2025-09-26 15:12:33,135 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:12:33,135 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,135 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:12:33,135 - DEBUG - on stmt: jump 305
2025-09-26 15:12:33,135 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:12:33,135 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,136 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,136 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,136 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:12:33,136 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:12:33,136 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,136 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,136 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:12:33,136 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,136 - DEBUG - find_def var='x0' stmt=$148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,137 - DEBUG - find_def_from_top label 309
2025-09-26 15:12:33,137 - DEBUG - idom 305 from label 309
2025-09-26 15:12:33,137 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:12:33,137 - DEBUG - find_def_from_top label 305
2025-09-26 15:12:33,137 - DEBUG - idom 257 from label 305
2025-09-26 15:12:33,137 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:12:33,137 - DEBUG - find_def_from_top label 257
2025-09-26 15:12:33,137 - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 257
2025-09-26 15:12:33,137 - DEBUG - find_def_from_bottom label 209
2025-09-26 15:12:33,138 - DEBUG - find_def_from_top label 209
2025-09-26 15:12:33,138 - DEBUG - idom 208 from label 209
2025-09-26 15:12:33,138 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:12:33,138 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:33,138 - DEBUG - find_def_from_bottom label 251
2025-09-26 15:12:33,138 - DEBUG - incoming_def x0.1 = const(int, 0)
2025-09-26 15:12:33,138 - DEBUG - find_def_from_bottom label 253
2025-09-26 15:12:33,138 - DEBUG - find_def_from_top label 253
2025-09-26 15:12:33,138 - DEBUG - idom 208 from label 253
2025-09-26 15:12:33,138 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:12:33,139 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:33,139 - DEBUG - replaced with: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,139 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,139 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:12:33,139 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,139 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:12:33,139 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:12:33,139 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:12:33,139 - DEBUG - on stmt: jump 413
2025-09-26 15:12:33,140 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:12:33,140 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,140 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,140 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:12:33,140 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,140 - DEBUG - find_def var='x0' stmt=$238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,140 - DEBUG - find_def_from_top label 323
2025-09-26 15:12:33,140 - DEBUG - idom 305 from label 323
2025-09-26 15:12:33,140 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:12:33,140 - DEBUG - find_def_from_top label 305
2025-09-26 15:12:33,141 - DEBUG - idom 257 from label 305
2025-09-26 15:12:33,141 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:12:33,141 - DEBUG - replaced with: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,141 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,141 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:12:33,141 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,141 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:12:33,142 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:12:33,142 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:12:33,142 - DEBUG - on stmt: jump 413
2025-09-26 15:12:33,142 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:12:33,142 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290143950>
2025-09-26 15:12:33,142 - DEBUG - on stmt: jump 194
2025-09-26 15:12:33,142 - DEBUG - Fix SSA violator on var x1
2025-09-26 15:12:33,142 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:12:33,143 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290556210>
2025-09-26 15:12:33,143 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:12:33,143 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:12:33,143 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:12:33,143 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:12:33,143 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,143 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:12:33,143 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,144 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:12:33,144 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:12:33,144 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:12:33,144 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,144 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:12:33,144 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:12:33,144 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:12:33,145 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:33,145 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,145 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:12:33,145 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:12:33,145 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:12:33,145 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:12:33,145 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:33,145 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,146 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:12:33,146 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:12:33,146 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:12:33,146 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:12:33,146 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:12:33,146 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,146 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:12:33,146 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:12:33,146 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:12:33,147 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:12:33,147 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:12:33,147 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:12:33,147 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,147 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:12:33,147 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,147 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:12:33,147 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:12:33,147 - DEBUG - on stmt: jump 194
2025-09-26 15:12:33,148 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:12:33,148 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290556210>
2025-09-26 15:12:33,148 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:12:33,148 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:12:33,148 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:12:33,148 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:12:33,148 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:12:33,148 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:12:33,148 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290556210>
2025-09-26 15:12:33,148 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:12:33,149 - DEBUG - on stmt: jump 208
2025-09-26 15:12:33,149 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:12:33,149 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290556210>
2025-09-26 15:12:33,149 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:12:33,149 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:12:33,149 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:12:33,149 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290556210>
2025-09-26 15:12:33,149 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:12:33,149 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:12:33,150 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:33,150 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:33,150 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:12:33,150 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,150 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,150 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:12:33,150 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:12:33,150 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:12:33,150 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290556210>
2025-09-26 15:12:33,151 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:12:33,151 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,151 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,151 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:12:33,151 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:12:33,151 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290556210>
2025-09-26 15:12:33,151 - DEBUG - on stmt: jump 251
2025-09-26 15:12:33,151 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:12:33,151 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290556210>
2025-09-26 15:12:33,152 - DEBUG - on stmt: jump 257
2025-09-26 15:12:33,152 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:12:33,152 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290556210>
2025-09-26 15:12:33,152 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:12:33,152 - DEBUG - on stmt: jump 257
2025-09-26 15:12:33,152 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:12:33,152 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290556210>
2025-09-26 15:12:33,152 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:12:33,153 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:12:33,153 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:12:33,153 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:12:33,153 - DEBUG - first assign: x1
2025-09-26 15:12:33,153 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:12:33,153 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:33,153 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:12:33,153 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,153 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,154 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:12:33,154 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:12:33,154 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:12:33,154 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290556210>
2025-09-26 15:12:33,154 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:12:33,154 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,154 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,154 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:12:33,154 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:12:33,155 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290556210>
2025-09-26 15:12:33,155 - DEBUG - on stmt: jump 299
2025-09-26 15:12:33,155 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:12:33,155 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290556210>
2025-09-26 15:12:33,155 - DEBUG - on stmt: jump 305
2025-09-26 15:12:33,155 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:12:33,155 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290556210>
2025-09-26 15:12:33,155 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:12:33,156 - DEBUG - replaced with: x1.1 = const(int, 0)
2025-09-26 15:12:33,156 - DEBUG - on stmt: jump 305
2025-09-26 15:12:33,156 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:12:33,156 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290556210>
2025-09-26 15:12:33,156 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,156 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,156 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:12:33,156 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:12:33,156 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290556210>
2025-09-26 15:12:33,157 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,157 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:12:33,157 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,157 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,157 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:12:33,157 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,158 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:12:33,158 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:12:33,158 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:12:33,158 - DEBUG - on stmt: jump 413
2025-09-26 15:12:33,158 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:12:33,158 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290556210>
2025-09-26 15:12:33,158 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,158 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:12:33,159 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,159 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,159 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:12:33,159 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,159 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:12:33,159 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:12:33,159 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:12:33,159 - DEBUG - on stmt: jump 413
2025-09-26 15:12:33,159 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:12:33,160 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002D290556210>
2025-09-26 15:12:33,160 - DEBUG - on stmt: jump 194
2025-09-26 15:12:33,160 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {257: [<numba.core.ir.Assign object at 0x000002D2907790D0>],
             299: [<numba.core.ir.Assign object at 0x000002D290779070>]})
2025-09-26 15:12:33,160 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:12:33,160 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290554710>
2025-09-26 15:12:33,160 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:12:33,160 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:12:33,160 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:12:33,161 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:12:33,161 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,161 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:12:33,161 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,161 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:12:33,161 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:12:33,161 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:12:33,161 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,162 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:12:33,162 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:12:33,162 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:12:33,162 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:33,162 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,162 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:12:33,162 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:12:33,162 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:12:33,163 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:12:33,163 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:12:33,163 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,163 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:12:33,163 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:12:33,163 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:12:33,163 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:12:33,163 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:12:33,163 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,164 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:12:33,164 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:12:33,164 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:12:33,164 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:12:33,164 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:12:33,164 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:12:33,164 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,164 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:12:33,164 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,165 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:12:33,165 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:12:33,165 - DEBUG - on stmt: jump 194
2025-09-26 15:12:33,165 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:12:33,165 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290554710>
2025-09-26 15:12:33,165 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:12:33,165 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:12:33,165 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:12:33,165 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:12:33,165 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:12:33,166 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:12:33,166 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290554710>
2025-09-26 15:12:33,166 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:12:33,166 - DEBUG - on stmt: jump 208
2025-09-26 15:12:33,166 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:12:33,166 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290554710>
2025-09-26 15:12:33,166 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:12:33,166 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:12:33,166 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:12:33,167 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290554710>
2025-09-26 15:12:33,167 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:12:33,167 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:12:33,167 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:12:33,167 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:33,167 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:12:33,167 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,167 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,168 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:12:33,168 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:12:33,168 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:12:33,168 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290554710>
2025-09-26 15:12:33,168 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:12:33,168 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,168 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,169 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:12:33,169 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:12:33,169 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290554710>
2025-09-26 15:12:33,169 - DEBUG - on stmt: jump 251
2025-09-26 15:12:33,169 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:12:33,169 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290554710>
2025-09-26 15:12:33,169 - DEBUG - on stmt: jump 257
2025-09-26 15:12:33,169 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:12:33,169 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290554710>
2025-09-26 15:12:33,170 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:12:33,170 - DEBUG - on stmt: jump 257
2025-09-26 15:12:33,170 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:12:33,170 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290554710>
2025-09-26 15:12:33,170 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:12:33,170 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:12:33,170 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:12:33,170 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:12:33,171 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:12:33,171 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:12:33,171 - DEBUG - find_def var='x1' stmt=$72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:12:33,171 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,171 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,171 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:12:33,171 - DEBUG - find_def var='x1' stmt=$phi80.0 = x1
2025-09-26 15:12:33,171 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:12:33,172 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:12:33,172 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290554710>
2025-09-26 15:12:33,172 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:12:33,172 - DEBUG - find_def var='x1' stmt=$82compare_op.2 = x1 <= threshold
2025-09-26 15:12:33,172 - DEBUG - find_def_from_top label 261
2025-09-26 15:12:33,172 - DEBUG - idom 257 from label 261
2025-09-26 15:12:33,172 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:12:33,173 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,173 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,173 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:12:33,173 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:12:33,173 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290554710>
2025-09-26 15:12:33,173 - DEBUG - on stmt: jump 299
2025-09-26 15:12:33,173 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:12:33,173 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290554710>
2025-09-26 15:12:33,173 - DEBUG - on stmt: jump 305
2025-09-26 15:12:33,174 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:12:33,174 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290554710>
2025-09-26 15:12:33,174 - DEBUG - on stmt: x1.1 = const(int, 0)
2025-09-26 15:12:33,174 - DEBUG - on stmt: jump 305
2025-09-26 15:12:33,174 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:12:33,174 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290554710>
2025-09-26 15:12:33,174 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:12:33,174 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,174 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:12:33,174 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:12:33,175 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290554710>
2025-09-26 15:12:33,175 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,175 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:12:33,175 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,175 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,175 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:12:33,175 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,175 - DEBUG - find_def var='x1' stmt=$190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,176 - DEBUG - find_def_from_top label 309
2025-09-26 15:12:33,176 - DEBUG - idom 305 from label 309
2025-09-26 15:12:33,176 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:12:33,176 - DEBUG - find_def_from_top label 305
2025-09-26 15:12:33,176 - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 305
2025-09-26 15:12:33,176 - DEBUG - find_def_from_bottom label 299
2025-09-26 15:12:33,176 - DEBUG - incoming_def x1.1 = const(int, 0)
2025-09-26 15:12:33,176 - DEBUG - find_def_from_bottom label 301
2025-09-26 15:12:33,176 - DEBUG - find_def_from_top label 301
2025-09-26 15:12:33,177 - DEBUG - idom 257 from label 301
2025-09-26 15:12:33,177 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:12:33,177 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:12:33,177 - DEBUG - find_def_from_bottom label 261
2025-09-26 15:12:33,177 - DEBUG - find_def_from_top label 261
2025-09-26 15:12:33,177 - DEBUG - idom 257 from label 261
2025-09-26 15:12:33,177 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:12:33,177 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:12:33,177 - DEBUG - replaced with: $190call.9 = call $166load_attr.6(x1.2, func=$166load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,178 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:12:33,178 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:12:33,178 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:12:33,178 - DEBUG - on stmt: jump 413
2025-09-26 15:12:33,178 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:12:33,178 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290554710>
2025-09-26 15:12:33,178 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,178 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:12:33,178 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,179 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:12:33,179 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:12:33,179 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,179 - DEBUG - find_def var='x1' stmt=$280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,179 - DEBUG - find_def_from_top label 323
2025-09-26 15:12:33,179 - DEBUG - idom 305 from label 323
2025-09-26 15:12:33,179 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:12:33,179 - DEBUG - replaced with: $280call.9 = call $256load_attr.6(x1.2, func=$256load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:12:33,179 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:12:33,180 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:12:33,180 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:12:33,180 - DEBUG - on stmt: jump 413
2025-09-26 15:12:33,180 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:12:33,180 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002D290554710>
2025-09-26 15:12:33,180 - DEBUG - on stmt: jump 194
