2025-09-26 15:20:04,156 - INFO - Логирование настроено. Файл лога: log\session_20250926_152004.log
2025-09-26 15:20:04,158 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\Incode - Know.mp3
2025-09-26 15:20:04,158 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 2, 'overlap': 0.25, 'jobs': 4}
2025-09-26 15:20:04,158 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла: examples\Incode - Know.mp3
2025-09-26 15:20:04,158 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 15:20:06,169 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 15:20:06,169 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\Incode - Know.mp3
2025-09-26 15:20:06,750 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 15:20:06,754 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\Incode - Know.mp3
2025-09-26 15:20:07,799 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	RESUME(arg=0, lineno=1137)
           4	LOAD_FAST(arg=0, lineno=1140)
           6	LOAD_CONST(arg=1, lineno=1140)
           8	BINARY_SUBSCR(arg=None, lineno=1140)
          12	STORE_FAST(arg=3, lineno=1140)
          14	LOAD_FAST(arg=1, lineno=1141)
          16	UNARY_NEGATIVE(arg=None, lineno=1141)
          18	LOAD_FAST(arg=3, lineno=1141)
          20	SWAP(arg=2, lineno=1141)
          22	COPY(arg=2, lineno=1141)
          24	COMPARE_OP(arg=58, lineno=1141)
          28	POP_JUMP_IF_FALSE(arg=6, lineno=1141)
          32	LOAD_FAST(arg=1, lineno=1141)
          34	COMPARE_OP(arg=58, lineno=1141)
          38	POP_JUMP_IF_FALSE(arg=5, lineno=1141)
          42	JUMP_FORWARD(arg=2, lineno=1141)
>         44	POP_TOP(arg=None, lineno=1141)
          46	JUMP_FORWARD(arg=2, lineno=1141)
>         48	LOAD_CONST(arg=1, lineno=1142)
          50	STORE_FAST(arg=3, lineno=1142)
>         52	LOAD_FAST(arg=0, lineno=1144)
          54	LOAD_CONST(arg=2, lineno=1144)
          56	BINARY_SUBSCR(arg=None, lineno=1144)
          60	STORE_FAST(arg=4, lineno=1144)
          62	LOAD_FAST(arg=1, lineno=1145)
          64	UNARY_NEGATIVE(arg=None, lineno=1145)
          66	LOAD_FAST(arg=4, lineno=1145)
          68	SWAP(arg=2, lineno=1145)
          70	COPY(arg=2, lineno=1145)
          72	COMPARE_OP(arg=58, lineno=1145)
          76	POP_JUMP_IF_FALSE(arg=6, lineno=1145)
          80	LOAD_FAST(arg=1, lineno=1145)
          82	COMPARE_OP(arg=58, lineno=1145)
          86	POP_JUMP_IF_FALSE(arg=5, lineno=1145)
          90	JUMP_FORWARD(arg=2, lineno=1145)
>         92	POP_TOP(arg=None, lineno=1145)
          94	JUMP_FORWARD(arg=2, lineno=1145)
>         96	LOAD_CONST(arg=1, lineno=1146)
          98	STORE_FAST(arg=4, lineno=1146)
>        100	LOAD_FAST(arg=2, lineno=1148)
         102	TO_BOOL(arg=None, lineno=1148)
         110	POP_JUMP_IF_FALSE(arg=45, lineno=1148)
         114	LOAD_GLOBAL(arg=0, lineno=1149)
         124	LOAD_ATTR(arg=2, lineno=1149)
         144	PUSH_NULL(arg=None, lineno=1149)
         146	LOAD_FAST(arg=3, lineno=1149)
         148	CALL(arg=1, lineno=1149)
         156	LOAD_GLOBAL(arg=0, lineno=1149)
         166	LOAD_ATTR(arg=2, lineno=1149)
         186	PUSH_NULL(arg=None, lineno=1149)
         188	LOAD_FAST(arg=4, lineno=1149)
         190	CALL(arg=1, lineno=1149)
         198	COMPARE_OP(arg=103, lineno=1149)
         202	RETURN_VALUE(arg=None, lineno=1149)
>        204	LOAD_GLOBAL(arg=0, lineno=1151)
         214	LOAD_ATTR(arg=4, lineno=1151)
         234	PUSH_NULL(arg=None, lineno=1151)
         236	LOAD_FAST(arg=3, lineno=1151)
         238	CALL(arg=1, lineno=1151)
         246	LOAD_GLOBAL(arg=0, lineno=1151)
         256	LOAD_ATTR(arg=4, lineno=1151)
         276	PUSH_NULL(arg=None, lineno=1151)
         278	LOAD_FAST(arg=4, lineno=1151)
         280	CALL(arg=1, lineno=1151)
         288	COMPARE_OP(arg=103, lineno=1151)
         292	RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:20:07,801 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:20:07,801 - DEBUG - stack: []
2025-09-26 15:20:07,801 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:20:07,801 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-09-26 15:20:07,801 - DEBUG - stack []
2025-09-26 15:20:07,802 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1137)
2025-09-26 15:20:07,802 - DEBUG - stack []
2025-09-26 15:20:07,802 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1140)
2025-09-26 15:20:07,802 - DEBUG - stack []
2025-09-26 15:20:07,802 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1140)
2025-09-26 15:20:07,803 - DEBUG - stack ['$x4.0']
2025-09-26 15:20:07,803 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-09-26 15:20:07,803 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-09-26 15:20:07,803 - DEBUG - dispatch pc=12, inst=STORE_FAST(arg=3, lineno=1140)
2025-09-26 15:20:07,803 - DEBUG - stack ['$8binary_subscr.2']
2025-09-26 15:20:07,803 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:20:07,804 - DEBUG - stack []
2025-09-26 15:20:07,804 - DEBUG - dispatch pc=16, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-09-26 15:20:07,804 - DEBUG - stack ['$threshold14.3']
2025-09-26 15:20:07,804 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=1141)
2025-09-26 15:20:07,804 - DEBUG - stack ['$16unary_negative.4']
2025-09-26 15:20:07,805 - DEBUG - dispatch pc=20, inst=SWAP(arg=2, lineno=1141)
2025-09-26 15:20:07,805 - DEBUG - stack ['$16unary_negative.4', '$x018.5']
2025-09-26 15:20:07,805 - DEBUG - dispatch pc=22, inst=COPY(arg=2, lineno=1141)
2025-09-26 15:20:07,805 - DEBUG - stack ['$x018.5', '$16unary_negative.4']
2025-09-26 15:20:07,805 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:20:07,805 - DEBUG - stack ['$x018.5', '$16unary_negative.4', '$x018.5']
2025-09-26 15:20:07,806 - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1141)
2025-09-26 15:20:07,806 - DEBUG - stack ['$x018.5', '$24compare_op.6']
2025-09-26 15:20:07,806 - DEBUG - end state. edges=[Edge(pc=32, stack=('$x018.5',), blockstack=(), npush=0), Edge(pc=44, stack=('$x018.5',), blockstack=(), npush=0)]
2025-09-26 15:20:07,806 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=44 nstack_initial=1)])
2025-09-26 15:20:07,806 - DEBUG - stack: ['$phi32.0']
2025-09-26 15:20:07,806 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-09-26 15:20:07,807 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:20:07,807 - DEBUG - stack ['$phi32.0']
2025-09-26 15:20:07,807 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:20:07,807 - DEBUG - stack ['$phi32.0', '$threshold32.1']
2025-09-26 15:20:07,807 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1141)
2025-09-26 15:20:07,807 - DEBUG - stack ['$34compare_op.2']
2025-09-26 15:20:07,807 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:20:07,807 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=1), State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:20:07,808 - DEBUG - stack: ['$phi44.0']
2025-09-26 15:20:07,808 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=1)
2025-09-26 15:20:07,808 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=1141)
2025-09-26 15:20:07,808 - DEBUG - stack ['$phi44.0']
2025-09-26 15:20:07,808 - DEBUG - dispatch pc=46, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:20:07,808 - DEBUG - stack []
2025-09-26 15:20:07,808 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:20:07,808 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:20:07,808 - DEBUG - stack: []
2025-09-26 15:20:07,809 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-09-26 15:20:07,809 - DEBUG - dispatch pc=42, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:20:07,809 - DEBUG - stack []
2025-09-26 15:20:07,809 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0)]
2025-09-26 15:20:07,809 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2025-09-26 15:20:07,809 - DEBUG - stack: []
2025-09-26 15:20:07,809 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-09-26 15:20:07,809 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1144)
2025-09-26 15:20:07,809 - DEBUG - stack []
2025-09-26 15:20:07,810 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=1144)
2025-09-26 15:20:07,810 - DEBUG - stack ['$x52.0']
2025-09-26 15:20:07,810 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-09-26 15:20:07,810 - DEBUG - stack ['$x52.0', '$const54.1.2']
2025-09-26 15:20:07,810 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=4, lineno=1144)
2025-09-26 15:20:07,810 - DEBUG - stack ['$56binary_subscr.2']
2025-09-26 15:20:07,810 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:20:07,810 - DEBUG - stack []
2025-09-26 15:20:07,810 - DEBUG - dispatch pc=64, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-09-26 15:20:07,811 - DEBUG - stack ['$threshold62.3']
2025-09-26 15:20:07,811 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=4, lineno=1145)
2025-09-26 15:20:07,811 - DEBUG - stack ['$64unary_negative.4']
2025-09-26 15:20:07,811 - DEBUG - dispatch pc=68, inst=SWAP(arg=2, lineno=1145)
2025-09-26 15:20:07,811 - DEBUG - stack ['$64unary_negative.4', '$x166.5']
2025-09-26 15:20:07,811 - DEBUG - dispatch pc=70, inst=COPY(arg=2, lineno=1145)
2025-09-26 15:20:07,811 - DEBUG - stack ['$x166.5', '$64unary_negative.4']
2025-09-26 15:20:07,811 - DEBUG - dispatch pc=72, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:20:07,811 - DEBUG - stack ['$x166.5', '$64unary_negative.4', '$x166.5']
2025-09-26 15:20:07,811 - DEBUG - dispatch pc=76, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1145)
2025-09-26 15:20:07,812 - DEBUG - stack ['$x166.5', '$72compare_op.6']
2025-09-26 15:20:07,812 - DEBUG - end state. edges=[Edge(pc=80, stack=('$x166.5',), blockstack=(), npush=0), Edge(pc=92, stack=('$x166.5',), blockstack=(), npush=0)]
2025-09-26 15:20:07,812 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:20:07,812 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:20:07,812 - DEBUG - stack: []
2025-09-26 15:20:07,812 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-09-26 15:20:07,812 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1142)
2025-09-26 15:20:07,812 - DEBUG - stack []
2025-09-26 15:20:07,813 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=3, lineno=1142)
2025-09-26 15:20:07,813 - DEBUG - stack ['$const48.0.1']
2025-09-26 15:20:07,813 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:20:07,813 - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:20:07,813 - DEBUG - stack: ['$phi80.0']
2025-09-26 15:20:07,813 - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-09-26 15:20:07,813 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:20:07,813 - DEBUG - stack ['$phi80.0']
2025-09-26 15:20:07,813 - DEBUG - dispatch pc=82, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:20:07,813 - DEBUG - stack ['$phi80.0', '$threshold80.1']
2025-09-26 15:20:07,814 - DEBUG - dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1145)
2025-09-26 15:20:07,814 - DEBUG - stack ['$82compare_op.2']
2025-09-26 15:20:07,814 - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:20:07,814 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:20:07,814 - DEBUG - stack: ['$phi92.0']
2025-09-26 15:20:07,814 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=1)
2025-09-26 15:20:07,814 - DEBUG - dispatch pc=92, inst=POP_TOP(arg=None, lineno=1145)
2025-09-26 15:20:07,815 - DEBUG - stack ['$phi92.0']
2025-09-26 15:20:07,815 - DEBUG - dispatch pc=94, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:20:07,815 - DEBUG - stack []
2025-09-26 15:20:07,815 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:20:07,815 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:20:07,816 - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:20:07,816 - DEBUG - stack: []
2025-09-26 15:20:07,816 - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-09-26 15:20:07,816 - DEBUG - dispatch pc=90, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:20:07,816 - DEBUG - stack []
2025-09-26 15:20:07,816 - DEBUG - end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-09-26 15:20:07,816 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-09-26 15:20:07,817 - DEBUG - stack: []
2025-09-26 15:20:07,817 - DEBUG - state.pc_initial: State(pc_initial=100 nstack_initial=0)
2025-09-26 15:20:07,817 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=2, lineno=1148)
2025-09-26 15:20:07,817 - DEBUG - stack []
2025-09-26 15:20:07,817 - DEBUG - dispatch pc=102, inst=TO_BOOL(arg=None, lineno=1148)
2025-09-26 15:20:07,817 - DEBUG - stack ['$zero_pos100.0']
2025-09-26 15:20:07,817 - DEBUG - dispatch pc=110, inst=POP_JUMP_IF_FALSE(arg=45, lineno=1148)
2025-09-26 15:20:07,818 - DEBUG - stack ['$102to_bool.1']
2025-09-26 15:20:07,818 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=204, stack=(), blockstack=(), npush=0)]
2025-09-26 15:20:07,818 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:20:07,818 - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:20:07,818 - DEBUG - stack: []
2025-09-26 15:20:07,818 - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2025-09-26 15:20:07,819 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=1, lineno=1146)
2025-09-26 15:20:07,819 - DEBUG - stack []
2025-09-26 15:20:07,819 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=4, lineno=1146)
2025-09-26 15:20:07,819 - DEBUG - stack ['$const96.0.1']
2025-09-26 15:20:07,819 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:20:07,819 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:20:07,819 - DEBUG - stack: []
2025-09-26 15:20:07,820 - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2025-09-26 15:20:07,820 - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:20:07,820 - DEBUG - stack []
2025-09-26 15:20:07,820 - DEBUG - dispatch pc=124, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:20:07,820 - DEBUG - stack ['$114load_global.0']
2025-09-26 15:20:07,820 - DEBUG - dispatch pc=144, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:20:07,820 - DEBUG - stack ['$124load_attr.1']
2025-09-26 15:20:07,820 - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=3, lineno=1149)
2025-09-26 15:20:07,820 - DEBUG - stack ['$124load_attr.1', '$null$144.2']
2025-09-26 15:20:07,821 - DEBUG - dispatch pc=148, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:20:07,821 - DEBUG - stack ['$124load_attr.1', '$null$144.2', '$x0146.3']
2025-09-26 15:20:07,821 - DEBUG - dispatch pc=156, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:20:07,821 - DEBUG - stack ['$148call.4']
2025-09-26 15:20:07,821 - DEBUG - dispatch pc=166, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:20:07,821 - DEBUG - stack ['$148call.4', '$156load_global.5']
2025-09-26 15:20:07,821 - DEBUG - dispatch pc=186, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:20:07,822 - DEBUG - stack ['$148call.4', '$166load_attr.6']
2025-09-26 15:20:07,822 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=4, lineno=1149)
2025-09-26 15:20:07,822 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7']
2025-09-26 15:20:07,822 - DEBUG - dispatch pc=190, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:20:07,822 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7', '$x1188.8']
2025-09-26 15:20:07,822 - DEBUG - dispatch pc=198, inst=COMPARE_OP(arg=103, lineno=1149)
2025-09-26 15:20:07,822 - DEBUG - stack ['$148call.4', '$190call.9']
2025-09-26 15:20:07,823 - DEBUG - dispatch pc=202, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-09-26 15:20:07,823 - DEBUG - stack ['$198compare_op.10']
2025-09-26 15:20:07,823 - DEBUG - end state. edges=[]
2025-09-26 15:20:07,823 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:20:07,823 - DEBUG - stack: []
2025-09-26 15:20:07,823 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=0)
2025-09-26 15:20:07,823 - DEBUG - dispatch pc=204, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:20:07,824 - DEBUG - stack []
2025-09-26 15:20:07,824 - DEBUG - dispatch pc=214, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:20:07,824 - DEBUG - stack ['$204load_global.0']
2025-09-26 15:20:07,824 - DEBUG - dispatch pc=234, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:20:07,824 - DEBUG - stack ['$214load_attr.1']
2025-09-26 15:20:07,824 - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=3, lineno=1151)
2025-09-26 15:20:07,824 - DEBUG - stack ['$214load_attr.1', '$null$234.2']
2025-09-26 15:20:07,824 - DEBUG - dispatch pc=238, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:20:07,824 - DEBUG - stack ['$214load_attr.1', '$null$234.2', '$x0236.3']
2025-09-26 15:20:07,825 - DEBUG - dispatch pc=246, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:20:07,825 - DEBUG - stack ['$238call.4']
2025-09-26 15:20:07,825 - DEBUG - dispatch pc=256, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:20:07,825 - DEBUG - stack ['$238call.4', '$246load_global.5']
2025-09-26 15:20:07,825 - DEBUG - dispatch pc=276, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:20:07,825 - DEBUG - stack ['$238call.4', '$256load_attr.6']
2025-09-26 15:20:07,825 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=4, lineno=1151)
2025-09-26 15:20:07,825 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7']
2025-09-26 15:20:07,825 - DEBUG - dispatch pc=280, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:20:07,826 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7', '$x1278.8']
2025-09-26 15:20:07,826 - DEBUG - dispatch pc=288, inst=COMPARE_OP(arg=103, lineno=1151)
2025-09-26 15:20:07,826 - DEBUG - stack ['$238call.4', '$280call.9']
2025-09-26 15:20:07,826 - DEBUG - dispatch pc=292, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:20:07,826 - DEBUG - stack ['$288compare_op.10']
2025-09-26 15:20:07,826 - DEBUG - end state. edges=[]
2025-09-26 15:20:07,827 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:20:07,827 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:20:07,827 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=1): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=204 nstack_initial=0): set()})
2025-09-26 15:20:07,828 - DEBUG - defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi44.0': State(pc_initial=0 nstack_initial=0),
 '$phi80.0': State(pc_initial=52 nstack_initial=0),
 '$phi92.0': State(pc_initial=52 nstack_initial=0)}
2025-09-26 15:20:07,828 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:20:07,828 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:20:07,828 - DEBUG - keep phismap: {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
 '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}}
2025-09-26 15:20:07,829 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$x018.5'},
             State(pc_initial=52 nstack_initial=0): {'$phi80.0': '$x166.5'}})
2025-09-26 15:20:07,829 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:20:07,829 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'value': '$8binary_subscr.2'}), (14, {'res': '$threshold14.3'}), (16, {'value': '$threshold14.3', 'res': '$16unary_negative.4'}), (18, {'res': '$x018.5'}), (24, {'lhs': '$16unary_negative.4', 'rhs': '$x018.5', 'res': '$24compare_op.6'}), (28, {'pred': '$24compare_op.6'})), outgoing_phis={'$phi32.0': '$x018.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$x018.5',), 44: ('$x018.5',)})
2025-09-26 15:20:07,829 - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'res': '$threshold32.1'}), (34, {'lhs': '$phi32.0', 'rhs': '$threshold32.1', 'res': '$34compare_op.2'}), (38, {'pred': '$34compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 52: ()})
2025-09-26 15:20:07,830 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ()})
2025-09-26 15:20:07,830 - DEBUG - block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((46, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:20:07,830 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$const48.0.1'}), (50, {'value': '$const48.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:20:07,830 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$x52.0'}), (54, {'res': '$const54.1.2'}), (56, {'index': '$const54.1.2', 'target': '$x52.0', 'res': '$56binary_subscr.2'}), (60, {'value': '$56binary_subscr.2'}), (62, {'res': '$threshold62.3'}), (64, {'value': '$threshold62.3', 'res': '$64unary_negative.4'}), (66, {'res': '$x166.5'}), (72, {'lhs': '$64unary_negative.4', 'rhs': '$x166.5', 'res': '$72compare_op.6'}), (76, {'pred': '$72compare_op.6'})), outgoing_phis={'$phi80.0': '$x166.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$x166.5',), 92: ('$x166.5',)})
2025-09-26 15:20:07,830 - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$threshold80.1'}), (82, {'lhs': '$phi80.0', 'rhs': '$threshold80.1', 'res': '$82compare_op.2'}), (86, {'pred': '$82compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 100: ()})
2025-09-26 15:20:07,830 - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
2025-09-26 15:20:07,831 - DEBUG - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((94, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:20:07,831 - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$const96.0.1'}), (98, {'value': '$const96.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:20:07,831 - DEBUG - block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$zero_pos100.0'}), (102, {'val': '$zero_pos100.0', 'res': '$102to_bool.1'}), (110, {'pred': '$102to_bool.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 204: ()})
2025-09-26 15:20:07,831 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'idx': 0, 'res': '$114load_global.0'}), (124, {'item': '$114load_global.0', 'res': '$124load_attr.1'}), (144, {}), (146, {'res': '$x0146.3'}), (148, {'func': '$124load_attr.1', 'args': ['$x0146.3'], 'kw_names': None, 'res': '$148call.4'}), (156, {'idx': 0, 'res': '$156load_global.5'}), (166, {'item': '$156load_global.5', 'res': '$166load_attr.6'}), (186, {}), (188, {'res': '$x1188.8'}), (190, {'func': '$166load_attr.6', 'args': ['$x1188.8'], 'kw_names': None, 'res': '$190call.9'}), (198, {'lhs': '$148call.4', 'rhs': '$190call.9', 'res': '$198compare_op.10'}), (202, {'retval': '$198compare_op.10', 'castval': '$202return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:20:07,831 - DEBUG - block_infos State(pc_initial=204 nstack_initial=0):
AdaptBlockInfo(insts=((204, {'idx': 0, 'res': '$204load_global.0'}), (214, {'item': '$204load_global.0', 'res': '$214load_attr.1'}), (234, {}), (236, {'res': '$x0236.3'}), (238, {'func': '$214load_attr.1', 'args': ['$x0236.3'], 'kw_names': None, 'res': '$238call.4'}), (246, {'idx': 0, 'res': '$246load_global.5'}), (256, {'item': '$246load_global.5', 'res': '$256load_attr.6'}), (276, {}), (278, {'res': '$x1278.8'}), (280, {'func': '$256load_attr.6', 'args': ['$x1278.8'], 'kw_names': None, 'res': '$280call.9'}), (288, {'lhs': '$238call.4', 'rhs': '$280call.9', 'res': '$288compare_op.10'}), (292, {'retval': '$288compare_op.10', 'castval': '$292return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:20:07,832 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    x0 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$const6.1.1', 'x', 'x0']
    $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$16unary_negative.4', 'threshold']
    $24compare_op.6 = $16unary_negative.4 <= x0 ['$16unary_negative.4', '$24compare_op.6', 'x0']
    $bool28 = global(bool: <class 'bool'>)   ['$bool28']
    $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.6', '$28pred', '$bool28']
    $phi32.0 = x0                            ['$phi32.0', 'x0']
    branch $28pred, 32, 44                   ['$28pred']
label 32:
    $34compare_op.2 = $phi32.0 <= threshold  ['$34compare_op.2', '$phi32.0', 'threshold']
    $bool38 = global(bool: <class 'bool'>)   ['$bool38']
    $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.2', '$38pred', '$bool38']
    branch $38pred, 42, 52                   ['$38pred']
label 42:
    jump 48                                  []
label 44:
    jump 52                                  []
label 48:
    x0 = const(int, 0)                       ['x0']
    jump 52                                  []
label 52:
    $const54.1.2 = const(int, -1)            ['$const54.1.2']
    x1 = getitem(value=x, index=$const54.1.2, fn=<built-in function getitem>) ['$const54.1.2', 'x', 'x1']
    $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$64unary_negative.4', 'threshold']
    $72compare_op.6 = $64unary_negative.4 <= x1 ['$64unary_negative.4', '$72compare_op.6', 'x1']
    $bool76 = global(bool: <class 'bool'>)   ['$bool76']
    $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$72compare_op.6', '$76pred', '$bool76']
    $phi80.0 = x1                            ['$phi80.0', 'x1']
    branch $76pred, 80, 92                   ['$76pred']
label 80:
    $82compare_op.2 = $phi80.0 <= threshold  ['$82compare_op.2', '$phi80.0', 'threshold']
    $bool86 = global(bool: <class 'bool'>)   ['$bool86']
    $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$82compare_op.2', '$86pred', '$bool86']
    branch $86pred, 90, 100                  ['$86pred']
label 90:
    jump 96                                  []
label 92:
    jump 100                                 []
label 96:
    x1 = const(int, 0)                       ['x1']
    jump 100                                 []
label 100:
    $bool110 = global(bool: <class 'bool'>)  ['$bool110']
    $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$110pred', '$bool110', 'zero_pos']
    branch $110pred, 114, 204                ['$110pred']
label 114:
    $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$114load_global.0']
    $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit) ['$114load_global.0', '$124load_attr.1']
    $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$124load_attr.1', '$148call.4', 'x0']
    $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$156load_global.5']
    $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit) ['$156load_global.5', '$166load_attr.6']
    $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.6', '$190call.9', 'x1']
    $198compare_op.10 = $148call.4 != $190call.9 ['$148call.4', '$190call.9', '$198compare_op.10']
    $202return_value.11 = cast(value=$198compare_op.10) ['$198compare_op.10', '$202return_value.11']
    return $202return_value.11               ['$202return_value.11']
label 204:
    $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$204load_global.0']
    $214load_attr.1 = getattr(value=$204load_global.0, attr=sign) ['$204load_global.0', '$214load_attr.1']
    $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.1', '$238call.4', 'x0']
    $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$246load_global.5']
    $256load_attr.6 = getattr(value=$246load_global.5, attr=sign) ['$246load_global.5', '$256load_attr.6']
    $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$256load_attr.6', '$280call.9', 'x1']
    $288compare_op.10 = $238call.4 != $280call.9 ['$238call.4', '$280call.9', '$288compare_op.10']
    $292return_value.11 = cast(value=$288compare_op.10) ['$288compare_op.10', '$292return_value.11']
    return $292return_value.11               ['$292return_value.11']

2025-09-26 15:20:08,007 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1154)
           2	RESUME(arg=0, lineno=1154)
           4	LOAD_GLOBAL(arg=1, lineno=1170)
          14	LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
          16	LOAD_FAST(arg=2, lineno=1170)
          18	CALL(arg=3, lineno=1170)
          26	LOAD_FAST(arg=3, lineno=1170)
          28	LOAD_CONST(arg=1, lineno=1170)
          30	LOAD_CONST(arg=1, lineno=1170)
          32	STORE_SLICE(arg=None, lineno=1170)
          34	RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:20:08,007 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:20:08,007 - DEBUG - stack: []
2025-09-26 15:20:08,008 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:20:08,008 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1154)
2025-09-26 15:20:08,008 - DEBUG - stack []
2025-09-26 15:20:08,008 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1154)
2025-09-26 15:20:08,008 - DEBUG - stack []
2025-09-26 15:20:08,009 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1170)
2025-09-26 15:20:08,009 - DEBUG - stack []
2025-09-26 15:20:08,009 - DEBUG - dispatch pc=14, inst=LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
2025-09-26 15:20:08,009 - DEBUG - stack ['$4load_global.0', '$null$4.1']
2025-09-26 15:20:08,009 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=1170)
2025-09-26 15:20:08,009 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3']
2025-09-26 15:20:08,010 - DEBUG - dispatch pc=18, inst=CALL(arg=3, lineno=1170)
2025-09-26 15:20:08,010 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3', '$zero_pos16.4']
2025-09-26 15:20:08,010 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=3, lineno=1170)
2025-09-26 15:20:08,010 - DEBUG - stack ['$18call.5']
2025-09-26 15:20:08,010 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:20:08,010 - DEBUG - stack ['$18call.5', '$y26.6']
2025-09-26 15:20:08,010 - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:20:08,011 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1']
2025-09-26 15:20:08,011 - DEBUG - dispatch pc=32, inst=STORE_SLICE(arg=None, lineno=1170)
2025-09-26 15:20:08,011 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1', '$const30.8.1']
2025-09-26 15:20:08,011 - DEBUG - dispatch pc=34, inst=RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:20:08,011 - DEBUG - stack []
2025-09-26 15:20:08,011 - DEBUG - end state. edges=[]
2025-09-26 15:20:08,011 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:20:08,011 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-09-26 15:20:08,011 - DEBUG - defmap: {}
2025-09-26 15:20:08,012 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:20:08,012 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:20:08,012 - DEBUG - keep phismap: {}
2025-09-26 15:20:08,012 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-09-26 15:20:08,012 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:20:08,012 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res1': '$x14.2', 'res2': '$threshold14.3'}), (16, {'res': '$zero_pos16.4'}), (18, {'func': '$4load_global.0', 'args': ['$x14.2', '$threshold14.3', '$zero_pos16.4'], 'kw_names': None, 'res': '$18call.5'}), (26, {'res': '$y26.6'}), (28, {'res': '$const28.7.1'}), (30, {'res': '$const30.8.1'}), (32, {'start': '$const28.7.1', 'end': '$const30.8.1', 'container': '$y26.6', 'value': '$18call.5', 'res': '$32store_slice.10', 'slicevar': '$32store_slice.9'}), (34, {'retval': '$const34.11', 'castval': '$34return_const.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:20:08,013 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000001C1F7586270>) ['$4load_global.0']
    $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const28.7.1 = const(NoneType, None)     ['$const28.7.1']
    $const30.8.1 = const(NoneType, None)     ['$const30.8.1']
    $32store_slice.9 = global(slice: <class 'slice'>) ['$32store_slice.9']
    $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$32store_slice.10', '$32store_slice.9', '$const28.7.1', '$const30.8.1']
    y[$32store_slice.10] = $18call.5         ['$18call.5', '$32store_slice.10', 'y']
    $const34.11 = const(NoneType, None)      ['$const34.11']
    $34return_const.12 = cast(value=$const34.11) ['$34return_const.12', '$const34.11']
    return $34return_const.12                ['$34return_const.12']

2025-09-26 15:20:08,017 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:20:08,017 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F8420980>
2025-09-26 15:20:08,017 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:20:08,017 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:20:08,018 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:20:08,018 - DEBUG - on stmt: y = arg(3, name=y)
2025-09-26 15:20:08,018 - DEBUG - on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000001C1F7586270>)
2025-09-26 15:20:08,018 - DEBUG - on stmt: $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,018 - DEBUG - on stmt: $const28.7.1 = const(NoneType, None)
2025-09-26 15:20:08,018 - DEBUG - on stmt: $const30.8.1 = const(NoneType, None)
2025-09-26 15:20:08,018 - DEBUG - on stmt: $32store_slice.9 = global(slice: <class 'slice'>)
2025-09-26 15:20:08,018 - DEBUG - on stmt: $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,019 - DEBUG - on stmt: y[slice(None, None, None)] = $18call.5
2025-09-26 15:20:08,019 - DEBUG - on stmt: $const34.11 = const(NoneType, None)
2025-09-26 15:20:08,019 - DEBUG - on stmt: $34return_const.12 = cast(value=$const34.11)
2025-09-26 15:20:08,019 - DEBUG - on stmt: return $34return_const.12
2025-09-26 15:20:08,019 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.5': [(<numba.core.ir.Assign object at 0x000001C1F8414CB0>,
                            0)],
             '$32store_slice.10': [(<numba.core.ir.Assign object at 0x000001C1F84156D0>,
                                    0)],
             '$32store_slice.9': [(<numba.core.ir.Assign object at 0x000001C1F84155B0>,
                                   0)],
             '$34return_const.12': [(<numba.core.ir.Assign object at 0x000001C1F84158B0>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001C1F8414FB0>,
                                  0)],
             '$const28.7.1': [(<numba.core.ir.Assign object at 0x000001C1F8414B30>,
                               0)],
             '$const30.8.1': [(<numba.core.ir.Assign object at 0x000001C1F84154F0>,
                               0)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x000001C1F8415790>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x000001C1F84151F0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000001C1F8415250>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000001C1F8414F50>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000001C1F8415130>,
                           0)]})
2025-09-26 15:20:08,020 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001C1F8420AD0>
2025-09-26 15:20:08,147 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=3, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=3, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	LOAD_CONST(arg=1, lineno=3)
          92	CALL_KW(arg=2, lineno=3)
          94	STORE_FAST(arg=4, lineno=3)
          96	LOAD_CONST(arg=2, lineno=4)
          98	LOAD_FAST(arg=4, lineno=4)
         100	LOAD_CONST(arg=0, lineno=4)
         102	LOAD_CONST(arg=3, lineno=4)
         104	STORE_SLICE(arg=None, lineno=4)
         106	LOAD_CONST(arg=2, lineno=5)
         108	LOAD_FAST(arg=4, lineno=5)
         110	LOAD_CONST(arg=2, lineno=5)
         112	LOAD_CONST(arg=0, lineno=5)
         114	STORE_SLICE(arg=None, lineno=5)
         116	LOAD_GLOBAL(arg=9, lineno=6)
         126	LOAD_GLOBAL(arg=11, lineno=6)
         136	LOAD_CONST(arg=2, lineno=6)
         138	LOAD_CONST(arg=4, lineno=6)
         140	CALL(arg=2, lineno=6)
         148	UNARY_NEGATIVE(arg=None, lineno=6)
         150	LOAD_FAST(arg=3, lineno=6)
         152	LOAD_CONST(arg=2, lineno=6)
         154	BINARY_SUBSCR(arg=None, lineno=6)
         158	LOAD_GLOBAL(arg=13, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	LOAD_CONST(arg=2, lineno=6)
         172	CALL(arg=2, lineno=6)
         180	BINARY_OP(arg=10, lineno=6)
         184	CALL(arg=2, lineno=6)
         192	GET_ITER(arg=None, lineno=6)
>        194	FOR_ITER(arg=5, lineno=6)
         198	STORE_FAST(arg=5, lineno=6)
         200	LOAD_CONST(arg=2, lineno=7)
         202	STORE_FAST(arg=6, lineno=7)
         204	JUMP_BACKWARD(arg=7, lineno=7)
>        208	END_FOR(arg=None, lineno=6)
         210	POP_TOP(arg=None, lineno=6)
         212	LOAD_FAST(arg=4, lineno=8)
         214	RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:20:08,148 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:20:08,148 - DEBUG - stack: []
2025-09-26 15:20:08,149 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:20:08,149 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-09-26 15:20:08,149 - DEBUG - stack []
2025-09-26 15:20:08,149 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2025-09-26 15:20:08,149 - DEBUG - stack []
2025-09-26 15:20:08,149 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2025-09-26 15:20:08,150 - DEBUG - stack []
2025-09-26 15:20:08,150 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2025-09-26 15:20:08,150 - DEBUG - stack ['$x4.0']
2025-09-26 15:20:08,150 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=3, lineno=2)
2025-09-26 15:20:08,150 - DEBUG - stack ['$6load_attr.1']
2025-09-26 15:20:08,150 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:20:08,151 - DEBUG - stack []
2025-09-26 15:20:08,151 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2025-09-26 15:20:08,151 - DEBUG - stack ['$28load_global.2']
2025-09-26 15:20:08,151 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=3, lineno=3)
2025-09-26 15:20:08,151 - DEBUG - stack ['$38load_attr.3', '$null$38.4']
2025-09-26 15:20:08,151 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:20:08,151 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5']
2025-09-26 15:20:08,152 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2025-09-26 15:20:08,152 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$60load_global.6']
2025-09-26 15:20:08,152 - DEBUG - dispatch pc=90, inst=LOAD_CONST(arg=1, lineno=3)
2025-09-26 15:20:08,152 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7']
2025-09-26 15:20:08,152 - DEBUG - dispatch pc=92, inst=CALL_KW(arg=2, lineno=3)
2025-09-26 15:20:08,152 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7', '$const90.8.1']
2025-09-26 15:20:08,152 - DEBUG - dispatch pc=94, inst=STORE_FAST(arg=4, lineno=3)
2025-09-26 15:20:08,153 - DEBUG - stack ['$92call_kw.9']
2025-09-26 15:20:08,153 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=2, lineno=4)
2025-09-26 15:20:08,153 - DEBUG - stack []
2025-09-26 15:20:08,153 - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=4)
2025-09-26 15:20:08,153 - DEBUG - stack ['$const96.10.2']
2025-09-26 15:20:08,153 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=0, lineno=4)
2025-09-26 15:20:08,153 - DEBUG - stack ['$const96.10.2', '$out098.11']
2025-09-26 15:20:08,154 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=3, lineno=4)
2025-09-26 15:20:08,154 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0']
2025-09-26 15:20:08,154 - DEBUG - dispatch pc=104, inst=STORE_SLICE(arg=None, lineno=4)
2025-09-26 15:20:08,154 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0', '$const102.13.3']
2025-09-26 15:20:08,154 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:20:08,154 - DEBUG - stack []
2025-09-26 15:20:08,154 - DEBUG - dispatch pc=108, inst=LOAD_FAST(arg=4, lineno=5)
2025-09-26 15:20:08,154 - DEBUG - stack ['$const106.16.2']
2025-09-26 15:20:08,155 - DEBUG - dispatch pc=110, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:20:08,155 - DEBUG - stack ['$const106.16.2', '$out0108.17']
2025-09-26 15:20:08,155 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=0, lineno=5)
2025-09-26 15:20:08,155 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2']
2025-09-26 15:20:08,155 - DEBUG - dispatch pc=114, inst=STORE_SLICE(arg=None, lineno=5)
2025-09-26 15:20:08,155 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2', '$const112.19.0']
2025-09-26 15:20:08,155 - DEBUG - dispatch pc=116, inst=LOAD_GLOBAL(arg=9, lineno=6)
2025-09-26 15:20:08,155 - DEBUG - stack []
2025-09-26 15:20:08,155 - DEBUG - dispatch pc=126, inst=LOAD_GLOBAL(arg=11, lineno=6)
2025-09-26 15:20:08,156 - DEBUG - stack ['$116load_global.22', '$null$116.23']
2025-09-26 15:20:08,156 - DEBUG - dispatch pc=136, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:20:08,156 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25']
2025-09-26 15:20:08,156 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=4, lineno=6)
2025-09-26 15:20:08,156 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2']
2025-09-26 15:20:08,156 - DEBUG - dispatch pc=140, inst=CALL(arg=2, lineno=6)
2025-09-26 15:20:08,156 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2', '$const138.27.4']
2025-09-26 15:20:08,156 - DEBUG - dispatch pc=148, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-09-26 15:20:08,156 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$140call.28']
2025-09-26 15:20:08,156 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=3, lineno=6)
2025-09-26 15:20:08,157 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29']
2025-09-26 15:20:08,157 - DEBUG - dispatch pc=152, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:20:08,157 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30']
2025-09-26 15:20:08,157 - DEBUG - dispatch pc=154, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-09-26 15:20:08,157 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30', '$const152.31.2']
2025-09-26 15:20:08,157 - DEBUG - dispatch pc=158, inst=LOAD_GLOBAL(arg=13, lineno=6)
2025-09-26 15:20:08,157 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32']
2025-09-26 15:20:08,157 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:20:08,157 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34']
2025-09-26 15:20:08,158 - DEBUG - dispatch pc=170, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:20:08,158 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2']
2025-09-26 15:20:08,158 - DEBUG - dispatch pc=172, inst=CALL(arg=2, lineno=6)
2025-09-26 15:20:08,158 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2', '$const170.36.2']
2025-09-26 15:20:08,158 - DEBUG - dispatch pc=180, inst=BINARY_OP(arg=10, lineno=6)
2025-09-26 15:20:08,158 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$172call.37']
2025-09-26 15:20:08,158 - DEBUG - dispatch pc=184, inst=CALL(arg=2, lineno=6)
2025-09-26 15:20:08,158 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$binop_sub180.38']
2025-09-26 15:20:08,159 - DEBUG - dispatch pc=192, inst=GET_ITER(arg=None, lineno=6)
2025-09-26 15:20:08,159 - DEBUG - stack ['$184call.39']
2025-09-26 15:20:08,159 - DEBUG - end state. edges=[Edge(pc=194, stack=('$192get_iter.40',), blockstack=(), npush=0)]
2025-09-26 15:20:08,159 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:20:08,159 - DEBUG - stack: ['$phi194.0']
2025-09-26 15:20:08,159 - DEBUG - state.pc_initial: State(pc_initial=194 nstack_initial=1)
2025-09-26 15:20:08,159 - DEBUG - dispatch pc=194, inst=FOR_ITER(arg=5, lineno=6)
2025-09-26 15:20:08,159 - DEBUG - stack ['$phi194.0']
2025-09-26 15:20:08,160 - DEBUG - end state. edges=[Edge(pc=208, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0), Edge(pc=198, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0)]
2025-09-26 15:20:08,160 - DEBUG - pending: deque([State(pc_initial=208 nstack_initial=2), State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:20:08,160 - DEBUG - stack: ['$phi208.0', '$phi208.1']
2025-09-26 15:20:08,160 - DEBUG - state.pc_initial: State(pc_initial=208 nstack_initial=2)
2025-09-26 15:20:08,160 - DEBUG - dispatch pc=208, inst=END_FOR(arg=None, lineno=6)
2025-09-26 15:20:08,160 - DEBUG - stack ['$phi208.0', '$phi208.1']
2025-09-26 15:20:08,160 - DEBUG - dispatch pc=210, inst=POP_TOP(arg=None, lineno=6)
2025-09-26 15:20:08,160 - DEBUG - stack ['$phi208.0']
2025-09-26 15:20:08,160 - DEBUG - dispatch pc=212, inst=LOAD_FAST(arg=4, lineno=8)
2025-09-26 15:20:08,161 - DEBUG - stack []
2025-09-26 15:20:08,161 - DEBUG - dispatch pc=214, inst=RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:20:08,161 - DEBUG - stack ['$out0212.2']
2025-09-26 15:20:08,161 - DEBUG - end state. edges=[]
2025-09-26 15:20:08,161 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:20:08,161 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2025-09-26 15:20:08,161 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2025-09-26 15:20:08,161 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=5, lineno=6)
2025-09-26 15:20:08,161 - DEBUG - stack ['$phi198.0', '$phi198.1']
2025-09-26 15:20:08,161 - DEBUG - dispatch pc=200, inst=LOAD_CONST(arg=2, lineno=7)
2025-09-26 15:20:08,162 - DEBUG - stack ['$phi198.0']
2025-09-26 15:20:08,162 - DEBUG - dispatch pc=202, inst=STORE_FAST(arg=6, lineno=7)
2025-09-26 15:20:08,162 - DEBUG - stack ['$phi198.0', '$const200.2.2']
2025-09-26 15:20:08,162 - DEBUG - dispatch pc=204, inst=JUMP_BACKWARD(arg=7, lineno=7)
2025-09-26 15:20:08,162 - DEBUG - stack ['$phi198.0']
2025-09-26 15:20:08,162 - DEBUG - end state. edges=[Edge(pc=194, stack=('$phi198.0',), blockstack=(), npush=0)]
2025-09-26 15:20:08,162 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:20:08,162 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:20:08,162 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=194 nstack_initial=1): {'$phi194.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=208 nstack_initial=2): set()})
2025-09-26 15:20:08,163 - DEBUG - defmap: {'$phi194.0': State(pc_initial=0 nstack_initial=0),
 '$phi198.1': State(pc_initial=194 nstack_initial=1),
 '$phi208.1': State(pc_initial=194 nstack_initial=1)}
2025-09-26 15:20:08,163 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi198.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:20:08,163 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:20:08,164 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:20:08,164 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:20:08,165 - DEBUG - keep phismap: {'$phi194.0': {('$192get_iter.40', State(pc_initial=0 nstack_initial=0))},
 '$phi198.1': {('$194for_iter.2', State(pc_initial=194 nstack_initial=1))}}
2025-09-26 15:20:08,165 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi194.0': '$192get_iter.40'},
             State(pc_initial=194 nstack_initial=1): {'$phi198.1': '$194for_iter.2'}})
2025-09-26 15:20:08,165 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:20:08,165 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.3'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (90, {'res': '$const90.8.1'}), (92, {'func': '$38load_attr.3', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': '$const90.8.1', 'res': '$92call_kw.9'}), (94, {'value': '$92call_kw.9'}), (96, {'res': '$const96.10.2'}), (98, {'res': '$out098.11'}), (100, {'res': '$const100.12.0'}), (102, {'res': '$const102.13.3'}), (104, {'start': '$const100.12.0', 'end': '$const102.13.3', 'container': '$out098.11', 'value': '$const96.10.2', 'res': '$104store_slice.15', 'slicevar': '$104store_slice.14'}), (106, {'res': '$const106.16.2'}), (108, {'res': '$out0108.17'}), (110, {'res': '$const110.18.2'}), (112, {'res': '$const112.19.0'}), (114, {'start': '$const110.18.2', 'end': '$const112.19.0', 'container': '$out0108.17', 'value': '$const106.16.2', 'res': '$114store_slice.21', 'slicevar': '$114store_slice.20'}), (116, {'idx': 4, 'res': '$116load_global.22'}), (126, {'idx': 5, 'res': '$126load_global.24'}), (136, {'res': '$const136.26.2'}), (138, {'res': '$const138.27.4'}), (140, {'func': '$126load_global.24', 'args': ['$const136.26.2', '$const138.27.4'], 'kw_names': None, 'res': '$140call.28'}), (148, {'value': '$140call.28', 'res': '$148unary_negative.29'}), (150, {'res': '$full_shape0150.30'}), (152, {'res': '$const152.31.2'}), (154, {'index': '$const152.31.2', 'target': '$full_shape0150.30', 'res': '$154binary_subscr.32'}), (158, {'idx': 6, 'res': '$158load_global.33'}), (168, {'res': '$const168.35.2'}), (170, {'res': '$const170.36.2'}), (172, {'func': '$158load_global.33', 'args': ['$const168.35.2', '$const170.36.2'], 'kw_names': None, 'res': '$172call.37'}), (180, {'op': '-', 'lhs': '$154binary_subscr.32', 'rhs': '$172call.37', 'res': '$binop_sub180.38'}), (184, {'func': '$116load_global.22', 'args': ['$148unary_negative.29', '$binop_sub180.38'], 'kw_names': None, 'res': '$184call.39'}), (192, {'value': '$184call.39', 'res': '$192get_iter.40'})), outgoing_phis={'$phi194.0': '$192get_iter.40'}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$192get_iter.40',)})
2025-09-26 15:20:08,166 - DEBUG - block_infos State(pc_initial=194 nstack_initial=1):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.0', 'pair': '$194for_iter.1', 'indval': '$194for_iter.2', 'pred': '$194for_iter.3'}),), outgoing_phis={'$phi198.1': '$194for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={208: ('$phi194.0', '$194for_iter.2'), 198: ('$phi194.0', '$194for_iter.2')})
2025-09-26 15:20:08,166 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$const200.2.2'}), (202, {'value': '$const200.2.2'}), (204, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$phi198.0',)})
2025-09-26 15:20:08,166 - DEBUG - block_infos State(pc_initial=208 nstack_initial=2):
AdaptBlockInfo(insts=((212, {'res': '$out0212.2'}), (214, {'retval': '$out0212.2', 'castval': '$214return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:20:08,167 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$28load_global.2']
    $38load_attr.3 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.3']
    $60load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool) ['$60load_global.6', '$70load_attr.7']
    $const_dtype = const(str, dtype)         ['$const_dtype']
    $const90.8.1 = build_tuple(items=[Var($const_dtype, <string>:3)]) ['$const90.8.1', '$const_dtype']
    out0 = call $38load_attr.3(full_shape0, func=$38load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.3', '$70load_attr.7', 'full_shape0', 'out0']
    $const96.10.2 = const(int, 0)            ['$const96.10.2']
    $const100.12.0 = const(NoneType, None)   ['$const100.12.0']
    $const102.13.3 = const(int, 1)           ['$const102.13.3']
    $104store_slice.14 = global(slice: <class 'slice'>) ['$104store_slice.14']
    $104store_slice.15 = call $104store_slice.14($const100.12.0, $const102.13.3, func=$104store_slice.14, args=(Var($const100.12.0, <string>:4), Var($const102.13.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$104store_slice.14', '$104store_slice.15', '$const100.12.0', '$const102.13.3']
    out0[$104store_slice.15] = $const96.10.2 ['$104store_slice.15', '$const96.10.2', 'out0']
    $const106.16.2 = const(int, 0)           ['$const106.16.2']
    $const110.18.2 = const(int, 0)           ['$const110.18.2']
    $const112.19.0 = const(NoneType, None)   ['$const112.19.0']
    $114store_slice.20 = global(slice: <class 'slice'>) ['$114store_slice.20']
    $114store_slice.21 = call $114store_slice.20($const110.18.2, $const112.19.0, func=$114store_slice.20, args=(Var($const110.18.2, <string>:5), Var($const112.19.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$114store_slice.20', '$114store_slice.21', '$const110.18.2', '$const112.19.0']
    out0[$114store_slice.21] = $const106.16.2 ['$114store_slice.21', '$const106.16.2', 'out0']
    $116load_global.22 = global(range: <class 'range'>) ['$116load_global.22']
    $126load_global.24 = global(min: <built-in function min>) ['$126load_global.24']
    $const136.26.2 = const(int, 0)           ['$const136.26.2']
    $const138.27.4 = const(int, -1)          ['$const138.27.4']
    $140call.28 = call $126load_global.24($const136.26.2, $const138.27.4, func=$126load_global.24, args=[Var($const136.26.2, <string>:6), Var($const138.27.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_global.24', '$140call.28', '$const136.26.2', '$const138.27.4']
    $148unary_negative.29 = unary(fn=<built-in function neg>, value=$140call.28) ['$140call.28', '$148unary_negative.29']
    $const152.31.2 = const(int, 0)           ['$const152.31.2']
    $154binary_subscr.32 = getitem(value=full_shape0, index=$const152.31.2, fn=<built-in function getitem>) ['$154binary_subscr.32', '$const152.31.2', 'full_shape0']
    $158load_global.33 = global(max: <built-in function max>) ['$158load_global.33']
    $const168.35.2 = const(int, 0)           ['$const168.35.2']
    $const170.36.2 = const(int, 0)           ['$const170.36.2']
    $172call.37 = call $158load_global.33($const168.35.2, $const170.36.2, func=$158load_global.33, args=[Var($const168.35.2, <string>:6), Var($const170.36.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$158load_global.33', '$172call.37', '$const168.35.2', '$const170.36.2']
    $binop_sub180.38 = $154binary_subscr.32 - $172call.37 ['$154binary_subscr.32', '$172call.37', '$binop_sub180.38']
    $184call.39 = call $116load_global.22($148unary_negative.29, $binop_sub180.38, func=$116load_global.22, args=[Var($148unary_negative.29, <string>:6), Var($binop_sub180.38, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.22', '$148unary_negative.29', '$184call.39', '$binop_sub180.38']
    $192get_iter.40 = getiter(value=$184call.39) ['$184call.39', '$192get_iter.40']
    $phi194.0 = $192get_iter.40              ['$192get_iter.40', '$phi194.0']
    jump 194                                 []
label 194:
    $194for_iter.1 = iternext(value=$phi194.0) ['$194for_iter.1', '$phi194.0']
    $194for_iter.2 = pair_first(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.2']
    $194for_iter.3 = pair_second(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.3']
    $phi198.1 = $194for_iter.2               ['$194for_iter.2', '$phi198.1']
    branch $194for_iter.3, 198, 208          ['$194for_iter.3']
label 198:
    index00 = $phi198.1                      ['$phi198.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 194                                 []
label 208:
    $214return_value.3 = cast(value=out0)    ['$214return_value.3', 'out0']
    return $214return_value.3                ['$214return_value.3']

2025-09-26 15:20:08,192 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:20:08,193 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84C4550>
2025-09-26 15:20:08,193 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:20:08,193 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:20:08,193 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:20:08,193 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:20:08,193 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,194 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:20:08,194 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,194 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:20:08,194 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:20:08,194 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:20:08,194 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,195 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:20:08,195 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:20:08,195 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:20:08,195 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:20:08,195 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,195 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:20:08,196 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:20:08,196 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:20:08,196 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:20:08,196 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:20:08,196 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,196 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:20:08,197 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:20:08,197 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:20:08,197 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:20:08,197 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:20:08,197 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,197 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:20:08,197 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:20:08,198 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:20:08,198 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:20:08,198 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:20:08,198 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:20:08,198 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,198 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:20:08,198 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,199 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:20:08,199 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:20:08,199 - DEBUG - on stmt: jump 194
2025-09-26 15:20:08,199 - DEBUG - ==== SSA block analysis pass on 194
2025-09-26 15:20:08,199 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84C4550>
2025-09-26 15:20:08,199 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:20:08,199 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:20:08,199 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:20:08,200 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:20:08,200 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:20:08,200 - DEBUG - ==== SSA block analysis pass on 198
2025-09-26 15:20:08,200 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84C4550>
2025-09-26 15:20:08,200 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:20:08,200 - DEBUG - on stmt: jump 208
2025-09-26 15:20:08,200 - DEBUG - ==== SSA block analysis pass on 414
2025-09-26 15:20:08,201 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84C4550>
2025-09-26 15:20:08,201 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:20:08,201 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:20:08,201 - DEBUG - ==== SSA block analysis pass on 208
2025-09-26 15:20:08,201 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84C4550>
2025-09-26 15:20:08,201 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:20:08,201 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:20:08,202 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:20:08,202 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:20:08,202 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:20:08,202 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,202 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,202 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:20:08,202 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:20:08,203 - DEBUG - ==== SSA block analysis pass on 209
2025-09-26 15:20:08,203 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84C4550>
2025-09-26 15:20:08,203 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:20:08,203 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,203 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,203 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:20:08,203 - DEBUG - ==== SSA block analysis pass on 241
2025-09-26 15:20:08,204 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84C4550>
2025-09-26 15:20:08,204 - DEBUG - on stmt: jump 251
2025-09-26 15:20:08,204 - DEBUG - ==== SSA block analysis pass on 253
2025-09-26 15:20:08,204 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84C4550>
2025-09-26 15:20:08,204 - DEBUG - on stmt: jump 257
2025-09-26 15:20:08,204 - DEBUG - ==== SSA block analysis pass on 251
2025-09-26 15:20:08,204 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84C4550>
2025-09-26 15:20:08,205 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:20:08,205 - DEBUG - on stmt: jump 257
2025-09-26 15:20:08,205 - DEBUG - ==== SSA block analysis pass on 257
2025-09-26 15:20:08,205 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84C4550>
2025-09-26 15:20:08,205 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:20:08,205 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:20:08,205 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:20:08,205 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:20:08,206 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:20:08,206 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,206 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,206 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:20:08,206 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:20:08,206 - DEBUG - ==== SSA block analysis pass on 261
2025-09-26 15:20:08,206 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84C4550>
2025-09-26 15:20:08,207 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:20:08,207 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,207 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,207 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:20:08,207 - DEBUG - ==== SSA block analysis pass on 289
2025-09-26 15:20:08,207 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84C4550>
2025-09-26 15:20:08,207 - DEBUG - on stmt: jump 299
2025-09-26 15:20:08,208 - DEBUG - ==== SSA block analysis pass on 301
2025-09-26 15:20:08,208 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84C4550>
2025-09-26 15:20:08,208 - DEBUG - on stmt: jump 305
2025-09-26 15:20:08,208 - DEBUG - ==== SSA block analysis pass on 299
2025-09-26 15:20:08,208 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84C4550>
2025-09-26 15:20:08,208 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:20:08,208 - DEBUG - on stmt: jump 305
2025-09-26 15:20:08,209 - DEBUG - ==== SSA block analysis pass on 305
2025-09-26 15:20:08,209 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84C4550>
2025-09-26 15:20:08,209 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,209 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,209 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:20:08,210 - DEBUG - ==== SSA block analysis pass on 309
2025-09-26 15:20:08,210 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84C4550>
2025-09-26 15:20:08,210 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,210 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:20:08,210 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,210 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,210 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:20:08,211 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,211 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:20:08,211 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:20:08,211 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:20:08,211 - DEBUG - on stmt: jump 413
2025-09-26 15:20:08,211 - DEBUG - ==== SSA block analysis pass on 323
2025-09-26 15:20:08,211 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84C4550>
2025-09-26 15:20:08,211 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,212 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:20:08,212 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,212 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,212 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:20:08,212 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,212 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:20:08,212 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:20:08,212 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:20:08,213 - DEBUG - on stmt: jump 413
2025-09-26 15:20:08,213 - DEBUG - ==== SSA block analysis pass on 413
2025-09-26 15:20:08,213 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84C4550>
2025-09-26 15:20:08,213 - DEBUG - on stmt: jump 194
2025-09-26 15:20:08,213 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104store_slice.14.1': [(<numba.core.ir.Assign object at 0x000001C1F85605F0>,
                                       0)],
             '$104store_slice.15.1': [(<numba.core.ir.Assign object at 0x000001C1F8560710>,
                                       0)],
             '$110pred': [(<numba.core.ir.Assign object at 0x000001C1F8522FF0>,
                           305)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x000001C1F8527470>,
                                    309)],
             '$114store_slice.20.1': [(<numba.core.ir.Assign object at 0x000001C1F8560B30>,
                                       0)],
             '$114store_slice.21.1': [(<numba.core.ir.Assign object at 0x000001C1F8560C50>,
                                       0)],
             '$116load_global.22.1': [(<numba.core.ir.Assign object at 0x000001C1F8560D70>,
                                       0)],
             '$124load_attr.1': [(<numba.core.ir.Assign object at 0x000001C1F852CB90>,
                                  309)],
             '$126load_global.24.1': [(<numba.core.ir.Assign object at 0x000001C1F8560E90>,
                                       0)],
             '$140call.28.1': [(<numba.core.ir.Assign object at 0x000001C1F8561130>,
                                0)],
             '$148call.4': [(<numba.core.ir.Assign object at 0x000001C1F852E2D0>,
                             309)],
             '$148unary_negative.29.1': [(<numba.core.ir.Assign object at 0x000001C1F8561250>,
                                          0)],
             '$154binary_subscr.32.1': [(<numba.core.ir.Assign object at 0x000001C1F85614F0>,
                                         0)],
             '$156load_global.5': [(<numba.core.ir.Assign object at 0x000001C1F852FA10>,
                                    309)],
             '$158load_global.33.1': [(<numba.core.ir.Assign object at 0x000001C1F8561610>,
                                       0)],
             '$166load_attr.6': [(<numba.core.ir.Assign object at 0x000001C1F8531130>,
                                  309)],
             '$16unary_negative.4': [(<numba.core.ir.Assign object at 0x000001C1F84DCCB0>,
                                      208)],
             '$172call.37.1': [(<numba.core.ir.Assign object at 0x000001C1F8561910>,
                                0)],
             '$184call.39.1': [(<numba.core.ir.Assign object at 0x000001C1F8561B50>,
                                0)],
             '$190call.9': [(<numba.core.ir.Assign object at 0x000001C1F8532870>,
                             309)],
             '$192get_iter.40.1': [(<numba.core.ir.Assign object at 0x000001C1F8561C70>,
                                    0)],
             '$194for_iter.1.1': [(<numba.core.ir.Assign object at 0x000001C1F8560890>,
                                   194)],
             '$194for_iter.2.1': [(<numba.core.ir.Assign object at 0x000001C1F8561D30>,
                                   194)],
             '$194for_iter.3.1': [(<numba.core.ir.Assign object at 0x000001C1F8561E50>,
                                   194)],
             '$198compare_op.10': [(<numba.core.ir.Assign object at 0x000001C1F8533FB0>,
                                    309)],
             '$202return_value.11': [(<numba.core.ir.Assign object at 0x000001C1F8535730>,
                                      309)],
             '$204load_global.0': [(<numba.core.ir.Assign object at 0x000001C1F8539BB0>,
                                    323)],
             '$214load_attr.1': [(<numba.core.ir.Assign object at 0x000001C1F853B2F0>,
                                  323)],
             '$214return_value.3.1': [(<numba.core.ir.Assign object at 0x000001C1F85623F0>,
                                       414)],
             '$238call.4': [(<numba.core.ir.Assign object at 0x000001C1F8540A70>,
                             323)],
             '$246load_global.5': [(<numba.core.ir.Assign object at 0x000001C1F85421B0>,
                                    323)],
             '$24compare_op.6': [(<numba.core.ir.Assign object at 0x000001C1F84DE3F0>,
                                  208)],
             '$256load_attr.6': [(<numba.core.ir.Assign object at 0x000001C1F85438F0>,
                                  323)],
             '$280call.9': [(<numba.core.ir.Assign object at 0x000001C1F8545070>,
                             323)],
             '$288compare_op.10': [(<numba.core.ir.Assign object at 0x000001C1F85467B0>,
                                    323)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x000001C1F854F9B0>,
                                     0)],
             '$28pred': [(<numba.core.ir.Assign object at 0x000001C1F84E1250>,
                          208)],
             '$292return_value.11': [(<numba.core.ir.Assign object at 0x000001C1F8547EF0>,
                                      323)],
             '$34compare_op.2': [(<numba.core.ir.Assign object at 0x000001C1F84E6E70>,
                                  209)],
             '$38load_attr.3.1': [(<numba.core.ir.Assign object at 0x000001C1F854FAD0>,
                                   0)],
             '$38pred': [(<numba.core.ir.Assign object at 0x000001C1F84E9CD0>,
                          209)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x000001C1F854FCB0>,
                                     0)],
             '$64unary_negative.4': [(<numba.core.ir.Assign object at 0x000001C1F84FAA50>,
                                      257)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x000001C1F854FDD0>,
                                   0)],
             '$72compare_op.6': [(<numba.core.ir.Assign object at 0x000001C1F84FC1D0>,
                                  257)],
             '$76pred': [(<numba.core.ir.Assign object at 0x000001C1F84FEFF0>,
                          257)],
             '$82compare_op.2': [(<numba.core.ir.Assign object at 0x000001C1F850CB90>,
                                  261)],
             '$86pred': [(<numba.core.ir.Assign object at 0x000001C1F850F9B0>,
                          261)],
             '$binop_sub180.38.1': [(<numba.core.ir.Assign object at 0x000001C1F8561A30>,
                                     0)],
             '$bool110': [(<numba.core.ir.Assign object at 0x000001C1F8521910>,
                           305)],
             '$bool28': [(<numba.core.ir.Assign object at 0x000001C1F84DFB30>,
                          208)],
             '$bool38': [(<numba.core.ir.Assign object at 0x000001C1F84E85F0>,
                          209)],
             '$bool76': [(<numba.core.ir.Assign object at 0x000001C1F84FD910>,
                          257)],
             '$bool86': [(<numba.core.ir.Assign object at 0x000001C1F850E2D0>,
                          261)],
             '$const100.12.0.1': [(<numba.core.ir.Assign object at 0x000001C1F8560410>,
                                   0)],
             '$const102.13.3.1': [(<numba.core.ir.Assign object at 0x000001C1F85604D0>,
                                   0)],
             '$const106.16.2.1': [(<numba.core.ir.Assign object at 0x000001C1F85607D0>,
                                   0)],
             '$const110.18.2.1': [(<numba.core.ir.Assign object at 0x000001C1F8560950>,
                                   0)],
             '$const112.19.0.1': [(<numba.core.ir.Assign object at 0x000001C1F8560A10>,
                                   0)],
             '$const136.26.2.1': [(<numba.core.ir.Assign object at 0x000001C1F8560F50>,
                                   0)],
             '$const138.27.4.1': [(<numba.core.ir.Assign object at 0x000001C1F8561010>,
                                   0)],
             '$const152.31.2.1': [(<numba.core.ir.Assign object at 0x000001C1F85613D0>,
                                   0)],
             '$const168.35.2.1': [(<numba.core.ir.Assign object at 0x000001C1F85616D0>,
                                   0)],
             '$const170.36.2.1': [(<numba.core.ir.Assign object at 0x000001C1F85617F0>,
                                   0)],
             '$const54.1.2': [(<numba.core.ir.Assign object at 0x000001C1F84F7BF0>,
                               257)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x000001C1F84D5FD0>,
                              208)],
             '$const90.8.1.1': [(<numba.core.ir.Assign object at 0x000001C1F854FFB0>,
                                 0)],
             '$const96.10.2.1': [(<numba.core.ir.Assign object at 0x000001C1F8560290>,
                                  0)],
             '$const_dtype.1': [(<numba.core.ir.Assign object at 0x000001C1F854FE90>,
                                 0)],
             '$phi194.0.1': [(<numba.core.ir.Assign object at 0x000001C1F854F890>,
                              0)],
             '$phi198.1.1': [(<numba.core.ir.Assign object at 0x000001C1F8561F10>,
                              194)],
             '$phi32.0': [(<numba.core.ir.Assign object at 0x000001C1F84E2990>,
                           208)],
             '$phi80.0': [(<numba.core.ir.Assign object at 0x000001C1F8500770>,
                           257)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x000001C1F854F7D0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x000001C1F8562030>,
                          198)],
             'out0': [(<numba.core.ir.Assign object at 0x000001C1F8560110>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x000001C1F84D5F70>,
                                208),
                               (<numba.core.ir.Assign object at 0x000001C1F854EE10>,
                                257)],
             'threshold': [(<numba.core.ir.Assign object at 0x000001C1F854F530>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000001C1F854F470>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x000001C1F854ED50>, 208),
                    (<numba.core.ir.Assign object at 0x000001C1F84F4E90>, 251)],
             'x1': [(<numba.core.ir.Assign object at 0x000001C1F854EED0>, 257),
                    (<numba.core.ir.Assign object at 0x000001C1F851AB70>, 299)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000001C1F854F5F0>,
                           0)]})
2025-09-26 15:20:08,221 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001C1F84C4550>
2025-09-26 15:20:08,221 - DEBUG - Fix SSA violator on var stencil_index
2025-09-26 15:20:08,222 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:20:08,222 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F8421550>
2025-09-26 15:20:08,222 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:20:08,222 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:20:08,222 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:20:08,222 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:20:08,222 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,223 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:20:08,223 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,223 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:20:08,223 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:20:08,223 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:20:08,223 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,223 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:20:08,224 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:20:08,224 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:20:08,224 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:20:08,224 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,224 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:20:08,224 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:20:08,224 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:20:08,224 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:20:08,225 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:20:08,225 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,225 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:20:08,225 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:20:08,225 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:20:08,225 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:20:08,225 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:20:08,225 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,226 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:20:08,226 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:20:08,226 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:20:08,226 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:20:08,226 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:20:08,226 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:20:08,226 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,226 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:20:08,226 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,227 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:20:08,227 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:20:08,227 - DEBUG - on stmt: jump 194
2025-09-26 15:20:08,227 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:20:08,227 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F8421550>
2025-09-26 15:20:08,227 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:20:08,227 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:20:08,227 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:20:08,228 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:20:08,228 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:20:08,228 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:20:08,228 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F8421550>
2025-09-26 15:20:08,228 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:20:08,228 - DEBUG - on stmt: jump 208
2025-09-26 15:20:08,228 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:20:08,228 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F8421550>
2025-09-26 15:20:08,228 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:20:08,228 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:20:08,229 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:20:08,229 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F8421550>
2025-09-26 15:20:08,229 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:20:08,229 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:20:08,229 - DEBUG - first assign: stencil_index
2025-09-26 15:20:08,229 - DEBUG - replaced with: stencil_index = $const6.1.1 + index00
2025-09-26 15:20:08,229 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:20:08,229 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:20:08,230 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:20:08,230 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,230 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,230 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:20:08,230 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:20:08,230 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:20:08,230 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F8421550>
2025-09-26 15:20:08,230 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:20:08,230 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,231 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,231 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:20:08,231 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:20:08,231 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F8421550>
2025-09-26 15:20:08,231 - DEBUG - on stmt: jump 251
2025-09-26 15:20:08,231 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:20:08,231 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F8421550>
2025-09-26 15:20:08,232 - DEBUG - on stmt: jump 257
2025-09-26 15:20:08,232 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:20:08,232 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F8421550>
2025-09-26 15:20:08,232 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:20:08,232 - DEBUG - on stmt: jump 257
2025-09-26 15:20:08,232 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:20:08,233 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F8421550>
2025-09-26 15:20:08,233 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:20:08,233 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:20:08,233 - DEBUG - replaced with: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:20:08,233 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:20:08,233 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:20:08,234 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:20:08,234 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,234 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,234 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:20:08,234 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:20:08,234 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:20:08,235 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F8421550>
2025-09-26 15:20:08,235 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:20:08,235 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,235 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,235 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:20:08,235 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:20:08,236 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F8421550>
2025-09-26 15:20:08,236 - DEBUG - on stmt: jump 299
2025-09-26 15:20:08,236 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:20:08,236 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F8421550>
2025-09-26 15:20:08,236 - DEBUG - on stmt: jump 305
2025-09-26 15:20:08,236 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:20:08,236 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F8421550>
2025-09-26 15:20:08,237 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:20:08,237 - DEBUG - on stmt: jump 305
2025-09-26 15:20:08,237 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:20:08,237 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F8421550>
2025-09-26 15:20:08,237 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,237 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,237 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:20:08,237 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:20:08,238 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F8421550>
2025-09-26 15:20:08,238 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,238 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:20:08,238 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,238 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,238 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:20:08,238 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,239 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:20:08,239 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:20:08,239 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:20:08,239 - DEBUG - on stmt: jump 413
2025-09-26 15:20:08,239 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:20:08,239 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F8421550>
2025-09-26 15:20:08,239 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,239 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:20:08,240 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,240 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,240 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:20:08,240 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,240 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:20:08,240 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:20:08,240 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:20:08,240 - DEBUG - on stmt: jump 413
2025-09-26 15:20:08,240 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:20:08,241 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F8421550>
2025-09-26 15:20:08,241 - DEBUG - on stmt: jump 194
2025-09-26 15:20:08,241 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000001C1F8567950>],
             257: [<numba.core.ir.Assign object at 0x000001C1F85677D0>]})
2025-09-26 15:20:08,241 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:20:08,241 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F8421550>
2025-09-26 15:20:08,241 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:20:08,241 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:20:08,242 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:20:08,242 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:20:08,242 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,242 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:20:08,242 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,242 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:20:08,242 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:20:08,242 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:20:08,242 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,243 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:20:08,243 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:20:08,243 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:20:08,243 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:20:08,243 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,243 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:20:08,243 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:20:08,243 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:20:08,243 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:20:08,244 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:20:08,244 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,244 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:20:08,244 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:20:08,244 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:20:08,244 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:20:08,244 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:20:08,244 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,245 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:20:08,245 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:20:08,245 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:20:08,245 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:20:08,245 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:20:08,245 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:20:08,245 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,246 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:20:08,246 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,246 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:20:08,246 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:20:08,246 - DEBUG - on stmt: jump 194
2025-09-26 15:20:08,246 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:20:08,246 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F8421550>
2025-09-26 15:20:08,247 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:20:08,247 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:20:08,247 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:20:08,247 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:20:08,247 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:20:08,247 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:20:08,247 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F8421550>
2025-09-26 15:20:08,247 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:20:08,248 - DEBUG - on stmt: jump 208
2025-09-26 15:20:08,248 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:20:08,248 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F8421550>
2025-09-26 15:20:08,248 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:20:08,248 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:20:08,248 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:20:08,249 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F8421550>
2025-09-26 15:20:08,249 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:20:08,249 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:20:08,249 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:20:08,249 - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:20:08,249 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:20:08,249 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:20:08,249 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,250 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,250 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:20:08,250 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:20:08,250 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:20:08,250 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F8421550>
2025-09-26 15:20:08,250 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:20:08,250 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,250 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,251 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:20:08,251 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:20:08,251 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F8421550>
2025-09-26 15:20:08,251 - DEBUG - on stmt: jump 251
2025-09-26 15:20:08,251 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:20:08,251 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F8421550>
2025-09-26 15:20:08,251 - DEBUG - on stmt: jump 257
2025-09-26 15:20:08,251 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:20:08,252 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F8421550>
2025-09-26 15:20:08,252 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:20:08,252 - DEBUG - on stmt: jump 257
2025-09-26 15:20:08,252 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:20:08,252 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F8421550>
2025-09-26 15:20:08,252 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:20:08,252 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:20:08,252 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:20:08,252 - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:20:08,253 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:20:08,253 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:20:08,253 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:20:08,253 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,253 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,253 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:20:08,253 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:20:08,253 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:20:08,253 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F8421550>
2025-09-26 15:20:08,254 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:20:08,254 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,254 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,254 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:20:08,254 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:20:08,254 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F8421550>
2025-09-26 15:20:08,254 - DEBUG - on stmt: jump 299
2025-09-26 15:20:08,254 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:20:08,254 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F8421550>
2025-09-26 15:20:08,255 - DEBUG - on stmt: jump 305
2025-09-26 15:20:08,255 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:20:08,255 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F8421550>
2025-09-26 15:20:08,255 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:20:08,255 - DEBUG - on stmt: jump 305
2025-09-26 15:20:08,255 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:20:08,255 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F8421550>
2025-09-26 15:20:08,255 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,255 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,256 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:20:08,256 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:20:08,256 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F8421550>
2025-09-26 15:20:08,256 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,256 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:20:08,256 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,256 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,256 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:20:08,256 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,257 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:20:08,257 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:20:08,257 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:20:08,257 - DEBUG - on stmt: jump 413
2025-09-26 15:20:08,257 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:20:08,257 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F8421550>
2025-09-26 15:20:08,257 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,257 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:20:08,258 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,258 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,258 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:20:08,258 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,258 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:20:08,258 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:20:08,259 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:20:08,259 - DEBUG - on stmt: jump 413
2025-09-26 15:20:08,259 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:20:08,259 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F8421550>
2025-09-26 15:20:08,259 - DEBUG - on stmt: jump 194
2025-09-26 15:20:08,259 - DEBUG - Fix SSA violator on var x0
2025-09-26 15:20:08,259 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:20:08,260 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4690>
2025-09-26 15:20:08,260 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:20:08,260 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:20:08,260 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:20:08,260 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:20:08,260 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,261 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:20:08,261 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,261 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:20:08,261 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:20:08,261 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:20:08,261 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,261 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:20:08,262 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:20:08,262 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:20:08,262 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:20:08,262 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,262 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:20:08,262 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:20:08,262 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:20:08,263 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:20:08,263 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:20:08,263 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,263 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:20:08,263 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:20:08,263 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:20:08,264 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:20:08,264 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:20:08,264 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,264 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:20:08,264 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:20:08,264 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:20:08,264 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:20:08,265 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:20:08,265 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:20:08,265 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,265 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:20:08,265 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,265 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:20:08,265 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:20:08,265 - DEBUG - on stmt: jump 194
2025-09-26 15:20:08,265 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:20:08,266 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4690>
2025-09-26 15:20:08,266 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:20:08,266 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:20:08,266 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:20:08,266 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:20:08,266 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:20:08,266 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:20:08,266 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4690>
2025-09-26 15:20:08,266 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:20:08,266 - DEBUG - on stmt: jump 208
2025-09-26 15:20:08,267 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:20:08,267 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4690>
2025-09-26 15:20:08,267 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:20:08,267 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:20:08,267 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:20:08,267 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4690>
2025-09-26 15:20:08,267 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:20:08,267 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:20:08,267 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:20:08,268 - DEBUG - first assign: x0
2025-09-26 15:20:08,268 - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:20:08,268 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:20:08,268 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:20:08,268 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,268 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,268 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:20:08,269 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:20:08,269 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:20:08,269 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4690>
2025-09-26 15:20:08,269 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:20:08,269 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,269 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,269 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:20:08,270 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:20:08,270 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4690>
2025-09-26 15:20:08,270 - DEBUG - on stmt: jump 251
2025-09-26 15:20:08,270 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:20:08,270 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4690>
2025-09-26 15:20:08,270 - DEBUG - on stmt: jump 257
2025-09-26 15:20:08,270 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:20:08,270 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4690>
2025-09-26 15:20:08,271 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:20:08,271 - DEBUG - replaced with: x0.1 = const(int, 0)
2025-09-26 15:20:08,271 - DEBUG - on stmt: jump 257
2025-09-26 15:20:08,271 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:20:08,271 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4690>
2025-09-26 15:20:08,271 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:20:08,272 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:20:08,272 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:20:08,272 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:20:08,272 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:20:08,272 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,272 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,272 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:20:08,272 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:20:08,273 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:20:08,273 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4690>
2025-09-26 15:20:08,273 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:20:08,273 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,273 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,273 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:20:08,273 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:20:08,273 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4690>
2025-09-26 15:20:08,274 - DEBUG - on stmt: jump 299
2025-09-26 15:20:08,274 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:20:08,274 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4690>
2025-09-26 15:20:08,274 - DEBUG - on stmt: jump 305
2025-09-26 15:20:08,274 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:20:08,274 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4690>
2025-09-26 15:20:08,274 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:20:08,275 - DEBUG - on stmt: jump 305
2025-09-26 15:20:08,275 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:20:08,275 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4690>
2025-09-26 15:20:08,275 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,275 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,275 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:20:08,275 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:20:08,276 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4690>
2025-09-26 15:20:08,276 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,276 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:20:08,276 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,276 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,276 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:20:08,276 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,276 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:20:08,277 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:20:08,277 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:20:08,277 - DEBUG - on stmt: jump 413
2025-09-26 15:20:08,277 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:20:08,277 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4690>
2025-09-26 15:20:08,277 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,277 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:20:08,277 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,277 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,278 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:20:08,278 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,278 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:20:08,278 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:20:08,278 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:20:08,279 - DEBUG - on stmt: jump 413
2025-09-26 15:20:08,279 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:20:08,279 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4690>
2025-09-26 15:20:08,279 - DEBUG - on stmt: jump 194
2025-09-26 15:20:08,279 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000001C1F8565EB0>],
             251: [<numba.core.ir.Assign object at 0x000001C1F8567A70>]})
2025-09-26 15:20:08,279 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:20:08,280 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4A50>
2025-09-26 15:20:08,280 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:20:08,280 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:20:08,280 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:20:08,280 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:20:08,280 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,280 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:20:08,280 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,281 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:20:08,281 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:20:08,281 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:20:08,281 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,281 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:20:08,281 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:20:08,281 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:20:08,281 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:20:08,282 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,282 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:20:08,282 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:20:08,282 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:20:08,282 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:20:08,282 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:20:08,282 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,282 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:20:08,282 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:20:08,283 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:20:08,283 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:20:08,283 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:20:08,283 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,283 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:20:08,283 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:20:08,283 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:20:08,283 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:20:08,283 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:20:08,284 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:20:08,284 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,284 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:20:08,284 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,284 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:20:08,284 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:20:08,284 - DEBUG - on stmt: jump 194
2025-09-26 15:20:08,284 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:20:08,285 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4A50>
2025-09-26 15:20:08,285 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:20:08,285 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:20:08,285 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:20:08,285 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:20:08,285 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:20:08,285 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:20:08,285 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4A50>
2025-09-26 15:20:08,286 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:20:08,286 - DEBUG - on stmt: jump 208
2025-09-26 15:20:08,286 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:20:08,286 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4A50>
2025-09-26 15:20:08,286 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:20:08,286 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:20:08,286 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:20:08,286 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4A50>
2025-09-26 15:20:08,286 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:20:08,287 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:20:08,287 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:20:08,287 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:20:08,287 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:20:08,287 - DEBUG - find_def var='x0' stmt=$24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:20:08,287 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,287 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,288 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:20:08,288 - DEBUG - find_def var='x0' stmt=$phi32.0 = x0
2025-09-26 15:20:08,288 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:20:08,288 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:20:08,288 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4A50>
2025-09-26 15:20:08,288 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:20:08,288 - DEBUG - find_def var='x0' stmt=$34compare_op.2 = x0 <= threshold
2025-09-26 15:20:08,289 - DEBUG - find_def_from_top label 209
2025-09-26 15:20:08,289 - DEBUG - idom 208 from label 209
2025-09-26 15:20:08,289 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:20:08,289 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,289 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,289 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:20:08,289 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:20:08,290 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4A50>
2025-09-26 15:20:08,290 - DEBUG - on stmt: jump 251
2025-09-26 15:20:08,290 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:20:08,290 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4A50>
2025-09-26 15:20:08,290 - DEBUG - on stmt: jump 257
2025-09-26 15:20:08,290 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:20:08,290 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4A50>
2025-09-26 15:20:08,290 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:20:08,290 - DEBUG - on stmt: jump 257
2025-09-26 15:20:08,290 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:20:08,291 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4A50>
2025-09-26 15:20:08,291 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:20:08,291 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:20:08,291 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:20:08,291 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:20:08,291 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:20:08,291 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,291 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,292 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:20:08,292 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:20:08,292 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:20:08,292 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4A50>
2025-09-26 15:20:08,292 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:20:08,292 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,292 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,292 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:20:08,292 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:20:08,292 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4A50>
2025-09-26 15:20:08,293 - DEBUG - on stmt: jump 299
2025-09-26 15:20:08,293 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:20:08,293 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4A50>
2025-09-26 15:20:08,293 - DEBUG - on stmt: jump 305
2025-09-26 15:20:08,293 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:20:08,293 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4A50>
2025-09-26 15:20:08,293 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:20:08,293 - DEBUG - on stmt: jump 305
2025-09-26 15:20:08,293 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:20:08,293 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4A50>
2025-09-26 15:20:08,294 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,294 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,294 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:20:08,294 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:20:08,294 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4A50>
2025-09-26 15:20:08,294 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,294 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:20:08,294 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,295 - DEBUG - find_def var='x0' stmt=$148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,295 - DEBUG - find_def_from_top label 309
2025-09-26 15:20:08,295 - DEBUG - idom 305 from label 309
2025-09-26 15:20:08,295 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:20:08,295 - DEBUG - find_def_from_top label 305
2025-09-26 15:20:08,295 - DEBUG - idom 257 from label 305
2025-09-26 15:20:08,295 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:20:08,295 - DEBUG - find_def_from_top label 257
2025-09-26 15:20:08,296 - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 257
2025-09-26 15:20:08,296 - DEBUG - find_def_from_bottom label 209
2025-09-26 15:20:08,296 - DEBUG - find_def_from_top label 209
2025-09-26 15:20:08,296 - DEBUG - idom 208 from label 209
2025-09-26 15:20:08,296 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:20:08,296 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:20:08,296 - DEBUG - find_def_from_bottom label 251
2025-09-26 15:20:08,296 - DEBUG - incoming_def x0.1 = const(int, 0)
2025-09-26 15:20:08,296 - DEBUG - find_def_from_bottom label 253
2025-09-26 15:20:08,297 - DEBUG - find_def_from_top label 253
2025-09-26 15:20:08,297 - DEBUG - idom 208 from label 253
2025-09-26 15:20:08,297 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:20:08,297 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:20:08,297 - DEBUG - replaced with: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,297 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,297 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:20:08,297 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,298 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:20:08,298 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:20:08,298 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:20:08,298 - DEBUG - on stmt: jump 413
2025-09-26 15:20:08,298 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:20:08,298 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4A50>
2025-09-26 15:20:08,298 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,298 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:20:08,298 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,299 - DEBUG - find_def var='x0' stmt=$238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,299 - DEBUG - find_def_from_top label 323
2025-09-26 15:20:08,299 - DEBUG - idom 305 from label 323
2025-09-26 15:20:08,299 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:20:08,299 - DEBUG - find_def_from_top label 305
2025-09-26 15:20:08,299 - DEBUG - idom 257 from label 305
2025-09-26 15:20:08,299 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:20:08,299 - DEBUG - replaced with: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,300 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,300 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:20:08,300 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,300 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:20:08,300 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:20:08,300 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:20:08,301 - DEBUG - on stmt: jump 413
2025-09-26 15:20:08,301 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:20:08,301 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4A50>
2025-09-26 15:20:08,301 - DEBUG - on stmt: jump 194
2025-09-26 15:20:08,301 - DEBUG - Fix SSA violator on var x1
2025-09-26 15:20:08,301 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:20:08,301 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4CD0>
2025-09-26 15:20:08,301 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:20:08,302 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:20:08,302 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:20:08,302 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:20:08,302 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,302 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:20:08,302 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,302 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:20:08,302 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:20:08,303 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:20:08,303 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,303 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:20:08,303 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:20:08,303 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:20:08,303 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:20:08,303 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,303 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:20:08,303 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:20:08,304 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:20:08,304 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:20:08,304 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:20:08,304 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,304 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:20:08,304 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:20:08,304 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:20:08,304 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:20:08,305 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:20:08,305 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,305 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:20:08,305 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:20:08,305 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:20:08,305 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:20:08,305 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:20:08,305 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:20:08,305 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,306 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:20:08,306 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,306 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:20:08,306 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:20:08,306 - DEBUG - on stmt: jump 194
2025-09-26 15:20:08,306 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:20:08,306 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4CD0>
2025-09-26 15:20:08,306 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:20:08,306 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:20:08,306 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:20:08,307 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:20:08,307 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:20:08,307 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:20:08,307 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4CD0>
2025-09-26 15:20:08,307 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:20:08,307 - DEBUG - on stmt: jump 208
2025-09-26 15:20:08,307 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:20:08,307 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4CD0>
2025-09-26 15:20:08,307 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:20:08,308 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:20:08,308 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:20:08,308 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4CD0>
2025-09-26 15:20:08,308 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:20:08,308 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:20:08,308 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:20:08,308 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:20:08,308 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:20:08,308 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,309 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,309 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:20:08,309 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:20:08,309 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:20:08,309 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4CD0>
2025-09-26 15:20:08,309 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:20:08,309 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,309 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,309 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:20:08,310 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:20:08,310 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4CD0>
2025-09-26 15:20:08,310 - DEBUG - on stmt: jump 251
2025-09-26 15:20:08,310 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:20:08,310 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4CD0>
2025-09-26 15:20:08,310 - DEBUG - on stmt: jump 257
2025-09-26 15:20:08,310 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:20:08,310 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4CD0>
2025-09-26 15:20:08,311 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:20:08,311 - DEBUG - on stmt: jump 257
2025-09-26 15:20:08,311 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:20:08,311 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4CD0>
2025-09-26 15:20:08,311 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:20:08,311 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:20:08,311 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:20:08,311 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:20:08,311 - DEBUG - first assign: x1
2025-09-26 15:20:08,312 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:20:08,312 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:20:08,312 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:20:08,312 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,312 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,312 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:20:08,312 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:20:08,312 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:20:08,313 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4CD0>
2025-09-26 15:20:08,313 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:20:08,313 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,313 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,313 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:20:08,313 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:20:08,313 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4CD0>
2025-09-26 15:20:08,314 - DEBUG - on stmt: jump 299
2025-09-26 15:20:08,314 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:20:08,314 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4CD0>
2025-09-26 15:20:08,314 - DEBUG - on stmt: jump 305
2025-09-26 15:20:08,314 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:20:08,314 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4CD0>
2025-09-26 15:20:08,314 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:20:08,314 - DEBUG - replaced with: x1.1 = const(int, 0)
2025-09-26 15:20:08,315 - DEBUG - on stmt: jump 305
2025-09-26 15:20:08,315 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:20:08,315 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4CD0>
2025-09-26 15:20:08,315 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,315 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,315 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:20:08,315 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:20:08,315 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4CD0>
2025-09-26 15:20:08,316 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,316 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:20:08,316 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,316 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,316 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:20:08,316 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,316 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:20:08,316 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:20:08,317 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:20:08,317 - DEBUG - on stmt: jump 413
2025-09-26 15:20:08,317 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:20:08,317 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4CD0>
2025-09-26 15:20:08,317 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,317 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:20:08,317 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,317 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,317 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:20:08,317 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,318 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:20:08,318 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:20:08,318 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:20:08,318 - DEBUG - on stmt: jump 413
2025-09-26 15:20:08,318 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:20:08,318 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F84C4CD0>
2025-09-26 15:20:08,318 - DEBUG - on stmt: jump 194
2025-09-26 15:20:08,318 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {257: [<numba.core.ir.Assign object at 0x000001C1F85650D0>],
             299: [<numba.core.ir.Assign object at 0x000001C1F8565BB0>]})
2025-09-26 15:20:08,319 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:20:08,319 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4690>
2025-09-26 15:20:08,319 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:20:08,319 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:20:08,319 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:20:08,319 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:20:08,319 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,319 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:20:08,319 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,320 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:20:08,320 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:20:08,320 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:20:08,320 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,320 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:20:08,320 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:20:08,320 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:20:08,320 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:20:08,321 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,321 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:20:08,321 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:20:08,321 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:20:08,321 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:20:08,321 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:20:08,321 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,321 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:20:08,321 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:20:08,322 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:20:08,322 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:20:08,322 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:20:08,322 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,322 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:20:08,322 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:20:08,322 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:20:08,322 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:20:08,322 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:20:08,323 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:20:08,323 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,323 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:20:08,323 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,323 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:20:08,323 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:20:08,323 - DEBUG - on stmt: jump 194
2025-09-26 15:20:08,323 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:20:08,323 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4690>
2025-09-26 15:20:08,324 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:20:08,324 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:20:08,324 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:20:08,324 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:20:08,324 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:20:08,324 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:20:08,324 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4690>
2025-09-26 15:20:08,325 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:20:08,325 - DEBUG - on stmt: jump 208
2025-09-26 15:20:08,325 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:20:08,325 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4690>
2025-09-26 15:20:08,325 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:20:08,325 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:20:08,325 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:20:08,326 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4690>
2025-09-26 15:20:08,326 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:20:08,326 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:20:08,326 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:20:08,326 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:20:08,326 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:20:08,326 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,326 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,326 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:20:08,327 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:20:08,327 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:20:08,327 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4690>
2025-09-26 15:20:08,327 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:20:08,327 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,327 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,327 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:20:08,327 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:20:08,328 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4690>
2025-09-26 15:20:08,328 - DEBUG - on stmt: jump 251
2025-09-26 15:20:08,328 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:20:08,328 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4690>
2025-09-26 15:20:08,328 - DEBUG - on stmt: jump 257
2025-09-26 15:20:08,328 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:20:08,328 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4690>
2025-09-26 15:20:08,328 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:20:08,329 - DEBUG - on stmt: jump 257
2025-09-26 15:20:08,329 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:20:08,329 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4690>
2025-09-26 15:20:08,329 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:20:08,329 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:20:08,329 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:20:08,329 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:20:08,330 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:20:08,330 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:20:08,330 - DEBUG - find_def var='x1' stmt=$72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:20:08,330 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,330 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,330 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:20:08,330 - DEBUG - find_def var='x1' stmt=$phi80.0 = x1
2025-09-26 15:20:08,330 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:20:08,330 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:20:08,331 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4690>
2025-09-26 15:20:08,331 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:20:08,331 - DEBUG - find_def var='x1' stmt=$82compare_op.2 = x1 <= threshold
2025-09-26 15:20:08,331 - DEBUG - find_def_from_top label 261
2025-09-26 15:20:08,331 - DEBUG - idom 257 from label 261
2025-09-26 15:20:08,331 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:20:08,331 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,331 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,331 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:20:08,331 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:20:08,332 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4690>
2025-09-26 15:20:08,332 - DEBUG - on stmt: jump 299
2025-09-26 15:20:08,332 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:20:08,332 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4690>
2025-09-26 15:20:08,332 - DEBUG - on stmt: jump 305
2025-09-26 15:20:08,332 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:20:08,332 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4690>
2025-09-26 15:20:08,332 - DEBUG - on stmt: x1.1 = const(int, 0)
2025-09-26 15:20:08,332 - DEBUG - on stmt: jump 305
2025-09-26 15:20:08,332 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:20:08,333 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4690>
2025-09-26 15:20:08,333 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:20:08,333 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,333 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:20:08,333 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:20:08,333 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4690>
2025-09-26 15:20:08,333 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,333 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:20:08,333 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,334 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,334 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:20:08,334 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,334 - DEBUG - find_def var='x1' stmt=$190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,334 - DEBUG - find_def_from_top label 309
2025-09-26 15:20:08,334 - DEBUG - idom 305 from label 309
2025-09-26 15:20:08,334 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:20:08,334 - DEBUG - find_def_from_top label 305
2025-09-26 15:20:08,335 - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 305
2025-09-26 15:20:08,335 - DEBUG - find_def_from_bottom label 299
2025-09-26 15:20:08,335 - DEBUG - incoming_def x1.1 = const(int, 0)
2025-09-26 15:20:08,335 - DEBUG - find_def_from_bottom label 301
2025-09-26 15:20:08,335 - DEBUG - find_def_from_top label 301
2025-09-26 15:20:08,335 - DEBUG - idom 257 from label 301
2025-09-26 15:20:08,335 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:20:08,335 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:20:08,335 - DEBUG - find_def_from_bottom label 261
2025-09-26 15:20:08,336 - DEBUG - find_def_from_top label 261
2025-09-26 15:20:08,336 - DEBUG - idom 257 from label 261
2025-09-26 15:20:08,336 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:20:08,336 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:20:08,336 - DEBUG - replaced with: $190call.9 = call $166load_attr.6(x1.2, func=$166load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,336 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:20:08,336 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:20:08,336 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:20:08,336 - DEBUG - on stmt: jump 413
2025-09-26 15:20:08,336 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:20:08,337 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4690>
2025-09-26 15:20:08,337 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,337 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:20:08,337 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,337 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:20:08,337 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:20:08,337 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,337 - DEBUG - find_def var='x1' stmt=$280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,338 - DEBUG - find_def_from_top label 323
2025-09-26 15:20:08,338 - DEBUG - idom 305 from label 323
2025-09-26 15:20:08,338 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:20:08,338 - DEBUG - replaced with: $280call.9 = call $256load_attr.6(x1.2, func=$256load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:20:08,338 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:20:08,338 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:20:08,338 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:20:08,339 - DEBUG - on stmt: jump 413
2025-09-26 15:20:08,339 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:20:08,339 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F84C4690>
2025-09-26 15:20:08,339 - DEBUG - on stmt: jump 194
2025-09-26 15:20:08,352 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с librosa: 'function' object has no attribute 'get_call_template'
2025-09-26 15:20:08,359 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 15:20:08,359 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 15:20:08,892 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\Incode - Know.mp3'>)))], 'idempotency_key': 'stainless-python-retry-a0d8652e-d973-4745-a823-07fc236b0093', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:20:08,992 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:20:08,992 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-26 15:20:09,084 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001C1F8895010>
2025-09-26 15:20:09,085 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C1F85C5520> server_hostname='api.openai.com' timeout=5.0
2025-09-26 15:20:09,347 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001C1F84C7610>
2025-09-26 15:20:09,348 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:20:09,348 - DEBUG - send_request_headers.complete
2025-09-26 15:20:09,348 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:20:09,352 - DEBUG - send_request_body.complete
2025-09-26 15:20:09,352 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:20:11,989 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:20:11 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'846'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'871'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_e289f6162ed4470fb6cd6bd5513478ba'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=XdmVOOvt_voSpDaShRiVfTuya53BGlDzVJq.HFwdK7w-1758889211-1.0.1.1-O3MTAasd4F9dtjPe00y28staD8SzU8JZuDoSzJkNQlPy32IEWSodF5o9w8zvQtvLMS3OKvuIMLNtnUo63I9S5AReSiMexHC037_desmHtqc; path=/; expires=Fri, 26-Sep-25 12:50:11 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=yv69rWrsj6mAUPhNnyL7bupkYni9fHm6ooj3igXhaXU-1758889211955-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9852b6b6ab65805b-ARN'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:20:11,991 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:20:11,991 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:20:11,991 - DEBUG - receive_response_body.complete
2025-09-26 15:20:11,991 - DEBUG - response_closed.started
2025-09-26 15:20:11,992 - DEBUG - response_closed.complete
2025-09-26 15:20:11,992 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers([('date', 'Fri, 26 Sep 2025 12:20:11 GMT'), ('content-type', 'text/plain; charset=utf-8'), ('content-length', '1'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'yurisun'), ('openai-processing-ms', '846'), ('openai-project', 'proj_Llb21yVk5b2whxj0ZTkY3iYI'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '871'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-reset-requests', '120ms'), ('x-request-id', 'req_e289f6162ed4470fb6cd6bd5513478ba'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=XdmVOOvt_voSpDaShRiVfTuya53BGlDzVJq.HFwdK7w-1758889211-1.0.1.1-O3MTAasd4F9dtjPe00y28staD8SzU8JZuDoSzJkNQlPy32IEWSodF5o9w8zvQtvLMS3OKvuIMLNtnUo63I9S5AReSiMexHC037_desmHtqc; path=/; expires=Fri, 26-Sep-25 12:50:11 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=yv69rWrsj6mAUPhNnyL7bupkYni9fHm6ooj3igXhaXU-1758889211955-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '9852b6b6ab65805b-ARN'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-09-26 15:20:11,992 - DEBUG - request_id: req_e289f6162ed4470fb6cd6bd5513478ba
2025-09-26 15:20:11,993 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:20:11,993 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:20:11,993 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:20:11,993 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: '' (длина: 0)
2025-09-26 15:20:11,993 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 2 - альтернативный язык: en
2025-09-26 15:20:11,994 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\Incode - Know.mp3'>)))], 'idempotency_key': 'stainless-python-retry-8e81b6de-ba03-44e1-b00e-bb4a78ce97c0', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'en', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:20:11,995 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:20:11,995 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:20:11,995 - DEBUG - send_request_headers.complete
2025-09-26 15:20:11,996 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:20:11,998 - DEBUG - send_request_body.complete
2025-09-26 15:20:11,999 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:21:07,179 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:21:07 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'14'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1821'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1835'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_e1a33a24e6e04e1190d8900c00861245'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9852b6c72b40805b-ARN'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:21:07,180 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:21:07,180 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:21:07,180 - DEBUG - receive_response_body.complete
2025-09-26 15:21:07,180 - DEBUG - response_closed.started
2025-09-26 15:21:07,181 - DEBUG - response_closed.complete
2025-09-26 15:21:07,181 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:21:07 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '14', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1821', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1835', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_e1a33a24e6e04e1190d8900c00861245', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9852b6c72b40805b-ARN', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:21:07,181 - DEBUG - request_id: req_e1a33a24e6e04e1190d8900c00861245
2025-09-26 15:21:07,181 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'I'll get away'
2025-09-26 15:21:07,182 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:21:07,182 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'I'll get away'
2025-09-26 15:21:07,183 - DEBUG - ТРАНСКРИПЦИЯ: Результат 2: 'I'll get away' (длина: 13)
2025-09-26 15:21:07,183 - DEBUG - ТРАНСКРИПЦИЯ: Выбран результат альтернативного языка
2025-09-26 15:21:07,183 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 4 - музыкальный промпт
2025-09-26 15:21:07,183 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\Incode - Know.mp3'>)))], 'idempotency_key': 'stainless-python-retry-93801c41-a8a9-491c-bdec-329ec4260a66', 'json_data': {'model': 'gpt-4o-transcribe', 'prompt': 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.', 'response_format': 'text'}}
2025-09-26 15:21:07,184 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:21:07,185 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:21:07,185 - DEBUG - send_request_headers.complete
2025-09-26 15:21:07,185 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:21:07,188 - DEBUG - send_request_body.complete
2025-09-26 15:21:07,188 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:21:09,036 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:21:09 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'411'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'421'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_bc8535571f5e47cdaa99abee946fcf56'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9852b8201b58805b-ARN'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:21:09,037 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:21:09,037 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:21:09,037 - DEBUG - receive_response_body.complete
2025-09-26 15:21:09,037 - DEBUG - response_closed.started
2025-09-26 15:21:09,038 - DEBUG - response_closed.complete
2025-09-26 15:21:09,038 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:21:09 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '411', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '421', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_bc8535571f5e47cdaa99abee946fcf56', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9852b8201b58805b-ARN', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:21:09,038 - DEBUG - request_id: req_bc8535571f5e47cdaa99abee946fcf56
2025-09-26 15:21:09,039 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:21:09,039 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.'
2025-09-26 15:21:09,039 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:21:09,039 - DEBUG - ТРАНСКРИПЦИЯ: Результат музыкального промпта: '' (длина: 0)
2025-09-26 15:21:09,040 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 5 - английский язык с музыкальным промптом
2025-09-26 15:21:09,040 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\Incode - Know.mp3'>)))], 'idempotency_key': 'stainless-python-retry-d4434066-acdc-4be4-98c4-2be141bb15f2', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'en', 'prompt': 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.', 'response_format': 'text'}}
2025-09-26 15:21:09,041 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:21:09,041 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:21:09,042 - DEBUG - send_request_headers.complete
2025-09-26 15:21:09,042 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:21:09,044 - DEBUG - send_request_body.complete
2025-09-26 15:21:09,045 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:21:11,327 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:21:11 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'763'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'775'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_840cdfaa0d324f25bdf12511d7f0f9df'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9852b82bba5a805b-ARN'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:21:11,328 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:21:11,328 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:21:11,329 - DEBUG - receive_response_body.complete
2025-09-26 15:21:11,329 - DEBUG - response_closed.started
2025-09-26 15:21:11,329 - DEBUG - response_closed.complete
2025-09-26 15:21:11,329 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:21:11 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '763', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '775', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_840cdfaa0d324f25bdf12511d7f0f9df', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9852b82bba5a805b-ARN', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:21:11,330 - DEBUG - request_id: req_840cdfaa0d324f25bdf12511d7f0f9df
2025-09-26 15:21:11,330 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:21:11,330 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Это музыкальная композиция с вокалом. Распознай ВСЕ слова песни от начала до конца. Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не интерпретируй, не сокращай. Внимательно слушай начало песни - там тоже есть слова. Если есть повторяющийся припев - распознай ВСЕ повторения полностью. Если это инструментальная музыка без слов - верни пустую строку. ВАЖНО: Распознай весь текст песни, включая все куплеты и припевы. Не останавливайся на первом фрагменте - слушай до конца.'
2025-09-26 15:21:11,330 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:21:11,331 - DEBUG - ТРАНСКРИПЦИЯ: Результат английского музыкального промпта: '' (длина: 0)
2025-09-26 15:21:11,331 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'I'll get away'
2025-09-26 15:21:11,331 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:21:11,331 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'I'll get away'
2025-09-26 15:21:11,332 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\Incode - Know.mp3'>)))], 'idempotency_key': 'stainless-python-retry-5fc98522-1fa8-49bd-8eb1-6ef6b8f566ac', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 15:21:11,333 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 15:21:11,333 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 15:21:11,333 - DEBUG - send_request_headers.complete
2025-09-26 15:21:11,333 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 15:21:11,336 - DEBUG - send_request_body.complete
2025-09-26 15:21:11,336 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 15:21:13,780 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 12:21:13 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1243'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1256'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_17d2dd4ff40344869b09d259fb69c997'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9852b83a0d43805b-ARN'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 15:21:13,781 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 15:21:13,781 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 15:21:13,781 - DEBUG - receive_response_body.complete
2025-09-26 15:21:13,781 - DEBUG - response_closed.started
2025-09-26 15:21:13,782 - DEBUG - response_closed.complete
2025-09-26 15:21:13,782 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 12:21:13 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1243', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1256', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_17d2dd4ff40344869b09d259fb69c997', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9852b83a0d43805b-ARN', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 15:21:13,782 - DEBUG - request_id: req_17d2dd4ff40344869b09d259fb69c997
2025-09-26 15:21:13,782 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 15:21:13,782 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 15:21:13,783 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 15:21:13,886 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	RESUME(arg=0, lineno=1137)
           4	LOAD_FAST(arg=0, lineno=1140)
           6	LOAD_CONST(arg=1, lineno=1140)
           8	BINARY_SUBSCR(arg=None, lineno=1140)
          12	STORE_FAST(arg=3, lineno=1140)
          14	LOAD_FAST(arg=1, lineno=1141)
          16	UNARY_NEGATIVE(arg=None, lineno=1141)
          18	LOAD_FAST(arg=3, lineno=1141)
          20	SWAP(arg=2, lineno=1141)
          22	COPY(arg=2, lineno=1141)
          24	COMPARE_OP(arg=58, lineno=1141)
          28	POP_JUMP_IF_FALSE(arg=6, lineno=1141)
          32	LOAD_FAST(arg=1, lineno=1141)
          34	COMPARE_OP(arg=58, lineno=1141)
          38	POP_JUMP_IF_FALSE(arg=5, lineno=1141)
          42	JUMP_FORWARD(arg=2, lineno=1141)
>         44	POP_TOP(arg=None, lineno=1141)
          46	JUMP_FORWARD(arg=2, lineno=1141)
>         48	LOAD_CONST(arg=1, lineno=1142)
          50	STORE_FAST(arg=3, lineno=1142)
>         52	LOAD_FAST(arg=0, lineno=1144)
          54	LOAD_CONST(arg=2, lineno=1144)
          56	BINARY_SUBSCR(arg=None, lineno=1144)
          60	STORE_FAST(arg=4, lineno=1144)
          62	LOAD_FAST(arg=1, lineno=1145)
          64	UNARY_NEGATIVE(arg=None, lineno=1145)
          66	LOAD_FAST(arg=4, lineno=1145)
          68	SWAP(arg=2, lineno=1145)
          70	COPY(arg=2, lineno=1145)
          72	COMPARE_OP(arg=58, lineno=1145)
          76	POP_JUMP_IF_FALSE(arg=6, lineno=1145)
          80	LOAD_FAST(arg=1, lineno=1145)
          82	COMPARE_OP(arg=58, lineno=1145)
          86	POP_JUMP_IF_FALSE(arg=5, lineno=1145)
          90	JUMP_FORWARD(arg=2, lineno=1145)
>         92	POP_TOP(arg=None, lineno=1145)
          94	JUMP_FORWARD(arg=2, lineno=1145)
>         96	LOAD_CONST(arg=1, lineno=1146)
          98	STORE_FAST(arg=4, lineno=1146)
>        100	LOAD_FAST(arg=2, lineno=1148)
         102	TO_BOOL(arg=None, lineno=1148)
         110	POP_JUMP_IF_FALSE(arg=45, lineno=1148)
         114	LOAD_GLOBAL(arg=0, lineno=1149)
         124	LOAD_ATTR(arg=2, lineno=1149)
         144	PUSH_NULL(arg=None, lineno=1149)
         146	LOAD_FAST(arg=3, lineno=1149)
         148	CALL(arg=1, lineno=1149)
         156	LOAD_GLOBAL(arg=0, lineno=1149)
         166	LOAD_ATTR(arg=2, lineno=1149)
         186	PUSH_NULL(arg=None, lineno=1149)
         188	LOAD_FAST(arg=4, lineno=1149)
         190	CALL(arg=1, lineno=1149)
         198	COMPARE_OP(arg=103, lineno=1149)
         202	RETURN_VALUE(arg=None, lineno=1149)
>        204	LOAD_GLOBAL(arg=0, lineno=1151)
         214	LOAD_ATTR(arg=4, lineno=1151)
         234	PUSH_NULL(arg=None, lineno=1151)
         236	LOAD_FAST(arg=3, lineno=1151)
         238	CALL(arg=1, lineno=1151)
         246	LOAD_GLOBAL(arg=0, lineno=1151)
         256	LOAD_ATTR(arg=4, lineno=1151)
         276	PUSH_NULL(arg=None, lineno=1151)
         278	LOAD_FAST(arg=4, lineno=1151)
         280	CALL(arg=1, lineno=1151)
         288	COMPARE_OP(arg=103, lineno=1151)
         292	RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:21:13,887 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:21:13,887 - DEBUG - stack: []
2025-09-26 15:21:13,887 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:21:13,887 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-09-26 15:21:13,888 - DEBUG - stack []
2025-09-26 15:21:13,888 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1137)
2025-09-26 15:21:13,888 - DEBUG - stack []
2025-09-26 15:21:13,888 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1140)
2025-09-26 15:21:13,888 - DEBUG - stack []
2025-09-26 15:21:13,889 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1140)
2025-09-26 15:21:13,889 - DEBUG - stack ['$x4.0']
2025-09-26 15:21:13,889 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-09-26 15:21:13,889 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-09-26 15:21:13,889 - DEBUG - dispatch pc=12, inst=STORE_FAST(arg=3, lineno=1140)
2025-09-26 15:21:13,890 - DEBUG - stack ['$8binary_subscr.2']
2025-09-26 15:21:13,890 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:21:13,890 - DEBUG - stack []
2025-09-26 15:21:13,890 - DEBUG - dispatch pc=16, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-09-26 15:21:13,890 - DEBUG - stack ['$threshold14.3']
2025-09-26 15:21:13,890 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=1141)
2025-09-26 15:21:13,890 - DEBUG - stack ['$16unary_negative.4']
2025-09-26 15:21:13,891 - DEBUG - dispatch pc=20, inst=SWAP(arg=2, lineno=1141)
2025-09-26 15:21:13,891 - DEBUG - stack ['$16unary_negative.4', '$x018.5']
2025-09-26 15:21:13,891 - DEBUG - dispatch pc=22, inst=COPY(arg=2, lineno=1141)
2025-09-26 15:21:13,891 - DEBUG - stack ['$x018.5', '$16unary_negative.4']
2025-09-26 15:21:13,891 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:21:13,891 - DEBUG - stack ['$x018.5', '$16unary_negative.4', '$x018.5']
2025-09-26 15:21:13,891 - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1141)
2025-09-26 15:21:13,891 - DEBUG - stack ['$x018.5', '$24compare_op.6']
2025-09-26 15:21:13,892 - DEBUG - end state. edges=[Edge(pc=32, stack=('$x018.5',), blockstack=(), npush=0), Edge(pc=44, stack=('$x018.5',), blockstack=(), npush=0)]
2025-09-26 15:21:13,892 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=44 nstack_initial=1)])
2025-09-26 15:21:13,892 - DEBUG - stack: ['$phi32.0']
2025-09-26 15:21:13,892 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-09-26 15:21:13,892 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 15:21:13,892 - DEBUG - stack ['$phi32.0']
2025-09-26 15:21:13,892 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 15:21:13,892 - DEBUG - stack ['$phi32.0', '$threshold32.1']
2025-09-26 15:21:13,893 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1141)
2025-09-26 15:21:13,893 - DEBUG - stack ['$34compare_op.2']
2025-09-26 15:21:13,893 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:21:13,893 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=1), State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:21:13,893 - DEBUG - stack: ['$phi44.0']
2025-09-26 15:21:13,893 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=1)
2025-09-26 15:21:13,893 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=1141)
2025-09-26 15:21:13,894 - DEBUG - stack ['$phi44.0']
2025-09-26 15:21:13,894 - DEBUG - dispatch pc=46, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:21:13,894 - DEBUG - stack []
2025-09-26 15:21:13,894 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:21:13,894 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:21:13,894 - DEBUG - stack: []
2025-09-26 15:21:13,894 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-09-26 15:21:13,895 - DEBUG - dispatch pc=42, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 15:21:13,895 - DEBUG - stack []
2025-09-26 15:21:13,895 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0)]
2025-09-26 15:21:13,895 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2025-09-26 15:21:13,895 - DEBUG - stack: []
2025-09-26 15:21:13,895 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-09-26 15:21:13,895 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1144)
2025-09-26 15:21:13,895 - DEBUG - stack []
2025-09-26 15:21:13,896 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=1144)
2025-09-26 15:21:13,896 - DEBUG - stack ['$x52.0']
2025-09-26 15:21:13,896 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-09-26 15:21:13,896 - DEBUG - stack ['$x52.0', '$const54.1.2']
2025-09-26 15:21:13,896 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=4, lineno=1144)
2025-09-26 15:21:13,896 - DEBUG - stack ['$56binary_subscr.2']
2025-09-26 15:21:13,896 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:21:13,896 - DEBUG - stack []
2025-09-26 15:21:13,896 - DEBUG - dispatch pc=64, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-09-26 15:21:13,897 - DEBUG - stack ['$threshold62.3']
2025-09-26 15:21:13,897 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=4, lineno=1145)
2025-09-26 15:21:13,897 - DEBUG - stack ['$64unary_negative.4']
2025-09-26 15:21:13,897 - DEBUG - dispatch pc=68, inst=SWAP(arg=2, lineno=1145)
2025-09-26 15:21:13,897 - DEBUG - stack ['$64unary_negative.4', '$x166.5']
2025-09-26 15:21:13,897 - DEBUG - dispatch pc=70, inst=COPY(arg=2, lineno=1145)
2025-09-26 15:21:13,897 - DEBUG - stack ['$x166.5', '$64unary_negative.4']
2025-09-26 15:21:13,897 - DEBUG - dispatch pc=72, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:21:13,898 - DEBUG - stack ['$x166.5', '$64unary_negative.4', '$x166.5']
2025-09-26 15:21:13,898 - DEBUG - dispatch pc=76, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1145)
2025-09-26 15:21:13,898 - DEBUG - stack ['$x166.5', '$72compare_op.6']
2025-09-26 15:21:13,898 - DEBUG - end state. edges=[Edge(pc=80, stack=('$x166.5',), blockstack=(), npush=0), Edge(pc=92, stack=('$x166.5',), blockstack=(), npush=0)]
2025-09-26 15:21:13,898 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:21:13,898 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 15:21:13,898 - DEBUG - stack: []
2025-09-26 15:21:13,898 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-09-26 15:21:13,898 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1142)
2025-09-26 15:21:13,898 - DEBUG - stack []
2025-09-26 15:21:13,899 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=3, lineno=1142)
2025-09-26 15:21:13,899 - DEBUG - stack ['$const48.0.1']
2025-09-26 15:21:13,899 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 15:21:13,899 - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0)])
2025-09-26 15:21:13,899 - DEBUG - stack: ['$phi80.0']
2025-09-26 15:21:13,899 - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-09-26 15:21:13,899 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 15:21:13,899 - DEBUG - stack ['$phi80.0']
2025-09-26 15:21:13,899 - DEBUG - dispatch pc=82, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 15:21:13,900 - DEBUG - stack ['$phi80.0', '$threshold80.1']
2025-09-26 15:21:13,900 - DEBUG - dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1145)
2025-09-26 15:21:13,900 - DEBUG - stack ['$82compare_op.2']
2025-09-26 15:21:13,900 - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:21:13,900 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:21:13,900 - DEBUG - stack: ['$phi92.0']
2025-09-26 15:21:13,900 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=1)
2025-09-26 15:21:13,900 - DEBUG - dispatch pc=92, inst=POP_TOP(arg=None, lineno=1145)
2025-09-26 15:21:13,900 - DEBUG - stack ['$phi92.0']
2025-09-26 15:21:13,901 - DEBUG - dispatch pc=94, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:21:13,901 - DEBUG - stack []
2025-09-26 15:21:13,901 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:21:13,901 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:21:13,901 - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:21:13,901 - DEBUG - stack: []
2025-09-26 15:21:13,901 - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-09-26 15:21:13,901 - DEBUG - dispatch pc=90, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 15:21:13,901 - DEBUG - stack []
2025-09-26 15:21:13,902 - DEBUG - end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-09-26 15:21:13,902 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-09-26 15:21:13,902 - DEBUG - stack: []
2025-09-26 15:21:13,902 - DEBUG - state.pc_initial: State(pc_initial=100 nstack_initial=0)
2025-09-26 15:21:13,902 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=2, lineno=1148)
2025-09-26 15:21:13,902 - DEBUG - stack []
2025-09-26 15:21:13,902 - DEBUG - dispatch pc=102, inst=TO_BOOL(arg=None, lineno=1148)
2025-09-26 15:21:13,902 - DEBUG - stack ['$zero_pos100.0']
2025-09-26 15:21:13,902 - DEBUG - dispatch pc=110, inst=POP_JUMP_IF_FALSE(arg=45, lineno=1148)
2025-09-26 15:21:13,903 - DEBUG - stack ['$102to_bool.1']
2025-09-26 15:21:13,903 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=204, stack=(), blockstack=(), npush=0)]
2025-09-26 15:21:13,903 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:21:13,903 - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 15:21:13,903 - DEBUG - stack: []
2025-09-26 15:21:13,903 - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2025-09-26 15:21:13,903 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=1, lineno=1146)
2025-09-26 15:21:13,903 - DEBUG - stack []
2025-09-26 15:21:13,903 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=4, lineno=1146)
2025-09-26 15:21:13,904 - DEBUG - stack ['$const96.0.1']
2025-09-26 15:21:13,904 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 15:21:13,904 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:21:13,904 - DEBUG - stack: []
2025-09-26 15:21:13,904 - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2025-09-26 15:21:13,904 - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:21:13,904 - DEBUG - stack []
2025-09-26 15:21:13,904 - DEBUG - dispatch pc=124, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:21:13,904 - DEBUG - stack ['$114load_global.0']
2025-09-26 15:21:13,904 - DEBUG - dispatch pc=144, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:21:13,905 - DEBUG - stack ['$124load_attr.1']
2025-09-26 15:21:13,905 - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=3, lineno=1149)
2025-09-26 15:21:13,905 - DEBUG - stack ['$124load_attr.1', '$null$144.2']
2025-09-26 15:21:13,905 - DEBUG - dispatch pc=148, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:21:13,905 - DEBUG - stack ['$124load_attr.1', '$null$144.2', '$x0146.3']
2025-09-26 15:21:13,905 - DEBUG - dispatch pc=156, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 15:21:13,905 - DEBUG - stack ['$148call.4']
2025-09-26 15:21:13,905 - DEBUG - dispatch pc=166, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 15:21:13,905 - DEBUG - stack ['$148call.4', '$156load_global.5']
2025-09-26 15:21:13,905 - DEBUG - dispatch pc=186, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 15:21:13,906 - DEBUG - stack ['$148call.4', '$166load_attr.6']
2025-09-26 15:21:13,906 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=4, lineno=1149)
2025-09-26 15:21:13,906 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7']
2025-09-26 15:21:13,906 - DEBUG - dispatch pc=190, inst=CALL(arg=1, lineno=1149)
2025-09-26 15:21:13,906 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7', '$x1188.8']
2025-09-26 15:21:13,906 - DEBUG - dispatch pc=198, inst=COMPARE_OP(arg=103, lineno=1149)
2025-09-26 15:21:13,906 - DEBUG - stack ['$148call.4', '$190call.9']
2025-09-26 15:21:13,907 - DEBUG - dispatch pc=202, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-09-26 15:21:13,907 - DEBUG - stack ['$198compare_op.10']
2025-09-26 15:21:13,907 - DEBUG - end state. edges=[]
2025-09-26 15:21:13,907 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:21:13,907 - DEBUG - stack: []
2025-09-26 15:21:13,907 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=0)
2025-09-26 15:21:13,907 - DEBUG - dispatch pc=204, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:21:13,908 - DEBUG - stack []
2025-09-26 15:21:13,908 - DEBUG - dispatch pc=214, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:21:13,908 - DEBUG - stack ['$204load_global.0']
2025-09-26 15:21:13,908 - DEBUG - dispatch pc=234, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:21:13,908 - DEBUG - stack ['$214load_attr.1']
2025-09-26 15:21:13,908 - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=3, lineno=1151)
2025-09-26 15:21:13,908 - DEBUG - stack ['$214load_attr.1', '$null$234.2']
2025-09-26 15:21:13,908 - DEBUG - dispatch pc=238, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:21:13,908 - DEBUG - stack ['$214load_attr.1', '$null$234.2', '$x0236.3']
2025-09-26 15:21:13,909 - DEBUG - dispatch pc=246, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 15:21:13,909 - DEBUG - stack ['$238call.4']
2025-09-26 15:21:13,909 - DEBUG - dispatch pc=256, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 15:21:13,909 - DEBUG - stack ['$238call.4', '$246load_global.5']
2025-09-26 15:21:13,909 - DEBUG - dispatch pc=276, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 15:21:13,909 - DEBUG - stack ['$238call.4', '$256load_attr.6']
2025-09-26 15:21:13,910 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=4, lineno=1151)
2025-09-26 15:21:13,910 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7']
2025-09-26 15:21:13,910 - DEBUG - dispatch pc=280, inst=CALL(arg=1, lineno=1151)
2025-09-26 15:21:13,910 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7', '$x1278.8']
2025-09-26 15:21:13,910 - DEBUG - dispatch pc=288, inst=COMPARE_OP(arg=103, lineno=1151)
2025-09-26 15:21:13,910 - DEBUG - stack ['$238call.4', '$280call.9']
2025-09-26 15:21:13,910 - DEBUG - dispatch pc=292, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 15:21:13,910 - DEBUG - stack ['$288compare_op.10']
2025-09-26 15:21:13,910 - DEBUG - end state. edges=[]
2025-09-26 15:21:13,911 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0)])
2025-09-26 15:21:13,911 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:21:13,911 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=1): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=204 nstack_initial=0): set()})
2025-09-26 15:21:13,911 - DEBUG - defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi44.0': State(pc_initial=0 nstack_initial=0),
 '$phi80.0': State(pc_initial=52 nstack_initial=0),
 '$phi92.0': State(pc_initial=52 nstack_initial=0)}
2025-09-26 15:21:13,912 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:21:13,912 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 15:21:13,912 - DEBUG - keep phismap: {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
 '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}}
2025-09-26 15:21:13,912 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$x018.5'},
             State(pc_initial=52 nstack_initial=0): {'$phi80.0': '$x166.5'}})
2025-09-26 15:21:13,912 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:21:13,913 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'value': '$8binary_subscr.2'}), (14, {'res': '$threshold14.3'}), (16, {'value': '$threshold14.3', 'res': '$16unary_negative.4'}), (18, {'res': '$x018.5'}), (24, {'lhs': '$16unary_negative.4', 'rhs': '$x018.5', 'res': '$24compare_op.6'}), (28, {'pred': '$24compare_op.6'})), outgoing_phis={'$phi32.0': '$x018.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$x018.5',), 44: ('$x018.5',)})
2025-09-26 15:21:13,913 - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'res': '$threshold32.1'}), (34, {'lhs': '$phi32.0', 'rhs': '$threshold32.1', 'res': '$34compare_op.2'}), (38, {'pred': '$34compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 52: ()})
2025-09-26 15:21:13,913 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ()})
2025-09-26 15:21:13,913 - DEBUG - block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((46, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:21:13,913 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$const48.0.1'}), (50, {'value': '$const48.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 15:21:13,913 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$x52.0'}), (54, {'res': '$const54.1.2'}), (56, {'index': '$const54.1.2', 'target': '$x52.0', 'res': '$56binary_subscr.2'}), (60, {'value': '$56binary_subscr.2'}), (62, {'res': '$threshold62.3'}), (64, {'value': '$threshold62.3', 'res': '$64unary_negative.4'}), (66, {'res': '$x166.5'}), (72, {'lhs': '$64unary_negative.4', 'rhs': '$x166.5', 'res': '$72compare_op.6'}), (76, {'pred': '$72compare_op.6'})), outgoing_phis={'$phi80.0': '$x166.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$x166.5',), 92: ('$x166.5',)})
2025-09-26 15:21:13,914 - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$threshold80.1'}), (82, {'lhs': '$phi80.0', 'rhs': '$threshold80.1', 'res': '$82compare_op.2'}), (86, {'pred': '$82compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 100: ()})
2025-09-26 15:21:13,914 - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
2025-09-26 15:21:13,914 - DEBUG - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((94, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:21:13,914 - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$const96.0.1'}), (98, {'value': '$const96.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 15:21:13,914 - DEBUG - block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$zero_pos100.0'}), (102, {'val': '$zero_pos100.0', 'res': '$102to_bool.1'}), (110, {'pred': '$102to_bool.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 204: ()})
2025-09-26 15:21:13,914 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'idx': 0, 'res': '$114load_global.0'}), (124, {'item': '$114load_global.0', 'res': '$124load_attr.1'}), (144, {}), (146, {'res': '$x0146.3'}), (148, {'func': '$124load_attr.1', 'args': ['$x0146.3'], 'kw_names': None, 'res': '$148call.4'}), (156, {'idx': 0, 'res': '$156load_global.5'}), (166, {'item': '$156load_global.5', 'res': '$166load_attr.6'}), (186, {}), (188, {'res': '$x1188.8'}), (190, {'func': '$166load_attr.6', 'args': ['$x1188.8'], 'kw_names': None, 'res': '$190call.9'}), (198, {'lhs': '$148call.4', 'rhs': '$190call.9', 'res': '$198compare_op.10'}), (202, {'retval': '$198compare_op.10', 'castval': '$202return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:21:13,914 - DEBUG - block_infos State(pc_initial=204 nstack_initial=0):
AdaptBlockInfo(insts=((204, {'idx': 0, 'res': '$204load_global.0'}), (214, {'item': '$204load_global.0', 'res': '$214load_attr.1'}), (234, {}), (236, {'res': '$x0236.3'}), (238, {'func': '$214load_attr.1', 'args': ['$x0236.3'], 'kw_names': None, 'res': '$238call.4'}), (246, {'idx': 0, 'res': '$246load_global.5'}), (256, {'item': '$246load_global.5', 'res': '$256load_attr.6'}), (276, {}), (278, {'res': '$x1278.8'}), (280, {'func': '$256load_attr.6', 'args': ['$x1278.8'], 'kw_names': None, 'res': '$280call.9'}), (288, {'lhs': '$238call.4', 'rhs': '$280call.9', 'res': '$288compare_op.10'}), (292, {'retval': '$288compare_op.10', 'castval': '$292return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:21:13,915 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    x0 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$const6.1.1', 'x', 'x0']
    $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$16unary_negative.4', 'threshold']
    $24compare_op.6 = $16unary_negative.4 <= x0 ['$16unary_negative.4', '$24compare_op.6', 'x0']
    $bool28 = global(bool: <class 'bool'>)   ['$bool28']
    $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.6', '$28pred', '$bool28']
    $phi32.0 = x0                            ['$phi32.0', 'x0']
    branch $28pred, 32, 44                   ['$28pred']
label 32:
    $34compare_op.2 = $phi32.0 <= threshold  ['$34compare_op.2', '$phi32.0', 'threshold']
    $bool38 = global(bool: <class 'bool'>)   ['$bool38']
    $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.2', '$38pred', '$bool38']
    branch $38pred, 42, 52                   ['$38pred']
label 42:
    jump 48                                  []
label 44:
    jump 52                                  []
label 48:
    x0 = const(int, 0)                       ['x0']
    jump 52                                  []
label 52:
    $const54.1.2 = const(int, -1)            ['$const54.1.2']
    x1 = getitem(value=x, index=$const54.1.2, fn=<built-in function getitem>) ['$const54.1.2', 'x', 'x1']
    $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$64unary_negative.4', 'threshold']
    $72compare_op.6 = $64unary_negative.4 <= x1 ['$64unary_negative.4', '$72compare_op.6', 'x1']
    $bool76 = global(bool: <class 'bool'>)   ['$bool76']
    $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$72compare_op.6', '$76pred', '$bool76']
    $phi80.0 = x1                            ['$phi80.0', 'x1']
    branch $76pred, 80, 92                   ['$76pred']
label 80:
    $82compare_op.2 = $phi80.0 <= threshold  ['$82compare_op.2', '$phi80.0', 'threshold']
    $bool86 = global(bool: <class 'bool'>)   ['$bool86']
    $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$82compare_op.2', '$86pred', '$bool86']
    branch $86pred, 90, 100                  ['$86pred']
label 90:
    jump 96                                  []
label 92:
    jump 100                                 []
label 96:
    x1 = const(int, 0)                       ['x1']
    jump 100                                 []
label 100:
    $bool110 = global(bool: <class 'bool'>)  ['$bool110']
    $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$110pred', '$bool110', 'zero_pos']
    branch $110pred, 114, 204                ['$110pred']
label 114:
    $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$114load_global.0']
    $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit) ['$114load_global.0', '$124load_attr.1']
    $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$124load_attr.1', '$148call.4', 'x0']
    $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$156load_global.5']
    $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit) ['$156load_global.5', '$166load_attr.6']
    $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.6', '$190call.9', 'x1']
    $198compare_op.10 = $148call.4 != $190call.9 ['$148call.4', '$190call.9', '$198compare_op.10']
    $202return_value.11 = cast(value=$198compare_op.10) ['$198compare_op.10', '$202return_value.11']
    return $202return_value.11               ['$202return_value.11']
label 204:
    $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$204load_global.0']
    $214load_attr.1 = getattr(value=$204load_global.0, attr=sign) ['$204load_global.0', '$214load_attr.1']
    $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.1', '$238call.4', 'x0']
    $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$246load_global.5']
    $256load_attr.6 = getattr(value=$246load_global.5, attr=sign) ['$246load_global.5', '$256load_attr.6']
    $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$256load_attr.6', '$280call.9', 'x1']
    $288compare_op.10 = $238call.4 != $280call.9 ['$238call.4', '$280call.9', '$288compare_op.10']
    $292return_value.11 = cast(value=$288compare_op.10) ['$288compare_op.10', '$292return_value.11']
    return $292return_value.11               ['$292return_value.11']

2025-09-26 15:21:13,921 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1154)
           2	RESUME(arg=0, lineno=1154)
           4	LOAD_GLOBAL(arg=1, lineno=1170)
          14	LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
          16	LOAD_FAST(arg=2, lineno=1170)
          18	CALL(arg=3, lineno=1170)
          26	LOAD_FAST(arg=3, lineno=1170)
          28	LOAD_CONST(arg=1, lineno=1170)
          30	LOAD_CONST(arg=1, lineno=1170)
          32	STORE_SLICE(arg=None, lineno=1170)
          34	RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:21:13,921 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:21:13,922 - DEBUG - stack: []
2025-09-26 15:21:13,922 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:21:13,922 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1154)
2025-09-26 15:21:13,922 - DEBUG - stack []
2025-09-26 15:21:13,922 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1154)
2025-09-26 15:21:13,922 - DEBUG - stack []
2025-09-26 15:21:13,922 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1170)
2025-09-26 15:21:13,922 - DEBUG - stack []
2025-09-26 15:21:13,923 - DEBUG - dispatch pc=14, inst=LOAD_FAST_LOAD_FAST(arg=1, lineno=1170)
2025-09-26 15:21:13,923 - DEBUG - stack ['$4load_global.0', '$null$4.1']
2025-09-26 15:21:13,923 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=1170)
2025-09-26 15:21:13,923 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3']
2025-09-26 15:21:13,923 - DEBUG - dispatch pc=18, inst=CALL(arg=3, lineno=1170)
2025-09-26 15:21:13,923 - DEBUG - stack ['$4load_global.0', '$null$4.1', '$x14.2', '$threshold14.3', '$zero_pos16.4']
2025-09-26 15:21:13,924 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=3, lineno=1170)
2025-09-26 15:21:13,924 - DEBUG - stack ['$18call.5']
2025-09-26 15:21:13,924 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:21:13,924 - DEBUG - stack ['$18call.5', '$y26.6']
2025-09-26 15:21:13,924 - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=1170)
2025-09-26 15:21:13,924 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1']
2025-09-26 15:21:13,924 - DEBUG - dispatch pc=32, inst=STORE_SLICE(arg=None, lineno=1170)
2025-09-26 15:21:13,924 - DEBUG - stack ['$18call.5', '$y26.6', '$const28.7.1', '$const30.8.1']
2025-09-26 15:21:13,924 - DEBUG - dispatch pc=34, inst=RETURN_CONST(arg=1, lineno=1170)
2025-09-26 15:21:13,925 - DEBUG - stack []
2025-09-26 15:21:13,925 - DEBUG - end state. edges=[]
2025-09-26 15:21:13,925 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:21:13,925 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-09-26 15:21:13,925 - DEBUG - defmap: {}
2025-09-26 15:21:13,925 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:21:13,925 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-09-26 15:21:13,925 - DEBUG - keep phismap: {}
2025-09-26 15:21:13,926 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-09-26 15:21:13,926 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:21:13,926 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res1': '$x14.2', 'res2': '$threshold14.3'}), (16, {'res': '$zero_pos16.4'}), (18, {'func': '$4load_global.0', 'args': ['$x14.2', '$threshold14.3', '$zero_pos16.4'], 'kw_names': None, 'res': '$18call.5'}), (26, {'res': '$y26.6'}), (28, {'res': '$const28.7.1'}), (30, {'res': '$const30.8.1'}), (32, {'start': '$const28.7.1', 'end': '$const30.8.1', 'container': '$y26.6', 'value': '$18call.5', 'res': '$32store_slice.10', 'slicevar': '$32store_slice.9'}), (34, {'retval': '$const34.11', 'castval': '$34return_const.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:21:13,926 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000001C1F84C6E90>) ['$4load_global.0']
    $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const28.7.1 = const(NoneType, None)     ['$const28.7.1']
    $const30.8.1 = const(NoneType, None)     ['$const30.8.1']
    $32store_slice.9 = global(slice: <class 'slice'>) ['$32store_slice.9']
    $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$32store_slice.10', '$32store_slice.9', '$const28.7.1', '$const30.8.1']
    y[$32store_slice.10] = $18call.5         ['$18call.5', '$32store_slice.10', 'y']
    $const34.11 = const(NoneType, None)      ['$const34.11']
    $34return_const.12 = cast(value=$const34.11) ['$34return_const.12', '$const34.11']
    return $34return_const.12                ['$34return_const.12']

2025-09-26 15:21:13,930 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:21:13,930 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F88B82D0>
2025-09-26 15:21:13,930 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:21:13,930 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:21:13,930 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:21:13,930 - DEBUG - on stmt: y = arg(3, name=y)
2025-09-26 15:21:13,931 - DEBUG - on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x000001C1F84C6E90>)
2025-09-26 15:21:13,931 - DEBUG - on stmt: $18call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:13,931 - DEBUG - on stmt: $const28.7.1 = const(NoneType, None)
2025-09-26 15:21:13,931 - DEBUG - on stmt: $const30.8.1 = const(NoneType, None)
2025-09-26 15:21:13,931 - DEBUG - on stmt: $32store_slice.9 = global(slice: <class 'slice'>)
2025-09-26 15:21:13,931 - DEBUG - on stmt: $32store_slice.10 = call $32store_slice.9($const28.7.1, $const30.8.1, func=$32store_slice.9, args=(Var($const28.7.1, audio.py:1170), Var($const30.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:13,931 - DEBUG - on stmt: y[slice(None, None, None)] = $18call.5
2025-09-26 15:21:13,932 - DEBUG - on stmt: $const34.11 = const(NoneType, None)
2025-09-26 15:21:13,932 - DEBUG - on stmt: $34return_const.12 = cast(value=$const34.11)
2025-09-26 15:21:13,932 - DEBUG - on stmt: return $34return_const.12
2025-09-26 15:21:13,932 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.5': [(<numba.core.ir.Assign object at 0x000001C1F8900770>,
                            0)],
             '$32store_slice.10': [(<numba.core.ir.Assign object at 0x000001C1F8900CB0>,
                                    0)],
             '$32store_slice.9': [(<numba.core.ir.Assign object at 0x000001C1F8900B90>,
                                   0)],
             '$34return_const.12': [(<numba.core.ir.Assign object at 0x000001C1F8900EF0>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001C1F8900530>,
                                  0)],
             '$const28.7.1': [(<numba.core.ir.Assign object at 0x000001C1F8900950>,
                               0)],
             '$const30.8.1': [(<numba.core.ir.Assign object at 0x000001C1F8900A70>,
                               0)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x000001C1F8900DD0>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x000001C1F854DA90>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000001C1F854D670>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000001C1F854D970>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000001C1F854DA30>,
                           0)]})
2025-09-26 15:21:13,933 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001C1F88B82D0>
2025-09-26 15:21:13,978 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=3, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=3, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	LOAD_CONST(arg=1, lineno=3)
          92	CALL_KW(arg=2, lineno=3)
          94	STORE_FAST(arg=4, lineno=3)
          96	LOAD_CONST(arg=2, lineno=4)
          98	LOAD_FAST(arg=4, lineno=4)
         100	LOAD_CONST(arg=0, lineno=4)
         102	LOAD_CONST(arg=3, lineno=4)
         104	STORE_SLICE(arg=None, lineno=4)
         106	LOAD_CONST(arg=2, lineno=5)
         108	LOAD_FAST(arg=4, lineno=5)
         110	LOAD_CONST(arg=2, lineno=5)
         112	LOAD_CONST(arg=0, lineno=5)
         114	STORE_SLICE(arg=None, lineno=5)
         116	LOAD_GLOBAL(arg=9, lineno=6)
         126	LOAD_GLOBAL(arg=11, lineno=6)
         136	LOAD_CONST(arg=2, lineno=6)
         138	LOAD_CONST(arg=4, lineno=6)
         140	CALL(arg=2, lineno=6)
         148	UNARY_NEGATIVE(arg=None, lineno=6)
         150	LOAD_FAST(arg=3, lineno=6)
         152	LOAD_CONST(arg=2, lineno=6)
         154	BINARY_SUBSCR(arg=None, lineno=6)
         158	LOAD_GLOBAL(arg=13, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	LOAD_CONST(arg=2, lineno=6)
         172	CALL(arg=2, lineno=6)
         180	BINARY_OP(arg=10, lineno=6)
         184	CALL(arg=2, lineno=6)
         192	GET_ITER(arg=None, lineno=6)
>        194	FOR_ITER(arg=5, lineno=6)
         198	STORE_FAST(arg=5, lineno=6)
         200	LOAD_CONST(arg=2, lineno=7)
         202	STORE_FAST(arg=6, lineno=7)
         204	JUMP_BACKWARD(arg=7, lineno=7)
>        208	END_FOR(arg=None, lineno=6)
         210	POP_TOP(arg=None, lineno=6)
         212	LOAD_FAST(arg=4, lineno=8)
         214	RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:21:13,979 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 15:21:13,979 - DEBUG - stack: []
2025-09-26 15:21:13,979 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 15:21:13,979 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-09-26 15:21:13,979 - DEBUG - stack []
2025-09-26 15:21:13,979 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2025-09-26 15:21:13,979 - DEBUG - stack []
2025-09-26 15:21:13,979 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2025-09-26 15:21:13,979 - DEBUG - stack []
2025-09-26 15:21:13,980 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2025-09-26 15:21:13,980 - DEBUG - stack ['$x4.0']
2025-09-26 15:21:13,980 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=3, lineno=2)
2025-09-26 15:21:13,980 - DEBUG - stack ['$6load_attr.1']
2025-09-26 15:21:13,980 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:21:13,980 - DEBUG - stack []
2025-09-26 15:21:13,980 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2025-09-26 15:21:13,980 - DEBUG - stack ['$28load_global.2']
2025-09-26 15:21:13,980 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=3, lineno=3)
2025-09-26 15:21:13,980 - DEBUG - stack ['$38load_attr.3', '$null$38.4']
2025-09-26 15:21:13,981 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2025-09-26 15:21:13,981 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5']
2025-09-26 15:21:13,981 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2025-09-26 15:21:13,981 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$60load_global.6']
2025-09-26 15:21:13,981 - DEBUG - dispatch pc=90, inst=LOAD_CONST(arg=1, lineno=3)
2025-09-26 15:21:13,981 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7']
2025-09-26 15:21:13,981 - DEBUG - dispatch pc=92, inst=CALL_KW(arg=2, lineno=3)
2025-09-26 15:21:13,982 - DEBUG - stack ['$38load_attr.3', '$null$38.4', '$full_shape058.5', '$70load_attr.7', '$const90.8.1']
2025-09-26 15:21:13,982 - DEBUG - dispatch pc=94, inst=STORE_FAST(arg=4, lineno=3)
2025-09-26 15:21:13,982 - DEBUG - stack ['$92call_kw.9']
2025-09-26 15:21:13,982 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=2, lineno=4)
2025-09-26 15:21:13,982 - DEBUG - stack []
2025-09-26 15:21:13,982 - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=4)
2025-09-26 15:21:13,983 - DEBUG - stack ['$const96.10.2']
2025-09-26 15:21:13,983 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=0, lineno=4)
2025-09-26 15:21:13,983 - DEBUG - stack ['$const96.10.2', '$out098.11']
2025-09-26 15:21:13,983 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=3, lineno=4)
2025-09-26 15:21:13,983 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0']
2025-09-26 15:21:13,983 - DEBUG - dispatch pc=104, inst=STORE_SLICE(arg=None, lineno=4)
2025-09-26 15:21:13,983 - DEBUG - stack ['$const96.10.2', '$out098.11', '$const100.12.0', '$const102.13.3']
2025-09-26 15:21:13,984 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:21:13,984 - DEBUG - stack []
2025-09-26 15:21:13,984 - DEBUG - dispatch pc=108, inst=LOAD_FAST(arg=4, lineno=5)
2025-09-26 15:21:13,984 - DEBUG - stack ['$const106.16.2']
2025-09-26 15:21:13,984 - DEBUG - dispatch pc=110, inst=LOAD_CONST(arg=2, lineno=5)
2025-09-26 15:21:13,984 - DEBUG - stack ['$const106.16.2', '$out0108.17']
2025-09-26 15:21:13,984 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=0, lineno=5)
2025-09-26 15:21:13,984 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2']
2025-09-26 15:21:13,984 - DEBUG - dispatch pc=114, inst=STORE_SLICE(arg=None, lineno=5)
2025-09-26 15:21:13,985 - DEBUG - stack ['$const106.16.2', '$out0108.17', '$const110.18.2', '$const112.19.0']
2025-09-26 15:21:13,985 - DEBUG - dispatch pc=116, inst=LOAD_GLOBAL(arg=9, lineno=6)
2025-09-26 15:21:13,985 - DEBUG - stack []
2025-09-26 15:21:13,985 - DEBUG - dispatch pc=126, inst=LOAD_GLOBAL(arg=11, lineno=6)
2025-09-26 15:21:13,985 - DEBUG - stack ['$116load_global.22', '$null$116.23']
2025-09-26 15:21:13,985 - DEBUG - dispatch pc=136, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:21:13,985 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25']
2025-09-26 15:21:13,985 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=4, lineno=6)
2025-09-26 15:21:13,986 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2']
2025-09-26 15:21:13,986 - DEBUG - dispatch pc=140, inst=CALL(arg=2, lineno=6)
2025-09-26 15:21:13,986 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$126load_global.24', '$null$126.25', '$const136.26.2', '$const138.27.4']
2025-09-26 15:21:13,986 - DEBUG - dispatch pc=148, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-09-26 15:21:13,986 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$140call.28']
2025-09-26 15:21:13,986 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=3, lineno=6)
2025-09-26 15:21:13,986 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29']
2025-09-26 15:21:13,987 - DEBUG - dispatch pc=152, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:21:13,987 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30']
2025-09-26 15:21:13,987 - DEBUG - dispatch pc=154, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-09-26 15:21:13,987 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$full_shape0150.30', '$const152.31.2']
2025-09-26 15:21:13,987 - DEBUG - dispatch pc=158, inst=LOAD_GLOBAL(arg=13, lineno=6)
2025-09-26 15:21:13,987 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32']
2025-09-26 15:21:13,988 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:21:13,988 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34']
2025-09-26 15:21:13,988 - DEBUG - dispatch pc=170, inst=LOAD_CONST(arg=2, lineno=6)
2025-09-26 15:21:13,988 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2']
2025-09-26 15:21:13,988 - DEBUG - dispatch pc=172, inst=CALL(arg=2, lineno=6)
2025-09-26 15:21:13,988 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$158load_global.33', '$null$158.34', '$const168.35.2', '$const170.36.2']
2025-09-26 15:21:13,988 - DEBUG - dispatch pc=180, inst=BINARY_OP(arg=10, lineno=6)
2025-09-26 15:21:13,988 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$154binary_subscr.32', '$172call.37']
2025-09-26 15:21:13,989 - DEBUG - dispatch pc=184, inst=CALL(arg=2, lineno=6)
2025-09-26 15:21:13,989 - DEBUG - stack ['$116load_global.22', '$null$116.23', '$148unary_negative.29', '$binop_sub180.38']
2025-09-26 15:21:13,989 - DEBUG - dispatch pc=192, inst=GET_ITER(arg=None, lineno=6)
2025-09-26 15:21:13,989 - DEBUG - stack ['$184call.39']
2025-09-26 15:21:13,989 - DEBUG - end state. edges=[Edge(pc=194, stack=('$192get_iter.40',), blockstack=(), npush=0)]
2025-09-26 15:21:13,989 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:21:13,989 - DEBUG - stack: ['$phi194.0']
2025-09-26 15:21:13,990 - DEBUG - state.pc_initial: State(pc_initial=194 nstack_initial=1)
2025-09-26 15:21:13,990 - DEBUG - dispatch pc=194, inst=FOR_ITER(arg=5, lineno=6)
2025-09-26 15:21:13,990 - DEBUG - stack ['$phi194.0']
2025-09-26 15:21:13,990 - DEBUG - end state. edges=[Edge(pc=208, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0), Edge(pc=198, stack=('$phi194.0', '$194for_iter.2'), blockstack=(), npush=0)]
2025-09-26 15:21:13,990 - DEBUG - pending: deque([State(pc_initial=208 nstack_initial=2), State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:21:13,990 - DEBUG - stack: ['$phi208.0', '$phi208.1']
2025-09-26 15:21:13,990 - DEBUG - state.pc_initial: State(pc_initial=208 nstack_initial=2)
2025-09-26 15:21:13,991 - DEBUG - dispatch pc=208, inst=END_FOR(arg=None, lineno=6)
2025-09-26 15:21:13,991 - DEBUG - stack ['$phi208.0', '$phi208.1']
2025-09-26 15:21:13,991 - DEBUG - dispatch pc=210, inst=POP_TOP(arg=None, lineno=6)
2025-09-26 15:21:13,991 - DEBUG - stack ['$phi208.0']
2025-09-26 15:21:13,991 - DEBUG - dispatch pc=212, inst=LOAD_FAST(arg=4, lineno=8)
2025-09-26 15:21:13,991 - DEBUG - stack []
2025-09-26 15:21:13,991 - DEBUG - dispatch pc=214, inst=RETURN_VALUE(arg=None, lineno=8)
2025-09-26 15:21:13,991 - DEBUG - stack ['$out0212.2']
2025-09-26 15:21:13,991 - DEBUG - end state. edges=[]
2025-09-26 15:21:13,992 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2025-09-26 15:21:13,992 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2025-09-26 15:21:13,992 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2025-09-26 15:21:13,992 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=5, lineno=6)
2025-09-26 15:21:13,992 - DEBUG - stack ['$phi198.0', '$phi198.1']
2025-09-26 15:21:13,992 - DEBUG - dispatch pc=200, inst=LOAD_CONST(arg=2, lineno=7)
2025-09-26 15:21:13,992 - DEBUG - stack ['$phi198.0']
2025-09-26 15:21:13,992 - DEBUG - dispatch pc=202, inst=STORE_FAST(arg=6, lineno=7)
2025-09-26 15:21:13,992 - DEBUG - stack ['$phi198.0', '$const200.2.2']
2025-09-26 15:21:13,992 - DEBUG - dispatch pc=204, inst=JUMP_BACKWARD(arg=7, lineno=7)
2025-09-26 15:21:13,993 - DEBUG - stack ['$phi198.0']
2025-09-26 15:21:13,993 - DEBUG - end state. edges=[Edge(pc=194, stack=('$phi198.0',), blockstack=(), npush=0)]
2025-09-26 15:21:13,993 - DEBUG - pending: deque([State(pc_initial=194 nstack_initial=1)])
2025-09-26 15:21:13,993 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 15:21:13,993 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=194 nstack_initial=1): {'$phi194.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=208 nstack_initial=2): set()})
2025-09-26 15:21:13,993 - DEBUG - defmap: {'$phi194.0': State(pc_initial=0 nstack_initial=0),
 '$phi198.1': State(pc_initial=194 nstack_initial=1),
 '$phi208.1': State(pc_initial=194 nstack_initial=1)}
2025-09-26 15:21:13,994 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi198.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:21:13,994 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi194.0',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:21:13,995 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:21:13,995 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi194.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi198.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))},
             '$phi208.0': {('$192get_iter.40',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi208.1': {('$194for_iter.2',
                            State(pc_initial=194 nstack_initial=1))}})
2025-09-26 15:21:13,995 - DEBUG - keep phismap: {'$phi194.0': {('$192get_iter.40', State(pc_initial=0 nstack_initial=0))},
 '$phi198.1': {('$194for_iter.2', State(pc_initial=194 nstack_initial=1))}}
2025-09-26 15:21:13,996 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi194.0': '$192get_iter.40'},
             State(pc_initial=194 nstack_initial=1): {'$phi198.1': '$194for_iter.2'}})
2025-09-26 15:21:13,996 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 15:21:13,996 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.3'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (90, {'res': '$const90.8.1'}), (92, {'func': '$38load_attr.3', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': '$const90.8.1', 'res': '$92call_kw.9'}), (94, {'value': '$92call_kw.9'}), (96, {'res': '$const96.10.2'}), (98, {'res': '$out098.11'}), (100, {'res': '$const100.12.0'}), (102, {'res': '$const102.13.3'}), (104, {'start': '$const100.12.0', 'end': '$const102.13.3', 'container': '$out098.11', 'value': '$const96.10.2', 'res': '$104store_slice.15', 'slicevar': '$104store_slice.14'}), (106, {'res': '$const106.16.2'}), (108, {'res': '$out0108.17'}), (110, {'res': '$const110.18.2'}), (112, {'res': '$const112.19.0'}), (114, {'start': '$const110.18.2', 'end': '$const112.19.0', 'container': '$out0108.17', 'value': '$const106.16.2', 'res': '$114store_slice.21', 'slicevar': '$114store_slice.20'}), (116, {'idx': 4, 'res': '$116load_global.22'}), (126, {'idx': 5, 'res': '$126load_global.24'}), (136, {'res': '$const136.26.2'}), (138, {'res': '$const138.27.4'}), (140, {'func': '$126load_global.24', 'args': ['$const136.26.2', '$const138.27.4'], 'kw_names': None, 'res': '$140call.28'}), (148, {'value': '$140call.28', 'res': '$148unary_negative.29'}), (150, {'res': '$full_shape0150.30'}), (152, {'res': '$const152.31.2'}), (154, {'index': '$const152.31.2', 'target': '$full_shape0150.30', 'res': '$154binary_subscr.32'}), (158, {'idx': 6, 'res': '$158load_global.33'}), (168, {'res': '$const168.35.2'}), (170, {'res': '$const170.36.2'}), (172, {'func': '$158load_global.33', 'args': ['$const168.35.2', '$const170.36.2'], 'kw_names': None, 'res': '$172call.37'}), (180, {'op': '-', 'lhs': '$154binary_subscr.32', 'rhs': '$172call.37', 'res': '$binop_sub180.38'}), (184, {'func': '$116load_global.22', 'args': ['$148unary_negative.29', '$binop_sub180.38'], 'kw_names': None, 'res': '$184call.39'}), (192, {'value': '$184call.39', 'res': '$192get_iter.40'})), outgoing_phis={'$phi194.0': '$192get_iter.40'}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$192get_iter.40',)})
2025-09-26 15:21:13,996 - DEBUG - block_infos State(pc_initial=194 nstack_initial=1):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.0', 'pair': '$194for_iter.1', 'indval': '$194for_iter.2', 'pred': '$194for_iter.3'}),), outgoing_phis={'$phi198.1': '$194for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={208: ('$phi194.0', '$194for_iter.2'), 198: ('$phi194.0', '$194for_iter.2')})
2025-09-26 15:21:13,997 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$const200.2.2'}), (202, {'value': '$const200.2.2'}), (204, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={194: ('$phi198.0',)})
2025-09-26 15:21:13,997 - DEBUG - block_infos State(pc_initial=208 nstack_initial=2):
AdaptBlockInfo(insts=((212, {'res': '$out0212.2'}), (214, {'retval': '$out0212.2', 'castval': '$214return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 15:21:13,997 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$28load_global.2']
    $38load_attr.3 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.3']
    $60load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool) ['$60load_global.6', '$70load_attr.7']
    $const_dtype = const(str, dtype)         ['$const_dtype']
    $const90.8.1 = build_tuple(items=[Var($const_dtype, <string>:3)]) ['$const90.8.1', '$const_dtype']
    out0 = call $38load_attr.3(full_shape0, func=$38load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.3', '$70load_attr.7', 'full_shape0', 'out0']
    $const96.10.2 = const(int, 0)            ['$const96.10.2']
    $const100.12.0 = const(NoneType, None)   ['$const100.12.0']
    $const102.13.3 = const(int, 1)           ['$const102.13.3']
    $104store_slice.14 = global(slice: <class 'slice'>) ['$104store_slice.14']
    $104store_slice.15 = call $104store_slice.14($const100.12.0, $const102.13.3, func=$104store_slice.14, args=(Var($const100.12.0, <string>:4), Var($const102.13.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$104store_slice.14', '$104store_slice.15', '$const100.12.0', '$const102.13.3']
    out0[$104store_slice.15] = $const96.10.2 ['$104store_slice.15', '$const96.10.2', 'out0']
    $const106.16.2 = const(int, 0)           ['$const106.16.2']
    $const110.18.2 = const(int, 0)           ['$const110.18.2']
    $const112.19.0 = const(NoneType, None)   ['$const112.19.0']
    $114store_slice.20 = global(slice: <class 'slice'>) ['$114store_slice.20']
    $114store_slice.21 = call $114store_slice.20($const110.18.2, $const112.19.0, func=$114store_slice.20, args=(Var($const110.18.2, <string>:5), Var($const112.19.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$114store_slice.20', '$114store_slice.21', '$const110.18.2', '$const112.19.0']
    out0[$114store_slice.21] = $const106.16.2 ['$114store_slice.21', '$const106.16.2', 'out0']
    $116load_global.22 = global(range: <class 'range'>) ['$116load_global.22']
    $126load_global.24 = global(min: <built-in function min>) ['$126load_global.24']
    $const136.26.2 = const(int, 0)           ['$const136.26.2']
    $const138.27.4 = const(int, -1)          ['$const138.27.4']
    $140call.28 = call $126load_global.24($const136.26.2, $const138.27.4, func=$126load_global.24, args=[Var($const136.26.2, <string>:6), Var($const138.27.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_global.24', '$140call.28', '$const136.26.2', '$const138.27.4']
    $148unary_negative.29 = unary(fn=<built-in function neg>, value=$140call.28) ['$140call.28', '$148unary_negative.29']
    $const152.31.2 = const(int, 0)           ['$const152.31.2']
    $154binary_subscr.32 = getitem(value=full_shape0, index=$const152.31.2, fn=<built-in function getitem>) ['$154binary_subscr.32', '$const152.31.2', 'full_shape0']
    $158load_global.33 = global(max: <built-in function max>) ['$158load_global.33']
    $const168.35.2 = const(int, 0)           ['$const168.35.2']
    $const170.36.2 = const(int, 0)           ['$const170.36.2']
    $172call.37 = call $158load_global.33($const168.35.2, $const170.36.2, func=$158load_global.33, args=[Var($const168.35.2, <string>:6), Var($const170.36.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$158load_global.33', '$172call.37', '$const168.35.2', '$const170.36.2']
    $binop_sub180.38 = $154binary_subscr.32 - $172call.37 ['$154binary_subscr.32', '$172call.37', '$binop_sub180.38']
    $184call.39 = call $116load_global.22($148unary_negative.29, $binop_sub180.38, func=$116load_global.22, args=[Var($148unary_negative.29, <string>:6), Var($binop_sub180.38, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.22', '$148unary_negative.29', '$184call.39', '$binop_sub180.38']
    $192get_iter.40 = getiter(value=$184call.39) ['$184call.39', '$192get_iter.40']
    $phi194.0 = $192get_iter.40              ['$192get_iter.40', '$phi194.0']
    jump 194                                 []
label 194:
    $194for_iter.1 = iternext(value=$phi194.0) ['$194for_iter.1', '$phi194.0']
    $194for_iter.2 = pair_first(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.2']
    $194for_iter.3 = pair_second(value=$194for_iter.1) ['$194for_iter.1', '$194for_iter.3']
    $phi198.1 = $194for_iter.2               ['$194for_iter.2', '$phi198.1']
    branch $194for_iter.3, 198, 208          ['$194for_iter.3']
label 198:
    index00 = $phi198.1                      ['$phi198.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 194                                 []
label 208:
    $214return_value.3 = cast(value=out0)    ['$214return_value.3', 'out0']
    return $214return_value.3                ['$214return_value.3']

2025-09-26 15:21:14,024 - DEBUG - ==== SSA block analysis pass on 0
2025-09-26 15:21:14,024 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84B7100>
2025-09-26 15:21:14,024 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:21:14,024 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:21:14,024 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:21:14,024 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:21:14,025 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,025 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:21:14,025 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,025 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:21:14,025 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:21:14,025 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:21:14,025 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,026 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:21:14,026 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:21:14,026 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:21:14,026 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:21:14,026 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,026 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:21:14,027 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:21:14,027 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:21:14,027 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:21:14,027 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:21:14,027 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,027 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:21:14,028 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:21:14,028 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:21:14,028 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:21:14,028 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:21:14,028 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,028 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:21:14,029 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:21:14,029 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:21:14,029 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:21:14,029 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:21:14,029 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:21:14,029 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,029 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:21:14,030 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,030 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:21:14,030 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:21:14,030 - DEBUG - on stmt: jump 194
2025-09-26 15:21:14,030 - DEBUG - ==== SSA block analysis pass on 194
2025-09-26 15:21:14,030 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84B7100>
2025-09-26 15:21:14,030 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:21:14,031 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:21:14,031 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:21:14,031 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:21:14,031 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:21:14,031 - DEBUG - ==== SSA block analysis pass on 198
2025-09-26 15:21:14,031 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84B7100>
2025-09-26 15:21:14,031 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:21:14,031 - DEBUG - on stmt: jump 208
2025-09-26 15:21:14,031 - DEBUG - ==== SSA block analysis pass on 414
2025-09-26 15:21:14,031 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84B7100>
2025-09-26 15:21:14,032 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:21:14,032 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:21:14,032 - DEBUG - ==== SSA block analysis pass on 208
2025-09-26 15:21:14,032 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84B7100>
2025-09-26 15:21:14,032 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:21:14,032 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:21:14,032 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:21:14,032 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:21:14,032 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:21:14,033 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,033 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,033 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:21:14,033 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:21:14,033 - DEBUG - ==== SSA block analysis pass on 209
2025-09-26 15:21:14,033 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84B7100>
2025-09-26 15:21:14,033 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:21:14,033 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,033 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,034 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:21:14,034 - DEBUG - ==== SSA block analysis pass on 241
2025-09-26 15:21:14,034 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84B7100>
2025-09-26 15:21:14,034 - DEBUG - on stmt: jump 251
2025-09-26 15:21:14,034 - DEBUG - ==== SSA block analysis pass on 253
2025-09-26 15:21:14,034 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84B7100>
2025-09-26 15:21:14,034 - DEBUG - on stmt: jump 257
2025-09-26 15:21:14,034 - DEBUG - ==== SSA block analysis pass on 251
2025-09-26 15:21:14,035 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84B7100>
2025-09-26 15:21:14,035 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:21:14,035 - DEBUG - on stmt: jump 257
2025-09-26 15:21:14,035 - DEBUG - ==== SSA block analysis pass on 257
2025-09-26 15:21:14,035 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84B7100>
2025-09-26 15:21:14,035 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:21:14,035 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:21:14,035 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:21:14,036 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:21:14,036 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:21:14,036 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,036 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,036 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:21:14,036 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:21:14,036 - DEBUG - ==== SSA block analysis pass on 261
2025-09-26 15:21:14,036 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84B7100>
2025-09-26 15:21:14,037 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:21:14,037 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,037 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,037 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:21:14,037 - DEBUG - ==== SSA block analysis pass on 289
2025-09-26 15:21:14,037 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84B7100>
2025-09-26 15:21:14,037 - DEBUG - on stmt: jump 299
2025-09-26 15:21:14,037 - DEBUG - ==== SSA block analysis pass on 301
2025-09-26 15:21:14,037 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84B7100>
2025-09-26 15:21:14,037 - DEBUG - on stmt: jump 305
2025-09-26 15:21:14,038 - DEBUG - ==== SSA block analysis pass on 299
2025-09-26 15:21:14,038 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84B7100>
2025-09-26 15:21:14,038 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:21:14,038 - DEBUG - on stmt: jump 305
2025-09-26 15:21:14,038 - DEBUG - ==== SSA block analysis pass on 305
2025-09-26 15:21:14,038 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84B7100>
2025-09-26 15:21:14,038 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,038 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,038 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:21:14,039 - DEBUG - ==== SSA block analysis pass on 309
2025-09-26 15:21:14,039 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84B7100>
2025-09-26 15:21:14,039 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,039 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:21:14,039 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,039 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,039 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:21:14,040 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,040 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:21:14,040 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:21:14,040 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:21:14,040 - DEBUG - on stmt: jump 413
2025-09-26 15:21:14,040 - DEBUG - ==== SSA block analysis pass on 323
2025-09-26 15:21:14,040 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84B7100>
2025-09-26 15:21:14,041 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,041 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:21:14,041 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,041 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,041 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:21:14,041 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,041 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:21:14,042 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:21:14,042 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:21:14,042 - DEBUG - on stmt: jump 413
2025-09-26 15:21:14,042 - DEBUG - ==== SSA block analysis pass on 413
2025-09-26 15:21:14,042 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001C1F84B7100>
2025-09-26 15:21:14,042 - DEBUG - on stmt: jump 194
2025-09-26 15:21:14,042 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104store_slice.14.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0E6F0>,
                                       0)],
             '$104store_slice.15.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0E810>,
                                       0)],
             '$110pred': [(<numba.core.ir.Assign object at 0x000001C1F89DCD70>,
                           305)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x000001C1F89E11F0>,
                                    309)],
             '$114store_slice.20.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0ED50>,
                                       0)],
             '$114store_slice.21.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0EE70>,
                                       0)],
             '$116load_global.22.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0EF90>,
                                       0)],
             '$124load_attr.1': [(<numba.core.ir.Assign object at 0x000001C1F89E2930>,
                                  309)],
             '$126load_global.24.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0F0B0>,
                                       0)],
             '$140call.28.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0F410>,
                                0)],
             '$148call.4': [(<numba.core.ir.Assign object at 0x000001C1F89E40B0>,
                             309)],
             '$148unary_negative.29.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0F530>,
                                          0)],
             '$154binary_subscr.32.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0F830>,
                                         0)],
             '$156load_global.5': [(<numba.core.ir.Assign object at 0x000001C1F89E57F0>,
                                    309)],
             '$158load_global.33.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0F950>,
                                       0)],
             '$166load_attr.6': [(<numba.core.ir.Assign object at 0x000001C1F89E6F30>,
                                  309)],
             '$16unary_negative.4': [(<numba.core.ir.Assign object at 0x000001C1F89276B0>,
                                      208)],
             '$172call.37.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0FCB0>,
                                0)],
             '$184call.39.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0FEF0>,
                                0)],
             '$190call.9': [(<numba.core.ir.Assign object at 0x000001C1F89E86B0>,
                             309)],
             '$192get_iter.40.1': [(<numba.core.ir.Assign object at 0x000001C1F8A14050>,
                                    0)],
             '$194for_iter.1.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0F5F0>,
                                   194)],
             '$194for_iter.2.1': [(<numba.core.ir.Assign object at 0x000001C1F8A14170>,
                                   194)],
             '$194for_iter.3.1': [(<numba.core.ir.Assign object at 0x000001C1F8A14290>,
                                   194)],
             '$198compare_op.10': [(<numba.core.ir.Assign object at 0x000001C1F89E9DF0>,
                                    309)],
             '$202return_value.11': [(<numba.core.ir.Assign object at 0x000001C1F89EB530>,
                                      309)],
             '$204load_global.0': [(<numba.core.ir.Assign object at 0x000001C1F89EF9B0>,
                                    323)],
             '$214load_attr.1': [(<numba.core.ir.Assign object at 0x000001C1F89F5130>,
                                  323)],
             '$214return_value.3.1': [(<numba.core.ir.Assign object at 0x000001C1F8A14890>,
                                       414)],
             '$238call.4': [(<numba.core.ir.Assign object at 0x000001C1F89F6870>,
                             323)],
             '$246load_global.5': [(<numba.core.ir.Assign object at 0x000001C1F89F7FB0>,
                                    323)],
             '$24compare_op.6': [(<numba.core.ir.Assign object at 0x000001C1F8928E30>,
                                  208)],
             '$256load_attr.6': [(<numba.core.ir.Assign object at 0x000001C1F89FD730>,
                                  323)],
             '$280call.9': [(<numba.core.ir.Assign object at 0x000001C1F89FEE70>,
                             323)],
             '$288compare_op.10': [(<numba.core.ir.Assign object at 0x000001C1F8A005F0>,
                                    323)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0D970>,
                                     0)],
             '$28pred': [(<numba.core.ir.Assign object at 0x000001C1F892BCB0>,
                          208)],
             '$292return_value.11': [(<numba.core.ir.Assign object at 0x000001C1F8A01D30>,
                                      323)],
             '$34compare_op.2': [(<numba.core.ir.Assign object at 0x000001C1F8935850>,
                                  209)],
             '$38load_attr.3.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0DA90>,
                                   0)],
             '$38pred': [(<numba.core.ir.Assign object at 0x000001C1F8938710>,
                          209)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0DC70>,
                                     0)],
             '$64unary_negative.4': [(<numba.core.ir.Assign object at 0x000001C1F8948530>,
                                      257)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0DD90>,
                                   0)],
             '$72compare_op.6': [(<numba.core.ir.Assign object at 0x000001C1F8949C70>,
                                  257)],
             '$76pred': [(<numba.core.ir.Assign object at 0x000001C1F894CB30>,
                          257)],
             '$82compare_op.2': [(<numba.core.ir.Assign object at 0x000001C1F89C6690>,
                                  261)],
             '$86pred': [(<numba.core.ir.Assign object at 0x000001C1F89CD550>,
                          261)],
             '$binop_sub180.38.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0FDD0>,
                                     0)],
             '$bool110': [(<numba.core.ir.Assign object at 0x000001C1F89D75F0>,
                           305)],
             '$bool28': [(<numba.core.ir.Assign object at 0x000001C1F892A570>,
                          208)],
             '$bool38': [(<numba.core.ir.Assign object at 0x000001C1F8936F90>,
                          209)],
             '$bool76': [(<numba.core.ir.Assign object at 0x000001C1F894B3B0>,
                          257)],
             '$bool86': [(<numba.core.ir.Assign object at 0x000001C1F89C7DD0>,
                          261)],
             '$const100.12.0.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0E4B0>,
                                   0)],
             '$const102.13.3.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0E5D0>,
                                   0)],
             '$const106.16.2.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0E930>,
                                   0)],
             '$const110.18.2.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0EB10>,
                                   0)],
             '$const112.19.0.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0EC30>,
                                   0)],
             '$const136.26.2.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0F1D0>,
                                   0)],
             '$const138.27.4.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0F2F0>,
                                   0)],
             '$const152.31.2.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0F710>,
                                   0)],
             '$const168.35.2.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0FA70>,
                                   0)],
             '$const170.36.2.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0FB90>,
                                   0)],
             '$const54.1.2': [(<numba.core.ir.Assign object at 0x000001C1F8941670>,
                               257)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x000001C1F8924830>,
                              208)],
             '$const90.8.1.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0DFD0>,
                                 0)],
             '$const96.10.2.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0E2D0>,
                                  0)],
             '$const_dtype.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0DEB0>,
                                 0)],
             '$phi194.0.1': [(<numba.core.ir.Assign object at 0x000001C1F8A0D850>,
                              0)],
             '$phi198.1.1': [(<numba.core.ir.Assign object at 0x000001C1F8A14350>,
                              194)],
             '$phi32.0': [(<numba.core.ir.Assign object at 0x000001C1F8931430>,
                           208)],
             '$phi80.0': [(<numba.core.ir.Assign object at 0x000001C1F894E270>,
                           257)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x000001C1F8A0D790>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x000001C1F8A14470>,
                          198)],
             'out0': [(<numba.core.ir.Assign object at 0x000001C1F8A0E0F0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x000001C1F8923050>,
                                208),
                               (<numba.core.ir.Assign object at 0x000001C1F8A0CB30>,
                                257)],
             'threshold': [(<numba.core.ir.Assign object at 0x000001C1F8A0D490>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x000001C1F8A0D370>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x000001C1F89230B0>, 208),
                    (<numba.core.ir.Assign object at 0x000001C1F893E810>, 251)],
             'x1': [(<numba.core.ir.Assign object at 0x000001C1F8A0CBF0>, 257),
                    (<numba.core.ir.Assign object at 0x000001C1F89D47D0>, 299)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x000001C1F8A0D5B0>,
                           0)]})
2025-09-26 15:21:14,048 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001C1F84B7100>
2025-09-26 15:21:14,048 - DEBUG - Fix SSA violator on var stencil_index
2025-09-26 15:21:14,048 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:21:14,048 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,048 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:21:14,048 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:21:14,049 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:21:14,049 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:21:14,049 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,049 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:21:14,049 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,049 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:21:14,049 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:21:14,049 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:21:14,049 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,050 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:21:14,050 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:21:14,050 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:21:14,050 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:21:14,050 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,050 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:21:14,050 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:21:14,050 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:21:14,051 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:21:14,051 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:21:14,051 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,051 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:21:14,051 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:21:14,051 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:21:14,051 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:21:14,051 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:21:14,052 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,052 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:21:14,052 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:21:14,052 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:21:14,052 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:21:14,052 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:21:14,052 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:21:14,053 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,053 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:21:14,053 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,053 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:21:14,053 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:21:14,053 - DEBUG - on stmt: jump 194
2025-09-26 15:21:14,054 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:21:14,054 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,054 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:21:14,054 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:21:14,054 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:21:14,054 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:21:14,054 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:21:14,054 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:21:14,055 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,055 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:21:14,055 - DEBUG - on stmt: jump 208
2025-09-26 15:21:14,055 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:21:14,055 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,055 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:21:14,055 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:21:14,055 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:21:14,055 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,056 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:21:14,056 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:21:14,056 - DEBUG - first assign: stencil_index
2025-09-26 15:21:14,056 - DEBUG - replaced with: stencil_index = $const6.1.1 + index00
2025-09-26 15:21:14,056 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:21:14,056 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:21:14,056 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:21:14,056 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,057 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,057 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:21:14,057 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:21:14,057 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:21:14,057 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,057 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:21:14,057 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,058 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,058 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:21:14,058 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:21:14,058 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,058 - DEBUG - on stmt: jump 251
2025-09-26 15:21:14,058 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:21:14,058 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,058 - DEBUG - on stmt: jump 257
2025-09-26 15:21:14,058 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:21:14,059 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,059 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:21:14,059 - DEBUG - on stmt: jump 257
2025-09-26 15:21:14,059 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:21:14,059 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,059 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:21:14,059 - DEBUG - on stmt: stencil_index = $const54.1.2 + index00
2025-09-26 15:21:14,059 - DEBUG - replaced with: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:21:14,059 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:21:14,059 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:21:14,060 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:21:14,060 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,060 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,060 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:21:14,060 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:21:14,060 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:21:14,060 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,060 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:21:14,060 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,061 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,061 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:21:14,061 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:21:14,061 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,061 - DEBUG - on stmt: jump 299
2025-09-26 15:21:14,061 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:21:14,061 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,062 - DEBUG - on stmt: jump 305
2025-09-26 15:21:14,062 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:21:14,062 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,062 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:21:14,062 - DEBUG - on stmt: jump 305
2025-09-26 15:21:14,062 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:21:14,062 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,062 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,063 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,063 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:21:14,063 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:21:14,063 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,063 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,063 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:21:14,063 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,063 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,063 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:21:14,064 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,064 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:21:14,064 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:21:14,064 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:21:14,064 - DEBUG - on stmt: jump 413
2025-09-26 15:21:14,064 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:21:14,064 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,064 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,064 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:21:14,065 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,065 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,065 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:21:14,065 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,065 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:21:14,065 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:21:14,065 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:21:14,065 - DEBUG - on stmt: jump 413
2025-09-26 15:21:14,066 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:21:14,066 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,066 - DEBUG - on stmt: jump 194
2025-09-26 15:21:14,066 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000001C1F8A389B0>],
             257: [<numba.core.ir.Assign object at 0x000001C1F8A38830>]})
2025-09-26 15:21:14,066 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:21:14,066 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,067 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:21:14,067 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:21:14,067 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:21:14,067 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:21:14,067 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,067 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:21:14,068 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,068 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:21:14,068 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:21:14,068 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:21:14,068 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,068 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:21:14,068 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:21:14,068 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:21:14,069 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:21:14,069 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,069 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:21:14,069 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:21:14,069 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:21:14,069 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:21:14,069 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:21:14,070 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,070 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:21:14,070 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:21:14,070 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:21:14,070 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:21:14,070 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:21:14,070 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,070 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:21:14,071 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:21:14,071 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:21:14,071 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:21:14,071 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:21:14,071 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:21:14,071 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,071 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:21:14,072 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,072 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:21:14,072 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:21:14,072 - DEBUG - on stmt: jump 194
2025-09-26 15:21:14,072 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:21:14,072 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,072 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:21:14,072 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:21:14,073 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:21:14,073 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:21:14,073 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:21:14,073 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:21:14,073 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,073 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:21:14,073 - DEBUG - on stmt: jump 208
2025-09-26 15:21:14,073 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:21:14,073 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,073 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:21:14,074 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:21:14,074 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:21:14,074 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,074 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:21:14,074 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:21:14,074 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:21:14,074 - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:21:14,074 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:21:14,074 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:21:14,075 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,075 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,075 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:21:14,075 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:21:14,075 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:21:14,075 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,075 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:21:14,075 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,075 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,076 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:21:14,076 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:21:14,076 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,076 - DEBUG - on stmt: jump 251
2025-09-26 15:21:14,076 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:21:14,076 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,076 - DEBUG - on stmt: jump 257
2025-09-26 15:21:14,076 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:21:14,076 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,077 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:21:14,077 - DEBUG - on stmt: jump 257
2025-09-26 15:21:14,077 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:21:14,077 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,077 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:21:14,077 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:21:14,077 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:21:14,078 - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:21:14,078 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:21:14,078 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:21:14,078 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:21:14,078 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,078 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,078 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:21:14,078 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:21:14,078 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:21:14,079 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,079 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:21:14,079 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,079 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,079 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:21:14,079 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:21:14,079 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,080 - DEBUG - on stmt: jump 299
2025-09-26 15:21:14,080 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:21:14,080 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,080 - DEBUG - on stmt: jump 305
2025-09-26 15:21:14,080 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:21:14,080 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,080 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:21:14,081 - DEBUG - on stmt: jump 305
2025-09-26 15:21:14,081 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:21:14,081 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,081 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,081 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,081 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:21:14,082 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:21:14,082 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,082 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,082 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:21:14,082 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,082 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,082 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:21:14,083 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,083 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:21:14,083 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:21:14,083 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:21:14,083 - DEBUG - on stmt: jump 413
2025-09-26 15:21:14,083 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:21:14,083 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,083 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,084 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:21:14,084 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,084 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,084 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:21:14,084 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,084 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:21:14,084 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:21:14,084 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:21:14,084 - DEBUG - on stmt: jump 413
2025-09-26 15:21:14,085 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:21:14,085 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,085 - DEBUG - on stmt: jump 194
2025-09-26 15:21:14,085 - DEBUG - Fix SSA violator on var x0
2025-09-26 15:21:14,085 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:21:14,085 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,085 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:21:14,085 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:21:14,085 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:21:14,086 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:21:14,086 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,086 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:21:14,086 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,086 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:21:14,086 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:21:14,086 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:21:14,086 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,086 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:21:14,087 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:21:14,087 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:21:14,087 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:21:14,087 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,087 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:21:14,087 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:21:14,087 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:21:14,087 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:21:14,087 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:21:14,087 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,088 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:21:14,088 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:21:14,088 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:21:14,088 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:21:14,088 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:21:14,088 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,088 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:21:14,088 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:21:14,088 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:21:14,089 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:21:14,089 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:21:14,089 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:21:14,089 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,089 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:21:14,089 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,089 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:21:14,089 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:21:14,090 - DEBUG - on stmt: jump 194
2025-09-26 15:21:14,090 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:21:14,090 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,090 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:21:14,090 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:21:14,090 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:21:14,090 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:21:14,090 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:21:14,090 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:21:14,090 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,091 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:21:14,091 - DEBUG - on stmt: jump 208
2025-09-26 15:21:14,091 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:21:14,091 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,091 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:21:14,091 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:21:14,091 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:21:14,091 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,092 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:21:14,092 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:21:14,092 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:21:14,092 - DEBUG - first assign: x0
2025-09-26 15:21:14,092 - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:21:14,092 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:21:14,092 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:21:14,093 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,093 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,093 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:21:14,093 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:21:14,093 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:21:14,093 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,093 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:21:14,094 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,094 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,094 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:21:14,094 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:21:14,094 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,094 - DEBUG - on stmt: jump 251
2025-09-26 15:21:14,094 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:21:14,094 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,095 - DEBUG - on stmt: jump 257
2025-09-26 15:21:14,095 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:21:14,095 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,095 - DEBUG - on stmt: x0 = const(int, 0)
2025-09-26 15:21:14,095 - DEBUG - replaced with: x0.1 = const(int, 0)
2025-09-26 15:21:14,095 - DEBUG - on stmt: jump 257
2025-09-26 15:21:14,095 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:21:14,095 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,096 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:21:14,096 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:21:14,096 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:21:14,096 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:21:14,096 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:21:14,096 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,096 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,097 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:21:14,097 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:21:14,097 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:21:14,097 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,097 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:21:14,097 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,097 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,097 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:21:14,097 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:21:14,097 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,098 - DEBUG - on stmt: jump 299
2025-09-26 15:21:14,098 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:21:14,098 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,098 - DEBUG - on stmt: jump 305
2025-09-26 15:21:14,098 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:21:14,098 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,098 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:21:14,098 - DEBUG - on stmt: jump 305
2025-09-26 15:21:14,098 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:21:14,098 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,099 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,099 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,099 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:21:14,099 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:21:14,099 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,099 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,099 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:21:14,099 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,099 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,100 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:21:14,100 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,100 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:21:14,100 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:21:14,100 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:21:14,100 - DEBUG - on stmt: jump 413
2025-09-26 15:21:14,100 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:21:14,100 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,100 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,101 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:21:14,101 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,101 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,101 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:21:14,101 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,101 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:21:14,101 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:21:14,101 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:21:14,102 - DEBUG - on stmt: jump 413
2025-09-26 15:21:14,102 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:21:14,102 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,102 - DEBUG - on stmt: jump 194
2025-09-26 15:21:14,102 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {208: [<numba.core.ir.Assign object at 0x000001C1F8A38590>],
             251: [<numba.core.ir.Assign object at 0x000001C1F8A38950>]})
2025-09-26 15:21:14,102 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:21:14,102 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,102 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:21:14,102 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:21:14,103 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:21:14,103 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:21:14,103 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,103 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:21:14,103 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,103 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:21:14,103 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:21:14,103 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:21:14,103 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,104 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:21:14,104 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:21:14,104 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:21:14,104 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:21:14,104 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,104 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:21:14,104 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:21:14,104 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:21:14,104 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:21:14,104 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:21:14,105 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,105 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:21:14,105 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:21:14,105 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:21:14,105 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:21:14,105 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:21:14,105 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,106 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:21:14,106 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:21:14,106 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:21:14,106 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:21:14,106 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:21:14,106 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:21:14,107 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,107 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:21:14,107 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,107 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:21:14,107 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:21:14,107 - DEBUG - on stmt: jump 194
2025-09-26 15:21:14,107 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:21:14,108 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,108 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:21:14,108 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:21:14,108 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:21:14,108 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:21:14,108 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:21:14,108 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:21:14,108 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,108 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:21:14,108 - DEBUG - on stmt: jump 208
2025-09-26 15:21:14,109 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:21:14,109 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,109 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:21:14,109 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:21:14,109 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:21:14,109 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,109 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:21:14,110 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:21:14,110 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:21:14,110 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:21:14,110 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:21:14,110 - DEBUG - find_def var='x0' stmt=$24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:21:14,110 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,110 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,110 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:21:14,111 - DEBUG - find_def var='x0' stmt=$phi32.0 = x0
2025-09-26 15:21:14,111 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:21:14,111 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:21:14,111 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,111 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:21:14,111 - DEBUG - find_def var='x0' stmt=$34compare_op.2 = x0 <= threshold
2025-09-26 15:21:14,111 - DEBUG - find_def_from_top label 209
2025-09-26 15:21:14,111 - DEBUG - idom 208 from label 209
2025-09-26 15:21:14,112 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:21:14,112 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,112 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,112 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:21:14,112 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:21:14,112 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,112 - DEBUG - on stmt: jump 251
2025-09-26 15:21:14,112 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:21:14,112 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,113 - DEBUG - on stmt: jump 257
2025-09-26 15:21:14,113 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:21:14,113 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,113 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:21:14,113 - DEBUG - on stmt: jump 257
2025-09-26 15:21:14,113 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:21:14,113 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,113 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:21:14,113 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:21:14,113 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:21:14,114 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:21:14,114 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:21:14,114 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,114 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,114 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:21:14,114 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:21:14,114 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:21:14,114 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,114 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:21:14,115 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,115 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,115 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:21:14,115 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:21:14,115 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,115 - DEBUG - on stmt: jump 299
2025-09-26 15:21:14,115 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:21:14,115 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,115 - DEBUG - on stmt: jump 305
2025-09-26 15:21:14,116 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:21:14,116 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,116 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:21:14,116 - DEBUG - on stmt: jump 305
2025-09-26 15:21:14,116 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:21:14,116 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,116 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,116 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,116 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:21:14,117 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:21:14,117 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,117 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,117 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:21:14,117 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,117 - DEBUG - find_def var='x0' stmt=$148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,117 - DEBUG - find_def_from_top label 309
2025-09-26 15:21:14,117 - DEBUG - idom 305 from label 309
2025-09-26 15:21:14,117 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:21:14,118 - DEBUG - find_def_from_top label 305
2025-09-26 15:21:14,118 - DEBUG - idom 257 from label 305
2025-09-26 15:21:14,118 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:21:14,118 - DEBUG - find_def_from_top label 257
2025-09-26 15:21:14,118 - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 257
2025-09-26 15:21:14,118 - DEBUG - find_def_from_bottom label 209
2025-09-26 15:21:14,118 - DEBUG - find_def_from_top label 209
2025-09-26 15:21:14,118 - DEBUG - idom 208 from label 209
2025-09-26 15:21:14,118 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:21:14,118 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:21:14,119 - DEBUG - find_def_from_bottom label 251
2025-09-26 15:21:14,119 - DEBUG - incoming_def x0.1 = const(int, 0)
2025-09-26 15:21:14,119 - DEBUG - find_def_from_bottom label 253
2025-09-26 15:21:14,119 - DEBUG - find_def_from_top label 253
2025-09-26 15:21:14,119 - DEBUG - idom 208 from label 253
2025-09-26 15:21:14,119 - DEBUG - find_def_from_bottom label 208
2025-09-26 15:21:14,119 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:21:14,120 - DEBUG - replaced with: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,120 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,120 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:21:14,120 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,120 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:21:14,121 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:21:14,121 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:21:14,121 - DEBUG - on stmt: jump 413
2025-09-26 15:21:14,121 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:21:14,121 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,121 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,121 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:21:14,121 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,121 - DEBUG - find_def var='x0' stmt=$238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,122 - DEBUG - find_def_from_top label 323
2025-09-26 15:21:14,122 - DEBUG - idom 305 from label 323
2025-09-26 15:21:14,122 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:21:14,122 - DEBUG - find_def_from_top label 305
2025-09-26 15:21:14,122 - DEBUG - idom 257 from label 305
2025-09-26 15:21:14,122 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:21:14,122 - DEBUG - replaced with: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,123 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,123 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:21:14,123 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,123 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:21:14,123 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:21:14,123 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:21:14,123 - DEBUG - on stmt: jump 413
2025-09-26 15:21:14,123 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:21:14,124 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88C23F0>
2025-09-26 15:21:14,124 - DEBUG - on stmt: jump 194
2025-09-26 15:21:14,124 - DEBUG - Fix SSA violator on var x1
2025-09-26 15:21:14,124 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:21:14,124 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88CA210>
2025-09-26 15:21:14,124 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:21:14,124 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:21:14,124 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:21:14,124 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:21:14,124 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,125 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:21:14,125 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,125 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:21:14,125 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:21:14,125 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:21:14,125 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,125 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:21:14,125 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:21:14,126 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:21:14,126 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:21:14,126 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,126 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:21:14,126 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:21:14,126 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:21:14,126 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:21:14,126 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:21:14,126 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,127 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:21:14,127 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:21:14,127 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:21:14,127 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:21:14,127 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:21:14,127 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,127 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:21:14,127 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:21:14,128 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:21:14,128 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:21:14,128 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:21:14,128 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:21:14,128 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,128 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:21:14,128 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,128 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:21:14,129 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:21:14,129 - DEBUG - on stmt: jump 194
2025-09-26 15:21:14,129 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:21:14,129 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88CA210>
2025-09-26 15:21:14,129 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:21:14,129 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:21:14,129 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:21:14,129 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:21:14,129 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:21:14,129 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:21:14,130 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88CA210>
2025-09-26 15:21:14,130 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:21:14,130 - DEBUG - on stmt: jump 208
2025-09-26 15:21:14,130 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:21:14,130 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88CA210>
2025-09-26 15:21:14,130 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:21:14,130 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:21:14,130 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:21:14,130 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88CA210>
2025-09-26 15:21:14,131 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:21:14,131 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:21:14,131 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:21:14,131 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:21:14,131 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:21:14,131 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,131 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,131 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:21:14,132 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:21:14,132 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:21:14,132 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88CA210>
2025-09-26 15:21:14,132 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:21:14,132 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,132 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,132 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:21:14,132 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:21:14,133 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88CA210>
2025-09-26 15:21:14,133 - DEBUG - on stmt: jump 251
2025-09-26 15:21:14,133 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:21:14,133 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88CA210>
2025-09-26 15:21:14,133 - DEBUG - on stmt: jump 257
2025-09-26 15:21:14,133 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:21:14,133 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88CA210>
2025-09-26 15:21:14,133 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:21:14,134 - DEBUG - on stmt: jump 257
2025-09-26 15:21:14,134 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:21:14,134 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88CA210>
2025-09-26 15:21:14,134 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:21:14,134 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:21:14,134 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:21:14,134 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:21:14,134 - DEBUG - first assign: x1
2025-09-26 15:21:14,134 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:21:14,135 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:21:14,135 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:21:14,135 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,135 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,135 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:21:14,135 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:21:14,135 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:21:14,135 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88CA210>
2025-09-26 15:21:14,135 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:21:14,136 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,136 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,136 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:21:14,136 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:21:14,136 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88CA210>
2025-09-26 15:21:14,136 - DEBUG - on stmt: jump 299
2025-09-26 15:21:14,136 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:21:14,137 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88CA210>
2025-09-26 15:21:14,137 - DEBUG - on stmt: jump 305
2025-09-26 15:21:14,137 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:21:14,137 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88CA210>
2025-09-26 15:21:14,137 - DEBUG - on stmt: x1 = const(int, 0)
2025-09-26 15:21:14,137 - DEBUG - replaced with: x1.1 = const(int, 0)
2025-09-26 15:21:14,137 - DEBUG - on stmt: jump 305
2025-09-26 15:21:14,138 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:21:14,138 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88CA210>
2025-09-26 15:21:14,138 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,138 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,138 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:21:14,138 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:21:14,138 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88CA210>
2025-09-26 15:21:14,138 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,138 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:21:14,138 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,139 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,139 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:21:14,139 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,139 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:21:14,139 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:21:14,139 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:21:14,139 - DEBUG - on stmt: jump 413
2025-09-26 15:21:14,139 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:21:14,139 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88CA210>
2025-09-26 15:21:14,140 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,140 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:21:14,140 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,140 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,140 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:21:14,140 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,140 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:21:14,140 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:21:14,141 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:21:14,141 - DEBUG - on stmt: jump 413
2025-09-26 15:21:14,141 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:21:14,141 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001C1F88CA210>
2025-09-26 15:21:14,141 - DEBUG - on stmt: jump 194
2025-09-26 15:21:14,141 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {257: [<numba.core.ir.Assign object at 0x000001C1F8A38470>],
             299: [<numba.core.ir.Assign object at 0x000001C1F8A385F0>]})
2025-09-26 15:21:14,141 - DEBUG - ==== SSA block rewrite pass on 0
2025-09-26 15:21:14,141 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88CA330>
2025-09-26 15:21:14,142 - DEBUG - on stmt: x = arg(0, name=x)
2025-09-26 15:21:14,142 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-09-26 15:21:14,142 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-09-26 15:21:14,142 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-09-26 15:21:14,142 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,142 - DEBUG - on stmt: $38load_attr.3.1 = getattr(value=$28load_global.2.1, attr=empty)
2025-09-26 15:21:14,142 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,142 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool)
2025-09-26 15:21:14,143 - DEBUG - on stmt: $const_dtype.1 = const(str, dtype)
2025-09-26 15:21:14,143 - DEBUG - on stmt: $const90.8.1.1 = build_tuple(items=[Var($const_dtype.1, <string>:3)])
2025-09-26 15:21:14,143 - DEBUG - on stmt: out0 = call $38load_attr.3.1(full_shape0, func=$38load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,143 - DEBUG - on stmt: $const96.10.2.1 = const(int, 0)
2025-09-26 15:21:14,143 - DEBUG - on stmt: $const100.12.0.1 = const(NoneType, None)
2025-09-26 15:21:14,143 - DEBUG - on stmt: $const102.13.3.1 = const(int, 1)
2025-09-26 15:21:14,143 - DEBUG - on stmt: $104store_slice.14.1 = global(slice: <class 'slice'>)
2025-09-26 15:21:14,143 - DEBUG - on stmt: $104store_slice.15.1 = call $104store_slice.14.1($const100.12.0.1, $const102.13.3.1, func=$104store_slice.14.1, args=(Var($const100.12.0.1, <string>:4), Var($const102.13.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,143 - DEBUG - on stmt: out0[$104store_slice.15.1] = $const96.10.2.1
2025-09-26 15:21:14,144 - DEBUG - on stmt: $const106.16.2.1 = const(int, 0)
2025-09-26 15:21:14,144 - DEBUG - on stmt: $const110.18.2.1 = const(int, 0)
2025-09-26 15:21:14,144 - DEBUG - on stmt: $const112.19.0.1 = const(NoneType, None)
2025-09-26 15:21:14,144 - DEBUG - on stmt: $114store_slice.20.1 = global(slice: <class 'slice'>)
2025-09-26 15:21:14,144 - DEBUG - on stmt: $114store_slice.21.1 = call $114store_slice.20.1($const110.18.2.1, $const112.19.0.1, func=$114store_slice.20.1, args=(Var($const110.18.2.1, <string>:5), Var($const112.19.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,144 - DEBUG - on stmt: out0[$114store_slice.21.1] = $const106.16.2.1
2025-09-26 15:21:14,144 - DEBUG - on stmt: $116load_global.22.1 = global(range: <class 'range'>)
2025-09-26 15:21:14,144 - DEBUG - on stmt: $126load_global.24.1 = global(min: <built-in function min>)
2025-09-26 15:21:14,144 - DEBUG - on stmt: $const136.26.2.1 = const(int, 0)
2025-09-26 15:21:14,145 - DEBUG - on stmt: $const138.27.4.1 = const(int, -1)
2025-09-26 15:21:14,145 - DEBUG - on stmt: $140call.28.1 = call $126load_global.24.1($const136.26.2.1, $const138.27.4.1, func=$126load_global.24.1, args=[Var($const136.26.2.1, <string>:6), Var($const138.27.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,145 - DEBUG - on stmt: $148unary_negative.29.1 = unary(fn=<built-in function neg>, value=$140call.28.1)
2025-09-26 15:21:14,145 - DEBUG - on stmt: $const152.31.2.1 = const(int, 0)
2025-09-26 15:21:14,145 - DEBUG - on stmt: $154binary_subscr.32.1 = getitem(value=full_shape0, index=$const152.31.2.1, fn=<built-in function getitem>)
2025-09-26 15:21:14,145 - DEBUG - on stmt: $158load_global.33.1 = global(max: <built-in function max>)
2025-09-26 15:21:14,145 - DEBUG - on stmt: $const168.35.2.1 = const(int, 0)
2025-09-26 15:21:14,145 - DEBUG - on stmt: $const170.36.2.1 = const(int, 0)
2025-09-26 15:21:14,146 - DEBUG - on stmt: $172call.37.1 = call $158load_global.33.1($const168.35.2.1, $const170.36.2.1, func=$158load_global.33.1, args=[Var($const168.35.2.1, <string>:6), Var($const170.36.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,146 - DEBUG - on stmt: $binop_sub180.38.1 = $154binary_subscr.32.1 - $172call.37.1
2025-09-26 15:21:14,146 - DEBUG - on stmt: $184call.39.1 = call $116load_global.22.1($148unary_negative.29.1, $binop_sub180.38.1, func=$116load_global.22.1, args=[Var($148unary_negative.29.1, <string>:6), Var($binop_sub180.38.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,146 - DEBUG - on stmt: $192get_iter.40.1 = getiter(value=$184call.39.1)
2025-09-26 15:21:14,146 - DEBUG - on stmt: $phi194.0.1 = $192get_iter.40.1
2025-09-26 15:21:14,146 - DEBUG - on stmt: jump 194
2025-09-26 15:21:14,147 - DEBUG - ==== SSA block rewrite pass on 194
2025-09-26 15:21:14,147 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88CA330>
2025-09-26 15:21:14,147 - DEBUG - on stmt: $194for_iter.1.1 = iternext(value=$phi194.0.1)
2025-09-26 15:21:14,147 - DEBUG - on stmt: $194for_iter.2.1 = pair_first(value=$194for_iter.1.1)
2025-09-26 15:21:14,147 - DEBUG - on stmt: $194for_iter.3.1 = pair_second(value=$194for_iter.1.1)
2025-09-26 15:21:14,147 - DEBUG - on stmt: $phi198.1.1 = $194for_iter.2.1
2025-09-26 15:21:14,147 - DEBUG - on stmt: branch $194for_iter.3.1, 198, 414
2025-09-26 15:21:14,148 - DEBUG - ==== SSA block rewrite pass on 198
2025-09-26 15:21:14,148 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88CA330>
2025-09-26 15:21:14,148 - DEBUG - on stmt: index00 = $phi198.1.1
2025-09-26 15:21:14,148 - DEBUG - on stmt: jump 208
2025-09-26 15:21:14,148 - DEBUG - ==== SSA block rewrite pass on 414
2025-09-26 15:21:14,148 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88CA330>
2025-09-26 15:21:14,148 - DEBUG - on stmt: $214return_value.3.1 = cast(value=out0)
2025-09-26 15:21:14,148 - DEBUG - on stmt: return $214return_value.3.1
2025-09-26 15:21:14,148 - DEBUG - ==== SSA block rewrite pass on 208
2025-09-26 15:21:14,149 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88CA330>
2025-09-26 15:21:14,149 - DEBUG - on stmt: $const6.1.1 = const(int, 0)
2025-09-26 15:21:14,149 - DEBUG - on stmt: stencil_index = $const6.1.1 + index00
2025-09-26 15:21:14,149 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-09-26 15:21:14,149 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:21:14,149 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2025-09-26 15:21:14,149 - DEBUG - on stmt: $bool28 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,149 - DEBUG - on stmt: $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,150 - DEBUG - on stmt: $phi32.0 = x0
2025-09-26 15:21:14,150 - DEBUG - on stmt: branch $28pred, 209, 253
2025-09-26 15:21:14,150 - DEBUG - ==== SSA block rewrite pass on 209
2025-09-26 15:21:14,150 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88CA330>
2025-09-26 15:21:14,150 - DEBUG - on stmt: $34compare_op.2 = x0 <= threshold
2025-09-26 15:21:14,150 - DEBUG - on stmt: $bool38 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,150 - DEBUG - on stmt: $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,151 - DEBUG - on stmt: branch $38pred, 241, 257
2025-09-26 15:21:14,151 - DEBUG - ==== SSA block rewrite pass on 241
2025-09-26 15:21:14,151 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88CA330>
2025-09-26 15:21:14,151 - DEBUG - on stmt: jump 251
2025-09-26 15:21:14,151 - DEBUG - ==== SSA block rewrite pass on 253
2025-09-26 15:21:14,151 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88CA330>
2025-09-26 15:21:14,151 - DEBUG - on stmt: jump 257
2025-09-26 15:21:14,151 - DEBUG - ==== SSA block rewrite pass on 251
2025-09-26 15:21:14,151 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88CA330>
2025-09-26 15:21:14,152 - DEBUG - on stmt: x0.1 = const(int, 0)
2025-09-26 15:21:14,152 - DEBUG - on stmt: jump 257
2025-09-26 15:21:14,152 - DEBUG - ==== SSA block rewrite pass on 257
2025-09-26 15:21:14,152 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88CA330>
2025-09-26 15:21:14,152 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0.1, audio.py:1142), Var(x0, audio.py:1140)], incoming_blocks=[209, 251, 253])
2025-09-26 15:21:14,152 - DEBUG - on stmt: $const54.1.2 = const(int, -1)
2025-09-26 15:21:14,152 - DEBUG - on stmt: stencil_index.1 = $const54.1.2 + index00
2025-09-26 15:21:14,152 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:21:14,153 - DEBUG - on stmt: $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-09-26 15:21:14,153 - DEBUG - on stmt: $72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:21:14,153 - DEBUG - find_def var='x1' stmt=$72compare_op.6 = $64unary_negative.4 <= x1
2025-09-26 15:21:14,153 - DEBUG - on stmt: $bool76 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,153 - DEBUG - on stmt: $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,153 - DEBUG - on stmt: $phi80.0 = x1
2025-09-26 15:21:14,153 - DEBUG - find_def var='x1' stmt=$phi80.0 = x1
2025-09-26 15:21:14,153 - DEBUG - on stmt: branch $76pred, 261, 301
2025-09-26 15:21:14,153 - DEBUG - ==== SSA block rewrite pass on 261
2025-09-26 15:21:14,153 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88CA330>
2025-09-26 15:21:14,154 - DEBUG - on stmt: $82compare_op.2 = x1 <= threshold
2025-09-26 15:21:14,154 - DEBUG - find_def var='x1' stmt=$82compare_op.2 = x1 <= threshold
2025-09-26 15:21:14,154 - DEBUG - find_def_from_top label 261
2025-09-26 15:21:14,154 - DEBUG - idom 257 from label 261
2025-09-26 15:21:14,154 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:21:14,154 - DEBUG - on stmt: $bool86 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,154 - DEBUG - on stmt: $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,154 - DEBUG - on stmt: branch $86pred, 289, 305
2025-09-26 15:21:14,154 - DEBUG - ==== SSA block rewrite pass on 289
2025-09-26 15:21:14,155 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88CA330>
2025-09-26 15:21:14,155 - DEBUG - on stmt: jump 299
2025-09-26 15:21:14,155 - DEBUG - ==== SSA block rewrite pass on 301
2025-09-26 15:21:14,155 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88CA330>
2025-09-26 15:21:14,155 - DEBUG - on stmt: jump 305
2025-09-26 15:21:14,155 - DEBUG - ==== SSA block rewrite pass on 299
2025-09-26 15:21:14,155 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88CA330>
2025-09-26 15:21:14,155 - DEBUG - on stmt: x1.1 = const(int, 0)
2025-09-26 15:21:14,155 - DEBUG - on stmt: jump 305
2025-09-26 15:21:14,155 - DEBUG - ==== SSA block rewrite pass on 305
2025-09-26 15:21:14,155 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88CA330>
2025-09-26 15:21:14,156 - DEBUG - on stmt: $bool110 = global(bool: <class 'bool'>)
2025-09-26 15:21:14,156 - DEBUG - on stmt: $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,156 - DEBUG - on stmt: branch $110pred, 309, 323
2025-09-26 15:21:14,156 - DEBUG - ==== SSA block rewrite pass on 309
2025-09-26 15:21:14,156 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88CA330>
2025-09-26 15:21:14,156 - DEBUG - on stmt: $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,156 - DEBUG - on stmt: $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit)
2025-09-26 15:21:14,156 - DEBUG - on stmt: $148call.4 = call $124load_attr.1(x0.2, func=$124load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,157 - DEBUG - on stmt: $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,157 - DEBUG - on stmt: $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit)
2025-09-26 15:21:14,157 - DEBUG - on stmt: $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,157 - DEBUG - find_def var='x1' stmt=$190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,157 - DEBUG - find_def_from_top label 309
2025-09-26 15:21:14,157 - DEBUG - idom 305 from label 309
2025-09-26 15:21:14,157 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:21:14,157 - DEBUG - find_def_from_top label 305
2025-09-26 15:21:14,157 - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 305
2025-09-26 15:21:14,157 - DEBUG - find_def_from_bottom label 299
2025-09-26 15:21:14,158 - DEBUG - incoming_def x1.1 = const(int, 0)
2025-09-26 15:21:14,158 - DEBUG - find_def_from_bottom label 301
2025-09-26 15:21:14,158 - DEBUG - find_def_from_top label 301
2025-09-26 15:21:14,158 - DEBUG - idom 257 from label 301
2025-09-26 15:21:14,158 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:21:14,158 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:21:14,158 - DEBUG - find_def_from_bottom label 261
2025-09-26 15:21:14,158 - DEBUG - find_def_from_top label 261
2025-09-26 15:21:14,158 - DEBUG - idom 257 from label 261
2025-09-26 15:21:14,159 - DEBUG - find_def_from_bottom label 257
2025-09-26 15:21:14,159 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-09-26 15:21:14,159 - DEBUG - replaced with: $190call.9 = call $166load_attr.6(x1.2, func=$166load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,159 - DEBUG - on stmt: $198compare_op.10 = $148call.4 != $190call.9
2025-09-26 15:21:14,159 - DEBUG - on stmt: $202return_value.11 = cast(value=$198compare_op.10)
2025-09-26 15:21:14,159 - DEBUG - on stmt: out0[index00] = $202return_value.11
2025-09-26 15:21:14,160 - DEBUG - on stmt: jump 413
2025-09-26 15:21:14,160 - DEBUG - ==== SSA block rewrite pass on 323
2025-09-26 15:21:14,160 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88CA330>
2025-09-26 15:21:14,160 - DEBUG - on stmt: $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,160 - DEBUG - on stmt: $214load_attr.1 = getattr(value=$204load_global.0, attr=sign)
2025-09-26 15:21:14,160 - DEBUG - on stmt: $238call.4 = call $214load_attr.1(x0.2, func=$214load_attr.1, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,160 - DEBUG - on stmt: $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-09-26 15:21:14,161 - DEBUG - on stmt: $256load_attr.6 = getattr(value=$246load_global.5, attr=sign)
2025-09-26 15:21:14,161 - DEBUG - on stmt: $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,161 - DEBUG - find_def var='x1' stmt=$280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,161 - DEBUG - find_def_from_top label 323
2025-09-26 15:21:14,161 - DEBUG - idom 305 from label 323
2025-09-26 15:21:14,161 - DEBUG - find_def_from_bottom label 305
2025-09-26 15:21:14,162 - DEBUG - replaced with: $280call.9 = call $256load_attr.6(x1.2, func=$256load_attr.6, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
2025-09-26 15:21:14,162 - DEBUG - on stmt: $288compare_op.10 = $238call.4 != $280call.9
2025-09-26 15:21:14,162 - DEBUG - on stmt: $292return_value.11 = cast(value=$288compare_op.10)
2025-09-26 15:21:14,162 - DEBUG - on stmt: out0[index00] = $292return_value.11
2025-09-26 15:21:14,162 - DEBUG - on stmt: jump 413
2025-09-26 15:21:14,162 - DEBUG - ==== SSA block rewrite pass on 413
2025-09-26 15:21:14,162 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001C1F88CA330>
2025-09-26 15:21:14,163 - DEBUG - on stmt: jump 194
