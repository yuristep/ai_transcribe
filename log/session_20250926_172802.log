2025-09-26 17:28:02,636 - INFO - Логирование настроено. Файл лога: log\session_20250926_172802.log
2025-09-26 17:28:02,638 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\children-voice.mp3
2025-09-26 17:28:04,024 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	RESUME(arg=0, lineno=1137)
           4	LOAD_FAST(arg=0, lineno=1140)
           6	LOAD_CONST(arg=1, lineno=1140)
           8	BINARY_SUBSCR(arg=None, lineno=1140)
          12	STORE_FAST(arg=3, lineno=1140)
          14	LOAD_FAST(arg=1, lineno=1141)
          16	UNARY_NEGATIVE(arg=None, lineno=1141)
          18	LOAD_FAST(arg=3, lineno=1141)
          20	SWAP(arg=2, lineno=1141)
          22	COPY(arg=2, lineno=1141)
          24	COMPARE_OP(arg=58, lineno=1141)
          28	POP_JUMP_IF_FALSE(arg=6, lineno=1141)
          32	LOAD_FAST(arg=1, lineno=1141)
          34	COMPARE_OP(arg=58, lineno=1141)
          38	POP_JUMP_IF_FALSE(arg=5, lineno=1141)
          42	JUMP_FORWARD(arg=2, lineno=1141)
>         44	POP_TOP(arg=None, lineno=1141)
          46	JUMP_FORWARD(arg=2, lineno=1141)
>         48	LOAD_CONST(arg=1, lineno=1142)
          50	STORE_FAST(arg=3, lineno=1142)
>         52	LOAD_FAST(arg=0, lineno=1144)
          54	LOAD_CONST(arg=2, lineno=1144)
          56	BINARY_SUBSCR(arg=None, lineno=1144)
          60	STORE_FAST(arg=4, lineno=1144)
          62	LOAD_FAST(arg=1, lineno=1145)
          64	UNARY_NEGATIVE(arg=None, lineno=1145)
          66	LOAD_FAST(arg=4, lineno=1145)
          68	SWAP(arg=2, lineno=1145)
          70	COPY(arg=2, lineno=1145)
          72	COMPARE_OP(arg=58, lineno=1145)
          76	POP_JUMP_IF_FALSE(arg=6, lineno=1145)
          80	LOAD_FAST(arg=1, lineno=1145)
          82	COMPARE_OP(arg=58, lineno=1145)
          86	POP_JUMP_IF_FALSE(arg=5, lineno=1145)
          90	JUMP_FORWARD(arg=2, lineno=1145)
>         92	POP_TOP(arg=None, lineno=1145)
          94	JUMP_FORWARD(arg=2, lineno=1145)
>         96	LOAD_CONST(arg=1, lineno=1146)
          98	STORE_FAST(arg=4, lineno=1146)
>        100	LOAD_FAST(arg=2, lineno=1148)
         102	TO_BOOL(arg=None, lineno=1148)
         110	POP_JUMP_IF_FALSE(arg=45, lineno=1148)
         114	LOAD_GLOBAL(arg=0, lineno=1149)
         124	LOAD_ATTR(arg=2, lineno=1149)
         144	PUSH_NULL(arg=None, lineno=1149)
         146	LOAD_FAST(arg=3, lineno=1149)
         148	CALL(arg=1, lineno=1149)
         156	LOAD_GLOBAL(arg=0, lineno=1149)
         166	LOAD_ATTR(arg=2, lineno=1149)
         186	PUSH_NULL(arg=None, lineno=1149)
         188	LOAD_FAST(arg=4, lineno=1149)
         190	CALL(arg=1, lineno=1149)
         198	COMPARE_OP(arg=103, lineno=1149)
         202	RETURN_VALUE(arg=None, lineno=1149)
>        204	LOAD_GLOBAL(arg=0, lineno=1151)
         214	LOAD_ATTR(arg=4, lineno=1151)
         234	PUSH_NULL(arg=None, lineno=1151)
         236	LOAD_FAST(arg=3, lineno=1151)
         238	CALL(arg=1, lineno=1151)
         246	LOAD_GLOBAL(arg=0, lineno=1151)
         256	LOAD_ATTR(arg=4, lineno=1151)
         276	PUSH_NULL(arg=None, lineno=1151)
         278	LOAD_FAST(arg=4, lineno=1151)
         280	CALL(arg=1, lineno=1151)
         288	COMPARE_OP(arg=103, lineno=1151)
         292	RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 17:28:04,026 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 17:28:04,027 - DEBUG - stack: []
2025-09-26 17:28:04,027 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 17:28:04,027 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-09-26 17:28:04,027 - DEBUG - stack []
2025-09-26 17:28:04,027 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1137)
2025-09-26 17:28:04,028 - DEBUG - stack []
2025-09-26 17:28:04,028 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1140)
2025-09-26 17:28:04,028 - DEBUG - stack []
2025-09-26 17:28:04,028 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1140)
2025-09-26 17:28:04,028 - DEBUG - stack ['$x4.0']
2025-09-26 17:28:04,029 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-09-26 17:28:04,029 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-09-26 17:28:04,029 - DEBUG - dispatch pc=12, inst=STORE_FAST(arg=3, lineno=1140)
2025-09-26 17:28:04,029 - DEBUG - stack ['$8binary_subscr.2']
2025-09-26 17:28:04,029 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 17:28:04,030 - DEBUG - stack []
2025-09-26 17:28:04,030 - DEBUG - dispatch pc=16, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-09-26 17:28:04,030 - DEBUG - stack ['$threshold14.3']
2025-09-26 17:28:04,030 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=1141)
2025-09-26 17:28:04,030 - DEBUG - stack ['$16unary_negative.4']
2025-09-26 17:28:04,030 - DEBUG - dispatch pc=20, inst=SWAP(arg=2, lineno=1141)
2025-09-26 17:28:04,031 - DEBUG - stack ['$16unary_negative.4', '$x018.5']
2025-09-26 17:28:04,031 - DEBUG - dispatch pc=22, inst=COPY(arg=2, lineno=1141)
2025-09-26 17:28:04,031 - DEBUG - stack ['$x018.5', '$16unary_negative.4']
2025-09-26 17:28:04,031 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 17:28:04,031 - DEBUG - stack ['$x018.5', '$16unary_negative.4', '$x018.5']
2025-09-26 17:28:04,031 - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1141)
2025-09-26 17:28:04,031 - DEBUG - stack ['$x018.5', '$24compare_op.6']
2025-09-26 17:28:04,031 - DEBUG - end state. edges=[Edge(pc=32, stack=('$x018.5',), blockstack=(), npush=0), Edge(pc=44, stack=('$x018.5',), blockstack=(), npush=0)]
2025-09-26 17:28:04,032 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=44 nstack_initial=1)])
2025-09-26 17:28:04,032 - DEBUG - stack: ['$phi32.0']
2025-09-26 17:28:04,032 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-09-26 17:28:04,032 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 17:28:04,032 - DEBUG - stack ['$phi32.0']
2025-09-26 17:28:04,032 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 17:28:04,032 - DEBUG - stack ['$phi32.0', '$threshold32.1']
2025-09-26 17:28:04,033 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1141)
2025-09-26 17:28:04,033 - DEBUG - stack ['$34compare_op.2']
2025-09-26 17:28:04,033 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 17:28:04,033 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=1), State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 17:28:04,033 - DEBUG - stack: ['$phi44.0']
2025-09-26 17:28:04,033 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=1)
2025-09-26 17:28:04,033 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=1141)
2025-09-26 17:28:04,033 - DEBUG - stack ['$phi44.0']
2025-09-26 17:28:04,033 - DEBUG - dispatch pc=46, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 17:28:04,033 - DEBUG - stack []
2025-09-26 17:28:04,034 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 17:28:04,034 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 17:28:04,034 - DEBUG - stack: []
2025-09-26 17:28:04,034 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-09-26 17:28:04,034 - DEBUG - dispatch pc=42, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 17:28:04,034 - DEBUG - stack []
2025-09-26 17:28:04,034 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0)]
2025-09-26 17:28:04,034 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2025-09-26 17:28:04,034 - DEBUG - stack: []
2025-09-26 17:28:04,035 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-09-26 17:28:04,035 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1144)
2025-09-26 17:28:04,035 - DEBUG - stack []
2025-09-26 17:28:04,035 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=1144)
2025-09-26 17:28:04,035 - DEBUG - stack ['$x52.0']
2025-09-26 17:28:04,035 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-09-26 17:28:04,035 - DEBUG - stack ['$x52.0', '$const54.1.2']
2025-09-26 17:28:04,035 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=4, lineno=1144)
2025-09-26 17:28:04,036 - DEBUG - stack ['$56binary_subscr.2']
2025-09-26 17:28:04,036 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 17:28:04,036 - DEBUG - stack []
2025-09-26 17:28:04,036 - DEBUG - dispatch pc=64, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-09-26 17:28:04,036 - DEBUG - stack ['$threshold62.3']
2025-09-26 17:28:04,036 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=4, lineno=1145)
2025-09-26 17:28:04,036 - DEBUG - stack ['$64unary_negative.4']
2025-09-26 17:28:04,036 - DEBUG - dispatch pc=68, inst=SWAP(arg=2, lineno=1145)
2025-09-26 17:28:04,037 - DEBUG - stack ['$64unary_negative.4', '$x166.5']
2025-09-26 17:28:04,037 - DEBUG - dispatch pc=70, inst=COPY(arg=2, lineno=1145)
2025-09-26 17:28:04,037 - DEBUG - stack ['$x166.5', '$64unary_negative.4']
2025-09-26 17:28:04,037 - DEBUG - dispatch pc=72, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 17:28:04,037 - DEBUG - stack ['$x166.5', '$64unary_negative.4', '$x166.5']
2025-09-26 17:28:04,037 - DEBUG - dispatch pc=76, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1145)
2025-09-26 17:28:04,037 - DEBUG - stack ['$x166.5', '$72compare_op.6']
2025-09-26 17:28:04,037 - DEBUG - end state. edges=[Edge(pc=80, stack=('$x166.5',), blockstack=(), npush=0), Edge(pc=92, stack=('$x166.5',), blockstack=(), npush=0)]
2025-09-26 17:28:04,037 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 17:28:04,038 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 17:28:04,038 - DEBUG - stack: []
2025-09-26 17:28:04,038 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-09-26 17:28:04,038 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1142)
2025-09-26 17:28:04,038 - DEBUG - stack []
2025-09-26 17:28:04,038 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=3, lineno=1142)
2025-09-26 17:28:04,038 - DEBUG - stack ['$const48.0.1']
2025-09-26 17:28:04,038 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 17:28:04,038 - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0)])
2025-09-26 17:28:04,039 - DEBUG - stack: ['$phi80.0']
2025-09-26 17:28:04,039 - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-09-26 17:28:04,039 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 17:28:04,039 - DEBUG - stack ['$phi80.0']
2025-09-26 17:28:04,039 - DEBUG - dispatch pc=82, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 17:28:04,039 - DEBUG - stack ['$phi80.0', '$threshold80.1']
2025-09-26 17:28:04,039 - DEBUG - dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1145)
2025-09-26 17:28:04,040 - DEBUG - stack ['$82compare_op.2']
2025-09-26 17:28:04,040 - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 17:28:04,040 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 17:28:04,040 - DEBUG - stack: ['$phi92.0']
2025-09-26 17:28:04,040 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=1)
2025-09-26 17:28:04,040 - DEBUG - dispatch pc=92, inst=POP_TOP(arg=None, lineno=1145)
2025-09-26 17:28:04,041 - DEBUG - stack ['$phi92.0']
2025-09-26 17:28:04,041 - DEBUG - dispatch pc=94, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 17:28:04,041 - DEBUG - stack []
2025-09-26 17:28:04,041 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 17:28:04,041 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 17:28:04,041 - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 17:28:04,041 - DEBUG - stack: []
2025-09-26 17:28:04,041 - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-09-26 17:28:04,042 - DEBUG - dispatch pc=90, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 17:28:04,042 - DEBUG - stack []
2025-09-26 17:28:04,042 - DEBUG - end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-09-26 17:28:04,042 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-09-26 17:28:04,042 - DEBUG - stack: []
2025-09-26 17:28:04,042 - DEBUG - state.pc_initial: State(pc_initial=100 nstack_initial=0)
2025-09-26 17:28:04,042 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=2, lineno=1148)
2025-09-26 17:28:04,042 - DEBUG - stack []
2025-09-26 17:28:04,042 - DEBUG - dispatch pc=102, inst=TO_BOOL(arg=None, lineno=1148)
2025-09-26 17:28:04,043 - DEBUG - stack ['$zero_pos100.0']
2025-09-26 17:28:04,043 - DEBUG - dispatch pc=110, inst=POP_JUMP_IF_FALSE(arg=45, lineno=1148)
2025-09-26 17:28:04,043 - DEBUG - stack ['$102to_bool.1']
2025-09-26 17:28:04,043 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=204, stack=(), blockstack=(), npush=0)]
2025-09-26 17:28:04,043 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 17:28:04,043 - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 17:28:04,043 - DEBUG - stack: []
2025-09-26 17:28:04,043 - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2025-09-26 17:28:04,043 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=1, lineno=1146)
2025-09-26 17:28:04,044 - DEBUG - stack []
2025-09-26 17:28:04,044 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=4, lineno=1146)
2025-09-26 17:28:04,044 - DEBUG - stack ['$const96.0.1']
2025-09-26 17:28:04,044 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 17:28:04,044 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 17:28:04,044 - DEBUG - stack: []
2025-09-26 17:28:04,044 - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2025-09-26 17:28:04,044 - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 17:28:04,044 - DEBUG - stack []
2025-09-26 17:28:04,045 - DEBUG - dispatch pc=124, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 17:28:04,045 - DEBUG - stack ['$114load_global.0']
2025-09-26 17:28:04,045 - DEBUG - dispatch pc=144, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 17:28:04,045 - DEBUG - stack ['$124load_attr.1']
2025-09-26 17:28:04,045 - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=3, lineno=1149)
2025-09-26 17:28:04,045 - DEBUG - stack ['$124load_attr.1', '$null$144.2']
2025-09-26 17:28:04,045 - DEBUG - dispatch pc=148, inst=CALL(arg=1, lineno=1149)
2025-09-26 17:28:04,045 - DEBUG - stack ['$124load_attr.1', '$null$144.2', '$x0146.3']
2025-09-26 17:28:04,046 - DEBUG - dispatch pc=156, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 17:28:04,046 - DEBUG - stack ['$148call.4']
2025-09-26 17:28:04,046 - DEBUG - dispatch pc=166, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 17:28:04,046 - DEBUG - stack ['$148call.4', '$156load_global.5']
2025-09-26 17:28:04,046 - DEBUG - dispatch pc=186, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 17:28:04,046 - DEBUG - stack ['$148call.4', '$166load_attr.6']
2025-09-26 17:28:04,046 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=4, lineno=1149)
2025-09-26 17:28:04,046 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7']
2025-09-26 17:28:04,047 - DEBUG - dispatch pc=190, inst=CALL(arg=1, lineno=1149)
2025-09-26 17:28:04,047 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7', '$x1188.8']
2025-09-26 17:28:04,047 - DEBUG - dispatch pc=198, inst=COMPARE_OP(arg=103, lineno=1149)
2025-09-26 17:28:04,047 - DEBUG - stack ['$148call.4', '$190call.9']
2025-09-26 17:28:04,047 - DEBUG - dispatch pc=202, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-09-26 17:28:04,047 - DEBUG - stack ['$198compare_op.10']
2025-09-26 17:28:04,047 - DEBUG - end state. edges=[]
2025-09-26 17:28:04,047 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 17:28:04,048 - DEBUG - stack: []
2025-09-26 17:28:04,048 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=0)
2025-09-26 17:28:04,048 - DEBUG - dispatch pc=204, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 17:28:04,048 - DEBUG - stack []
2025-09-26 17:28:04,048 - DEBUG - dispatch pc=214, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 17:28:04,048 - DEBUG - stack ['$204load_global.0']
2025-09-26 17:28:04,048 - DEBUG - dispatch pc=234, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 17:28:04,048 - DEBUG - stack ['$214load_attr.1']
2025-09-26 17:28:04,048 - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=3, lineno=1151)
2025-09-26 17:28:04,048 - DEBUG - stack ['$214load_attr.1', '$null$234.2']
2025-09-26 17:28:04,049 - DEBUG - dispatch pc=238, inst=CALL(arg=1, lineno=1151)
2025-09-26 17:28:04,049 - DEBUG - stack ['$214load_attr.1', '$null$234.2', '$x0236.3']
2025-09-26 17:28:04,049 - DEBUG - dispatch pc=246, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 17:28:04,049 - DEBUG - stack ['$238call.4']
2025-09-26 17:28:04,049 - DEBUG - dispatch pc=256, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 17:28:04,049 - DEBUG - stack ['$238call.4', '$246load_global.5']
2025-09-26 17:28:04,049 - DEBUG - dispatch pc=276, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 17:28:04,049 - DEBUG - stack ['$238call.4', '$256load_attr.6']
2025-09-26 17:28:04,049 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=4, lineno=1151)
2025-09-26 17:28:04,049 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7']
2025-09-26 17:28:04,050 - DEBUG - dispatch pc=280, inst=CALL(arg=1, lineno=1151)
2025-09-26 17:28:04,050 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7', '$x1278.8']
2025-09-26 17:28:04,050 - DEBUG - dispatch pc=288, inst=COMPARE_OP(arg=103, lineno=1151)
2025-09-26 17:28:04,050 - DEBUG - stack ['$238call.4', '$280call.9']
2025-09-26 17:28:04,050 - DEBUG - dispatch pc=292, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 17:28:04,050 - DEBUG - stack ['$288compare_op.10']
2025-09-26 17:28:04,050 - DEBUG - end state. edges=[]
2025-09-26 17:28:04,050 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0)])
2025-09-26 17:28:04,051 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 17:28:04,051 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=1): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=204 nstack_initial=0): set()})
2025-09-26 17:28:04,051 - DEBUG - defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi44.0': State(pc_initial=0 nstack_initial=0),
 '$phi80.0': State(pc_initial=52 nstack_initial=0),
 '$phi92.0': State(pc_initial=52 nstack_initial=0)}
2025-09-26 17:28:04,051 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 17:28:04,052 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 17:28:04,052 - DEBUG - keep phismap: {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
 '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}}
2025-09-26 17:28:04,052 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$x018.5'},
             State(pc_initial=52 nstack_initial=0): {'$phi80.0': '$x166.5'}})
2025-09-26 17:28:04,053 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 17:28:04,053 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'value': '$8binary_subscr.2'}), (14, {'res': '$threshold14.3'}), (16, {'value': '$threshold14.3', 'res': '$16unary_negative.4'}), (18, {'res': '$x018.5'}), (24, {'lhs': '$16unary_negative.4', 'rhs': '$x018.5', 'res': '$24compare_op.6'}), (28, {'pred': '$24compare_op.6'})), outgoing_phis={'$phi32.0': '$x018.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$x018.5',), 44: ('$x018.5',)})
2025-09-26 17:28:04,053 - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'res': '$threshold32.1'}), (34, {'lhs': '$phi32.0', 'rhs': '$threshold32.1', 'res': '$34compare_op.2'}), (38, {'pred': '$34compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 52: ()})
2025-09-26 17:28:04,054 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ()})
2025-09-26 17:28:04,054 - DEBUG - block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((46, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 17:28:04,054 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$const48.0.1'}), (50, {'value': '$const48.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 17:28:04,054 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$x52.0'}), (54, {'res': '$const54.1.2'}), (56, {'index': '$const54.1.2', 'target': '$x52.0', 'res': '$56binary_subscr.2'}), (60, {'value': '$56binary_subscr.2'}), (62, {'res': '$threshold62.3'}), (64, {'value': '$threshold62.3', 'res': '$64unary_negative.4'}), (66, {'res': '$x166.5'}), (72, {'lhs': '$64unary_negative.4', 'rhs': '$x166.5', 'res': '$72compare_op.6'}), (76, {'pred': '$72compare_op.6'})), outgoing_phis={'$phi80.0': '$x166.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$x166.5',), 92: ('$x166.5',)})
2025-09-26 17:28:04,055 - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$threshold80.1'}), (82, {'lhs': '$phi80.0', 'rhs': '$threshold80.1', 'res': '$82compare_op.2'}), (86, {'pred': '$82compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 100: ()})
2025-09-26 17:28:04,055 - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
2025-09-26 17:28:04,055 - DEBUG - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((94, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 17:28:04,055 - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$const96.0.1'}), (98, {'value': '$const96.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 17:28:04,055 - DEBUG - block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$zero_pos100.0'}), (102, {'val': '$zero_pos100.0', 'res': '$102to_bool.1'}), (110, {'pred': '$102to_bool.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 204: ()})
2025-09-26 17:28:04,056 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'idx': 0, 'res': '$114load_global.0'}), (124, {'item': '$114load_global.0', 'res': '$124load_attr.1'}), (144, {}), (146, {'res': '$x0146.3'}), (148, {'func': '$124load_attr.1', 'args': ['$x0146.3'], 'kw_names': None, 'res': '$148call.4'}), (156, {'idx': 0, 'res': '$156load_global.5'}), (166, {'item': '$156load_global.5', 'res': '$166load_attr.6'}), (186, {}), (188, {'res': '$x1188.8'}), (190, {'func': '$166load_attr.6', 'args': ['$x1188.8'], 'kw_names': None, 'res': '$190call.9'}), (198, {'lhs': '$148call.4', 'rhs': '$190call.9', 'res': '$198compare_op.10'}), (202, {'retval': '$198compare_op.10', 'castval': '$202return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 17:28:04,056 - DEBUG - block_infos State(pc_initial=204 nstack_initial=0):
AdaptBlockInfo(insts=((204, {'idx': 0, 'res': '$204load_global.0'}), (214, {'item': '$204load_global.0', 'res': '$214load_attr.1'}), (234, {}), (236, {'res': '$x0236.3'}), (238, {'func': '$214load_attr.1', 'args': ['$x0236.3'], 'kw_names': None, 'res': '$238call.4'}), (246, {'idx': 0, 'res': '$246load_global.5'}), (256, {'item': '$246load_global.5', 'res': '$256load_attr.6'}), (276, {}), (278, {'res': '$x1278.8'}), (280, {'func': '$256load_attr.6', 'args': ['$x1278.8'], 'kw_names': None, 'res': '$280call.9'}), (288, {'lhs': '$238call.4', 'rhs': '$280call.9', 'res': '$288compare_op.10'}), (292, {'retval': '$288compare_op.10', 'castval': '$292return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 17:28:04,057 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    x0 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$const6.1.1', 'x', 'x0']
    $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$16unary_negative.4', 'threshold']
    $24compare_op.6 = $16unary_negative.4 <= x0 ['$16unary_negative.4', '$24compare_op.6', 'x0']
    $bool28 = global(bool: <class 'bool'>)   ['$bool28']
    $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.6', '$28pred', '$bool28']
    $phi32.0 = x0                            ['$phi32.0', 'x0']
    branch $28pred, 32, 44                   ['$28pred']
label 32:
    $34compare_op.2 = $phi32.0 <= threshold  ['$34compare_op.2', '$phi32.0', 'threshold']
    $bool38 = global(bool: <class 'bool'>)   ['$bool38']
    $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.2', '$38pred', '$bool38']
    branch $38pred, 42, 52                   ['$38pred']
label 42:
    jump 48                                  []
label 44:
    jump 52                                  []
label 48:
    x0 = const(int, 0)                       ['x0']
    jump 52                                  []
label 52:
    $const54.1.2 = const(int, -1)            ['$const54.1.2']
    x1 = getitem(value=x, index=$const54.1.2, fn=<built-in function getitem>) ['$const54.1.2', 'x', 'x1']
    $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$64unary_negative.4', 'threshold']
    $72compare_op.6 = $64unary_negative.4 <= x1 ['$64unary_negative.4', '$72compare_op.6', 'x1']
    $bool76 = global(bool: <class 'bool'>)   ['$bool76']
    $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$72compare_op.6', '$76pred', '$bool76']
    $phi80.0 = x1                            ['$phi80.0', 'x1']
    branch $76pred, 80, 92                   ['$76pred']
label 80:
    $82compare_op.2 = $phi80.0 <= threshold  ['$82compare_op.2', '$phi80.0', 'threshold']
    $bool86 = global(bool: <class 'bool'>)   ['$bool86']
    $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$82compare_op.2', '$86pred', '$bool86']
    branch $86pred, 90, 100                  ['$86pred']
label 90:
    jump 96                                  []
label 92:
    jump 100                                 []
label 96:
    x1 = const(int, 0)                       ['x1']
    jump 100                                 []
label 100:
    $bool110 = global(bool: <class 'bool'>)  ['$bool110']
    $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$110pred', '$bool110', 'zero_pos']
    branch $110pred, 114, 204                ['$110pred']
label 114:
    $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$114load_global.0']
    $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit) ['$114load_global.0', '$124load_attr.1']
    $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$124load_attr.1', '$148call.4', 'x0']
    $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$156load_global.5']
    $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit) ['$156load_global.5', '$166load_attr.6']
    $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.6', '$190call.9', 'x1']
    $198compare_op.10 = $148call.4 != $190call.9 ['$148call.4', '$190call.9', '$198compare_op.10']
    $202return_value.11 = cast(value=$198compare_op.10) ['$198compare_op.10', '$202return_value.11']
    return $202return_value.11               ['$202return_value.11']
label 204:
    $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$204load_global.0']
    $214load_attr.1 = getattr(value=$204load_global.0, attr=sign) ['$204load_global.0', '$214load_attr.1']
    $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.1', '$238call.4', 'x0']
    $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$246load_global.5']
    $256load_attr.6 = getattr(value=$246load_global.5, attr=sign) ['$246load_global.5', '$256load_attr.6']
    $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$256load_attr.6', '$280call.9', 'x1']
    $288compare_op.10 = $238call.4 != $280call.9 ['$238call.4', '$280call.9', '$288compare_op.10']
    $292return_value.11 = cast(value=$288compare_op.10) ['$288compare_op.10', '$292return_value.11']
    return $292return_value.11               ['$292return_value.11']

2025-09-26 17:28:04,387 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1023)
           2	RESUME(arg=0, lineno=1023)
           4	LOAD_FAST(arg=0, lineno=1026)
           6	LOAD_CONST(arg=1, lineno=1026)
           8	BINARY_SUBSCR(arg=None, lineno=1026)
          12	LOAD_FAST(arg=0, lineno=1026)
          14	LOAD_CONST(arg=2, lineno=1026)
          16	BINARY_SUBSCR(arg=None, lineno=1026)
          20	COMPARE_OP(arg=132, lineno=1026)
          24	LOAD_FAST(arg=0, lineno=1026)
          26	LOAD_CONST(arg=1, lineno=1026)
          28	BINARY_SUBSCR(arg=None, lineno=1026)
          32	LOAD_FAST(arg=0, lineno=1026)
          34	LOAD_CONST(arg=3, lineno=1026)
          36	BINARY_SUBSCR(arg=None, lineno=1026)
          40	COMPARE_OP(arg=172, lineno=1026)
          44	BINARY_OP(arg=1, lineno=1026)
          48	RETURN_VALUE(arg=None, lineno=1026)
2025-09-26 17:28:04,387 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 17:28:04,388 - DEBUG - stack: []
2025-09-26 17:28:04,388 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 17:28:04,388 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1023)
2025-09-26 17:28:04,388 - DEBUG - stack []
2025-09-26 17:28:04,388 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1023)
2025-09-26 17:28:04,389 - DEBUG - stack []
2025-09-26 17:28:04,389 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)
2025-09-26 17:28:04,389 - DEBUG - stack []
2025-09-26 17:28:04,389 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)
2025-09-26 17:28:04,389 - DEBUG - stack ['$x4.0']
2025-09-26 17:28:04,389 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-09-26 17:28:04,389 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-09-26 17:28:04,390 - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)
2025-09-26 17:28:04,390 - DEBUG - stack ['$8binary_subscr.2']
2025-09-26 17:28:04,390 - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)
2025-09-26 17:28:04,390 - DEBUG - stack ['$8binary_subscr.2', '$x12.3']
2025-09-26 17:28:04,390 - DEBUG - dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-09-26 17:28:04,390 - DEBUG - stack ['$8binary_subscr.2', '$x12.3', '$const14.4.2']
2025-09-26 17:28:04,390 - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=132, lineno=1026)
2025-09-26 17:28:04,390 - DEBUG - stack ['$8binary_subscr.2', '$16binary_subscr.5']
2025-09-26 17:28:04,390 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)
2025-09-26 17:28:04,391 - DEBUG - stack ['$20compare_op.6']
2025-09-26 17:28:04,391 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)
2025-09-26 17:28:04,391 - DEBUG - stack ['$20compare_op.6', '$x24.7']
2025-09-26 17:28:04,391 - DEBUG - dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-09-26 17:28:04,391 - DEBUG - stack ['$20compare_op.6', '$x24.7', '$const26.8.1']
2025-09-26 17:28:04,391 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)
2025-09-26 17:28:04,391 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9']
2025-09-26 17:28:04,391 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)
2025-09-26 17:28:04,391 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']
2025-09-26 17:28:04,391 - DEBUG - dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-09-26 17:28:04,392 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11.3']
2025-09-26 17:28:04,392 - DEBUG - dispatch pc=40, inst=COMPARE_OP(arg=172, lineno=1026)
2025-09-26 17:28:04,392 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']
2025-09-26 17:28:04,392 - DEBUG - dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)
2025-09-26 17:28:04,392 - DEBUG - stack ['$20compare_op.6', '$40compare_op.13']
2025-09-26 17:28:04,392 - DEBUG - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)
2025-09-26 17:28:04,392 - DEBUG - stack ['$binop_and_44.14']
2025-09-26 17:28:04,392 - DEBUG - end state. edges=[]
2025-09-26 17:28:04,392 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 17:28:04,393 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-09-26 17:28:04,393 - DEBUG - defmap: {}
2025-09-26 17:28:04,393 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-09-26 17:28:04,393 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-09-26 17:28:04,393 - DEBUG - keep phismap: {}
2025-09-26 17:28:04,393 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-09-26 17:28:04,393 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 17:28:04,393 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4.2'}), (16, {'index': '$const14.4.2', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8.1'}), (28, {'index': '$const26.8.1', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11.3'}), (36, {'index': '$const34.11.3', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 17:28:04,394 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const14.4.2 = const(int, -1)            ['$const14.4.2']
    $16binary_subscr.5 = getitem(value=x, index=$const14.4.2, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4.2', 'x']
    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']
    $const26.8.1 = const(int, 0)             ['$const26.8.1']
    $28binary_subscr.9 = getitem(value=x, index=$const26.8.1, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8.1', 'x']
    $const34.11.3 = const(int, 1)            ['$const34.11.3']
    $36binary_subscr.12 = getitem(value=x, index=$const34.11.3, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11.3', 'x']
    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']
    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']
    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']
    return $48return_value.15                ['$48return_value.15']

2025-09-26 17:28:04,395 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1029)
           2	RESUME(arg=0, lineno=1029)
           4	LOAD_FAST(arg=0, lineno=1032)
           6	LOAD_CONST(arg=1, lineno=1032)
           8	BINARY_SUBSCR(arg=None, lineno=1032)
          12	LOAD_FAST(arg=0, lineno=1032)
          14	LOAD_CONST(arg=2, lineno=1032)
          16	BINARY_SUBSCR(arg=None, lineno=1032)
          20	COMPARE_OP(arg=2, lineno=1032)
          24	LOAD_FAST(arg=0, lineno=1032)
          26	LOAD_CONST(arg=1, lineno=1032)
          28	BINARY_SUBSCR(arg=None, lineno=1032)
          32	LOAD_FAST(arg=0, lineno=1032)
          34	LOAD_CONST(arg=3, lineno=1032)
          36	BINARY_SUBSCR(arg=None, lineno=1032)
          40	COMPARE_OP(arg=42, lineno=1032)
          44	BINARY_OP(arg=1, lineno=1032)
          48	RETURN_VALUE(arg=None, lineno=1032)
2025-09-26 17:28:04,396 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 17:28:04,396 - DEBUG - stack: []
2025-09-26 17:28:04,396 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 17:28:04,396 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1029)
2025-09-26 17:28:04,396 - DEBUG - stack []
2025-09-26 17:28:04,396 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1029)
2025-09-26 17:28:04,396 - DEBUG - stack []
2025-09-26 17:28:04,396 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)
2025-09-26 17:28:04,396 - DEBUG - stack []
2025-09-26 17:28:04,396 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)
2025-09-26 17:28:04,397 - DEBUG - stack ['$x4.0']
2025-09-26 17:28:04,397 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-09-26 17:28:04,397 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-09-26 17:28:04,397 - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)
2025-09-26 17:28:04,397 - DEBUG - stack ['$8binary_subscr.2']
2025-09-26 17:28:04,397 - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)
2025-09-26 17:28:04,397 - DEBUG - stack ['$8binary_subscr.2', '$x12.3']
2025-09-26 17:28:04,397 - DEBUG - dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-09-26 17:28:04,397 - DEBUG - stack ['$8binary_subscr.2', '$x12.3', '$const14.4.2']
2025-09-26 17:28:04,397 - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)
2025-09-26 17:28:04,398 - DEBUG - stack ['$8binary_subscr.2', '$16binary_subscr.5']
2025-09-26 17:28:04,398 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)
2025-09-26 17:28:04,398 - DEBUG - stack ['$20compare_op.6']
2025-09-26 17:28:04,398 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)
2025-09-26 17:28:04,398 - DEBUG - stack ['$20compare_op.6', '$x24.7']
2025-09-26 17:28:04,398 - DEBUG - dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-09-26 17:28:04,398 - DEBUG - stack ['$20compare_op.6', '$x24.7', '$const26.8.1']
2025-09-26 17:28:04,399 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)
2025-09-26 17:28:04,399 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9']
2025-09-26 17:28:04,399 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)
2025-09-26 17:28:04,399 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']
2025-09-26 17:28:04,399 - DEBUG - dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-09-26 17:28:04,399 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11.3']
2025-09-26 17:28:04,399 - DEBUG - dispatch pc=40, inst=COMPARE_OP(arg=42, lineno=1032)
2025-09-26 17:28:04,400 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']
2025-09-26 17:28:04,400 - DEBUG - dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)
2025-09-26 17:28:04,400 - DEBUG - stack ['$20compare_op.6', '$40compare_op.13']
2025-09-26 17:28:04,400 - DEBUG - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)
2025-09-26 17:28:04,400 - DEBUG - stack ['$binop_and_44.14']
2025-09-26 17:28:04,400 - DEBUG - end state. edges=[]
2025-09-26 17:28:04,400 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 17:28:04,400 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-09-26 17:28:04,401 - DEBUG - defmap: {}
2025-09-26 17:28:04,401 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-09-26 17:28:04,401 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-09-26 17:28:04,401 - DEBUG - keep phismap: {}
2025-09-26 17:28:04,401 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-09-26 17:28:04,401 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 17:28:04,402 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4.2'}), (16, {'index': '$const14.4.2', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8.1'}), (28, {'index': '$const26.8.1', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11.3'}), (36, {'index': '$const34.11.3', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 17:28:04,402 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const14.4.2 = const(int, -1)            ['$const14.4.2']
    $16binary_subscr.5 = getitem(value=x, index=$const14.4.2, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4.2', 'x']
    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']
    $const26.8.1 = const(int, 0)             ['$const26.8.1']
    $28binary_subscr.9 = getitem(value=x, index=$const26.8.1, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8.1', 'x']
    $const34.11.3 = const(int, 1)            ['$const34.11.3']
    $36binary_subscr.12 = getitem(value=x, index=$const34.11.3, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11.3', 'x']
    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']
    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']
    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']
    return $48return_value.15                ['$48return_value.15']

2025-09-26 17:28:04,733 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 4, 'overlap': 0.4, 'jobs': 4}
2025-09-26 17:28:04,734 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла (после предочистки): examples\children-voice.mp3
2025-09-26 17:28:04,734 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 17:28:06,314 - DEBUG - Loading FFmpeg6
2025-09-26 17:28:06,317 - DEBUG - Failed to load FFmpeg6 extension.
Traceback (most recent call last):
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
    ~~~~~~~~~^^^^^
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torch\_ops.py", line 1478, in load_library
    ctypes.CDLL(path)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\y.stepanov\AppData\Local\Programs\Python\Python313\Lib\ctypes\__init__.py", line 390, in __init__
    self._handle = _dlopen(self._name, mode)
                   ~~~~~~~^^^^^^^^^^^^^^^^^^
FileNotFoundError: Could not find module 'C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\lib\libtorio_ffmpeg6.pyd' (or one of its dependencies). Try using the full path with constructor syntax.
2025-09-26 17:28:06,319 - DEBUG - Loading FFmpeg5
2025-09-26 17:28:06,320 - DEBUG - Failed to load FFmpeg5 extension.
Traceback (most recent call last):
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
    ~~~~~~~~~^^^^^
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torch\_ops.py", line 1478, in load_library
    ctypes.CDLL(path)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\y.stepanov\AppData\Local\Programs\Python\Python313\Lib\ctypes\__init__.py", line 390, in __init__
    self._handle = _dlopen(self._name, mode)
                   ~~~~~~~^^^^^^^^^^^^^^^^^^
FileNotFoundError: Could not find module 'C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\lib\libtorio_ffmpeg5.pyd' (or one of its dependencies). Try using the full path with constructor syntax.
2025-09-26 17:28:06,321 - DEBUG - Loading FFmpeg4
2025-09-26 17:28:06,322 - DEBUG - Failed to load FFmpeg4 extension.
Traceback (most recent call last):
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
    ~~~~~~~~~^^^^^
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torch\_ops.py", line 1478, in load_library
    ctypes.CDLL(path)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\y.stepanov\AppData\Local\Programs\Python\Python313\Lib\ctypes\__init__.py", line 390, in __init__
    self._handle = _dlopen(self._name, mode)
                   ~~~~~~~^^^^^^^^^^^^^^^^^^
FileNotFoundError: Could not find module 'C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\lib\libtorio_ffmpeg4.pyd' (or one of its dependencies). Try using the full path with constructor syntax.
2025-09-26 17:28:06,323 - DEBUG - Loading FFmpeg
2025-09-26 17:28:06,324 - DEBUG - Failed to load FFmpeg extension.
Traceback (most recent call last):
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 106, in _find_versionsed_ffmpeg_extension
    raise RuntimeError(f"FFmpeg{version} extension is not available.")
RuntimeError: FFmpeg extension is not available.
2025-09-26 17:28:06,408 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 17:28:06,409 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\children-voice.mp3
2025-09-26 17:28:07,041 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 17:28:07,041 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\children-voice.mp3
2025-09-26 17:28:07,105 - DEBUG - УЛУЧШЕНИЕ АУДИО: Создан файл с выделенным вокалом: examples\children-voice_vocals.wav
2025-09-26 17:28:07,114 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 17:28:07,114 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 17:28:07,668 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\children-voice_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-12639024-d6f7-4860-9c3a-d2c506096a07', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:28:07,765 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:28:07,765 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-26 17:28:07,834 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000022527A942F0>
2025-09-26 17:28:07,834 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000225272EDD00> server_hostname='api.openai.com' timeout=5.0
2025-09-26 17:28:08,159 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000022527796850>
2025-09-26 17:28:08,159 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:28:08,159 - DEBUG - send_request_headers.complete
2025-09-26 17:28:08,160 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:28:08,161 - DEBUG - send_request_body.complete
2025-09-26 17:28:08,161 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:28:09,372 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:28:09 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'515'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'599'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_e83a2b07f86d428db3d7587caa78999a'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=SHareqGNcxpA4HLqc_3JGV6C9PAZOyoldu8ZalbN9pg-1758896889-1.0.1.1-tN0we.T6FoSzcxRd0X3VEue6wUTM.7XBy.qsGiUEdciq4bWGTnWWT76HDXpNKU4fYQFVSYDvXm_AWFC2V66h3E.ka70NBijj58detITSsfE; path=/; expires=Fri, 26-Sep-25 14:58:09 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=zL9pMrUKf9KprjS1SUiebCg_9moBSXj1W9ik5.pCu2Y-1758896889344-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9853722f58d48d82-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:28:09,373 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:28:09,373 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:28:09,373 - DEBUG - receive_response_body.complete
2025-09-26 17:28:09,374 - DEBUG - response_closed.started
2025-09-26 17:28:09,374 - DEBUG - response_closed.complete
2025-09-26 17:28:09,374 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers([('date', 'Fri, 26 Sep 2025 14:28:09 GMT'), ('content-type', 'text/plain; charset=utf-8'), ('content-length', '1'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'yurisun'), ('openai-processing-ms', '515'), ('openai-project', 'proj_Llb21yVk5b2whxj0ZTkY3iYI'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '599'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-reset-requests', '120ms'), ('x-request-id', 'req_e83a2b07f86d428db3d7587caa78999a'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=SHareqGNcxpA4HLqc_3JGV6C9PAZOyoldu8ZalbN9pg-1758896889-1.0.1.1-tN0we.T6FoSzcxRd0X3VEue6wUTM.7XBy.qsGiUEdciq4bWGTnWWT76HDXpNKU4fYQFVSYDvXm_AWFC2V66h3E.ka70NBijj58detITSsfE; path=/; expires=Fri, 26-Sep-25 14:58:09 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=zL9pMrUKf9KprjS1SUiebCg_9moBSXj1W9ik5.pCu2Y-1758896889344-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '9853722f58d48d82-HEL'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-09-26 17:28:09,374 - DEBUG - request_id: req_e83a2b07f86d428db3d7587caa78999a
2025-09-26 17:28:09,375 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 17:28:09,375 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:28:09,375 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 17:28:09,375 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: '' (длина: 0)
2025-09-26 17:28:09,376 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 2 - авто-язык
2025-09-26 17:28:09,376 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\children-voice_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-eaddf565-a181-4eb0-8490-98bf14ee51e8', 'json_data': {'model': 'gpt-4o-transcribe', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:28:09,377 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:28:09,378 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:28:09,378 - DEBUG - send_request_headers.complete
2025-09-26 17:28:09,379 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:28:09,380 - DEBUG - send_request_body.complete
2025-09-26 17:28:09,380 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:28:10,120 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:28:10 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'369'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'385'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_f893d74e338145df9513884b3d728dbe'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98537236f82f8d82-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:28:10,121 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:28:10,121 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:28:10,121 - DEBUG - receive_response_body.complete
2025-09-26 17:28:10,121 - DEBUG - response_closed.started
2025-09-26 17:28:10,122 - DEBUG - response_closed.complete
2025-09-26 17:28:10,122 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:28:10 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '369', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '385', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_f893d74e338145df9513884b3d728dbe', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98537236f82f8d82-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:28:10,122 - DEBUG - request_id: req_f893d74e338145df9513884b3d728dbe
2025-09-26 17:28:10,122 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 17:28:10,123 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:28:10,123 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 17:28:10,123 - DEBUG - ТРАНСКРИПЦИЯ: Результат 2: '' (длина: 0)
2025-09-26 17:28:10,344 - DEBUG - ТРАНСКРИПЦИЯ: Музыкальные признаки не обнаружены — пропускаем музыкальный промпт
2025-09-26 17:28:10,344 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 17:28:10,344 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:28:10,344 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 17:28:10,351 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\engine-on-the-spot.mp3
2025-09-26 17:28:10,380 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 4, 'overlap': 0.4, 'jobs': 4}
2025-09-26 17:28:10,380 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла (после предочистки): examples\engine-on-the-spot.mp3
2025-09-26 17:28:10,380 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 17:28:10,381 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 17:28:10,381 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\engine-on-the-spot.mp3
2025-09-26 17:28:10,918 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 17:28:10,918 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\engine-on-the-spot.mp3
2025-09-26 17:28:11,191 - DEBUG - УЛУЧШЕНИЕ АУДИО: Создан файл с выделенным вокалом: examples\engine-on-the-spot_vocals.wav
2025-09-26 17:28:11,203 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 17:28:11,203 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 17:28:11,211 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\engine-on-the-spot_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-7aaa5142-8d16-448f-82be-6fb685aaa0fb', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:28:11,212 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:28:11,212 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:28:11,212 - DEBUG - send_request_headers.complete
2025-09-26 17:28:11,213 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:28:11,218 - DEBUG - send_request_body.complete
2025-09-26 17:28:11,218 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:28:13,608 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:28:13 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'485'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'501'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_20c337f386f04aabb3d8d0f4640b0fae'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'985372426bf48d82-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:28:13,609 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:28:13,609 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:28:13,610 - DEBUG - receive_response_body.complete
2025-09-26 17:28:13,610 - DEBUG - response_closed.started
2025-09-26 17:28:13,610 - DEBUG - response_closed.complete
2025-09-26 17:28:13,610 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:28:13 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '485', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '501', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_20c337f386f04aabb3d8d0f4640b0fae', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '985372426bf48d82-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:28:13,611 - DEBUG - request_id: req_20c337f386f04aabb3d8d0f4640b0fae
2025-09-26 17:28:13,611 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 17:28:13,611 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:28:13,611 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 17:28:13,612 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: '' (длина: 0)
2025-09-26 17:28:13,612 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 2 - авто-язык
2025-09-26 17:28:13,613 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\engine-on-the-spot_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-539c5be2-23cb-45c7-be94-39b52a7bf3a1', 'json_data': {'model': 'gpt-4o-transcribe', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:28:13,613 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:28:13,614 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:28:13,614 - DEBUG - send_request_headers.complete
2025-09-26 17:28:13,614 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:28:13,617 - DEBUG - send_request_body.complete
2025-09-26 17:28:13,617 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:28:16,025 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:28:15 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'663'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'684'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_57d0aebd9178462b9c0a3a21af397e32'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9853725179dd8d82-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:28:16,026 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:28:16,026 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:28:16,027 - DEBUG - receive_response_body.complete
2025-09-26 17:28:16,027 - DEBUG - response_closed.started
2025-09-26 17:28:16,027 - DEBUG - response_closed.complete
2025-09-26 17:28:16,027 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:28:15 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '663', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '684', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_57d0aebd9178462b9c0a3a21af397e32', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9853725179dd8d82-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:28:16,028 - DEBUG - request_id: req_57d0aebd9178462b9c0a3a21af397e32
2025-09-26 17:28:16,028 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 17:28:16,028 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:28:16,028 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 17:28:16,029 - DEBUG - ТРАНСКРИПЦИЯ: Результат 2: '' (длина: 0)
2025-09-26 17:28:16,080 - DEBUG - ТРАНСКРИПЦИЯ: Музыкальные признаки не обнаружены — пропускаем музыкальный промпт
2025-09-26 17:28:16,080 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 17:28:16,080 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:28:16,080 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 17:28:16,132 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\Incode - Know.mp3
2025-09-26 17:28:16,186 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 4, 'overlap': 0.4, 'jobs': 4}
2025-09-26 17:28:16,187 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла (после предочистки): examples\Incode - Know.mp3
2025-09-26 17:28:16,187 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 17:28:16,187 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 17:28:16,187 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\Incode - Know.mp3
2025-09-26 17:28:16,769 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 17:28:16,770 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\Incode - Know.mp3
2025-09-26 17:28:17,151 - DEBUG - УЛУЧШЕНИЕ АУДИО: Создан файл с выделенным вокалом: examples\Incode - Know_vocals.wav
2025-09-26 17:28:17,162 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 17:28:17,162 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 17:28:17,170 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\Incode - Know_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-96efe1f4-ace6-413f-8e08-f7006afd3aa6', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:28:17,171 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:28:17,171 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:28:17,172 - DEBUG - send_request_headers.complete
2025-09-26 17:28:17,172 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:28:17,177 - DEBUG - send_request_body.complete
2025-09-26 17:28:17,177 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:28:20,633 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:28:20 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'493'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'508'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_b1f570e451704f22be45d313123f1caa'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98537267af6f8d82-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:28:20,634 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:28:20,634 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:28:20,634 - DEBUG - receive_response_body.complete
2025-09-26 17:28:20,634 - DEBUG - response_closed.started
2025-09-26 17:28:20,635 - DEBUG - response_closed.complete
2025-09-26 17:28:20,635 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:28:20 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '493', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '508', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_b1f570e451704f22be45d313123f1caa', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98537267af6f8d82-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:28:20,635 - DEBUG - request_id: req_b1f570e451704f22be45d313123f1caa
2025-09-26 17:28:20,635 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 17:28:20,636 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:28:20,636 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 17:28:20,636 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: '' (длина: 0)
2025-09-26 17:28:20,636 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 2 - авто-язык
2025-09-26 17:28:20,637 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\Incode - Know_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-127c31e3-418c-4239-9b90-6ffebdf7f3ba', 'json_data': {'model': 'gpt-4o-transcribe', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:28:20,638 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:28:20,638 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:28:20,639 - DEBUG - send_request_headers.complete
2025-09-26 17:28:20,639 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:28:20,644 - DEBUG - send_request_body.complete
2025-09-26 17:28:20,645 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:28:24,036 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:28:24 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'603'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'621'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_dc7982ecbb5146388c523e3fe5c5ee34'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9853727d5e738d82-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:28:24,037 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:28:24,037 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:28:24,037 - DEBUG - receive_response_body.complete
2025-09-26 17:28:24,037 - DEBUG - response_closed.started
2025-09-26 17:28:24,038 - DEBUG - response_closed.complete
2025-09-26 17:28:24,038 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:28:24 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '603', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '621', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_dc7982ecbb5146388c523e3fe5c5ee34', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9853727d5e738d82-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:28:24,038 - DEBUG - request_id: req_dc7982ecbb5146388c523e3fe5c5ee34
2025-09-26 17:28:24,038 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 17:28:24,039 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:28:24,039 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 17:28:24,039 - DEBUG - ТРАНСКРИПЦИЯ: Результат 2: '' (длина: 0)
2025-09-26 17:28:24,127 - DEBUG - ТРАНСКРИПЦИЯ: Музыкальные признаки не обнаружены — пропускаем музыкальный промпт
2025-09-26 17:28:24,127 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 17:28:24,127 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:28:24,128 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 17:28:24,219 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\test_noise.wav
2025-09-26 17:28:24,220 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 4, 'overlap': 0.4, 'jobs': 4}
2025-09-26 17:28:24,220 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла (после предочистки): examples\test_noise.wav
2025-09-26 17:28:24,220 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 17:28:24,220 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 17:28:24,220 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\test_noise.wav
2025-09-26 17:28:24,731 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 17:28:24,731 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\test_noise.wav
2025-09-26 17:28:24,757 - DEBUG - УЛУЧШЕНИЕ АУДИО: Создан файл с выделенным вокалом: examples\test_noise_vocals.wav
2025-09-26 17:28:24,764 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 17:28:24,765 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 17:28:24,773 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\test_noise_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-05d79c0e-448b-40a8-8f30-7fd6cf53efff', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:28:24,774 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:28:24,774 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:28:24,774 - DEBUG - send_request_headers.complete
2025-09-26 17:28:24,774 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:28:24,776 - DEBUG - send_request_body.complete
2025-09-26 17:28:24,776 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:28:25,570 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:28:25 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'7'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'408'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'418'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_c7926621824042e5baeba71d1da4380a'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'985372973a798d82-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:28:25,570 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:28:25,570 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:28:25,571 - DEBUG - receive_response_body.complete
2025-09-26 17:28:25,571 - DEBUG - response_closed.started
2025-09-26 17:28:25,571 - DEBUG - response_closed.complete
2025-09-26 17:28:25,571 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:28:25 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '7', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '408', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '418', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_c7926621824042e5baeba71d1da4380a', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '985372973a798d82-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:28:25,572 - DEBUG - request_id: req_c7926621824042e5baeba71d1da4380a
2025-09-26 17:28:25,572 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Щщщ'
2025-09-26 17:28:25,572 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:28:25,573 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Щщщ'
2025-09-26 17:28:25,573 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: 'Щщщ' (длина: 3)
2025-09-26 17:28:25,574 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 2 - авто-язык
2025-09-26 17:28:25,574 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\test_noise_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-0467e8a2-37bb-4249-a196-f5316fec60fb', 'json_data': {'model': 'gpt-4o-transcribe', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:28:25,575 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:28:25,575 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:28:25,576 - DEBUG - send_request_headers.complete
2025-09-26 17:28:25,576 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:28:25,577 - DEBUG - send_request_body.complete
2025-09-26 17:28:25,577 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:28:26,880 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:28:26 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'920'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'939'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_b0bbd92f1e8847ec9e48d502ba692910'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9853729c3f758d82-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:28:26,881 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:28:26,881 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:28:26,881 - DEBUG - receive_response_body.complete
2025-09-26 17:28:26,881 - DEBUG - response_closed.started
2025-09-26 17:28:26,882 - DEBUG - response_closed.complete
2025-09-26 17:28:26,882 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:28:26 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '920', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '939', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_b0bbd92f1e8847ec9e48d502ba692910', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9853729c3f758d82-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:28:26,882 - DEBUG - request_id: req_b0bbd92f1e8847ec9e48d502ba692910
2025-09-26 17:28:26,882 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 17:28:26,883 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:28:26,883 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 17:28:26,883 - DEBUG - ТРАНСКРИПЦИЯ: Результат 2: '' (длина: 0)
2025-09-26 17:28:26,886 - DEBUG - ТРАНСКРИПЦИЯ: Музыкальные признаки не обнаружены — пропускаем музыкальный промпт
2025-09-26 17:28:26,887 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Щщщ'
2025-09-26 17:28:26,887 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:28:26,887 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Щщщ'
2025-09-26 17:28:26,888 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\test_speech.mp3
2025-09-26 17:28:26,890 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 4, 'overlap': 0.4, 'jobs': 4}
2025-09-26 17:28:26,891 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла (после предочистки): examples\test_speech.mp3
2025-09-26 17:28:26,891 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 17:28:26,891 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 17:28:26,891 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\test_speech.mp3
2025-09-26 17:28:27,405 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 17:28:27,405 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\test_speech.mp3
2025-09-26 17:28:27,429 - DEBUG - УЛУЧШЕНИЕ АУДИО: Создан файл с выделенным вокалом: examples\test_speech_vocals.wav
2025-09-26 17:28:27,439 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 17:28:27,439 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 17:28:27,446 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\test_speech_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-f76748ef-5675-49fc-8fa3-1abfeae32876', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:28:27,447 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:28:27,448 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:28:27,448 - DEBUG - send_request_headers.complete
2025-09-26 17:28:27,448 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:28:27,450 - DEBUG - send_request_body.complete
2025-09-26 17:28:27,450 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:28:28,345 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:28:28 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'516'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'531'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_d3184b21f33342988be40e5ad4c25d5b'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'985372a7eb3f8d82-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:28:28,346 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:28:28,346 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:28:28,346 - DEBUG - receive_response_body.complete
2025-09-26 17:28:28,346 - DEBUG - response_closed.started
2025-09-26 17:28:28,347 - DEBUG - response_closed.complete
2025-09-26 17:28:28,347 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:28:28 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '516', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '531', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_d3184b21f33342988be40e5ad4c25d5b', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '985372a7eb3f8d82-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:28:28,347 - DEBUG - request_id: req_d3184b21f33342988be40e5ad4c25d5b
2025-09-26 17:28:28,347 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Привет, наконец-то это случилось.'
2025-09-26 17:28:28,348 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:28:28,348 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Привет, наконец-то это случилось.'
2025-09-26 17:28:28,348 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: 'Привет, наконец-то это случилось.' (длина: 33)
2025-09-26 17:28:28,353 - DEBUG - ТРАНСКРИПЦИЯ: Музыкальные признаки не обнаружены — пропускаем музыкальный промпт
2025-09-26 17:28:28,353 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Привет, наконец-то это случилось.'
2025-09-26 17:28:28,353 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:28:28,353 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Привет, наконец-то это случилось.'
2025-09-26 17:28:28,355 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4bb128dd-ec22-497e-9924-1a30439f1ab2', 'json_data': {'messages': [{'role': 'system', 'content': 'Ты — специализированная система для анализа аудиозаписей.\nТвоя единственная задача — классифицировать входной аудиофайл в одну из категорий: музыка, речь, шум.\n\nВАЖНО: Ты анализируешь РЕЗУЛЬТАТ ТРАНСКРИПЦИИ аудиофайла, а не сам аудиофайл. Это означает, что:\n- Если в аудио была музыка с вокалом, то в транскрипции будут слова песни\n- Если в аудио была речь, то в транскрипции будет связный текст\n- Если в аудио был шум, то в транскрипции будет мало слов или галлюцинации\n\nКатегории классификации:\n\nМузыка (music):\n- Это песня, музыкальная композиция с вокалом\n- Характерные признаки в транскрипции:\n  * Повторяющиеся фразы или слова (припев)\n  * Рифмы и ритмические паттерны\n  * Музыкальные звуки: "ла-ла-ла", "на-на-на", "о-о-о", "а-а-а"\n  * Эмоциональные восклицания: "Ауф!", "Ой!", "Ах!"\n  * Короткие фразы без логической связи\n  * Слова, которые звучат как песня, а не как обычная речь\n  * Повторяющиеся слова или фразы (припев песни)\n  * Ритмические паттерны в тексте\n\nРечь (speech):\n- Это обычная речь, разговор, диалог\n- Характерные признаки в транскрипции:\n  * Связные предложения с логической структурой\n  * Обычные слова и фразы\n  * Знаки препинания: точки, запятые, восклицательные знаки\n  * Логическая последовательность мыслей\n  * Отсутствие повторяющихся музыкальных паттернов\n  * Естественная речь без ритма\n\nШум (noise):\n- Это неречевые звуки, шум, техника, плач ребенка\n- Характерные признаки в транскрипции:\n  * Очень короткие или бессмысленные фрагменты\n  * Отсутствие связной речи\n  * Случайные слова или звуки\n  * Описания звуков: "[Music]", "[звук]", "[шум]"\n  * Повторяющиеся гласные: "ааа", "ууу", "ооо" (детский плач)\n  * Бессмысленные фразы: "Всем новичкам, всем новичкам"\n  * Короткие бессвязные слова\n\nПравила классификации:\n1. Если транскрипция содержит связную речь с логической структурой → speech\n2. Если транскрипция содержит повторяющиеся фразы, рифмы, музыкальные звуки → music\n3. Если транскрипция короткая, бессвязная или содержит описания звуков → noise\n4. При сомнениях между music и speech: если есть повторения или музыкальные звуки → music\n5. Детский плач (ааа, ууу, ооо) → noise\n6. Белый шум с бессмысленными словами → noise\n\nВАЖНЫЕ ПРИМЕРЫ:\n- "Скажи мне, не говори мне, что ты гонишь" → music (песня с повторениями)\n- "Привет, как дела?" → speech (обычная речь)\n- "Ааааааа" → noise (детский плач)\n- "Всем новичкам, всем новичкам" → noise (белый шум)\n- "Find me, find me, You can find" → music (песня с припевом)\n\nФормат ответа:\nОтвечай только в формате JSON, без лишнего текста:\n{\n  "classification": "music | speech | noise",\n  "confidence": 0.0-1.0,\n  "reasoning": "Краткое объяснение выбора: какие признаки были решающими"\n}\n\nОграничения:\n- Не добавляй ничего, кроме JSON\n- Не предлагай альтернативных категорий\n- Всегда возвращай одно значение в поле "classification"\n- Уровень уверенности (confidence) должен отражать баланс признаков:\n  * 0.9–1.0 → очень высокая уверенность\n  * 0.6–0.89 → умеренная уверенность\n  * <0.6 → низкая уверенность, признаки неоднозначны'}, {'role': 'user', 'content': 'Проанализируй следующий транскрипт аудио и классифицируй его:\n\nПривет, наконец-то это случилось.'}], 'model': 'gpt-4o-mini', 'max_tokens': 200, 'temperature': 0.1}}
2025-09-26 17:28:28,357 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-26 17:28:28,357 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:28:28,357 - DEBUG - send_request_headers.complete
2025-09-26 17:28:28,358 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:28:28,358 - DEBUG - send_request_body.complete
2025-09-26 17:28:28,358 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:28:30,198 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:28:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1481'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1518'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'198675'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'397ms'), (b'x-request-id', b'req_4f78c6a6c441450583e47a325aecb057'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'985372ad993f8d82-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:28:30,199 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 17:28:30,199 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:28:30,209 - DEBUG - receive_response_body.complete
2025-09-26 17:28:30,209 - DEBUG - response_closed.started
2025-09-26 17:28:30,209 - DEBUG - response_closed.complete
2025-09-26 17:28:30,209 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:28:30 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1481', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1518', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '198675', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '397ms', 'x-request-id': 'req_4f78c6a6c441450583e47a325aecb057', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '985372ad993f8d82-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:28:30,210 - DEBUG - request_id: req_4f78c6a6c441450583e47a325aecb057
2025-09-26 17:28:30,217 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\ЛЮБОВЬ.mp3
2025-09-26 17:28:30,331 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 4, 'overlap': 0.4, 'jobs': 4}
2025-09-26 17:28:30,331 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла (после предочистки): examples\ЛЮБОВЬ.mp3
2025-09-26 17:28:30,332 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 17:28:30,332 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 17:28:30,332 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\ЛЮБОВЬ.mp3
2025-09-26 17:28:30,959 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 17:28:30,959 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\ЛЮБОВЬ.mp3
2025-09-26 17:28:31,767 - DEBUG - УЛУЧШЕНИЕ АУДИО: Создан файл с выделенным вокалом: examples\ЛЮБОВЬ_vocals.wav
2025-09-26 17:28:31,785 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 17:28:31,785 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 17:28:31,793 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\ЛЮБОВЬ_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-0b41229d-08bd-4407-93b1-1db60eb03cc8', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:28:31,794 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:28:31,794 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:28:31,794 - DEBUG - send_request_headers.complete
2025-09-26 17:28:31,794 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:28:31,806 - DEBUG - send_request_body.complete
2025-09-26 17:28:31,806 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:28:38,610 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:28:38 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1054'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1069'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_b4a75825618240c79c7d9cd54c400e5f'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'985372c31f388d82-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:28:38,610 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:28:38,611 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:28:38,611 - DEBUG - receive_response_body.complete
2025-09-26 17:28:38,611 - DEBUG - response_closed.started
2025-09-26 17:28:38,611 - DEBUG - response_closed.complete
2025-09-26 17:28:38,612 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:28:38 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1054', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1069', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_b4a75825618240c79c7d9cd54c400e5f', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '985372c31f388d82-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:28:38,612 - DEBUG - request_id: req_b4a75825618240c79c7d9cd54c400e5f
2025-09-26 17:28:38,612 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Мы снова играем с тобой в игру под названием любовь.'
2025-09-26 17:28:38,613 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:28:38,613 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Мы снова играем с тобой в игру под названием любовь.'
2025-09-26 17:28:38,613 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: 'Мы снова играем с тобой в игру под названием любовь.' (длина: 52)
2025-09-26 17:28:38,804 - DEBUG - ТРАНСКРИПЦИЯ: Музыкальные признаки не обнаружены — пропускаем музыкальный промпт
2025-09-26 17:28:38,804 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Мы снова играем с тобой в игру под названием любовь.'
2025-09-26 17:28:38,804 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:28:38,804 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Мы снова играем с тобой в игру под названием любовь.'
2025-09-26 17:28:38,805 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f924bd19-26cd-42ce-9fc7-5e564248948f', 'json_data': {'messages': [{'role': 'system', 'content': 'Ты — специализированная система для анализа аудиозаписей.\nТвоя единственная задача — классифицировать входной аудиофайл в одну из категорий: музыка, речь, шум.\n\nВАЖНО: Ты анализируешь РЕЗУЛЬТАТ ТРАНСКРИПЦИИ аудиофайла, а не сам аудиофайл. Это означает, что:\n- Если в аудио была музыка с вокалом, то в транскрипции будут слова песни\n- Если в аудио была речь, то в транскрипции будет связный текст\n- Если в аудио был шум, то в транскрипции будет мало слов или галлюцинации\n\nКатегории классификации:\n\nМузыка (music):\n- Это песня, музыкальная композиция с вокалом\n- Характерные признаки в транскрипции:\n  * Повторяющиеся фразы или слова (припев)\n  * Рифмы и ритмические паттерны\n  * Музыкальные звуки: "ла-ла-ла", "на-на-на", "о-о-о", "а-а-а"\n  * Эмоциональные восклицания: "Ауф!", "Ой!", "Ах!"\n  * Короткие фразы без логической связи\n  * Слова, которые звучат как песня, а не как обычная речь\n  * Повторяющиеся слова или фразы (припев песни)\n  * Ритмические паттерны в тексте\n\nРечь (speech):\n- Это обычная речь, разговор, диалог\n- Характерные признаки в транскрипции:\n  * Связные предложения с логической структурой\n  * Обычные слова и фразы\n  * Знаки препинания: точки, запятые, восклицательные знаки\n  * Логическая последовательность мыслей\n  * Отсутствие повторяющихся музыкальных паттернов\n  * Естественная речь без ритма\n\nШум (noise):\n- Это неречевые звуки, шум, техника, плач ребенка\n- Характерные признаки в транскрипции:\n  * Очень короткие или бессмысленные фрагменты\n  * Отсутствие связной речи\n  * Случайные слова или звуки\n  * Описания звуков: "[Music]", "[звук]", "[шум]"\n  * Повторяющиеся гласные: "ааа", "ууу", "ооо" (детский плач)\n  * Бессмысленные фразы: "Всем новичкам, всем новичкам"\n  * Короткие бессвязные слова\n\nПравила классификации:\n1. Если транскрипция содержит связную речь с логической структурой → speech\n2. Если транскрипция содержит повторяющиеся фразы, рифмы, музыкальные звуки → music\n3. Если транскрипция короткая, бессвязная или содержит описания звуков → noise\n4. При сомнениях между music и speech: если есть повторения или музыкальные звуки → music\n5. Детский плач (ааа, ууу, ооо) → noise\n6. Белый шум с бессмысленными словами → noise\n\nВАЖНЫЕ ПРИМЕРЫ:\n- "Скажи мне, не говори мне, что ты гонишь" → music (песня с повторениями)\n- "Привет, как дела?" → speech (обычная речь)\n- "Ааааааа" → noise (детский плач)\n- "Всем новичкам, всем новичкам" → noise (белый шум)\n- "Find me, find me, You can find" → music (песня с припевом)\n\nФормат ответа:\nОтвечай только в формате JSON, без лишнего текста:\n{\n  "classification": "music | speech | noise",\n  "confidence": 0.0-1.0,\n  "reasoning": "Краткое объяснение выбора: какие признаки были решающими"\n}\n\nОграничения:\n- Не добавляй ничего, кроме JSON\n- Не предлагай альтернативных категорий\n- Всегда возвращай одно значение в поле "classification"\n- Уровень уверенности (confidence) должен отражать баланс признаков:\n  * 0.9–1.0 → очень высокая уверенность\n  * 0.6–0.89 → умеренная уверенность\n  * <0.6 → низкая уверенность, признаки неоднозначны'}, {'role': 'user', 'content': 'Проанализируй следующий транскрипт аудио и классифицируй его:\n\nМы снова играем с тобой в игру под названием любовь.'}], 'model': 'gpt-4o-mini', 'max_tokens': 200, 'temperature': 0.1}}
2025-09-26 17:28:38,806 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-26 17:28:38,807 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:28:38,807 - DEBUG - send_request_headers.complete
2025-09-26 17:28:38,807 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:28:38,808 - DEBUG - send_request_body.complete
2025-09-26 17:28:38,808 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:28:41,355 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:28:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1986'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2223'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'198667'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'399ms'), (b'x-request-id', b'req_70d3a55e424d47ac89302598d0a7d8bb'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'985372eeea3a8d82-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:28:41,356 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 17:28:41,356 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:28:41,367 - DEBUG - receive_response_body.complete
2025-09-26 17:28:41,367 - DEBUG - response_closed.started
2025-09-26 17:28:41,367 - DEBUG - response_closed.complete
2025-09-26 17:28:41,368 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:28:41 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1986', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2223', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '198667', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '399ms', 'x-request-id': 'req_70d3a55e424d47ac89302598d0a7d8bb', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '985372eeea3a8d82-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:28:41,368 - DEBUG - request_id: req_70d3a55e424d47ac89302598d0a7d8bb
2025-09-26 17:28:41,369 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\ПОЗВОНИ МНЕ.mp3
2025-09-26 17:28:41,423 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 4, 'overlap': 0.4, 'jobs': 4}
2025-09-26 17:28:41,424 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла (после предочистки): examples\ПОЗВОНИ МНЕ.mp3
2025-09-26 17:28:41,424 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 17:28:41,424 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 17:28:41,424 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\ПОЗВОНИ МНЕ.mp3
2025-09-26 17:28:41,997 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 17:28:41,998 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\ПОЗВОНИ МНЕ.mp3
2025-09-26 17:28:42,390 - DEBUG - УЛУЧШЕНИЕ АУДИО: Создан файл с выделенным вокалом: examples\ПОЗВОНИ МНЕ_vocals.wav
2025-09-26 17:28:42,401 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 17:28:42,401 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 17:28:42,411 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\ПОЗВОНИ МНЕ_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-25216806-ec6b-4a17-acf3-0e1ee3d7927d', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:28:42,411 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:28:42,412 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:28:42,412 - DEBUG - send_request_headers.complete
2025-09-26 17:28:42,412 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:28:42,418 - DEBUG - send_request_body.complete
2025-09-26 17:28:42,419 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:28:46,605 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:28:46 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1451'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1463'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_38cd62af6c6143ba8d7c0a350e09d394'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'985373056f948d82-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:28:46,606 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:28:46,606 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:28:46,606 - DEBUG - receive_response_body.complete
2025-09-26 17:28:46,606 - DEBUG - response_closed.started
2025-09-26 17:28:46,607 - DEBUG - response_closed.complete
2025-09-26 17:28:46,607 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:28:46 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1451', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1463', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_38cd62af6c6143ba8d7c0a350e09d394', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '985373056f948d82-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:28:46,607 - DEBUG - request_id: req_38cd62af6c6143ba8d7c0a350e09d394
2025-09-26 17:28:46,608 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Послани мне, не говори мне, че ты гонишь, снова мозг не выносишь. Послани мне, не говори мне, че ты гонишь, снова мозг не выносишь.'
2025-09-26 17:28:46,608 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:28:46,608 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Послани мне, не говори мне, че ты гонишь, снова мозг не выносишь. Послани мне, не говори мне, че ты гонишь, снова мозг не выносишь.'
2025-09-26 17:28:46,608 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: 'Послани мне, не говори мне, че ты гонишь, снова мозг не выносишь. Послани мне, не говори мне, че ты гонишь, снова мозг не выносишь.' (длина: 131)
2025-09-26 17:28:46,608 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Послани мне, не говори мне, че ты гонишь, снова мозг не выносишь. Послани мне, не говори мне, че ты гонишь, снова мозг не выносишь.'
2025-09-26 17:28:46,609 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:28:46,609 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Послани мне, не говори мне, че ты гонишь, снова мозг не выносишь. Послани мне, не говори мне, че ты гонишь, снова мозг не выносишь.'
2025-09-26 17:28:46,610 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-99f78f8a-963d-4a21-957f-8459743f2d6c', 'json_data': {'messages': [{'role': 'system', 'content': 'Ты — специализированная система для анализа аудиозаписей.\nТвоя единственная задача — классифицировать входной аудиофайл в одну из категорий: музыка, речь, шум.\n\nВАЖНО: Ты анализируешь РЕЗУЛЬТАТ ТРАНСКРИПЦИИ аудиофайла, а не сам аудиофайл. Это означает, что:\n- Если в аудио была музыка с вокалом, то в транскрипции будут слова песни\n- Если в аудио была речь, то в транскрипции будет связный текст\n- Если в аудио был шум, то в транскрипции будет мало слов или галлюцинации\n\nКатегории классификации:\n\nМузыка (music):\n- Это песня, музыкальная композиция с вокалом\n- Характерные признаки в транскрипции:\n  * Повторяющиеся фразы или слова (припев)\n  * Рифмы и ритмические паттерны\n  * Музыкальные звуки: "ла-ла-ла", "на-на-на", "о-о-о", "а-а-а"\n  * Эмоциональные восклицания: "Ауф!", "Ой!", "Ах!"\n  * Короткие фразы без логической связи\n  * Слова, которые звучат как песня, а не как обычная речь\n  * Повторяющиеся слова или фразы (припев песни)\n  * Ритмические паттерны в тексте\n\nРечь (speech):\n- Это обычная речь, разговор, диалог\n- Характерные признаки в транскрипции:\n  * Связные предложения с логической структурой\n  * Обычные слова и фразы\n  * Знаки препинания: точки, запятые, восклицательные знаки\n  * Логическая последовательность мыслей\n  * Отсутствие повторяющихся музыкальных паттернов\n  * Естественная речь без ритма\n\nШум (noise):\n- Это неречевые звуки, шум, техника, плач ребенка\n- Характерные признаки в транскрипции:\n  * Очень короткие или бессмысленные фрагменты\n  * Отсутствие связной речи\n  * Случайные слова или звуки\n  * Описания звуков: "[Music]", "[звук]", "[шум]"\n  * Повторяющиеся гласные: "ааа", "ууу", "ооо" (детский плач)\n  * Бессмысленные фразы: "Всем новичкам, всем новичкам"\n  * Короткие бессвязные слова\n\nПравила классификации:\n1. Если транскрипция содержит связную речь с логической структурой → speech\n2. Если транскрипция содержит повторяющиеся фразы, рифмы, музыкальные звуки → music\n3. Если транскрипция короткая, бессвязная или содержит описания звуков → noise\n4. При сомнениях между music и speech: если есть повторения или музыкальные звуки → music\n5. Детский плач (ааа, ууу, ооо) → noise\n6. Белый шум с бессмысленными словами → noise\n\nВАЖНЫЕ ПРИМЕРЫ:\n- "Скажи мне, не говори мне, что ты гонишь" → music (песня с повторениями)\n- "Привет, как дела?" → speech (обычная речь)\n- "Ааааааа" → noise (детский плач)\n- "Всем новичкам, всем новичкам" → noise (белый шум)\n- "Find me, find me, You can find" → music (песня с припевом)\n\nФормат ответа:\nОтвечай только в формате JSON, без лишнего текста:\n{\n  "classification": "music | speech | noise",\n  "confidence": 0.0-1.0,\n  "reasoning": "Краткое объяснение выбора: какие признаки были решающими"\n}\n\nОграничения:\n- Не добавляй ничего, кроме JSON\n- Не предлагай альтернативных категорий\n- Всегда возвращай одно значение в поле "classification"\n- Уровень уверенности (confidence) должен отражать баланс признаков:\n  * 0.9–1.0 → очень высокая уверенность\n  * 0.6–0.89 → умеренная уверенность\n  * <0.6 → низкая уверенность, признаки неоднозначны'}, {'role': 'user', 'content': 'Проанализируй следующий транскрипт аудио и классифицируй его:\n\nПослани мне, не говори мне, че ты гонишь, снова мозг не выносишь. Послани мне, не говори мне, че ты гонишь, снова мозг не выносишь.'}], 'model': 'gpt-4o-mini', 'max_tokens': 200, 'temperature': 0.1}}
2025-09-26 17:28:46,611 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-26 17:28:46,611 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:28:46,612 - DEBUG - send_request_headers.complete
2025-09-26 17:28:46,612 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:28:46,612 - DEBUG - send_request_body.complete
2025-09-26 17:28:46,612 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:28:48,891 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:28:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1622'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1979'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9998'), (b'x-ratelimit-remaining-tokens', b'198633'), (b'x-ratelimit-reset-requests', b'9.429s'), (b'x-ratelimit-reset-tokens', b'410ms'), (b'x-request-id', b'req_f2ae547dde51455896ba493d1e461803'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9853731fa9b18d82-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:28:48,892 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 17:28:48,892 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:28:48,892 - DEBUG - receive_response_body.complete
2025-09-26 17:28:48,892 - DEBUG - response_closed.started
2025-09-26 17:28:48,892 - DEBUG - response_closed.complete
2025-09-26 17:28:48,893 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:28:48 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1622', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1979', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9998', 'x-ratelimit-remaining-tokens': '198633', 'x-ratelimit-reset-requests': '9.429s', 'x-ratelimit-reset-tokens': '410ms', 'x-request-id': 'req_f2ae547dde51455896ba493d1e461803', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9853731fa9b18d82-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:28:48,893 - DEBUG - request_id: req_f2ae547dde51455896ba493d1e461803
2025-09-26 17:28:48,894 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\РИНГТОН.mp3
2025-09-26 17:28:48,970 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 4, 'overlap': 0.4, 'jobs': 4}
2025-09-26 17:28:48,971 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла (после предочистки): examples\РИНГТОН.mp3
2025-09-26 17:28:48,971 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 17:28:48,971 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 17:28:48,971 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\РИНГТОН.mp3
2025-09-26 17:28:49,553 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 17:28:49,553 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\РИНГТОН.mp3
2025-09-26 17:28:50,086 - DEBUG - УЛУЧШЕНИЕ АУДИО: Создан файл с выделенным вокалом: examples\РИНГТОН_vocals.wav
2025-09-26 17:28:50,100 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 17:28:50,100 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 17:28:50,107 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\РИНГТОН_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-0b83e131-2652-43fa-9231-56a892257ff1', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:28:50,108 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:28:50,108 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:28:50,109 - DEBUG - send_request_headers.complete
2025-09-26 17:28:50,109 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:28:50,116 - DEBUG - send_request_body.complete
2025-09-26 17:28:50,116 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:28:56,026 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:28:55 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'2308'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2324'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_2a1354ba7d554b80bc39f15ee73c27b5'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'985373358ff48d82-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:28:56,027 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:28:56,027 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:28:56,027 - DEBUG - receive_response_body.complete
2025-09-26 17:28:56,027 - DEBUG - response_closed.started
2025-09-26 17:28:56,028 - DEBUG - response_closed.complete
2025-09-26 17:28:56,028 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:28:55 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '2308', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2324', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_2a1354ba7d554b80bc39f15ee73c27b5', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '985373358ff48d82-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:28:56,028 - DEBUG - request_id: req_2a1354ba7d554b80bc39f15ee73c27b5
2025-09-26 17:28:56,028 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Find me, find me

Find me, find me

You can find, find, find me, find me
Tearing up downtown with the high beams
No need for rearview, when they can't catch you
I never look back, never look
Look like I want to, I'm so innocent
Kissing your tattoos, sweet like cinnamon
No need for rearview, when they can't catch you'
2025-09-26 17:28:56,029 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:28:56,029 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Find me, find me

Find me, find me

You can find, find, find me, find me
Tearing up downtown with the high beams
No need for rearview, when they can't catch you
I never look back, never look
Look like I want to, I'm so innocent
Kissing your tattoos, sweet like cinnamon
No need for rearview, when they can't catch you'
2025-09-26 17:28:56,029 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: 'Find me, find me

Find me, find me

You can find, find, find me, find me
Tearing up downtown with the high beams
No need for rearview, when they can't catch you
I never look back, never look
Look like I want to, I'm so innocent
Kissing your tattoos, sweet like cinnamon
No need for rearview, when they can't catch you' (длина: 317)
2025-09-26 17:28:56,030 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Find me, find me

Find me, find me

You can find, find, find me, find me
Tearing up downtown with the high beams
No need for rearview, when they can't catch you
I never look back, never look
Look like I want to, I'm so innocent
Kissing your tattoos, sweet like cinnamon
No need for rearview, when they can't catch you'
2025-09-26 17:28:56,030 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:28:56,030 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Find me, find me

Find me, find me

You can find, find, find me, find me
Tearing up downtown with the high beams
No need for rearview, when they can't catch you
I never look back, never look
Look like I want to, I'm so innocent
Kissing your tattoos, sweet like cinnamon
No need for rearview, when they can't catch you'
2025-09-26 17:28:56,031 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-1d17962e-7eff-4682-bc16-03be916bc725', 'json_data': {'messages': [{'role': 'system', 'content': 'Ты — специализированная система для анализа аудиозаписей.\nТвоя единственная задача — классифицировать входной аудиофайл в одну из категорий: музыка, речь, шум.\n\nВАЖНО: Ты анализируешь РЕЗУЛЬТАТ ТРАНСКРИПЦИИ аудиофайла, а не сам аудиофайл. Это означает, что:\n- Если в аудио была музыка с вокалом, то в транскрипции будут слова песни\n- Если в аудио была речь, то в транскрипции будет связный текст\n- Если в аудио был шум, то в транскрипции будет мало слов или галлюцинации\n\nКатегории классификации:\n\nМузыка (music):\n- Это песня, музыкальная композиция с вокалом\n- Характерные признаки в транскрипции:\n  * Повторяющиеся фразы или слова (припев)\n  * Рифмы и ритмические паттерны\n  * Музыкальные звуки: "ла-ла-ла", "на-на-на", "о-о-о", "а-а-а"\n  * Эмоциональные восклицания: "Ауф!", "Ой!", "Ах!"\n  * Короткие фразы без логической связи\n  * Слова, которые звучат как песня, а не как обычная речь\n  * Повторяющиеся слова или фразы (припев песни)\n  * Ритмические паттерны в тексте\n\nРечь (speech):\n- Это обычная речь, разговор, диалог\n- Характерные признаки в транскрипции:\n  * Связные предложения с логической структурой\n  * Обычные слова и фразы\n  * Знаки препинания: точки, запятые, восклицательные знаки\n  * Логическая последовательность мыслей\n  * Отсутствие повторяющихся музыкальных паттернов\n  * Естественная речь без ритма\n\nШум (noise):\n- Это неречевые звуки, шум, техника, плач ребенка\n- Характерные признаки в транскрипции:\n  * Очень короткие или бессмысленные фрагменты\n  * Отсутствие связной речи\n  * Случайные слова или звуки\n  * Описания звуков: "[Music]", "[звук]", "[шум]"\n  * Повторяющиеся гласные: "ааа", "ууу", "ооо" (детский плач)\n  * Бессмысленные фразы: "Всем новичкам, всем новичкам"\n  * Короткие бессвязные слова\n\nПравила классификации:\n1. Если транскрипция содержит связную речь с логической структурой → speech\n2. Если транскрипция содержит повторяющиеся фразы, рифмы, музыкальные звуки → music\n3. Если транскрипция короткая, бессвязная или содержит описания звуков → noise\n4. При сомнениях между music и speech: если есть повторения или музыкальные звуки → music\n5. Детский плач (ааа, ууу, ооо) → noise\n6. Белый шум с бессмысленными словами → noise\n\nВАЖНЫЕ ПРИМЕРЫ:\n- "Скажи мне, не говори мне, что ты гонишь" → music (песня с повторениями)\n- "Привет, как дела?" → speech (обычная речь)\n- "Ааааааа" → noise (детский плач)\n- "Всем новичкам, всем новичкам" → noise (белый шум)\n- "Find me, find me, You can find" → music (песня с припевом)\n\nФормат ответа:\nОтвечай только в формате JSON, без лишнего текста:\n{\n  "classification": "music | speech | noise",\n  "confidence": 0.0-1.0,\n  "reasoning": "Краткое объяснение выбора: какие признаки были решающими"\n}\n\nОграничения:\n- Не добавляй ничего, кроме JSON\n- Не предлагай альтернативных категорий\n- Всегда возвращай одно значение в поле "classification"\n- Уровень уверенности (confidence) должен отражать баланс признаков:\n  * 0.9–1.0 → очень высокая уверенность\n  * 0.6–0.89 → умеренная уверенность\n  * <0.6 → низкая уверенность, признаки неоднозначны'}, {'role': 'user', 'content': "Проанализируй следующий транскрипт аудио и классифицируй его:\n\nFind me, find me\n\nFind me, find me\n\nYou can find, find, find me, find me\nTearing up downtown with the high beams\nNo need for rearview, when they can't catch you\nI never look back, never look\nLook like I want to, I'm so innocent\nKissing your tattoos, sweet like cinnamon\nNo need for rearview, when they can't catch you"}], 'model': 'gpt-4o-mini', 'max_tokens': 200, 'temperature': 0.1}}
2025-09-26 17:28:56,033 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-26 17:28:56,033 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:28:56,033 - DEBUG - send_request_headers.complete
2025-09-26 17:28:56,034 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:28:56,034 - DEBUG - send_request_body.complete
2025-09-26 17:28:56,034 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:28:58,002 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:28:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1532'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1692'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9998'), (b'x-ratelimit-remaining-tokens', b'198611'), (b'x-ratelimit-reset-requests', b'8.813s'), (b'x-ratelimit-reset-tokens', b'416ms'), (b'x-request-id', b'req_0acb51f067884b279deb2e4a0cdb3780'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9853735a8d1c8d82-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:28:58,003 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 17:28:58,003 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:28:58,005 - DEBUG - receive_response_body.complete
2025-09-26 17:28:58,005 - DEBUG - response_closed.started
2025-09-26 17:28:58,006 - DEBUG - response_closed.complete
2025-09-26 17:28:58,006 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:28:57 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1532', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1692', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9998', 'x-ratelimit-remaining-tokens': '198611', 'x-ratelimit-reset-requests': '8.813s', 'x-ratelimit-reset-tokens': '416ms', 'x-request-id': 'req_0acb51f067884b279deb2e4a0cdb3780', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9853735a8d1c8d82-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:28:58,007 - DEBUG - request_id: req_0acb51f067884b279deb2e4a0cdb3780
