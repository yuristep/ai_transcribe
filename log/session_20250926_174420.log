2025-09-26 17:44:20,031 - INFO - Логирование настроено. Файл лога: log\session_20250926_174420.log
2025-09-26 17:44:20,034 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\children-voice.mp3
2025-09-26 17:44:21,329 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	RESUME(arg=0, lineno=1137)
           4	LOAD_FAST(arg=0, lineno=1140)
           6	LOAD_CONST(arg=1, lineno=1140)
           8	BINARY_SUBSCR(arg=None, lineno=1140)
          12	STORE_FAST(arg=3, lineno=1140)
          14	LOAD_FAST(arg=1, lineno=1141)
          16	UNARY_NEGATIVE(arg=None, lineno=1141)
          18	LOAD_FAST(arg=3, lineno=1141)
          20	SWAP(arg=2, lineno=1141)
          22	COPY(arg=2, lineno=1141)
          24	COMPARE_OP(arg=58, lineno=1141)
          28	POP_JUMP_IF_FALSE(arg=6, lineno=1141)
          32	LOAD_FAST(arg=1, lineno=1141)
          34	COMPARE_OP(arg=58, lineno=1141)
          38	POP_JUMP_IF_FALSE(arg=5, lineno=1141)
          42	JUMP_FORWARD(arg=2, lineno=1141)
>         44	POP_TOP(arg=None, lineno=1141)
          46	JUMP_FORWARD(arg=2, lineno=1141)
>         48	LOAD_CONST(arg=1, lineno=1142)
          50	STORE_FAST(arg=3, lineno=1142)
>         52	LOAD_FAST(arg=0, lineno=1144)
          54	LOAD_CONST(arg=2, lineno=1144)
          56	BINARY_SUBSCR(arg=None, lineno=1144)
          60	STORE_FAST(arg=4, lineno=1144)
          62	LOAD_FAST(arg=1, lineno=1145)
          64	UNARY_NEGATIVE(arg=None, lineno=1145)
          66	LOAD_FAST(arg=4, lineno=1145)
          68	SWAP(arg=2, lineno=1145)
          70	COPY(arg=2, lineno=1145)
          72	COMPARE_OP(arg=58, lineno=1145)
          76	POP_JUMP_IF_FALSE(arg=6, lineno=1145)
          80	LOAD_FAST(arg=1, lineno=1145)
          82	COMPARE_OP(arg=58, lineno=1145)
          86	POP_JUMP_IF_FALSE(arg=5, lineno=1145)
          90	JUMP_FORWARD(arg=2, lineno=1145)
>         92	POP_TOP(arg=None, lineno=1145)
          94	JUMP_FORWARD(arg=2, lineno=1145)
>         96	LOAD_CONST(arg=1, lineno=1146)
          98	STORE_FAST(arg=4, lineno=1146)
>        100	LOAD_FAST(arg=2, lineno=1148)
         102	TO_BOOL(arg=None, lineno=1148)
         110	POP_JUMP_IF_FALSE(arg=45, lineno=1148)
         114	LOAD_GLOBAL(arg=0, lineno=1149)
         124	LOAD_ATTR(arg=2, lineno=1149)
         144	PUSH_NULL(arg=None, lineno=1149)
         146	LOAD_FAST(arg=3, lineno=1149)
         148	CALL(arg=1, lineno=1149)
         156	LOAD_GLOBAL(arg=0, lineno=1149)
         166	LOAD_ATTR(arg=2, lineno=1149)
         186	PUSH_NULL(arg=None, lineno=1149)
         188	LOAD_FAST(arg=4, lineno=1149)
         190	CALL(arg=1, lineno=1149)
         198	COMPARE_OP(arg=103, lineno=1149)
         202	RETURN_VALUE(arg=None, lineno=1149)
>        204	LOAD_GLOBAL(arg=0, lineno=1151)
         214	LOAD_ATTR(arg=4, lineno=1151)
         234	PUSH_NULL(arg=None, lineno=1151)
         236	LOAD_FAST(arg=3, lineno=1151)
         238	CALL(arg=1, lineno=1151)
         246	LOAD_GLOBAL(arg=0, lineno=1151)
         256	LOAD_ATTR(arg=4, lineno=1151)
         276	PUSH_NULL(arg=None, lineno=1151)
         278	LOAD_FAST(arg=4, lineno=1151)
         280	CALL(arg=1, lineno=1151)
         288	COMPARE_OP(arg=103, lineno=1151)
         292	RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 17:44:21,331 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 17:44:21,331 - DEBUG - stack: []
2025-09-26 17:44:21,331 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 17:44:21,331 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-09-26 17:44:21,332 - DEBUG - stack []
2025-09-26 17:44:21,332 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1137)
2025-09-26 17:44:21,332 - DEBUG - stack []
2025-09-26 17:44:21,332 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1140)
2025-09-26 17:44:21,332 - DEBUG - stack []
2025-09-26 17:44:21,333 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1140)
2025-09-26 17:44:21,333 - DEBUG - stack ['$x4.0']
2025-09-26 17:44:21,333 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-09-26 17:44:21,333 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-09-26 17:44:21,333 - DEBUG - dispatch pc=12, inst=STORE_FAST(arg=3, lineno=1140)
2025-09-26 17:44:21,333 - DEBUG - stack ['$8binary_subscr.2']
2025-09-26 17:44:21,334 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 17:44:21,334 - DEBUG - stack []
2025-09-26 17:44:21,334 - DEBUG - dispatch pc=16, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-09-26 17:44:21,334 - DEBUG - stack ['$threshold14.3']
2025-09-26 17:44:21,334 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=1141)
2025-09-26 17:44:21,335 - DEBUG - stack ['$16unary_negative.4']
2025-09-26 17:44:21,335 - DEBUG - dispatch pc=20, inst=SWAP(arg=2, lineno=1141)
2025-09-26 17:44:21,335 - DEBUG - stack ['$16unary_negative.4', '$x018.5']
2025-09-26 17:44:21,335 - DEBUG - dispatch pc=22, inst=COPY(arg=2, lineno=1141)
2025-09-26 17:44:21,335 - DEBUG - stack ['$x018.5', '$16unary_negative.4']
2025-09-26 17:44:21,335 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 17:44:21,335 - DEBUG - stack ['$x018.5', '$16unary_negative.4', '$x018.5']
2025-09-26 17:44:21,335 - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1141)
2025-09-26 17:44:21,336 - DEBUG - stack ['$x018.5', '$24compare_op.6']
2025-09-26 17:44:21,336 - DEBUG - end state. edges=[Edge(pc=32, stack=('$x018.5',), blockstack=(), npush=0), Edge(pc=44, stack=('$x018.5',), blockstack=(), npush=0)]
2025-09-26 17:44:21,336 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=44 nstack_initial=1)])
2025-09-26 17:44:21,336 - DEBUG - stack: ['$phi32.0']
2025-09-26 17:44:21,336 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-09-26 17:44:21,336 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1141)
2025-09-26 17:44:21,336 - DEBUG - stack ['$phi32.0']
2025-09-26 17:44:21,336 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=58, lineno=1141)
2025-09-26 17:44:21,337 - DEBUG - stack ['$phi32.0', '$threshold32.1']
2025-09-26 17:44:21,337 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1141)
2025-09-26 17:44:21,337 - DEBUG - stack ['$34compare_op.2']
2025-09-26 17:44:21,337 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 17:44:21,337 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=1), State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 17:44:21,337 - DEBUG - stack: ['$phi44.0']
2025-09-26 17:44:21,337 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=1)
2025-09-26 17:44:21,337 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=1141)
2025-09-26 17:44:21,337 - DEBUG - stack ['$phi44.0']
2025-09-26 17:44:21,337 - DEBUG - dispatch pc=46, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 17:44:21,338 - DEBUG - stack []
2025-09-26 17:44:21,338 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 17:44:21,338 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-09-26 17:44:21,338 - DEBUG - stack: []
2025-09-26 17:44:21,338 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-09-26 17:44:21,338 - DEBUG - dispatch pc=42, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-09-26 17:44:21,338 - DEBUG - stack []
2025-09-26 17:44:21,338 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0)]
2025-09-26 17:44:21,338 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2025-09-26 17:44:21,338 - DEBUG - stack: []
2025-09-26 17:44:21,339 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-09-26 17:44:21,339 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1144)
2025-09-26 17:44:21,339 - DEBUG - stack []
2025-09-26 17:44:21,339 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=1144)
2025-09-26 17:44:21,339 - DEBUG - stack ['$x52.0']
2025-09-26 17:44:21,339 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-09-26 17:44:21,339 - DEBUG - stack ['$x52.0', '$const54.1.2']
2025-09-26 17:44:21,339 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=4, lineno=1144)
2025-09-26 17:44:21,339 - DEBUG - stack ['$56binary_subscr.2']
2025-09-26 17:44:21,340 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 17:44:21,340 - DEBUG - stack []
2025-09-26 17:44:21,340 - DEBUG - dispatch pc=64, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-09-26 17:44:21,340 - DEBUG - stack ['$threshold62.3']
2025-09-26 17:44:21,340 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=4, lineno=1145)
2025-09-26 17:44:21,340 - DEBUG - stack ['$64unary_negative.4']
2025-09-26 17:44:21,340 - DEBUG - dispatch pc=68, inst=SWAP(arg=2, lineno=1145)
2025-09-26 17:44:21,340 - DEBUG - stack ['$64unary_negative.4', '$x166.5']
2025-09-26 17:44:21,340 - DEBUG - dispatch pc=70, inst=COPY(arg=2, lineno=1145)
2025-09-26 17:44:21,341 - DEBUG - stack ['$x166.5', '$64unary_negative.4']
2025-09-26 17:44:21,341 - DEBUG - dispatch pc=72, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 17:44:21,341 - DEBUG - stack ['$x166.5', '$64unary_negative.4', '$x166.5']
2025-09-26 17:44:21,341 - DEBUG - dispatch pc=76, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1145)
2025-09-26 17:44:21,341 - DEBUG - stack ['$x166.5', '$72compare_op.6']
2025-09-26 17:44:21,341 - DEBUG - end state. edges=[Edge(pc=80, stack=('$x166.5',), blockstack=(), npush=0), Edge(pc=92, stack=('$x166.5',), blockstack=(), npush=0)]
2025-09-26 17:44:21,341 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 17:44:21,342 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1)])
2025-09-26 17:44:21,342 - DEBUG - stack: []
2025-09-26 17:44:21,342 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-09-26 17:44:21,342 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1142)
2025-09-26 17:44:21,342 - DEBUG - stack []
2025-09-26 17:44:21,342 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=3, lineno=1142)
2025-09-26 17:44:21,342 - DEBUG - stack ['$const48.0.1']
2025-09-26 17:44:21,343 - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-09-26 17:44:21,343 - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0)])
2025-09-26 17:44:21,343 - DEBUG - stack: ['$phi80.0']
2025-09-26 17:44:21,343 - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-09-26 17:44:21,343 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=1145)
2025-09-26 17:44:21,343 - DEBUG - stack ['$phi80.0']
2025-09-26 17:44:21,343 - DEBUG - dispatch pc=82, inst=COMPARE_OP(arg=58, lineno=1145)
2025-09-26 17:44:21,343 - DEBUG - stack ['$phi80.0', '$threshold80.1']
2025-09-26 17:44:21,343 - DEBUG - dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1145)
2025-09-26 17:44:21,344 - DEBUG - stack ['$82compare_op.2']
2025-09-26 17:44:21,344 - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 17:44:21,344 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 17:44:21,344 - DEBUG - stack: ['$phi92.0']
2025-09-26 17:44:21,344 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=1)
2025-09-26 17:44:21,344 - DEBUG - dispatch pc=92, inst=POP_TOP(arg=None, lineno=1145)
2025-09-26 17:44:21,344 - DEBUG - stack ['$phi92.0']
2025-09-26 17:44:21,344 - DEBUG - dispatch pc=94, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 17:44:21,344 - DEBUG - stack []
2025-09-26 17:44:21,345 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 17:44:21,345 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 17:44:21,345 - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 17:44:21,345 - DEBUG - stack: []
2025-09-26 17:44:21,345 - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-09-26 17:44:21,345 - DEBUG - dispatch pc=90, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-09-26 17:44:21,345 - DEBUG - stack []
2025-09-26 17:44:21,345 - DEBUG - end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-09-26 17:44:21,345 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-09-26 17:44:21,346 - DEBUG - stack: []
2025-09-26 17:44:21,346 - DEBUG - state.pc_initial: State(pc_initial=100 nstack_initial=0)
2025-09-26 17:44:21,346 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=2, lineno=1148)
2025-09-26 17:44:21,346 - DEBUG - stack []
2025-09-26 17:44:21,346 - DEBUG - dispatch pc=102, inst=TO_BOOL(arg=None, lineno=1148)
2025-09-26 17:44:21,346 - DEBUG - stack ['$zero_pos100.0']
2025-09-26 17:44:21,346 - DEBUG - dispatch pc=110, inst=POP_JUMP_IF_FALSE(arg=45, lineno=1148)
2025-09-26 17:44:21,346 - DEBUG - stack ['$102to_bool.1']
2025-09-26 17:44:21,346 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=204, stack=(), blockstack=(), npush=0)]
2025-09-26 17:44:21,347 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 17:44:21,347 - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-09-26 17:44:21,347 - DEBUG - stack: []
2025-09-26 17:44:21,347 - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2025-09-26 17:44:21,347 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=1, lineno=1146)
2025-09-26 17:44:21,347 - DEBUG - stack []
2025-09-26 17:44:21,347 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=4, lineno=1146)
2025-09-26 17:44:21,347 - DEBUG - stack ['$const96.0.1']
2025-09-26 17:44:21,347 - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-09-26 17:44:21,348 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 17:44:21,348 - DEBUG - stack: []
2025-09-26 17:44:21,348 - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2025-09-26 17:44:21,348 - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 17:44:21,348 - DEBUG - stack []
2025-09-26 17:44:21,348 - DEBUG - dispatch pc=124, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 17:44:21,348 - DEBUG - stack ['$114load_global.0']
2025-09-26 17:44:21,348 - DEBUG - dispatch pc=144, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 17:44:21,348 - DEBUG - stack ['$124load_attr.1']
2025-09-26 17:44:21,348 - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=3, lineno=1149)
2025-09-26 17:44:21,349 - DEBUG - stack ['$124load_attr.1', '$null$144.2']
2025-09-26 17:44:21,349 - DEBUG - dispatch pc=148, inst=CALL(arg=1, lineno=1149)
2025-09-26 17:44:21,349 - DEBUG - stack ['$124load_attr.1', '$null$144.2', '$x0146.3']
2025-09-26 17:44:21,349 - DEBUG - dispatch pc=156, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-09-26 17:44:21,349 - DEBUG - stack ['$148call.4']
2025-09-26 17:44:21,349 - DEBUG - dispatch pc=166, inst=LOAD_ATTR(arg=2, lineno=1149)
2025-09-26 17:44:21,349 - DEBUG - stack ['$148call.4', '$156load_global.5']
2025-09-26 17:44:21,349 - DEBUG - dispatch pc=186, inst=PUSH_NULL(arg=None, lineno=1149)
2025-09-26 17:44:21,350 - DEBUG - stack ['$148call.4', '$166load_attr.6']
2025-09-26 17:44:21,350 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=4, lineno=1149)
2025-09-26 17:44:21,350 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7']
2025-09-26 17:44:21,350 - DEBUG - dispatch pc=190, inst=CALL(arg=1, lineno=1149)
2025-09-26 17:44:21,350 - DEBUG - stack ['$148call.4', '$166load_attr.6', '$null$186.7', '$x1188.8']
2025-09-26 17:44:21,350 - DEBUG - dispatch pc=198, inst=COMPARE_OP(arg=103, lineno=1149)
2025-09-26 17:44:21,350 - DEBUG - stack ['$148call.4', '$190call.9']
2025-09-26 17:44:21,351 - DEBUG - dispatch pc=202, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-09-26 17:44:21,351 - DEBUG - stack ['$198compare_op.10']
2025-09-26 17:44:21,351 - DEBUG - end state. edges=[]
2025-09-26 17:44:21,351 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-09-26 17:44:21,351 - DEBUG - stack: []
2025-09-26 17:44:21,351 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=0)
2025-09-26 17:44:21,351 - DEBUG - dispatch pc=204, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 17:44:21,352 - DEBUG - stack []
2025-09-26 17:44:21,352 - DEBUG - dispatch pc=214, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 17:44:21,352 - DEBUG - stack ['$204load_global.0']
2025-09-26 17:44:21,352 - DEBUG - dispatch pc=234, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 17:44:21,352 - DEBUG - stack ['$214load_attr.1']
2025-09-26 17:44:21,352 - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=3, lineno=1151)
2025-09-26 17:44:21,352 - DEBUG - stack ['$214load_attr.1', '$null$234.2']
2025-09-26 17:44:21,352 - DEBUG - dispatch pc=238, inst=CALL(arg=1, lineno=1151)
2025-09-26 17:44:21,352 - DEBUG - stack ['$214load_attr.1', '$null$234.2', '$x0236.3']
2025-09-26 17:44:21,353 - DEBUG - dispatch pc=246, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-09-26 17:44:21,353 - DEBUG - stack ['$238call.4']
2025-09-26 17:44:21,353 - DEBUG - dispatch pc=256, inst=LOAD_ATTR(arg=4, lineno=1151)
2025-09-26 17:44:21,353 - DEBUG - stack ['$238call.4', '$246load_global.5']
2025-09-26 17:44:21,353 - DEBUG - dispatch pc=276, inst=PUSH_NULL(arg=None, lineno=1151)
2025-09-26 17:44:21,353 - DEBUG - stack ['$238call.4', '$256load_attr.6']
2025-09-26 17:44:21,353 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=4, lineno=1151)
2025-09-26 17:44:21,353 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7']
2025-09-26 17:44:21,353 - DEBUG - dispatch pc=280, inst=CALL(arg=1, lineno=1151)
2025-09-26 17:44:21,353 - DEBUG - stack ['$238call.4', '$256load_attr.6', '$null$276.7', '$x1278.8']
2025-09-26 17:44:21,354 - DEBUG - dispatch pc=288, inst=COMPARE_OP(arg=103, lineno=1151)
2025-09-26 17:44:21,354 - DEBUG - stack ['$238call.4', '$280call.9']
2025-09-26 17:44:21,354 - DEBUG - dispatch pc=292, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-09-26 17:44:21,354 - DEBUG - stack ['$288compare_op.10']
2025-09-26 17:44:21,354 - DEBUG - end state. edges=[]
2025-09-26 17:44:21,354 - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0)])
2025-09-26 17:44:21,354 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 17:44:21,354 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=1): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=204 nstack_initial=0): set()})
2025-09-26 17:44:21,355 - DEBUG - defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi44.0': State(pc_initial=0 nstack_initial=0),
 '$phi80.0': State(pc_initial=52 nstack_initial=0),
 '$phi92.0': State(pc_initial=52 nstack_initial=0)}
2025-09-26 17:44:21,355 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 17:44:21,355 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}})
2025-09-26 17:44:21,356 - DEBUG - keep phismap: {'$phi32.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
 '$phi80.0': {('$x166.5', State(pc_initial=52 nstack_initial=0))}}
2025-09-26 17:44:21,356 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$x018.5'},
             State(pc_initial=52 nstack_initial=0): {'$phi80.0': '$x166.5'}})
2025-09-26 17:44:21,356 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 17:44:21,356 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'value': '$8binary_subscr.2'}), (14, {'res': '$threshold14.3'}), (16, {'value': '$threshold14.3', 'res': '$16unary_negative.4'}), (18, {'res': '$x018.5'}), (24, {'lhs': '$16unary_negative.4', 'rhs': '$x018.5', 'res': '$24compare_op.6'}), (28, {'pred': '$24compare_op.6'})), outgoing_phis={'$phi32.0': '$x018.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$x018.5',), 44: ('$x018.5',)})
2025-09-26 17:44:21,356 - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'res': '$threshold32.1'}), (34, {'lhs': '$phi32.0', 'rhs': '$threshold32.1', 'res': '$34compare_op.2'}), (38, {'pred': '$34compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 52: ()})
2025-09-26 17:44:21,357 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ()})
2025-09-26 17:44:21,357 - DEBUG - block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((46, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 17:44:21,357 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$const48.0.1'}), (50, {'value': '$const48.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ()})
2025-09-26 17:44:21,357 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$x52.0'}), (54, {'res': '$const54.1.2'}), (56, {'index': '$const54.1.2', 'target': '$x52.0', 'res': '$56binary_subscr.2'}), (60, {'value': '$56binary_subscr.2'}), (62, {'res': '$threshold62.3'}), (64, {'value': '$threshold62.3', 'res': '$64unary_negative.4'}), (66, {'res': '$x166.5'}), (72, {'lhs': '$64unary_negative.4', 'rhs': '$x166.5', 'res': '$72compare_op.6'}), (76, {'pred': '$72compare_op.6'})), outgoing_phis={'$phi80.0': '$x166.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$x166.5',), 92: ('$x166.5',)})
2025-09-26 17:44:21,357 - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$threshold80.1'}), (82, {'lhs': '$phi80.0', 'rhs': '$threshold80.1', 'res': '$82compare_op.2'}), (86, {'pred': '$82compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 100: ()})
2025-09-26 17:44:21,358 - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
2025-09-26 17:44:21,358 - DEBUG - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((94, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 17:44:21,358 - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$const96.0.1'}), (98, {'value': '$const96.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-09-26 17:44:21,358 - DEBUG - block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$zero_pos100.0'}), (102, {'val': '$zero_pos100.0', 'res': '$102to_bool.1'}), (110, {'pred': '$102to_bool.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 204: ()})
2025-09-26 17:44:21,358 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'idx': 0, 'res': '$114load_global.0'}), (124, {'item': '$114load_global.0', 'res': '$124load_attr.1'}), (144, {}), (146, {'res': '$x0146.3'}), (148, {'func': '$124load_attr.1', 'args': ['$x0146.3'], 'kw_names': None, 'res': '$148call.4'}), (156, {'idx': 0, 'res': '$156load_global.5'}), (166, {'item': '$156load_global.5', 'res': '$166load_attr.6'}), (186, {}), (188, {'res': '$x1188.8'}), (190, {'func': '$166load_attr.6', 'args': ['$x1188.8'], 'kw_names': None, 'res': '$190call.9'}), (198, {'lhs': '$148call.4', 'rhs': '$190call.9', 'res': '$198compare_op.10'}), (202, {'retval': '$198compare_op.10', 'castval': '$202return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 17:44:21,358 - DEBUG - block_infos State(pc_initial=204 nstack_initial=0):
AdaptBlockInfo(insts=((204, {'idx': 0, 'res': '$204load_global.0'}), (214, {'item': '$204load_global.0', 'res': '$214load_attr.1'}), (234, {}), (236, {'res': '$x0236.3'}), (238, {'func': '$214load_attr.1', 'args': ['$x0236.3'], 'kw_names': None, 'res': '$238call.4'}), (246, {'idx': 0, 'res': '$246load_global.5'}), (256, {'item': '$246load_global.5', 'res': '$256load_attr.6'}), (276, {}), (278, {'res': '$x1278.8'}), (280, {'func': '$256load_attr.6', 'args': ['$x1278.8'], 'kw_names': None, 'res': '$280call.9'}), (288, {'lhs': '$238call.4', 'rhs': '$280call.9', 'res': '$288compare_op.10'}), (292, {'retval': '$288compare_op.10', 'castval': '$292return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 17:44:21,360 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    x0 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$const6.1.1', 'x', 'x0']
    $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$16unary_negative.4', 'threshold']
    $24compare_op.6 = $16unary_negative.4 <= x0 ['$16unary_negative.4', '$24compare_op.6', 'x0']
    $bool28 = global(bool: <class 'bool'>)   ['$bool28']
    $28pred = call $bool28($24compare_op.6, func=$bool28, args=(Var($24compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.6', '$28pred', '$bool28']
    $phi32.0 = x0                            ['$phi32.0', 'x0']
    branch $28pred, 32, 44                   ['$28pred']
label 32:
    $34compare_op.2 = $phi32.0 <= threshold  ['$34compare_op.2', '$phi32.0', 'threshold']
    $bool38 = global(bool: <class 'bool'>)   ['$bool38']
    $38pred = call $bool38($34compare_op.2, func=$bool38, args=(Var($34compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.2', '$38pred', '$bool38']
    branch $38pred, 42, 52                   ['$38pred']
label 42:
    jump 48                                  []
label 44:
    jump 52                                  []
label 48:
    x0 = const(int, 0)                       ['x0']
    jump 52                                  []
label 52:
    $const54.1.2 = const(int, -1)            ['$const54.1.2']
    x1 = getitem(value=x, index=$const54.1.2, fn=<built-in function getitem>) ['$const54.1.2', 'x', 'x1']
    $64unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$64unary_negative.4', 'threshold']
    $72compare_op.6 = $64unary_negative.4 <= x1 ['$64unary_negative.4', '$72compare_op.6', 'x1']
    $bool76 = global(bool: <class 'bool'>)   ['$bool76']
    $76pred = call $bool76($72compare_op.6, func=$bool76, args=(Var($72compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$72compare_op.6', '$76pred', '$bool76']
    $phi80.0 = x1                            ['$phi80.0', 'x1']
    branch $76pred, 80, 92                   ['$76pred']
label 80:
    $82compare_op.2 = $phi80.0 <= threshold  ['$82compare_op.2', '$phi80.0', 'threshold']
    $bool86 = global(bool: <class 'bool'>)   ['$bool86']
    $86pred = call $bool86($82compare_op.2, func=$bool86, args=(Var($82compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$82compare_op.2', '$86pred', '$bool86']
    branch $86pred, 90, 100                  ['$86pred']
label 90:
    jump 96                                  []
label 92:
    jump 100                                 []
label 96:
    x1 = const(int, 0)                       ['x1']
    jump 100                                 []
label 100:
    $bool110 = global(bool: <class 'bool'>)  ['$bool110']
    $110pred = call $bool110(zero_pos, func=$bool110, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$110pred', '$bool110', 'zero_pos']
    branch $110pred, 114, 204                ['$110pred']
label 114:
    $114load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$114load_global.0']
    $124load_attr.1 = getattr(value=$114load_global.0, attr=signbit) ['$114load_global.0', '$124load_attr.1']
    $148call.4 = call $124load_attr.1(x0, func=$124load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$124load_attr.1', '$148call.4', 'x0']
    $156load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$156load_global.5']
    $166load_attr.6 = getattr(value=$156load_global.5, attr=signbit) ['$156load_global.5', '$166load_attr.6']
    $190call.9 = call $166load_attr.6(x1, func=$166load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.6', '$190call.9', 'x1']
    $198compare_op.10 = $148call.4 != $190call.9 ['$148call.4', '$190call.9', '$198compare_op.10']
    $202return_value.11 = cast(value=$198compare_op.10) ['$198compare_op.10', '$202return_value.11']
    return $202return_value.11               ['$202return_value.11']
label 204:
    $204load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$204load_global.0']
    $214load_attr.1 = getattr(value=$204load_global.0, attr=sign) ['$204load_global.0', '$214load_attr.1']
    $238call.4 = call $214load_attr.1(x0, func=$214load_attr.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.1', '$238call.4', 'x0']
    $246load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\y.stepanov\\PycharmProjects\\ai_transcribe\\venv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$246load_global.5']
    $256load_attr.6 = getattr(value=$246load_global.5, attr=sign) ['$246load_global.5', '$256load_attr.6']
    $280call.9 = call $256load_attr.6(x1, func=$256load_attr.6, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$256load_attr.6', '$280call.9', 'x1']
    $288compare_op.10 = $238call.4 != $280call.9 ['$238call.4', '$280call.9', '$288compare_op.10']
    $292return_value.11 = cast(value=$288compare_op.10) ['$288compare_op.10', '$292return_value.11']
    return $292return_value.11               ['$292return_value.11']

2025-09-26 17:44:21,687 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1023)
           2	RESUME(arg=0, lineno=1023)
           4	LOAD_FAST(arg=0, lineno=1026)
           6	LOAD_CONST(arg=1, lineno=1026)
           8	BINARY_SUBSCR(arg=None, lineno=1026)
          12	LOAD_FAST(arg=0, lineno=1026)
          14	LOAD_CONST(arg=2, lineno=1026)
          16	BINARY_SUBSCR(arg=None, lineno=1026)
          20	COMPARE_OP(arg=132, lineno=1026)
          24	LOAD_FAST(arg=0, lineno=1026)
          26	LOAD_CONST(arg=1, lineno=1026)
          28	BINARY_SUBSCR(arg=None, lineno=1026)
          32	LOAD_FAST(arg=0, lineno=1026)
          34	LOAD_CONST(arg=3, lineno=1026)
          36	BINARY_SUBSCR(arg=None, lineno=1026)
          40	COMPARE_OP(arg=172, lineno=1026)
          44	BINARY_OP(arg=1, lineno=1026)
          48	RETURN_VALUE(arg=None, lineno=1026)
2025-09-26 17:44:21,688 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 17:44:21,688 - DEBUG - stack: []
2025-09-26 17:44:21,688 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 17:44:21,688 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1023)
2025-09-26 17:44:21,688 - DEBUG - stack []
2025-09-26 17:44:21,688 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1023)
2025-09-26 17:44:21,689 - DEBUG - stack []
2025-09-26 17:44:21,689 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)
2025-09-26 17:44:21,689 - DEBUG - stack []
2025-09-26 17:44:21,689 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)
2025-09-26 17:44:21,689 - DEBUG - stack ['$x4.0']
2025-09-26 17:44:21,689 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-09-26 17:44:21,690 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-09-26 17:44:21,690 - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)
2025-09-26 17:44:21,690 - DEBUG - stack ['$8binary_subscr.2']
2025-09-26 17:44:21,690 - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)
2025-09-26 17:44:21,690 - DEBUG - stack ['$8binary_subscr.2', '$x12.3']
2025-09-26 17:44:21,690 - DEBUG - dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-09-26 17:44:21,690 - DEBUG - stack ['$8binary_subscr.2', '$x12.3', '$const14.4.2']
2025-09-26 17:44:21,691 - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=132, lineno=1026)
2025-09-26 17:44:21,691 - DEBUG - stack ['$8binary_subscr.2', '$16binary_subscr.5']
2025-09-26 17:44:21,691 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)
2025-09-26 17:44:21,691 - DEBUG - stack ['$20compare_op.6']
2025-09-26 17:44:21,691 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)
2025-09-26 17:44:21,691 - DEBUG - stack ['$20compare_op.6', '$x24.7']
2025-09-26 17:44:21,691 - DEBUG - dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-09-26 17:44:21,691 - DEBUG - stack ['$20compare_op.6', '$x24.7', '$const26.8.1']
2025-09-26 17:44:21,692 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)
2025-09-26 17:44:21,692 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9']
2025-09-26 17:44:21,692 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)
2025-09-26 17:44:21,692 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']
2025-09-26 17:44:21,692 - DEBUG - dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-09-26 17:44:21,692 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11.3']
2025-09-26 17:44:21,692 - DEBUG - dispatch pc=40, inst=COMPARE_OP(arg=172, lineno=1026)
2025-09-26 17:44:21,692 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']
2025-09-26 17:44:21,692 - DEBUG - dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)
2025-09-26 17:44:21,693 - DEBUG - stack ['$20compare_op.6', '$40compare_op.13']
2025-09-26 17:44:21,693 - DEBUG - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)
2025-09-26 17:44:21,693 - DEBUG - stack ['$binop_and_44.14']
2025-09-26 17:44:21,693 - DEBUG - end state. edges=[]
2025-09-26 17:44:21,693 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 17:44:21,693 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-09-26 17:44:21,693 - DEBUG - defmap: {}
2025-09-26 17:44:21,693 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-09-26 17:44:21,694 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-09-26 17:44:21,694 - DEBUG - keep phismap: {}
2025-09-26 17:44:21,694 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-09-26 17:44:21,694 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 17:44:21,694 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4.2'}), (16, {'index': '$const14.4.2', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8.1'}), (28, {'index': '$const26.8.1', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11.3'}), (36, {'index': '$const34.11.3', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 17:44:21,695 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const14.4.2 = const(int, -1)            ['$const14.4.2']
    $16binary_subscr.5 = getitem(value=x, index=$const14.4.2, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4.2', 'x']
    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']
    $const26.8.1 = const(int, 0)             ['$const26.8.1']
    $28binary_subscr.9 = getitem(value=x, index=$const26.8.1, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8.1', 'x']
    $const34.11.3 = const(int, 1)            ['$const34.11.3']
    $36binary_subscr.12 = getitem(value=x, index=$const34.11.3, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11.3', 'x']
    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']
    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']
    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']
    return $48return_value.15                ['$48return_value.15']

2025-09-26 17:44:21,696 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1029)
           2	RESUME(arg=0, lineno=1029)
           4	LOAD_FAST(arg=0, lineno=1032)
           6	LOAD_CONST(arg=1, lineno=1032)
           8	BINARY_SUBSCR(arg=None, lineno=1032)
          12	LOAD_FAST(arg=0, lineno=1032)
          14	LOAD_CONST(arg=2, lineno=1032)
          16	BINARY_SUBSCR(arg=None, lineno=1032)
          20	COMPARE_OP(arg=2, lineno=1032)
          24	LOAD_FAST(arg=0, lineno=1032)
          26	LOAD_CONST(arg=1, lineno=1032)
          28	BINARY_SUBSCR(arg=None, lineno=1032)
          32	LOAD_FAST(arg=0, lineno=1032)
          34	LOAD_CONST(arg=3, lineno=1032)
          36	BINARY_SUBSCR(arg=None, lineno=1032)
          40	COMPARE_OP(arg=42, lineno=1032)
          44	BINARY_OP(arg=1, lineno=1032)
          48	RETURN_VALUE(arg=None, lineno=1032)
2025-09-26 17:44:21,697 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-09-26 17:44:21,697 - DEBUG - stack: []
2025-09-26 17:44:21,697 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-09-26 17:44:21,697 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1029)
2025-09-26 17:44:21,697 - DEBUG - stack []
2025-09-26 17:44:21,697 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1029)
2025-09-26 17:44:21,697 - DEBUG - stack []
2025-09-26 17:44:21,697 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)
2025-09-26 17:44:21,697 - DEBUG - stack []
2025-09-26 17:44:21,697 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)
2025-09-26 17:44:21,698 - DEBUG - stack ['$x4.0']
2025-09-26 17:44:21,698 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-09-26 17:44:21,698 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-09-26 17:44:21,698 - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)
2025-09-26 17:44:21,698 - DEBUG - stack ['$8binary_subscr.2']
2025-09-26 17:44:21,698 - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)
2025-09-26 17:44:21,698 - DEBUG - stack ['$8binary_subscr.2', '$x12.3']
2025-09-26 17:44:21,698 - DEBUG - dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-09-26 17:44:21,698 - DEBUG - stack ['$8binary_subscr.2', '$x12.3', '$const14.4.2']
2025-09-26 17:44:21,698 - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)
2025-09-26 17:44:21,699 - DEBUG - stack ['$8binary_subscr.2', '$16binary_subscr.5']
2025-09-26 17:44:21,699 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)
2025-09-26 17:44:21,699 - DEBUG - stack ['$20compare_op.6']
2025-09-26 17:44:21,699 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)
2025-09-26 17:44:21,699 - DEBUG - stack ['$20compare_op.6', '$x24.7']
2025-09-26 17:44:21,699 - DEBUG - dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-09-26 17:44:21,699 - DEBUG - stack ['$20compare_op.6', '$x24.7', '$const26.8.1']
2025-09-26 17:44:21,699 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)
2025-09-26 17:44:21,699 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9']
2025-09-26 17:44:21,700 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)
2025-09-26 17:44:21,700 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']
2025-09-26 17:44:21,700 - DEBUG - dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-09-26 17:44:21,700 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11.3']
2025-09-26 17:44:21,700 - DEBUG - dispatch pc=40, inst=COMPARE_OP(arg=42, lineno=1032)
2025-09-26 17:44:21,700 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']
2025-09-26 17:44:21,700 - DEBUG - dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)
2025-09-26 17:44:21,700 - DEBUG - stack ['$20compare_op.6', '$40compare_op.13']
2025-09-26 17:44:21,700 - DEBUG - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)
2025-09-26 17:44:21,701 - DEBUG - stack ['$binop_and_44.14']
2025-09-26 17:44:21,701 - DEBUG - end state. edges=[]
2025-09-26 17:44:21,701 - DEBUG - -------------------------Prune PHIs-------------------------
2025-09-26 17:44:21,701 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-09-26 17:44:21,701 - DEBUG - defmap: {}
2025-09-26 17:44:21,701 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-09-26 17:44:21,701 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-09-26 17:44:21,701 - DEBUG - keep phismap: {}
2025-09-26 17:44:21,701 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-09-26 17:44:21,702 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-09-26 17:44:21,702 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4.2'}), (16, {'index': '$const14.4.2', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8.1'}), (28, {'index': '$const26.8.1', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11.3'}), (36, {'index': '$const34.11.3', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-09-26 17:44:21,702 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const14.4.2 = const(int, -1)            ['$const14.4.2']
    $16binary_subscr.5 = getitem(value=x, index=$const14.4.2, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4.2', 'x']
    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']
    $const26.8.1 = const(int, 0)             ['$const26.8.1']
    $28binary_subscr.9 = getitem(value=x, index=$const26.8.1, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8.1', 'x']
    $const34.11.3 = const(int, 1)            ['$const34.11.3']
    $36binary_subscr.12 = getitem(value=x, index=$const34.11.3, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11.3', 'x']
    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']
    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']
    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']
    return $48return_value.15                ['$48return_value.15']

2025-09-26 17:44:22,024 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 4, 'overlap': 0.4, 'jobs': 4}
2025-09-26 17:44:22,024 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла (после предочистки): examples\children-voice.mp3
2025-09-26 17:44:22,024 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 17:44:23,515 - DEBUG - Loading FFmpeg6
2025-09-26 17:44:23,517 - DEBUG - Failed to load FFmpeg6 extension.
Traceback (most recent call last):
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
    ~~~~~~~~~^^^^^
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torch\_ops.py", line 1478, in load_library
    ctypes.CDLL(path)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\y.stepanov\AppData\Local\Programs\Python\Python313\Lib\ctypes\__init__.py", line 390, in __init__
    self._handle = _dlopen(self._name, mode)
                   ~~~~~~~^^^^^^^^^^^^^^^^^^
FileNotFoundError: Could not find module 'C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\lib\libtorio_ffmpeg6.pyd' (or one of its dependencies). Try using the full path with constructor syntax.
2025-09-26 17:44:23,519 - DEBUG - Loading FFmpeg5
2025-09-26 17:44:23,520 - DEBUG - Failed to load FFmpeg5 extension.
Traceback (most recent call last):
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
    ~~~~~~~~~^^^^^
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torch\_ops.py", line 1478, in load_library
    ctypes.CDLL(path)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\y.stepanov\AppData\Local\Programs\Python\Python313\Lib\ctypes\__init__.py", line 390, in __init__
    self._handle = _dlopen(self._name, mode)
                   ~~~~~~~^^^^^^^^^^^^^^^^^^
FileNotFoundError: Could not find module 'C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\lib\libtorio_ffmpeg5.pyd' (or one of its dependencies). Try using the full path with constructor syntax.
2025-09-26 17:44:23,521 - DEBUG - Loading FFmpeg4
2025-09-26 17:44:23,522 - DEBUG - Failed to load FFmpeg4 extension.
Traceback (most recent call last):
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
    ~~~~~~~~~^^^^^
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torch\_ops.py", line 1478, in load_library
    ctypes.CDLL(path)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\y.stepanov\AppData\Local\Programs\Python\Python313\Lib\ctypes\__init__.py", line 390, in __init__
    self._handle = _dlopen(self._name, mode)
                   ~~~~~~~^^^^^^^^^^^^^^^^^^
FileNotFoundError: Could not find module 'C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\lib\libtorio_ffmpeg4.pyd' (or one of its dependencies). Try using the full path with constructor syntax.
2025-09-26 17:44:23,523 - DEBUG - Loading FFmpeg
2025-09-26 17:44:23,523 - DEBUG - Failed to load FFmpeg extension.
Traceback (most recent call last):
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "C:\Users\y.stepanov\PycharmProjects\ai_transcribe\venv\Lib\site-packages\torio\_extension\utils.py", line 106, in _find_versionsed_ffmpeg_extension
    raise RuntimeError(f"FFmpeg{version} extension is not available.")
RuntimeError: FFmpeg extension is not available.
2025-09-26 17:44:23,599 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 17:44:23,599 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\children-voice.mp3
2025-09-26 17:44:24,202 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 17:44:24,202 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\children-voice.mp3
2025-09-26 17:44:24,258 - DEBUG - УЛУЧШЕНИЕ АУДИО: Создан файл с выделенным вокалом: examples\children-voice_vocals.wav
2025-09-26 17:44:24,266 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 17:44:24,267 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 17:44:24,801 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\children-voice_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-f672e405-e764-4490-9606-38010f6c1b41', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:44:24,898 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:44:24,898 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-09-26 17:44:24,967 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002D7746882F0>
2025-09-26 17:44:24,967 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002D773FB9E20> server_hostname='api.openai.com' timeout=5.0
2025-09-26 17:44:25,284 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002D774386990>
2025-09-26 17:44:25,284 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:44:25,285 - DEBUG - send_request_headers.complete
2025-09-26 17:44:25,285 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:44:25,287 - DEBUG - send_request_body.complete
2025-09-26 17:44:25,287 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:44:26,407 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:44:26 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'484'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'516'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_2f4bb793e47947e3befb3ee7637fd32e'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=dYJ2_RyjNlIM1vyYdT4n.J3GQLPl_1xipeJfwk.mpj0-1758897866-1.0.1.1-DeSueW2G5S2ezFHji0tBAlFbQkTMOhlBNEGSW7YDTOwfD3Sl8lRUOQjUDu6e5WoyvCh4NzVzaA.RN3tMFOtPbeL9s_5HchjYzjkG46lUdRo; path=/; expires=Fri, 26-Sep-25 15:14:26 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=YFI6Vmh9fJaNauflTFA16ptjmBNK3cQo1phCJkvjFUQ-1758897866379-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98538a0a6eaa8d65-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:44:26,409 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:44:26,409 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:44:26,409 - DEBUG - receive_response_body.complete
2025-09-26 17:44:26,409 - DEBUG - response_closed.started
2025-09-26 17:44:26,410 - DEBUG - response_closed.complete
2025-09-26 17:44:26,410 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers([('date', 'Fri, 26 Sep 2025 14:44:26 GMT'), ('content-type', 'text/plain; charset=utf-8'), ('content-length', '1'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'yurisun'), ('openai-processing-ms', '484'), ('openai-project', 'proj_Llb21yVk5b2whxj0ZTkY3iYI'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '516'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-reset-requests', '120ms'), ('x-request-id', 'req_2f4bb793e47947e3befb3ee7637fd32e'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=dYJ2_RyjNlIM1vyYdT4n.J3GQLPl_1xipeJfwk.mpj0-1758897866-1.0.1.1-DeSueW2G5S2ezFHji0tBAlFbQkTMOhlBNEGSW7YDTOwfD3Sl8lRUOQjUDu6e5WoyvCh4NzVzaA.RN3tMFOtPbeL9s_5HchjYzjkG46lUdRo; path=/; expires=Fri, 26-Sep-25 15:14:26 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=YFI6Vmh9fJaNauflTFA16ptjmBNK3cQo1phCJkvjFUQ-1758897866379-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '98538a0a6eaa8d65-HEL'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-09-26 17:44:26,410 - DEBUG - request_id: req_2f4bb793e47947e3befb3ee7637fd32e
2025-09-26 17:44:26,410 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 17:44:26,411 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:44:26,411 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 17:44:26,411 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: '' (длина: 0)
2025-09-26 17:44:26,411 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 2 - авто-язык
2025-09-26 17:44:26,412 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\children-voice_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-49ef0b8c-73f6-4198-a0ff-665d943438ea', 'json_data': {'model': 'gpt-4o-transcribe', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:44:26,413 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:44:26,413 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:44:26,414 - DEBUG - send_request_headers.complete
2025-09-26 17:44:26,414 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:44:26,415 - DEBUG - send_request_body.complete
2025-09-26 17:44:26,415 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:44:27,366 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:44:27 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'492'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'516'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_250aaf7681d1489ba4dbe9e1a5b1551e'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98538a116f408d65-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:44:27,366 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:44:27,366 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:44:27,367 - DEBUG - receive_response_body.complete
2025-09-26 17:44:27,367 - DEBUG - response_closed.started
2025-09-26 17:44:27,367 - DEBUG - response_closed.complete
2025-09-26 17:44:27,367 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:44:27 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '492', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '516', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_250aaf7681d1489ba4dbe9e1a5b1551e', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98538a116f408d65-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:44:27,368 - DEBUG - request_id: req_250aaf7681d1489ba4dbe9e1a5b1551e
2025-09-26 17:44:27,368 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 17:44:27,368 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:44:27,369 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 17:44:27,369 - DEBUG - ТРАНСКРИПЦИЯ: Результат 2: '' (длина: 0)
2025-09-26 17:44:27,587 - DEBUG - ТРАНСКРИПЦИЯ: Музыкальные признаки не обнаружены — пропускаем музыкальный промпт
2025-09-26 17:44:27,587 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 17:44:27,587 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:44:27,587 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 17:44:27,594 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\engine-on-the-spot.mp3
2025-09-26 17:44:27,623 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 4, 'overlap': 0.4, 'jobs': 4}
2025-09-26 17:44:27,623 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла (после предочистки): examples\engine-on-the-spot.mp3
2025-09-26 17:44:27,623 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 17:44:27,623 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 17:44:27,623 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\engine-on-the-spot.mp3
2025-09-26 17:44:28,122 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 17:44:28,122 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\engine-on-the-spot.mp3
2025-09-26 17:44:28,361 - DEBUG - УЛУЧШЕНИЕ АУДИО: Создан файл с выделенным вокалом: examples\engine-on-the-spot_vocals.wav
2025-09-26 17:44:28,371 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 17:44:28,372 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 17:44:28,380 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\engine-on-the-spot_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-eeaab643-a9e8-45d6-9b6d-511e19f9c6fc', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:44:28,381 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:44:28,382 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:44:28,382 - DEBUG - send_request_headers.complete
2025-09-26 17:44:28,382 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:44:28,387 - DEBUG - send_request_body.complete
2025-09-26 17:44:28,387 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:44:30,935 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:44:30 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'644'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'656'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_fa9acf9997164043a6d25a966bac0320'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98538a1dbf098d65-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:44:30,935 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:44:30,936 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:44:30,936 - DEBUG - receive_response_body.complete
2025-09-26 17:44:30,936 - DEBUG - response_closed.started
2025-09-26 17:44:30,936 - DEBUG - response_closed.complete
2025-09-26 17:44:30,937 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:44:30 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '644', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '656', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_fa9acf9997164043a6d25a966bac0320', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98538a1dbf098d65-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:44:30,937 - DEBUG - request_id: req_fa9acf9997164043a6d25a966bac0320
2025-09-26 17:44:30,937 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 17:44:30,938 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:44:30,938 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 17:44:30,938 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: '' (длина: 0)
2025-09-26 17:44:30,938 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 2 - авто-язык
2025-09-26 17:44:30,939 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\engine-on-the-spot_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-cd393b4a-981b-49b8-b79e-9f2d7f657f73', 'json_data': {'model': 'gpt-4o-transcribe', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:44:30,940 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:44:30,940 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:44:30,940 - DEBUG - send_request_headers.complete
2025-09-26 17:44:30,940 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:44:30,944 - DEBUG - send_request_body.complete
2025-09-26 17:44:30,944 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:44:33,144 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:44:33 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'440'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'458'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_98025c81709b4e91ba4453bb1b2b69b1'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98538a2db8848d65-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:44:33,144 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:44:33,144 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:44:33,145 - DEBUG - receive_response_body.complete
2025-09-26 17:44:33,145 - DEBUG - response_closed.started
2025-09-26 17:44:33,145 - DEBUG - response_closed.complete
2025-09-26 17:44:33,145 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:44:33 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '440', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '458', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_98025c81709b4e91ba4453bb1b2b69b1', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98538a2db8848d65-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:44:33,146 - DEBUG - request_id: req_98025c81709b4e91ba4453bb1b2b69b1
2025-09-26 17:44:33,146 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 17:44:33,146 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:44:33,146 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 17:44:33,146 - DEBUG - ТРАНСКРИПЦИЯ: Результат 2: '' (длина: 0)
2025-09-26 17:44:33,199 - DEBUG - ТРАНСКРИПЦИЯ: Музыкальные признаки не обнаружены — пропускаем музыкальный промпт
2025-09-26 17:44:33,199 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 17:44:33,199 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:44:33,199 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 17:44:33,253 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\Incode - Know.mp3
2025-09-26 17:44:33,307 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 4, 'overlap': 0.4, 'jobs': 4}
2025-09-26 17:44:33,307 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла (после предочистки): examples\Incode - Know.mp3
2025-09-26 17:44:33,307 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 17:44:33,307 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 17:44:33,307 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\Incode - Know.mp3
2025-09-26 17:44:33,873 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 17:44:33,873 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\Incode - Know.mp3
2025-09-26 17:44:34,245 - DEBUG - УЛУЧШЕНИЕ АУДИО: Создан файл с выделенным вокалом: examples\Incode - Know_vocals.wav
2025-09-26 17:44:34,255 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 17:44:34,256 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 17:44:34,263 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\Incode - Know_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-22e9fa5b-97b3-44d0-9761-d9d9d33f2a61', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:44:34,264 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:44:34,264 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:44:34,265 - DEBUG - send_request_headers.complete
2025-09-26 17:44:34,265 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:44:34,271 - DEBUG - send_request_body.complete
2025-09-26 17:44:34,271 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:44:37,592 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:44:37 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'586'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'599'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_e8fa531585fa45c7b2d42c674d29fd5d'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98538a42881f8d65-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:44:37,593 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:44:37,593 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:44:37,593 - DEBUG - receive_response_body.complete
2025-09-26 17:44:37,593 - DEBUG - response_closed.started
2025-09-26 17:44:37,594 - DEBUG - response_closed.complete
2025-09-26 17:44:37,594 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:44:37 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '586', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '599', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_e8fa531585fa45c7b2d42c674d29fd5d', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98538a42881f8d65-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:44:37,594 - DEBUG - request_id: req_e8fa531585fa45c7b2d42c674d29fd5d
2025-09-26 17:44:37,595 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 17:44:37,595 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:44:37,595 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 17:44:37,595 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: '' (длина: 0)
2025-09-26 17:44:37,596 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 2 - авто-язык
2025-09-26 17:44:37,596 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\Incode - Know_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-c760eadd-3646-42a6-8404-97a01f13b465', 'json_data': {'model': 'gpt-4o-transcribe', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:44:37,597 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:44:37,597 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:44:37,598 - DEBUG - send_request_headers.complete
2025-09-26 17:44:37,598 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:44:37,603 - DEBUG - send_request_body.complete
2025-09-26 17:44:37,603 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:44:41,082 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:44:41 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'742'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'759'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_dbc4864b6bfa4105909f2d0fc96157bb'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98538a5759f08d65-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:44:41,082 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:44:41,082 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:44:41,083 - DEBUG - receive_response_body.complete
2025-09-26 17:44:41,083 - DEBUG - response_closed.started
2025-09-26 17:44:41,083 - DEBUG - response_closed.complete
2025-09-26 17:44:41,083 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:44:41 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '742', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '759', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_dbc4864b6bfa4105909f2d0fc96157bb', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98538a5759f08d65-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:44:41,084 - DEBUG - request_id: req_dbc4864b6bfa4105909f2d0fc96157bb
2025-09-26 17:44:41,084 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 17:44:41,084 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:44:41,085 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 17:44:41,085 - DEBUG - ТРАНСКРИПЦИЯ: Результат 2: '' (длина: 0)
2025-09-26 17:44:41,172 - DEBUG - ТРАНСКРИПЦИЯ: Музыкальные признаки не обнаружены — пропускаем музыкальный промпт
2025-09-26 17:44:41,173 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 17:44:41,173 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:44:41,173 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 17:44:41,260 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\test_noise.wav
2025-09-26 17:44:41,261 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 4, 'overlap': 0.4, 'jobs': 4}
2025-09-26 17:44:41,261 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла (после предочистки): examples\test_noise.wav
2025-09-26 17:44:41,261 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 17:44:41,261 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 17:44:41,261 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\test_noise.wav
2025-09-26 17:44:41,800 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 17:44:41,800 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\test_noise.wav
2025-09-26 17:44:41,827 - DEBUG - УЛУЧШЕНИЕ АУДИО: Создан файл с выделенным вокалом: examples\test_noise_vocals.wav
2025-09-26 17:44:41,835 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 17:44:41,835 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 17:44:41,844 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\test_noise_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-f781053a-4e16-45c9-8317-eda59dd1b7a9', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:44:41,845 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:44:41,845 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:44:41,846 - DEBUG - send_request_headers.complete
2025-09-26 17:44:41,846 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:44:41,847 - DEBUG - send_request_body.complete
2025-09-26 17:44:41,848 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:44:42,741 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:44:42 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'7'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'462'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'472'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_5f04c10d410d47faa650510d1f145f80'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98538a71efa48d65-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:44:42,742 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:44:42,742 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:44:42,742 - DEBUG - receive_response_body.complete
2025-09-26 17:44:42,743 - DEBUG - response_closed.started
2025-09-26 17:44:42,743 - DEBUG - response_closed.complete
2025-09-26 17:44:42,743 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:44:42 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '7', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '462', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '472', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_5f04c10d410d47faa650510d1f145f80', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98538a71efa48d65-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:44:42,743 - DEBUG - request_id: req_5f04c10d410d47faa650510d1f145f80
2025-09-26 17:44:42,744 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Шшш'
2025-09-26 17:44:42,744 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:44:42,745 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Шшш'
2025-09-26 17:44:42,745 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: 'Шшш' (длина: 3)
2025-09-26 17:44:42,745 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 2 - авто-язык
2025-09-26 17:44:42,745 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\test_noise_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-d002c05c-03a7-4634-9aec-526d6efb54cf', 'json_data': {'model': 'gpt-4o-transcribe', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:44:42,746 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:44:42,746 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:44:42,746 - DEBUG - send_request_headers.complete
2025-09-26 17:44:42,747 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:44:42,748 - DEBUG - send_request_body.complete
2025-09-26 17:44:42,748 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:44:43,501 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:44:43 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Content-Length', b'1'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'384'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'396'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_bfe0cba3f0414dfcbb82197836161f43'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98538a778e3a8d65-HEL'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:44:43,502 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:44:43,502 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:44:43,502 - DEBUG - receive_response_body.complete
2025-09-26 17:44:43,502 - DEBUG - response_closed.started
2025-09-26 17:44:43,503 - DEBUG - response_closed.complete
2025-09-26 17:44:43,503 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:44:43 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '1', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '384', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '396', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_bfe0cba3f0414dfcbb82197836161f43', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98538a778e3a8d65-HEL', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:44:43,503 - DEBUG - request_id: req_bfe0cba3f0414dfcbb82197836161f43
2025-09-26 17:44:43,504 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: ''
2025-09-26 17:44:43,504 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:44:43,504 - DEBUG - ФИЛЬТРАЦИЯ: Пустой результат или промпт
2025-09-26 17:44:43,504 - DEBUG - ТРАНСКРИПЦИЯ: Результат 2: '' (длина: 0)
2025-09-26 17:44:43,508 - DEBUG - ТРАНСКРИПЦИЯ: Музыкальные признаки не обнаружены — пропускаем музыкальный промпт
2025-09-26 17:44:43,508 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Шшш'
2025-09-26 17:44:43,508 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:44:43,508 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Шшш'
2025-09-26 17:44:43,511 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\test_speech.mp3
2025-09-26 17:44:43,513 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 4, 'overlap': 0.4, 'jobs': 4}
2025-09-26 17:44:43,513 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла (после предочистки): examples\test_speech.mp3
2025-09-26 17:44:43,513 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 17:44:43,513 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 17:44:43,513 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\test_speech.mp3
2025-09-26 17:44:44,011 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 17:44:44,011 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\test_speech.mp3
2025-09-26 17:44:44,033 - DEBUG - УЛУЧШЕНИЕ АУДИО: Создан файл с выделенным вокалом: examples\test_speech_vocals.wav
2025-09-26 17:44:44,039 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 17:44:44,040 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 17:44:44,047 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\test_speech_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-ee3a41ea-be4d-40d9-a1c4-f2d9af994fb1', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:44:44,048 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:44:44,048 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:44:44,049 - DEBUG - send_request_headers.complete
2025-09-26 17:44:44,049 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:44:44,050 - DEBUG - send_request_body.complete
2025-09-26 17:44:44,050 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:44:44,751 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:44:44 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'336'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'347'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_6d6dcb41a19643ad86e0a85030d44fce'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98538a7faf368d65-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:44:44,752 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:44:44,752 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:44:44,753 - DEBUG - receive_response_body.complete
2025-09-26 17:44:44,753 - DEBUG - response_closed.started
2025-09-26 17:44:44,753 - DEBUG - response_closed.complete
2025-09-26 17:44:44,753 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:44:44 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '336', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '347', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_6d6dcb41a19643ad86e0a85030d44fce', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98538a7faf368d65-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:44:44,754 - DEBUG - request_id: req_6d6dcb41a19643ad86e0a85030d44fce
2025-09-26 17:44:44,754 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Привет, наконец-то это случилось.'
2025-09-26 17:44:44,754 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:44:44,755 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Привет, наконец-то это случилось.'
2025-09-26 17:44:44,755 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: 'Привет, наконец-то это случилось.' (длина: 33)
2025-09-26 17:44:44,759 - DEBUG - ТРАНСКРИПЦИЯ: Музыкальные признаки не обнаружены — пропускаем музыкальный промпт
2025-09-26 17:44:44,759 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Привет, наконец-то это случилось.'
2025-09-26 17:44:44,760 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:44:44,760 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Привет, наконец-то это случилось.'
2025-09-26 17:44:44,763 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-b964b94a-6e22-419c-a1ab-4ebf677e4181', 'json_data': {'messages': [{'role': 'system', 'content': 'Ты — специализированная система для анализа аудиозаписей.\nТвоя единственная задача — классифицировать входной аудиофайл в одну из категорий: музыка, речь, шум.\n\nВАЖНО: Ты анализируешь РЕЗУЛЬТАТ ТРАНСКРИПЦИИ аудиофайла, а не сам аудиофайл. Это означает, что:\n- Если в аудио была музыка с вокалом, то в транскрипции будут слова песни\n- Если в аудио была речь, то в транскрипции будет связный текст\n- Если в аудио был шум, то в транскрипции будет мало слов или галлюцинации\n\nКатегории классификации:\n\nМузыка (music):\n- Это песня, музыкальная композиция с вокалом\n- Характерные признаки в транскрипции:\n  * Повторяющиеся фразы или слова (припев)\n  * Рифмы и ритмические паттерны\n  * Музыкальные звуки: "ла-ла-ла", "на-на-на", "о-о-о", "а-а-а"\n  * Эмоциональные восклицания: "Ауф!", "Ой!", "Ах!"\n  * Короткие фразы без логической связи\n  * Слова, которые звучат как песня, а не как обычная речь\n  * Повторяющиеся слова или фразы (припев песни)\n  * Ритмические паттерны в тексте\n\nРечь (speech):\n- Это обычная речь, разговор, диалог\n- Характерные признаки в транскрипции:\n  * Связные предложения с логической структурой\n  * Обычные слова и фразы\n  * Знаки препинания: точки, запятые, восклицательные знаки\n  * Логическая последовательность мыслей\n  * Отсутствие повторяющихся музыкальных паттернов\n  * Естественная речь без ритма\n\nШум (noise):\n- Это неречевые звуки, шум, техника, плач ребенка\n- Характерные признаки в транскрипции:\n  * Очень короткие или бессмысленные фрагменты\n  * Отсутствие связной речи\n  * Случайные слова или звуки\n  * Описания звуков: "[Music]", "[звук]", "[шум]"\n  * Повторяющиеся гласные: "ааа", "ууу", "ооо" (детский плач)\n  * Повторяющиеся согласные: "шшш", "щщщ", "ссс", "ззз", "hhh"\n  * Бессмысленные фразы: "Всем новичкам, всем новичкам"\n  * Короткие бессвязные слова\n\nПримеры типовых шумов (не музыка и не речь):\n- Городской фон: движение транспорта, гул улицы, толпа, шаги\n- Звуки машин: двигатель, сигнал, шелест шин, торможение\n- Вода: дождь, шум волн, водопад, шипение воды\n- Ветер: завывание, свист ветра, порывы\n- Бытовые/механические: кондиционер, вентилятор, скрип дверей, стук, аплодисменты\n\nПравила классификации:\n1. Если транскрипция содержит связную речь с логической структурой → speech\n2. Если транскрипция содержит повторяющиеся фразы, рифмы, музыкальные звуки → music\n3. Если транскрипция короткая, бессвязная или содержит описания звуков → noise\n4. При сомнениях между music и speech: если есть повторения или музыкальные звуки → music\n5. Детский плач (ааа, ууу, ооо) → noise\n6. Белый шум с бессмысленными словами → noise\n\nВАЖНЫЕ ПРИМЕРЫ:\n- "Скажи мне, не говори мне, что ты гонишь" → music (песня с повторениями)\n- "Привет, как дела?" → speech (обычная речь)\n- "Ааааааа" → noise (детский плач)\n- "Всем новичкам, всем новичкам" → noise (белый шум)\n- "Find me, find me, You can find" → music (песня с припевом)\n\nФормат ответа:\nОтвечай только в формате JSON, без лишнего текста:\n{\n  "classification": "music | speech | noise",\n  "confidence": 0.0-1.0,\n  "reasoning": "Краткое объяснение выбора: какие признаки были решающими"\n}\n\nОграничения:\n- Не добавляй ничего, кроме JSON\n- Не предлагай альтернативных категорий\n- Всегда возвращай одно значение в поле "classification"\n- Уровень уверенности (confidence) должен отражать баланс признаков:\n  * 0.9–1.0 → очень высокая уверенность\n  * 0.6–0.89 → умеренная уверенность\n  * <0.6 → низкая уверенность, признаки неоднозначны'}, {'role': 'user', 'content': 'Проанализируй следующий транскрипт аудио и классифицируй его:\n\nПривет, наконец-то это случилось.'}], 'model': 'gpt-4o-mini', 'max_tokens': 200, 'temperature': 0.1}}
2025-09-26 17:44:44,765 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-26 17:44:44,765 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:44:44,766 - DEBUG - send_request_headers.complete
2025-09-26 17:44:44,766 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:44:44,766 - DEBUG - send_request_body.complete
2025-09-26 17:44:44,766 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:44:46,964 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:44:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1647'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1895'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'198504'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'448ms'), (b'x-request-id', b'req_55cc9bc46f504dfbb71b144b4056a1e7'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98538a842c758d65-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:44:46,964 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 17:44:46,965 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:44:46,981 - DEBUG - receive_response_body.complete
2025-09-26 17:44:46,981 - DEBUG - response_closed.started
2025-09-26 17:44:46,981 - DEBUG - response_closed.complete
2025-09-26 17:44:46,981 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:44:46 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1647', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1895', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '198504', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '448ms', 'x-request-id': 'req_55cc9bc46f504dfbb71b144b4056a1e7', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98538a842c758d65-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:44:46,982 - DEBUG - request_id: req_55cc9bc46f504dfbb71b144b4056a1e7
2025-09-26 17:44:46,990 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\ЛЮБОВЬ.mp3
2025-09-26 17:44:47,102 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 4, 'overlap': 0.4, 'jobs': 4}
2025-09-26 17:44:47,103 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла (после предочистки): examples\ЛЮБОВЬ.mp3
2025-09-26 17:44:47,103 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 17:44:47,103 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 17:44:47,103 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\ЛЮБОВЬ.mp3
2025-09-26 17:44:47,712 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 17:44:47,712 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\ЛЮБОВЬ.mp3
2025-09-26 17:44:48,495 - DEBUG - УЛУЧШЕНИЕ АУДИО: Создан файл с выделенным вокалом: examples\ЛЮБОВЬ_vocals.wav
2025-09-26 17:44:48,513 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 17:44:48,513 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 17:44:48,520 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\ЛЮБОВЬ_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-d7ad6e84-96a3-48e0-9888-ea409da59403', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:44:48,521 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:44:48,522 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:44:48,522 - DEBUG - send_request_headers.complete
2025-09-26 17:44:48,522 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:44:48,534 - DEBUG - send_request_body.complete
2025-09-26 17:44:48,534 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:44:55,933 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:44:55 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1589'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1604'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_d29e44590ac34ba4824ed86bfa3f6b58'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98538a9b9ff68d65-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:44:55,934 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:44:55,934 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:44:55,934 - DEBUG - receive_response_body.complete
2025-09-26 17:44:55,934 - DEBUG - response_closed.started
2025-09-26 17:44:55,935 - DEBUG - response_closed.complete
2025-09-26 17:44:55,935 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:44:55 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1589', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1604', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_d29e44590ac34ba4824ed86bfa3f6b58', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98538a9b9ff68d65-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:44:55,935 - DEBUG - request_id: req_d29e44590ac34ba4824ed86bfa3f6b58
2025-09-26 17:44:55,936 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Мы снова играем с тобой
В игру под названием любовь
Мы снова играем с тобой
В игру под названием любовь
Мы снова играем с тобой
В игру под названием любовь
Мы снова играем с тобой'
2025-09-26 17:44:55,936 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:44:55,936 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Мы снова играем с тобой
В игру под названием любовь
Мы снова играем с тобой
В игру под названием любовь
Мы снова играем с тобой
В игру под названием любовь
Мы снова играем с тобой'
2025-09-26 17:44:55,937 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: 'Мы снова играем с тобой
В игру под названием любовь
Мы снова играем с тобой
В игру под названием любовь
Мы снова играем с тобой
В игру под названием любовь
Мы снова играем с тобой' (длина: 179)
2025-09-26 17:44:55,937 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Мы снова играем с тобой
В игру под названием любовь
Мы снова играем с тобой
В игру под названием любовь
Мы снова играем с тобой
В игру под названием любовь
Мы снова играем с тобой'
2025-09-26 17:44:55,937 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:44:55,938 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Мы снова играем с тобой
В игру под названием любовь
Мы снова играем с тобой
В игру под названием любовь
Мы снова играем с тобой
В игру под названием любовь
Мы снова играем с тобой'
2025-09-26 17:44:55,939 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ab6a0864-5c7b-479a-98e6-dbcd26cd4225', 'json_data': {'messages': [{'role': 'system', 'content': 'Ты — специализированная система для анализа аудиозаписей.\nТвоя единственная задача — классифицировать входной аудиофайл в одну из категорий: музыка, речь, шум.\n\nВАЖНО: Ты анализируешь РЕЗУЛЬТАТ ТРАНСКРИПЦИИ аудиофайла, а не сам аудиофайл. Это означает, что:\n- Если в аудио была музыка с вокалом, то в транскрипции будут слова песни\n- Если в аудио была речь, то в транскрипции будет связный текст\n- Если в аудио был шум, то в транскрипции будет мало слов или галлюцинации\n\nКатегории классификации:\n\nМузыка (music):\n- Это песня, музыкальная композиция с вокалом\n- Характерные признаки в транскрипции:\n  * Повторяющиеся фразы или слова (припев)\n  * Рифмы и ритмические паттерны\n  * Музыкальные звуки: "ла-ла-ла", "на-на-на", "о-о-о", "а-а-а"\n  * Эмоциональные восклицания: "Ауф!", "Ой!", "Ах!"\n  * Короткие фразы без логической связи\n  * Слова, которые звучат как песня, а не как обычная речь\n  * Повторяющиеся слова или фразы (припев песни)\n  * Ритмические паттерны в тексте\n\nРечь (speech):\n- Это обычная речь, разговор, диалог\n- Характерные признаки в транскрипции:\n  * Связные предложения с логической структурой\n  * Обычные слова и фразы\n  * Знаки препинания: точки, запятые, восклицательные знаки\n  * Логическая последовательность мыслей\n  * Отсутствие повторяющихся музыкальных паттернов\n  * Естественная речь без ритма\n\nШум (noise):\n- Это неречевые звуки, шум, техника, плач ребенка\n- Характерные признаки в транскрипции:\n  * Очень короткие или бессмысленные фрагменты\n  * Отсутствие связной речи\n  * Случайные слова или звуки\n  * Описания звуков: "[Music]", "[звук]", "[шум]"\n  * Повторяющиеся гласные: "ааа", "ууу", "ооо" (детский плач)\n  * Повторяющиеся согласные: "шшш", "щщщ", "ссс", "ззз", "hhh"\n  * Бессмысленные фразы: "Всем новичкам, всем новичкам"\n  * Короткие бессвязные слова\n\nПримеры типовых шумов (не музыка и не речь):\n- Городской фон: движение транспорта, гул улицы, толпа, шаги\n- Звуки машин: двигатель, сигнал, шелест шин, торможение\n- Вода: дождь, шум волн, водопад, шипение воды\n- Ветер: завывание, свист ветра, порывы\n- Бытовые/механические: кондиционер, вентилятор, скрип дверей, стук, аплодисменты\n\nПравила классификации:\n1. Если транскрипция содержит связную речь с логической структурой → speech\n2. Если транскрипция содержит повторяющиеся фразы, рифмы, музыкальные звуки → music\n3. Если транскрипция короткая, бессвязная или содержит описания звуков → noise\n4. При сомнениях между music и speech: если есть повторения или музыкальные звуки → music\n5. Детский плач (ааа, ууу, ооо) → noise\n6. Белый шум с бессмысленными словами → noise\n\nВАЖНЫЕ ПРИМЕРЫ:\n- "Скажи мне, не говори мне, что ты гонишь" → music (песня с повторениями)\n- "Привет, как дела?" → speech (обычная речь)\n- "Ааааааа" → noise (детский плач)\n- "Всем новичкам, всем новичкам" → noise (белый шум)\n- "Find me, find me, You can find" → music (песня с припевом)\n\nФормат ответа:\nОтвечай только в формате JSON, без лишнего текста:\n{\n  "classification": "music | speech | noise",\n  "confidence": 0.0-1.0,\n  "reasoning": "Краткое объяснение выбора: какие признаки были решающими"\n}\n\nОграничения:\n- Не добавляй ничего, кроме JSON\n- Не предлагай альтернативных категорий\n- Всегда возвращай одно значение в поле "classification"\n- Уровень уверенности (confidence) должен отражать баланс признаков:\n  * 0.9–1.0 → очень высокая уверенность\n  * 0.6–0.89 → умеренная уверенность\n  * <0.6 → низкая уверенность, признаки неоднозначны'}, {'role': 'user', 'content': 'Проанализируй следующий транскрипт аудио и классифицируй его:\n\nМы снова играем с тобой\nВ игру под названием любовь\nМы снова играем с тобой\nВ игру под названием любовь\nМы снова играем с тобой\nВ игру под названием любовь\nМы снова играем с тобой'}], 'model': 'gpt-4o-mini', 'max_tokens': 200, 'temperature': 0.1}}
2025-09-26 17:44:55,940 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-26 17:44:55,941 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:44:55,941 - DEBUG - send_request_headers.complete
2025-09-26 17:44:55,941 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:44:55,941 - DEBUG - send_request_body.complete
2025-09-26 17:44:55,942 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:44:57,948 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:44:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1631'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1679'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'198438'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'468ms'), (b'x-request-id', b'req_ef1bf0f9ca164ae68faa63db3bf3c497'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98538ac9ff7f8d65-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:44:57,948 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 17:44:57,949 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:44:57,964 - DEBUG - receive_response_body.complete
2025-09-26 17:44:57,964 - DEBUG - response_closed.started
2025-09-26 17:44:57,964 - DEBUG - response_closed.complete
2025-09-26 17:44:57,964 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:44:57 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1631', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1679', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '198438', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '468ms', 'x-request-id': 'req_ef1bf0f9ca164ae68faa63db3bf3c497', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98538ac9ff7f8d65-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:44:57,965 - DEBUG - request_id: req_ef1bf0f9ca164ae68faa63db3bf3c497
2025-09-26 17:44:57,966 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\ПОЗВОНИ МНЕ.mp3
2025-09-26 17:44:58,020 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 4, 'overlap': 0.4, 'jobs': 4}
2025-09-26 17:44:58,020 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла (после предочистки): examples\ПОЗВОНИ МНЕ.mp3
2025-09-26 17:44:58,020 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 17:44:58,020 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 17:44:58,021 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\ПОЗВОНИ МНЕ.mp3
2025-09-26 17:44:58,581 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 17:44:58,581 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\ПОЗВОНИ МНЕ.mp3
2025-09-26 17:44:58,961 - DEBUG - УЛУЧШЕНИЕ АУДИО: Создан файл с выделенным вокалом: examples\ПОЗВОНИ МНЕ_vocals.wav
2025-09-26 17:44:58,971 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 17:44:58,972 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 17:44:58,979 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\ПОЗВОНИ МНЕ_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-d0d1232c-db5a-4d90-89e5-fd995342b189', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:44:58,980 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:44:58,981 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:44:58,981 - DEBUG - send_request_headers.complete
2025-09-26 17:44:58,981 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:44:58,987 - DEBUG - send_request_body.complete
2025-09-26 17:44:58,987 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:45:02,879 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:45:02 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1159'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1175'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_a902aef8c3734938ae2450e186dc9a5d'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98538adcfcce8d65-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:45:02,880 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:45:02,880 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:45:02,880 - DEBUG - receive_response_body.complete
2025-09-26 17:45:02,881 - DEBUG - response_closed.started
2025-09-26 17:45:02,881 - DEBUG - response_closed.complete
2025-09-26 17:45:02,881 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:45:02 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1159', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1175', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_a902aef8c3734938ae2450e186dc9a5d', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98538adcfcce8d65-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:45:02,882 - DEBUG - request_id: req_a902aef8c3734938ae2450e186dc9a5d
2025-09-26 17:45:02,882 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Посони мне, не говори мне, че ты гонишь, снова мозг мне выносишь.

Посони мне, не говори мне, че ты гонишь, снова мозг мне выносишь.'
2025-09-26 17:45:02,882 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:45:02,883 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Посони мне, не говори мне, че ты гонишь, снова мозг мне выносишь.

Посони мне, не говори мне, че ты гонишь, снова мозг мне выносишь.'
2025-09-26 17:45:02,883 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: 'Посони мне, не говори мне, че ты гонишь, снова мозг мне выносишь.

Посони мне, не говори мне, че ты гонишь, снова мозг мне выносишь.' (длина: 132)
2025-09-26 17:45:02,883 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Посони мне, не говори мне, че ты гонишь, снова мозг мне выносишь.

Посони мне, не говори мне, че ты гонишь, снова мозг мне выносишь.'
2025-09-26 17:45:02,884 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:45:02,884 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Посони мне, не говори мне, че ты гонишь, снова мозг мне выносишь.

Посони мне, не говори мне, че ты гонишь, снова мозг мне выносишь.'
2025-09-26 17:45:02,885 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c9b9358b-df8b-421b-9afc-0d1a10922345', 'json_data': {'messages': [{'role': 'system', 'content': 'Ты — специализированная система для анализа аудиозаписей.\nТвоя единственная задача — классифицировать входной аудиофайл в одну из категорий: музыка, речь, шум.\n\nВАЖНО: Ты анализируешь РЕЗУЛЬТАТ ТРАНСКРИПЦИИ аудиофайла, а не сам аудиофайл. Это означает, что:\n- Если в аудио была музыка с вокалом, то в транскрипции будут слова песни\n- Если в аудио была речь, то в транскрипции будет связный текст\n- Если в аудио был шум, то в транскрипции будет мало слов или галлюцинации\n\nКатегории классификации:\n\nМузыка (music):\n- Это песня, музыкальная композиция с вокалом\n- Характерные признаки в транскрипции:\n  * Повторяющиеся фразы или слова (припев)\n  * Рифмы и ритмические паттерны\n  * Музыкальные звуки: "ла-ла-ла", "на-на-на", "о-о-о", "а-а-а"\n  * Эмоциональные восклицания: "Ауф!", "Ой!", "Ах!"\n  * Короткие фразы без логической связи\n  * Слова, которые звучат как песня, а не как обычная речь\n  * Повторяющиеся слова или фразы (припев песни)\n  * Ритмические паттерны в тексте\n\nРечь (speech):\n- Это обычная речь, разговор, диалог\n- Характерные признаки в транскрипции:\n  * Связные предложения с логической структурой\n  * Обычные слова и фразы\n  * Знаки препинания: точки, запятые, восклицательные знаки\n  * Логическая последовательность мыслей\n  * Отсутствие повторяющихся музыкальных паттернов\n  * Естественная речь без ритма\n\nШум (noise):\n- Это неречевые звуки, шум, техника, плач ребенка\n- Характерные признаки в транскрипции:\n  * Очень короткие или бессмысленные фрагменты\n  * Отсутствие связной речи\n  * Случайные слова или звуки\n  * Описания звуков: "[Music]", "[звук]", "[шум]"\n  * Повторяющиеся гласные: "ааа", "ууу", "ооо" (детский плач)\n  * Повторяющиеся согласные: "шшш", "щщщ", "ссс", "ззз", "hhh"\n  * Бессмысленные фразы: "Всем новичкам, всем новичкам"\n  * Короткие бессвязные слова\n\nПримеры типовых шумов (не музыка и не речь):\n- Городской фон: движение транспорта, гул улицы, толпа, шаги\n- Звуки машин: двигатель, сигнал, шелест шин, торможение\n- Вода: дождь, шум волн, водопад, шипение воды\n- Ветер: завывание, свист ветра, порывы\n- Бытовые/механические: кондиционер, вентилятор, скрип дверей, стук, аплодисменты\n\nПравила классификации:\n1. Если транскрипция содержит связную речь с логической структурой → speech\n2. Если транскрипция содержит повторяющиеся фразы, рифмы, музыкальные звуки → music\n3. Если транскрипция короткая, бессвязная или содержит описания звуков → noise\n4. При сомнениях между music и speech: если есть повторения или музыкальные звуки → music\n5. Детский плач (ааа, ууу, ооо) → noise\n6. Белый шум с бессмысленными словами → noise\n\nВАЖНЫЕ ПРИМЕРЫ:\n- "Скажи мне, не говори мне, что ты гонишь" → music (песня с повторениями)\n- "Привет, как дела?" → speech (обычная речь)\n- "Ааааааа" → noise (детский плач)\n- "Всем новичкам, всем новичкам" → noise (белый шум)\n- "Find me, find me, You can find" → music (песня с припевом)\n\nФормат ответа:\nОтвечай только в формате JSON, без лишнего текста:\n{\n  "classification": "music | speech | noise",\n  "confidence": 0.0-1.0,\n  "reasoning": "Краткое объяснение выбора: какие признаки были решающими"\n}\n\nОграничения:\n- Не добавляй ничего, кроме JSON\n- Не предлагай альтернативных категорий\n- Всегда возвращай одно значение в поле "classification"\n- Уровень уверенности (confidence) должен отражать баланс признаков:\n  * 0.9–1.0 → очень высокая уверенность\n  * 0.6–0.89 → умеренная уверенность\n  * <0.6 → низкая уверенность, признаки неоднозначны'}, {'role': 'user', 'content': 'Проанализируй следующий транскрипт аудио и классифицируй его:\n\nПосони мне, не говори мне, че ты гонишь, снова мозг мне выносишь.\n\nПосони мне, не говори мне, че ты гонишь, снова мозг мне выносишь.'}], 'model': 'gpt-4o-mini', 'max_tokens': 200, 'temperature': 0.1}}
2025-09-26 17:45:02,886 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-26 17:45:02,887 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:45:02,887 - DEBUG - send_request_headers.complete
2025-09-26 17:45:02,887 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:45:02,887 - DEBUG - send_request_body.complete
2025-09-26 17:45:02,887 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:45:06,014 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:45:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'2774'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2811'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9998'), (b'x-ratelimit-remaining-tokens', b'198461'), (b'x-ratelimit-reset-requests', b'10.338s'), (b'x-ratelimit-reset-tokens', b'461ms'), (b'x-request-id', b'req_b2c87098ec4e4bcfb71576078710c5d6'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98538af56add8d65-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:45:06,015 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 17:45:06,015 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:45:06,016 - DEBUG - receive_response_body.complete
2025-09-26 17:45:06,016 - DEBUG - response_closed.started
2025-09-26 17:45:06,016 - DEBUG - response_closed.complete
2025-09-26 17:45:06,016 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:45:05 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '2774', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2811', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9998', 'x-ratelimit-remaining-tokens': '198461', 'x-ratelimit-reset-requests': '10.338s', 'x-ratelimit-reset-tokens': '461ms', 'x-request-id': 'req_b2c87098ec4e4bcfb71576078710c5d6', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98538af56add8d65-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:45:06,017 - DEBUG - request_id: req_b2c87098ec4e4bcfb71576078710c5d6
2025-09-26 17:45:06,019 - INFO - ТРАНСКРИПЦИЯ: Начало анализа файла: examples\РИНГТОН.mp3
2025-09-26 17:45:06,091 - DEBUG - УЛУЧШЕНИЕ АУДИО: Параметры Demucs: {'model': 'htdemucs', 'shifts': 4, 'overlap': 0.4, 'jobs': 4}
2025-09-26 17:45:06,092 - DEBUG - УЛУЧШЕНИЕ АУДИО: Попытка улучшения файла (после предочистки): examples\РИНГТОН.mp3
2025-09-26 17:45:06,092 - DEBUG - УЛУЧШЕНИЕ АУДИО: Импортируем Demucs...
2025-09-26 17:45:06,092 - DEBUG - УЛУЧШЕНИЕ АУДИО: Demucs успешно импортирован
2025-09-26 17:45:06,092 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем Demucs для разделения вокала: examples\РИНГТОН.mp3
2025-09-26 17:45:06,709 - WARNING - УЛУЧШЕНИЕ АУДИО: Ошибка обработки с Demucs: Torch not compiled with CUDA enabled
2025-09-26 17:45:06,709 - DEBUG - УЛУЧШЕНИЕ АУДИО: Используем librosa для выделения вокала: examples\РИНГТОН.mp3
2025-09-26 17:45:07,252 - DEBUG - УЛУЧШЕНИЕ АУДИО: Создан файл с выделенным вокалом: examples\РИНГТОН_vocals.wav
2025-09-26 17:45:07,269 - DEBUG - ТРАНСКРИПЦИЯ: Использован промпт: Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.
2025-09-26 17:45:07,269 - DEBUG - ТРАНСКРИПЦИЯ: Попытка 1 - основной язык: ru
2025-09-26 17:45:07,276 - DEBUG - Request options: {'method': 'post', 'url': '/audio/transcriptions', 'headers': {'Content-Type': 'multipart/form-data'}, 'files': [('file', SerializationIterator(index=0, iterator=SerializationIterator(index=0, iterator=<_io.BufferedReader name='examples\\РИНГТОН_vocals.wav'>)))], 'idempotency_key': 'stainless-python-retry-e71137f8-4b71-420f-8798-694bca3eee45', 'json_data': {'model': 'gpt-4o-transcribe', 'language': 'ru', 'prompt': 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.', 'response_format': 'text'}}
2025-09-26 17:45:07,277 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/audio/transcriptions
2025-09-26 17:45:07,278 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:45:07,278 - DEBUG - send_request_headers.complete
2025-09-26 17:45:07,278 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:45:07,286 - DEBUG - send_request_body.complete
2025-09-26 17:45:07,286 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:45:12,908 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:45:12 GMT'), (b'Content-Type', b'text/plain; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'1927'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1939'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-request-id', b'req_d6cf3985156748efb012b5858d9401be'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98538b10dd688d65-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:45:12,909 - INFO - HTTP Request: POST https://api.openai.com/v1/audio/transcriptions "HTTP/1.1 200 OK"
2025-09-26 17:45:12,909 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:45:12,909 - DEBUG - receive_response_body.complete
2025-09-26 17:45:12,910 - DEBUG - response_closed.started
2025-09-26 17:45:12,910 - DEBUG - response_closed.complete
2025-09-26 17:45:12,910 - DEBUG - HTTP Response: POST https://api.openai.com/v1/audio/transcriptions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:45:12 GMT', 'content-type': 'text/plain; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '1927', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1939', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-reset-requests': '120ms', 'x-request-id': 'req_d6cf3985156748efb012b5858d9401be', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98538b10dd688d65-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:45:12,910 - DEBUG - request_id: req_d6cf3985156748efb012b5858d9401be
2025-09-26 17:45:12,911 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Find me, find me. You can find me, find me. Find me, find me. You can find me, find me. Tearing up downtown with the high beams. No need for a review when they can't catch you. I never look back, never look, look like I want you. I'm so innocent, kissing your tattoos, sweet like cinnamon. No need for a review when they can't catch you.'
2025-09-26 17:45:12,911 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:45:12,911 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Find me, find me. You can find me, find me. Find me, find me. You can find me, find me. Tearing up downtown with the high beams. No need for a review when they can't catch you. I never look back, never look, look like I want you. I'm so innocent, kissing your tattoos, sweet like cinnamon. No need for a review when they can't catch you.'
2025-09-26 17:45:12,912 - DEBUG - ТРАНСКРИПЦИЯ: Результат 1: 'Find me, find me. You can find me, find me. Find me, find me. You can find me, find me. Tearing up downtown with the high beams. No need for a review when they can't catch you. I never look back, never look, look like I want you. I'm so innocent, kissing your tattoos, sweet like cinnamon. No need for a review when they can't catch you.' (длина: 337)
2025-09-26 17:45:12,912 - DEBUG - ФИЛЬТРАЦИЯ: Входной текст: 'Find me, find me. You can find me, find me. Find me, find me. You can find me, find me. Tearing up downtown with the high beams. No need for a review when they can't catch you. I never look back, never look, look like I want you. I'm so innocent, kissing your tattoos, sweet like cinnamon. No need for a review when they can't catch you.'
2025-09-26 17:45:12,912 - DEBUG - ФИЛЬТРАЦИЯ: Промпт: 'Дай дословную ПОЛНУЮ транскрипцию без перевода и перефразирования. Сохраняй язык оригинала, не смешивай языки. Не интерпретируй смысл, не сокращай, не исправляй. Если часть неразборчива — оставь как есть или пропусти без домыслов. ВНИМАНИЕ: Если это музыка с повторяющимся припевом - распознай ВСЕ повторения. Если это плач ребенка или нечеловеческие звуки - НЕ придумывай слова, верни пустую строку.'
2025-09-26 17:45:12,912 - DEBUG - ФИЛЬТРАЦИЯ: Текст прошел фильтрацию: 'Find me, find me. You can find me, find me. Find me, find me. You can find me, find me. Tearing up downtown with the high beams. No need for a review when they can't catch you. I never look back, never look, look like I want you. I'm so innocent, kissing your tattoos, sweet like cinnamon. No need for a review when they can't catch you.'
2025-09-26 17:45:12,913 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f935e75f-326d-4a19-ac02-c2ef561aed1f', 'json_data': {'messages': [{'role': 'system', 'content': 'Ты — специализированная система для анализа аудиозаписей.\nТвоя единственная задача — классифицировать входной аудиофайл в одну из категорий: музыка, речь, шум.\n\nВАЖНО: Ты анализируешь РЕЗУЛЬТАТ ТРАНСКРИПЦИИ аудиофайла, а не сам аудиофайл. Это означает, что:\n- Если в аудио была музыка с вокалом, то в транскрипции будут слова песни\n- Если в аудио была речь, то в транскрипции будет связный текст\n- Если в аудио был шум, то в транскрипции будет мало слов или галлюцинации\n\nКатегории классификации:\n\nМузыка (music):\n- Это песня, музыкальная композиция с вокалом\n- Характерные признаки в транскрипции:\n  * Повторяющиеся фразы или слова (припев)\n  * Рифмы и ритмические паттерны\n  * Музыкальные звуки: "ла-ла-ла", "на-на-на", "о-о-о", "а-а-а"\n  * Эмоциональные восклицания: "Ауф!", "Ой!", "Ах!"\n  * Короткие фразы без логической связи\n  * Слова, которые звучат как песня, а не как обычная речь\n  * Повторяющиеся слова или фразы (припев песни)\n  * Ритмические паттерны в тексте\n\nРечь (speech):\n- Это обычная речь, разговор, диалог\n- Характерные признаки в транскрипции:\n  * Связные предложения с логической структурой\n  * Обычные слова и фразы\n  * Знаки препинания: точки, запятые, восклицательные знаки\n  * Логическая последовательность мыслей\n  * Отсутствие повторяющихся музыкальных паттернов\n  * Естественная речь без ритма\n\nШум (noise):\n- Это неречевые звуки, шум, техника, плач ребенка\n- Характерные признаки в транскрипции:\n  * Очень короткие или бессмысленные фрагменты\n  * Отсутствие связной речи\n  * Случайные слова или звуки\n  * Описания звуков: "[Music]", "[звук]", "[шум]"\n  * Повторяющиеся гласные: "ааа", "ууу", "ооо" (детский плач)\n  * Повторяющиеся согласные: "шшш", "щщщ", "ссс", "ззз", "hhh"\n  * Бессмысленные фразы: "Всем новичкам, всем новичкам"\n  * Короткие бессвязные слова\n\nПримеры типовых шумов (не музыка и не речь):\n- Городской фон: движение транспорта, гул улицы, толпа, шаги\n- Звуки машин: двигатель, сигнал, шелест шин, торможение\n- Вода: дождь, шум волн, водопад, шипение воды\n- Ветер: завывание, свист ветра, порывы\n- Бытовые/механические: кондиционер, вентилятор, скрип дверей, стук, аплодисменты\n\nПравила классификации:\n1. Если транскрипция содержит связную речь с логической структурой → speech\n2. Если транскрипция содержит повторяющиеся фразы, рифмы, музыкальные звуки → music\n3. Если транскрипция короткая, бессвязная или содержит описания звуков → noise\n4. При сомнениях между music и speech: если есть повторения или музыкальные звуки → music\n5. Детский плач (ааа, ууу, ооо) → noise\n6. Белый шум с бессмысленными словами → noise\n\nВАЖНЫЕ ПРИМЕРЫ:\n- "Скажи мне, не говори мне, что ты гонишь" → music (песня с повторениями)\n- "Привет, как дела?" → speech (обычная речь)\n- "Ааааааа" → noise (детский плач)\n- "Всем новичкам, всем новичкам" → noise (белый шум)\n- "Find me, find me, You can find" → music (песня с припевом)\n\nФормат ответа:\nОтвечай только в формате JSON, без лишнего текста:\n{\n  "classification": "music | speech | noise",\n  "confidence": 0.0-1.0,\n  "reasoning": "Краткое объяснение выбора: какие признаки были решающими"\n}\n\nОграничения:\n- Не добавляй ничего, кроме JSON\n- Не предлагай альтернативных категорий\n- Всегда возвращай одно значение в поле "classification"\n- Уровень уверенности (confidence) должен отражать баланс признаков:\n  * 0.9–1.0 → очень высокая уверенность\n  * 0.6–0.89 → умеренная уверенность\n  * <0.6 → низкая уверенность, признаки неоднозначны'}, {'role': 'user', 'content': "Проанализируй следующий транскрипт аудио и классифицируй его:\n\nFind me, find me. You can find me, find me. Find me, find me. You can find me, find me. Tearing up downtown with the high beams. No need for a review when they can't catch you. I never look back, never look, look like I want you. I'm so innocent, kissing your tattoos, sweet like cinnamon. No need for a review when they can't catch you."}], 'model': 'gpt-4o-mini', 'max_tokens': 200, 'temperature': 0.1}}
2025-09-26 17:45:12,914 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-26 17:45:12,915 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-09-26 17:45:12,915 - DEBUG - send_request_headers.complete
2025-09-26 17:45:12,915 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-09-26 17:45:12,916 - DEBUG - send_request_body.complete
2025-09-26 17:45:12,916 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-09-26 17:45:15,628 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 26 Sep 2025 14:45:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'yurisun'), (b'openai-processing-ms', b'2262'), (b'openai-project', b'proj_Llb21yVk5b2whxj0ZTkY3iYI'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2429'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9998'), (b'x-ratelimit-remaining-tokens', b'198435'), (b'x-ratelimit-reset-requests', b'8.795s'), (b'x-ratelimit-reset-tokens', b'469ms'), (b'x-request-id', b'req_5720a81edcb649648c2a755a460776e8'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98538b3418078d65-HEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-26 17:45:15,628 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 17:45:15,629 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-09-26 17:45:15,631 - DEBUG - receive_response_body.complete
2025-09-26 17:45:15,631 - DEBUG - response_closed.started
2025-09-26 17:45:15,631 - DEBUG - response_closed.complete
2025-09-26 17:45:15,632 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 26 Sep 2025 14:45:15 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'yurisun', 'openai-processing-ms': '2262', 'openai-project': 'proj_Llb21yVk5b2whxj0ZTkY3iYI', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2429', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9998', 'x-ratelimit-remaining-tokens': '198435', 'x-ratelimit-reset-requests': '8.795s', 'x-ratelimit-reset-tokens': '469ms', 'x-request-id': 'req_5720a81edcb649648c2a755a460776e8', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98538b3418078d65-HEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-26 17:45:15,632 - DEBUG - request_id: req_5720a81edcb649648c2a755a460776e8
